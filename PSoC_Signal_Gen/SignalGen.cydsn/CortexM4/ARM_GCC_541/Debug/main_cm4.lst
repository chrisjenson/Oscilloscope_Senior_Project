ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"main_cm4.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.main,"ax",%progbits
  21              		.align	2
  22              		.global	main
  23              		.thumb
  24              		.thumb_func
  25              		.type	main, %function
  26              	main:
  27              	.LFB375:
  28              		.file 1 "main_cm4.c"
   1:main_cm4.c    **** /* ========================================
   2:main_cm4.c    ****  *
   3:main_cm4.c    ****  * Copyright YOUR COMPANY, THE YEAR
   4:main_cm4.c    ****  * All Rights Reserved
   5:main_cm4.c    ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main_cm4.c    ****  *
   7:main_cm4.c    ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main_cm4.c    ****  * WHICH IS THE PROPERTY OF your company.
   9:main_cm4.c    ****  *
  10:main_cm4.c    ****  * ========================================
  11:main_cm4.c    **** */
  12:main_cm4.c    **** #include "project.h"
  13:main_cm4.c    **** 
  14:main_cm4.c    **** int main(void)
  15:main_cm4.c    **** {
  29              		.loc 1 15 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LBB23:
  38              	.LBB24:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 2


   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 3


  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 4


 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  40              		.loc 2 131 0
  41              		.syntax unified
  42              	@ 131 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
  43 0002 62B6     		cpsie i
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.LBE24:
  48              	.LBE23:
  16:main_cm4.c    ****     __enable_irq(); /* Enable global interrupts. */
  17:main_cm4.c    ****     VDAC_1_Start();
  49              		.loc 1 17 0
  50 0004 FFF7FEFF 		bl	VDAC_1_Start
  51              	.LVL0:
  52              	.LBB25:
  53              	.LBB26:
  54              	.LBB27:
  55              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 5


  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 6


  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 7


 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 8


 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 9


 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 10


 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 11


 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 12


 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 13


 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 14


 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   1
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   20
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 15


 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoDisable
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 16


 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 17


 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 18


 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllLocked
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 19


 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllDisable
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 20


 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLocked
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLostLock
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 21


 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllDisable
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 22


 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloEnable
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloDisable
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 23


1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloEnable
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloDisable
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 24


1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 25


1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 26


1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 27


1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 28


1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoEnable
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoOkay
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 29


1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoDisable
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoBypass
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 30


1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 31


1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 32


1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 33


1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 34


1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 35


1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 36


1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 37


1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 38


1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 39


1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 40


2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 41


2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
  56              		.loc 3 2121 0
  57 0008 114B     		ldr	r3, .L7
  58 000a 1968     		ldr	r1, [r3]
  59 000c 8C68     		ldr	r4, [r1, #8]
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
  60              		.loc 3 2122 0
  61 000e 91F87300 		ldrb	r0, [r1, #115]	@ zero_extendqisi2
  62 0012 0323     		movs	r3, #3
  63 0014 03FA00F0 		lsl	r0, r3, r0
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
  64              		.loc 3 2123 0
  65 0018 91F87020 		ldrb	r2, [r1, #112]	@ zero_extendqisi2
  66 001c 91F87230 		ldrb	r3, [r1, #114]	@ zero_extendqisi2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 42


  67 0020 02FA03F3 		lsl	r3, r2, r3
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
  68              		.loc 3 2122 0
  69 0024 0343     		orrs	r3, r3, r0
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  70              		.loc 3 2124 0
  71 0026 43F00043 		orr	r3, r3, #-2147483648
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
  72              		.loc 3 2121 0
  73 002a C4F80034 		str	r3, [r4, #1024]
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
  74              		.loc 3 2126 0
  75 002e 8B68     		ldr	r3, [r1, #8]
  76 0030 D3F80034 		ldr	r3, [r3, #1024]
  77              	.LVL1:
  78              	.LBE27:
  79              	.LBE26:
  80              	.LBE25:
  18:main_cm4.c    ****     Clock_1_Enable();
  19:main_cm4.c    ****     int32_t value = 0;
  81              		.loc 1 19 0
  82 0034 0023     		movs	r3, #0
  83 0036 00E0     		b	.L2
  84              	.LVL2:
  85              	.L5:
  20:main_cm4.c    ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  21:main_cm4.c    **** 
  22:main_cm4.c    ****     for(;;)
  23:main_cm4.c    ****     {
  24:main_cm4.c    ****         
  25:main_cm4.c    ****         VDAC_1_SetValueBuffered(value);
  26:main_cm4.c    ****         value++;
  27:main_cm4.c    ****         //CyDelayUs(10);
  28:main_cm4.c    ****         if(value == 512){
  29:main_cm4.c    ****             value = -512;
  86              		.loc 1 29 0
  87 0038 064B     		ldr	r3, .L7+4
  88              	.LVL3:
  89              	.L2:
  90              	.LBB28:
  91              	.LBB29:
  92              	.LBB30:
  93              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ctdac/cy_ctdac.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \file cy_ctdac.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Header file for the CTDAC driver
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 43


  14:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC driver provides APIs to configure the 12-bit Continuous-Time DAC.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The functions and other declarations used in this driver are in cy_ctdac.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - 12-bit continuous time output
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - 2 us settling time for a 25 pF load when output buffered through Opamp0 of \ref group_ctb "CTB"
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Can be enabled in Deep Sleep power mode
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable voltage reference:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - VDDA
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Internal analog reference buffered through Opamp1 of \ref group_ctb "CTB"
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - External reference buffered through Opamp1 of \ref group_ctb "CTB"
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable output paths:
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Direct DAC output to a pin
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Buffered DAC output through Opamp0 of \ref group_ctb "CTB"
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Sample and hold output path through Opamp0 of \ref group_ctb "CTB"
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Selectable input modes:
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Unsigned 12-bit mode
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       - Virtual signed 12-bit mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Configurable update rate using clock or strobe signal
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Double buffered DAC voltage control register
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Interrupt and DMA trigger on DAC buffer empty
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Configurable as PGA along with Opamp1 of the \ref group_ctb "CTB"
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC generates a 12-bit DAC output voltage from the reference.
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC reference can come from VDDA or from any signal buffered through Opamp0
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * of the CTB. This can be an external signal through a GPIO or from the internal
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * AREF. The CTDAC is closely integrated with the CTB block,
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * which provides easy buffering of the DAC output voltage,
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * buffered input reference voltage, and sample and hold for the DAC output.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC control interface provides control of the DAC output through CPU or DMA.
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This includes a double-buffered DAC voltage control register, clock input for programmable
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * update rate, interrupt on DAC buffer empty, and trigger to DMA.
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_block_diagram.png
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_block_diagram.png
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC has two switches, CO6 for configuring the output path and
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * CVD for the reference source.
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_switches.png
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_switches.png
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_init Initialization
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the CTDAC hardware block by calling \ref Cy_CTDAC_Init.
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The base address of the CTDAC hardware can be found in the device-specific header file.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the buffers in the CTB are used for the reference source or the output,
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * initialize the CTB hardware block. After both blocks are initialized,
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * enable the CTB block before enabling the CTDAC block.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The driver also provides a \ref Cy_CTDAC_FastInit function for fast and easy initialization of th
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 44


  71:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The driver has pre-defined configuration structures for the four combinations of the reference an
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_VddaRef_UnbufferedOut
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_VddaRef_BufferedOut
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_OA1Ref_UnbufferedOut
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - \ref Cy_CTDAC_Fast_OA1Ref_BufferedOut
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * After initialization, call \ref Cy_CTDAC_Enable to enable the hardware.
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_updatemode Update Modes
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC contains two registers:
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   -# CTDAC_VAL
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       For direct firmware writes to update the current DAC value immediately.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This register is written with \ref Cy_CTDAC_SetValue.
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   -# CTDAC_VAL_NXT
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       For buffered writes to update the DAC value at a
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       periodic rate or with a strobe trigger input.
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This register is written with \ref Cy_CTDAC_SetValueBuffered.
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The update mode is
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * selected during initialization with the \ref cy_stc_ctdac_config_t.updateMode.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Four of these modes require a dedicated clock resource and the driver
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * can configure the clock during initialization (see \ref cy_stc_ctdac_config_t).
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Three of these modes use a strobe signal through the digital signal interface (DSI).
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This allows control of the buffered update timing from an external source, for example, by anothe
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * chip peripheral or from an off-chip source.
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_direct_write Direct write
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes directly into the CTDAC_VAL register
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * using \ref Cy_CTDAC_SetValue. The action of writing to this register
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * will update the DAC output. This mode does not generate an interrupt
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * or trigger signal.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, a clock must not be configured. Additionally, calling \ref
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Cy_CTDAC_SetValueBuffered does not update the DAC output.
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_direct_write.png
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_direct_write.png
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_buffered_write Buffered write
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered. The rising edge of the clock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * will update the DAC output and generate the interrupt and trigger signals.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Whenever data is transferred from the CTDAC_VAL_NXT register,
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * an interrupt is asserted the same time as the trigger. But while
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the trigger is automatically cleared after two PeriClk cycles, the
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * user must clear the interrupt with \ref Cy_CTDAC_ClearInterrupt.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_buffered_write.png
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_buffered_write.png
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_edge_sync Strobe edge sync
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 45


 128:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Each rising edge of the DSI strobe input enables
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * one subsequent update from the next rising edge of the clock. The DSI
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * input must remain high for two PeriClk cycles and go low for
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * another two PeriClk cycles to allow for the next update.
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This restricts the DSI strobe input frequency to the PeriClk frequency divided by four.
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_edge_sync.png
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_edge_sync.png
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_edge_immediate Strobe edge immediate
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The clock resource is used but set to a logic high.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Therefore, each rising edge of the DSI strobe input immediately
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updates the DAC output.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_edge_immediate.png
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_edge_immediate.png
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_updatemode_strobe_level Strobe level
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * In this mode, the user writes to the CTDAC_VAL_NXT register using
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_CTDAC_SetValueBuffered.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DSI strobe input acts as a hardware enable signal.
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * While the DSI strobe input is high, the mode behaves
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * like the Buffered write mode. When the DSI strobe input is low,
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updates are disabled.
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image html ctdac_update_mode_strobe_level.png
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \image latex ctdac_update_mode_strobe_level.png
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_dacmode DAC Modes
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The format of code stored in the CTDAC_VAL register can either be unsigned
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * or signed two's complemented.
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Only the first 12 bits of the register are used by the DAC so there is
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * no need for sign extension. With the signed format, the DAC decodes
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the code in the register by adding 0x800.
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC can output the register value or the register value plus 1 (see \ref Cy_CTDAC_SetOutputMo
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>12-bit unsigned code</th>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>12-bit two's complement signed code</th>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Vout (for \ref CY_CTDAC_OUTPUT_VALUE )</th>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Vout (for \ref CY_CTDAC_OUTPUT_VALUE_PLUS1 )</th>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x000</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x800</td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0</td>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref/4096</td>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 46


 185:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x800</td>
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x000</td>
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0.5 * Vref</td>
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref * 2049 / 4096</td>
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0xFFF</td>
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>0x7FF</td>
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref * 4095 / 4096</td>
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Vref</td>
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The expressions in the above table are based on an unbuffered DAC output.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When the output is buffered, the input and output range of the buffer will affect the
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * output voltage. See \ref group_ctb_opamp_range in the CTB driver for more information.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_trigger Interrupts and Trigger
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When data from the CTDAC_VAL_NXT is transferred to the CTDAC_VAL register,
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * an interrupt and trigger output are generated. The trigger output can be
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * used with a DMA block to update the CTDAC value register at high speeds without any CPU intervent
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Alternatively, the interrupt output can be used when DMA is not available
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to update the CTDAC value register, but at a slower speed.
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Recall with the \ref group_ctdac_updatemode, the interrupt and trigger output are available in al
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref group_ctdac_updatemode_direct_write.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_dma_trigger DMA Trigger
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC trigger output signal can be routed to a DMA block using the \ref group_trigmux
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to trigger an update to the CTDAC_VAL_NXT register.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enums, TRIG14_IN_PASS
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and TRIGGER_TYPE_PASS_TR_CTDAC_EMPTY.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \subsection group_ctdac_handling_interrupts Handling Interrupts
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The routine gets called when any CTDAC on the device generates an interrupt.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm0p.c SNIPPET_CTDAC_ISR
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm0p.c SNIPPET_CTDAC_INTR_SETUP
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm4.c CTDAC_SNIPPET_DMA_TRIGGER
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_deglitch Deglitch
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The hardware has the ability to deglitch the output value every time it is updated.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This prevents small glitches in the DAC output during an update to propagate to
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the pin or opamp input. When deglitch is enabled, a switch on the output path
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * is forced open for a configurable number of PeriClk cycles. This deglitch time
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * is calculated as:
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 47


 242:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       (DEGLITCH_CNT + 1) / PERI_CLOCK_FREQ
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The optimal and recommended deglitch time is 700 ns. Call \ref Cy_CTDAC_SetDeglitchCycles to set 
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * There are two switches used for deglitching.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Switch COS in the CTB between the DAC output and the Opamp0 input
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * - Switch CO6 in the CTDAC between the DAC output and external pin
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Call \ref Cy_CTDAC_SetDeglitchMode to set the deglitch path. Match this with the output buffer se
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the output is buffered through the CTB, select \ref CY_CTDAC_DEGLITCHMODE_BUFFERED.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the output is unbuffered to a direct pin, select \ref CY_CTDAC_DEGLITCHMODE_UNBUFFERED.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \note
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If deglitching is enabled, the hardware does not force the deglitch switches into a closed
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * state during Deep Sleep mode. Therefore, there is a chance that the device enters
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Deep Sleep mode while the hardware is deglitching and the switches on the output path remain open
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To ensure the DAC will operate properly in Deep Sleep when enabled, make sure to
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * register the \ref Cy_CTDAC_DeepSleepCallback before entering Deep Sleep mode.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_sample_hold Sample and Hold
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * When buffering the DAC output, the CTB has a Sample and Hold (SH) feature that can be used for sa
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The DAC output voltage is retained on an internal capacitor for a duration of time while the
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * DAC output can be turned off. The DAC hardware needs to be turned on in a periodic fashion
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to recharge the hold capacitor. This feature is firmware controlled using a sequence of function 
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * See \ref Cy_CTB_DACSampleAndHold in the \ref group_ctb_sample_hold "CTB" driver.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The hold time depends on the supply and reference voltages. The following hold times are based on
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * time it takes for the buffered output to change by 1 LSB.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 750 us @ Vref = VDDA , VDDA = 1.7 V
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 525 us @ Vref = VDDA , VDDA = 3.6 V
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - Hold time = 200 us @ Vref = 1.2 V, VDDA = 3.6 V
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_low_power Low Power Support
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CTDAC driver provides a callback function to handle power mode transitions.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * If the CTDAC is configured for Deep Sleep operation and \ref group_ctdac_deglitch "deglitching" i
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * the callback \ref Cy_CTDAC_DeepSleepCallback must be registered before calling
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \ref Cy_SysPm_CpuEnterDeepSleep.
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Refer to \ref group_syspm driver for more information about power mode transitions and
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * callback registration.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_more_information More Information
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_MISRA MISRA-C Compliance]
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This driver has the following specific deviations:
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>MISRA Rule</th>
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Rule Class (Required/Advisory)</th>
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Rule Description</th>
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <th>Description of Deviation(s)</th>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 48


 299:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>11.4</td>
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Advisory</td>
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       This CTDAC driver implements a Deep Sleep callback conforming to the cy_syspm driver requir
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       When the callback is called, the base is cast to a pointer to CTDAC_Type.
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     </td>
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \section group_ctdac_changelog Changelog
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * <table class="doxtable">
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td rowspan="2">2.0</td>
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Flattened the organization of the driver source code into the single 
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         source directory and the single include directory.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     </td>
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Driver library directory-structure simplification.</td>
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Added register access layer. Use register access macros instead
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         of direct register access using dereferenced pointers.</td>
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Makes register access device-independent, so that the PDL does 
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *         not need to be recompiled for each supported part number.</td>
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>1.0.1</td>
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Added low power support section. Minor documentation edits.</td>
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Documentation update and clarification</td>
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   <tr>
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>1.0</td>
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td>Initial version</td>
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *     <td></td>
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   </tr>
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * </table>
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_macros Macros
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_functions Functions
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   \{
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_init            Initialization Functions
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_basic           Basic Configuration Functions
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_switches        Switch Control Functions
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_interrupts      Interrupt Functions
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       \defgroup group_ctdac_functions_syspm_callback  Low Power Callback
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   \}
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_globals Global Variables
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_data_structures Data Structures
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \defgroup group_ctdac_enums Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #if !defined(CY_CTDAC_H)
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_H
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 49


 356:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stdint.h>
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stdbool.h>
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include <stddef.h>
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_device.h"
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_device_headers.h"
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_syspm.h"
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_syslib.h"
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #include "cy_sysclk.h"
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #ifdef CY_IP_MXS40PASS_CTDAC
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #if defined(__cplusplus)
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern "C" {
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #endif
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_macros
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Driver major version */
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DRV_VERSION_MAJOR       2
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Driver minor version */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DRV_VERSION_MINOR       0
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** CTDAC driver identifier */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_ID                       CY_PDL_DRV_ID(0x19u)
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEINIT                         (0uL)                                              
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UNSIGNED_MID_CODE_VALUE        (0x800uL)                                          
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UNSIGNED_MAX_CODE_VALUE        (0xFFFuL)                                          
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_TYPE               CY_SYSCLK_DIV_8_BIT                                
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_NUM                (0uL)                                              
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FAST_CLKCFG_DIV                (99uL)                                             
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \cond INTERNAL */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEINT_CTDAC_SW                 (CTDAC_CTDAC_SW_CLEAR_CTDD_CVD_Msk | CTDAC_CTDAC_SW
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_STROBE_EDGE_IMMEDIATE_DIV      (0uL)                                              
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_STROBE_EDGE_IMMEDIATE_DIV_FRAC (0uL)                                              
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCH_CYCLES_MAX            (63uL)
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**< Macros for conditions used by CY_ASSERT calls */
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_REFSOURCE(source)                  (((source) == CY_CTDAC_REFSOURCE_EXTERNAL) || (
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_FORMAT(mode)                       (((mode) == CY_CTDAC_FORMAT_UNSIGNED) || ((mode
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_UPDATE(mode)                       ((mode) <= CY_CTDAC_UPDATE_STROBE_LEVEL)
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCH(mode)                     (((mode) == CY_CTDAC_DEGLITCHMODE_NONE) \
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_UNBUFFERED)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_BUFFERED) \
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_DEGLITCHMODE_BOTH))
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_OUTPUTMODE(mode)                   (((mode) == CY_CTDAC_OUTPUT_HIGHZ) \
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VALUE) \
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VALUE_PLUS1) \
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VSSA) \
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                                     || ((mode) == CY_CTDAC_OUTPUT_VREF))
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_OUTPUTBUFFER(buffer)               (((buffer) == CY_CTDAC_OUTPUT_UNBUFFERED) || ((
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEEPSLEEP(deepSleep)               (((deepSleep) == CY_CTDAC_DEEPSLEEP_DISABLE) ||
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_DEGLITCHCYCLES(cycles)             ((cycles) <= CY_CTDAC_DEGLITCH_CYCLES_MAX)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 50


 413:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_SWITCHMASK(mask)                   ((mask) <= (uint32_t) (CY_CTDAC_SWITCH_CVD_MASK
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_SWITCHSTATE(state)                 (((state) == CY_CTDAC_SWITCH_OPEN) || ((state) 
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** #define CY_CTDAC_INTRMASK(mask)                     (((mask) == 0uL) || ((mask) == 1uL))
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \endcond */
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_macros */
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       Enumerated Types
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_enums
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the mode for how the DAC value is updated.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * All the modes require a CTDAC clock except for \ref group_ctdac_updatemode_direct_write.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_DIRECT_WRITE            = 0uL,  /**< DAC value is updated with a direct write b
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_BUFFERED_WRITE          = 1uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_EDGE_SYNC        = 2uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_EDGE_IMMEDIATE   = 3uL,  /**< DAC value stored with \ref Cy_CTDAC_SetVal
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_UPDATE_STROBE_LEVEL            = 4uL   /**< DAC value stored with \ref Cy_CTDAC_SetVal
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_update_t;
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the format in which the DAC value register is decoded.
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_FORMAT_UNSIGNED    = 0uL,                                         /**< Unsigned 12-bit
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_FORMAT_SIGNED      = 1uL << CTDAC_CTDAC_CTRL_CTDAC_MODE_Pos       /**< Virtual signed.
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_format_t;
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Enable or disable the CTDAC hardware during Deep Sleep.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEEPSLEEP_DISABLE  = 0uL,                                  /**< DAC is disabled during
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEEPSLEEP_ENABLE   = CTDAC_CTDAC_CTRL_DEEPSLEEP_ON_Msk     /**< DAC remains enabled du
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_deep_sleep_t;
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the output state of the CTDAC.
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_HIGHZ           = 0uL,                                  /**< DAC output is tri-
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VALUE           = CTDAC_CTDAC_CTRL_OUT_EN_Msk,          /**< DAC Output is enab
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VALUE_PLUS1     = CTDAC_CTDAC_CTRL_OUT_EN_Msk \
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                       | CTDAC_CTDAC_CTRL_CTDAC_RANGE_Msk,   /**< DAC Output enabled
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VSSA            = CTDAC_CTDAC_CTRL_DISABLED_MODE_Msk,   /**< Output is pulled t
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_VREF            = CTDAC_CTDAC_CTRL_DISABLED_MODE_Msk \
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                       | CTDAC_CTDAC_CTRL_CTDAC_RANGE_Msk    /**< Output is pulled t
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_output_mode_t;
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 51


 470:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the deglitch mode. See the \ref group_ctdac_deglitch section for
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * more information on how deglitching works.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_NONE          = 0uL,                                  /**< Disable deglit
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_UNBUFFERED    = CTDAC_CTDAC_CTRL_DEGLITCH_CO6_Msk,    /**< Deglitch throu
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_BUFFERED      = CTDAC_CTDAC_CTRL_DEGLITCH_COS_Msk,    /**< Deglitch throu
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_DEGLITCHMODE_BOTH          = CTDAC_CTDAC_CTRL_DEGLITCH_COS_Msk \
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****                                           | CTDAC_CTDAC_CTRL_DEGLITCH_CO6_Msk   /**< Deglitch throu
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_deglitch_t;
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Configure the reference source for the CTDAC
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CVD switch is closed when Vdda is the reference source.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_REFSOURCE_EXTERNAL     = 0uL,        /**< Use an external source from Opamp1 of the CT
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_REFSOURCE_VDDA         = 1uL         /**< Use Vdda as the reference. CVD switch is clo
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_ref_source_t;
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure the output to be buffered or unbuffered
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The CO6 switch is closed when the output is unbuffered to Pin 6 of the CTDAC port.
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * See the device datasheet for the CTDAC port.
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_BUFFERED        = 0uL,      /**< Buffer the output through the CTB OA0 */
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_OUTPUT_UNBUFFERED      = 1uL       /**< Send output to a direct pin */
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_output_buffer_t;
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Switch state, either open or closed, to be used in \ref Cy_CTDAC_SetAnalogSwitch. */
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_switch_state_t;
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Switch mask to be used in \ref Cy_CTDAC_SetAnalogSwitch */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CVD_MASK     = CTDAC_CTDAC_SW_CTDD_CVD_Msk,    /**< Switch for the reference so
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SWITCH_CO6_MASK     = CTDAC_CTDAC_SW_CTDO_CO6_Msk     /**< Switch for the output, buff
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_switches_t;
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Return states for \ref Cy_CTDAC_Init, \ref Cy_CTDAC_DeInit, and \ref Cy_CTDAC_FastInit */
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef enum {
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_SUCCESS    = 0x00uL,                                         /**< Initialization compl
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CY_CTDAC_BAD_PARAM  = CY_CTDAC_ID | CY_PDL_STATUS_ERROR | 0x01uL      /**< Input pointers were 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_en_ctdac_status_t;
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_enums */
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *       Configuration Structures
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 52


 527:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_data_structures
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configuration structure to set up the entire CTDAC block to be used with \ref Cy_CTDAC_Init
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_ref_source_t    refSource;          /**< Reference source: Vdda or externally throu
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_format_t        formatMode;         /**< Format of DAC value: signed or unsigned */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_update_t        updateMode;         /**< Update mode: direct or buffered writes or 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_deglitch_t      deglitchMode;       /**< Deglitch mode: disabled, buffered, unbuffe
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_mode_t   outputMode;         /**< Output mode: enabled (value or value + 1),
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_buffer_t outputBuffer;       /**< Output path: Buffered through Opamp0 of CT
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_deep_sleep_t    deepSleep;          /**< Enable or disable the CTDAC during Deep Sl
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    deglitchCycles;     /**< Number of deglitch cycles from 0 to 63 */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     int32_t                     value;              /**< Current DAC value */
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     int32_t                     nextValue;          /**< Next DAC value for double buffering */
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     bool                        enableInterrupt;    /**< If true, enable interrupt when next value 
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     /* Configuring the clock */
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     bool                        configClock;        /**< Configure or ignore clock information */
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_divider_types_t       dividerType;        /**< Specifies which type of divider to use. Ca
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerNum;         /**< Specifies which divider of the selected ty
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerIntValue;    /**< The integer divider value. The divider val
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t                    dividerFracValue;   /**< The fractional divider value if using a fr
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_config_t;
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configuration structure to quickly set up the CTDAC to be used with \ref Cy_CTDAC_FastInit
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This structure provides a selection for the CTDAC reference source and output path.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * The other configuration options are set to:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .formatMode       = \ref CY_CTDAC_FORMAT_UNSIGNED
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .updateMode       = \ref CY_CTDAC_UPDATE_BUFFERED_WRITE
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deglitchMode     = \ref CY_CTDAC_DEGLITCHMODE_NONE
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .outputMode       = \ref CY_CTDAC_OUTPUT_VALUE
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deepSleep        = \ref CY_CTDAC_DEEPSLEEP_DISABLE
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .deglitchCycles   = \ref CY_CTDAC_DEINIT
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .value            = \ref CY_CTDAC_UNSIGNED_MID_CODE_VALUE
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .nextValue        = \ref CY_CTDAC_UNSIGNED_MID_CODE_VALUE
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .enableInterrupt  = true
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .configClock      = true
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerType      = \ref CY_CTDAC_FAST_CLKCFG_TYPE
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerNum       = \ref CY_CTDAC_FAST_CLKCFG_NUM
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerInitValue = \ref CY_CTDAC_FAST_CLKCFG_DIV
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *   - .dividerFracValue = \ref CY_CTDAC_DEINIT
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_ref_source_t    refSource;          /**< Reference source: Vdda or externally throu
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     cy_en_ctdac_output_buffer_t outputBuffer;       /**< Output path: Buffered through Opamp0 of CT
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_fast_config_t;
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** CTDAC context structure.
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * All fields for the context structure are internal. Firmware never reads or
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 53


 584:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * writes these values. Firmware allocates the structure and provides the
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * address of the structure when registering the \ref Cy_CTDAC_DeepSleepCallback.
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Firmware must ensure that the defined instance of this structure remains in scope
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * while the drive is in use.
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** typedef struct
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     uint32_t deglitchModeBeforeSleep;   /**< Tracks the state of the deglitch mode before sleep so 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }cy_stc_ctdac_context_t;
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_data_structures */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_globals
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *        Global Variables
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use Vdda reference and output unbuffered. See \ref Cy_CTDAC_FastInit. */
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_VddaRef_UnbufferedOut;
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use Vdda reference and output buffered through Opamp0 of CTB. See \ref Cy_CT
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To quickly configure Opamp0, call with \ref Cy_CTB_FastInit
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * with \ref Cy_CTB_Fast_Opamp0_Vdac_Out or \ref Cy_CTB_Fast_Opamp0_Vdac_Out_SH.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_VddaRef_BufferedOut;
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use a buffered reference from Opamp1 of CTB
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and output unbuffered. See \ref Cy_CTDAC_FastInit.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use the reference from the Analog Reference (AREF),
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Aref.
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use an external reference from a GPIO,
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Pin5
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * for Pin 5 on the CTB port.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_OA1Ref_UnbufferedOut;
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** Configure CTDAC to use a buffered reference from Opamp1 of CTB
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * and output buffered through Opamp0 of CTB. See \ref Cy_CTDAC_FastInit.
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To quickly configure Opamp0, call with \ref Cy_CTB_FastInit
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * with \ref Cy_CTB_Fast_Opamp0_Vdac_Out or \ref Cy_CTB_Fast_Opamp0_Vdac_Out_SH.
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use the reference from the Analog Reference (AREF),
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Aref.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * To use an external reference from a GPIO,
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * call \ref Cy_CTB_FastInit with \ref Cy_CTB_Fast_Opamp1_Vdac_Ref_Pin5
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * for Pins 5 on the CTB port.
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** extern const cy_stc_ctdac_fast_config_t Cy_CTDAC_Fast_OA1Ref_BufferedOut;
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} group_ctdac_globals */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 54


 641:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /***************************************
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *        Function Prototypes
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ***************************************/
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_init
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions are for initializing, enabling, and disabling the CTDAC.
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_Init(CTDAC_Type *base, const cy_stc_ctdac_config_t *config);
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_DeInit(CTDAC_Type *base, bool deInitRouting);
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_ctdac_status_t Cy_CTDAC_FastInit(CTDAC_Type *base, const cy_stc_ctdac_fast_config_t *config);
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Enable(CTDAC_Type *base);
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Disable(CTDAC_Type *base);
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_basic
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions are for configuring basic usage of the CTDAC.
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValue(CTDAC_Type *base, int32_t value);
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValueBuffered(CTDAC_Type *base, int32_t value);
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetSignMode(CTDAC_Type *base, cy_en_ctdac_format_t formatMode);
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeepSleepMode(CTDAC_Type *base, cy_en_ctdac_deep_sleep_t deepSleep);
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetOutputMode(CTDAC_Type *base, cy_en_ctdac_output_mode_t outputMode);
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeglitchMode(CTDAC_Type *base, cy_en_ctdac_deglitch_t deglitchMode);
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetDeglitchCycles(CTDAC_Type *base, uint32_t deglitchCycles);
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetRef(CTDAC_Type *base, cy_en_ctdac_ref_source_t refSource);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_switches
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions is for controlling the two CTDAC analog switches, CVD, and CO6.
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * These are advanced functions. The switches will be managed by the reference
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * source and output mode selections when initializing the hardware.
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** void Cy_CTDAC_SetAnalogSwitch(CTDAC_Type *base, uint32_t switchMask, cy_en_ctdac_switch_state_t sta
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetAnalogSwitch(const CTDAC_Type *base);
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetSwitchCO6(CTDAC_Type *base, cy_en_ctdac_switch_state_t state);
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_OpenAllSwitches(CTDAC_Type *base);
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_interrupts
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This set of functions is related to the CTDAC interrupt
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptStatus(const CTDAC_Type *base);
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_ClearInterrupt(CTDAC_Type *base);
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetInterrupt(CTDAC_Type *base);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 55


 698:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetInterruptMask(CTDAC_Type *base, uint32_t mask);
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptMask(const CTDAC_Type *base);
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE uint32_t Cy_CTDAC_GetInterruptStatusMasked(const CTDAC_Type *base);
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \addtogroup group_ctdac_functions_syspm_callback
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * This driver supports one SysPm callback for Deep Sleep transition.
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** cy_en_syspm_status_t Cy_CTDAC_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_init
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_Enable
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Power up the CTDAC hardware block.
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Enable(CTDAC_Type *base)
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_CTRL(base) |= CTDAC_CTDAC_CTRL_ENABLED_Msk;
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_Disable
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Turn off the hardware block.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_Disable(CTDAC_Type *base)
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_CTRL(base) &= ~CTDAC_CTDAC_CTRL_ENABLED_Msk;
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /** \} */
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /**
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \addtogroup group_ctdac_functions_basic
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \{
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** */
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_SetValue
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 56


 755:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Set the CTDAC_VAL register (DAC hardware is
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * updated on the next PeriClk cycle).  Only the least significant 12 bits
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * have an effect. Sign extension of negative values is unnecessary and is
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * ignored by the hardware. The way in which the CTDAC interprets the 12-bit
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * data is controlled by \ref Cy_CTDAC_SetSignMode.
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \note
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Call this function only when the update mode is set to \ref group_ctdac_updatemode_direct_write.
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Calling this function for any other update mode will not have the intended effect.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param value
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Value to write into the CTDAC_VAL register
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \funcusage
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm4.c CTDAC_SNIPPET_SET_VALUE
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValue(CTDAC_Type *base, int32_t value)
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_VAL(base) = (((uint32_t)value) << CTDAC_CTDAC_VAL_VALUE_Pos) & CTDAC_CTDAC_VAL_VALU
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** }
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Function Name: Cy_CTDAC_SetValueBuffered
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Set the CTDAC_VAL_NEXT register. The value is transferred
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * to the CTDAC_VAL register on the next edge of the CTDAC clock.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Only the least significant 12 bits
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * have an effect. Sign extension of negative values is unnecessary and is
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * ignored by the hardware. The way in which the CTDAC interprets the 12-bit
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * data is controlled by \ref Cy_CTDAC_SetSignMode.
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \note
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Calling this function in \ref group_ctdac_updatemode_direct_write mode will not update the DAC ou
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Call this function for all modes that use buffered values (i.e. uses a clock).
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param base
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Pointer to structure describing registers
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \param value
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * Value to write into the CTDAC_VAL_NEXT register
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \return None
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \funcusage
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** * \snippet ctdac_sut_01.cydsn/main_cm4.c CTDAC_SNIPPET_SET_VALUE_BUFFERED
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 57


 812:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** *******************************************************************************/
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** __STATIC_INLINE void Cy_CTDAC_SetValueBuffered(CTDAC_Type *base, int32_t value)
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h **** {
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/ctdac/cy_ctdac.h ****     CTDAC_CTDAC_VAL_NXT(base) = (((uint32_t)value) << CTDAC_CTDAC_VAL_NXT_VALUE_Pos) & CTDAC_CTDAC_
  94              		.loc 4 815 0
  95 003a C3F30B01 		ubfx	r1, r3, #0, #12
  96 003e 064A     		ldr	r2, .L7+8
  97 0040 C2F80411 		str	r1, [r2, #260]
  98              	.LVL4:
  99              	.LBE30:
 100              	.LBE29:
 101              	.LBE28:
  26:main_cm4.c    ****         //CyDelayUs(10);
 102              		.loc 1 26 0
 103 0044 0133     		adds	r3, r3, #1
 104              	.LVL5:
  28:main_cm4.c    ****             value = -512;
 105              		.loc 1 28 0
 106 0046 B3F5007F 		cmp	r3, #512
 107 004a F6D1     		bne	.L2
 108 004c F4E7     		b	.L5
 109              	.L8:
 110 004e 00BF     		.align	2
 111              	.L7:
 112 0050 00000000 		.word	cy_device
 113 0054 00FEFFFF 		.word	-512
 114 0058 00001441 		.word	1091829760
 115              		.cfi_endproc
 116              	.LFE375:
 117              		.size	main, .-main
 118              		.text
 119              	.Letext0:
 120              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 121              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 122              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 123              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ctdac.h"
 124              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 125              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 126              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/ctb/cy_ctb.h"
 127              		.file 12 "Generated_Source\\PSoC6/Clock_1.h"
 128              		.file 13 "Generated_Source\\PSoC6/VDAC_1.h"
 129              		.file 14 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 130              		.section	.debug_info,"",%progbits
 131              	.Ldebug_info0:
 132 0000 990F0000 		.4byte	0xf99
 133 0004 0400     		.2byte	0x4
 134 0006 00000000 		.4byte	.Ldebug_abbrev0
 135 000a 04       		.byte	0x4
 136 000b 01       		.uleb128 0x1
 137 000c AE020000 		.4byte	.LASF253
 138 0010 0C       		.byte	0xc
 139 0011 4A000000 		.4byte	.LASF254
 140 0015 590E0000 		.4byte	.LASF255
 141 0019 00000000 		.4byte	.Ldebug_ranges0+0
 142 001d 00000000 		.4byte	0
 143 0021 00000000 		.4byte	.Ldebug_line0
 144 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 58


 145 0026 02       		.byte	0x2
 146 0027 05       		.byte	0x5
 147 0028 830B0000 		.4byte	.LASF0
 148 002c 02       		.uleb128 0x2
 149 002d 01       		.byte	0x1
 150 002e 06       		.byte	0x6
 151 002f 10100000 		.4byte	.LASF1
 152 0033 03       		.uleb128 0x3
 153 0034 B30C0000 		.4byte	.LASF3
 154 0038 05       		.byte	0x5
 155 0039 1D       		.byte	0x1d
 156 003a 3E000000 		.4byte	0x3e
 157 003e 02       		.uleb128 0x2
 158 003f 01       		.byte	0x1
 159 0040 08       		.byte	0x8
 160 0041 190E0000 		.4byte	.LASF2
 161 0045 03       		.uleb128 0x3
 162 0046 0E090000 		.4byte	.LASF4
 163 004a 05       		.byte	0x5
 164 004b 29       		.byte	0x29
 165 004c 25000000 		.4byte	0x25
 166 0050 03       		.uleb128 0x3
 167 0051 5D050000 		.4byte	.LASF5
 168 0055 05       		.byte	0x5
 169 0056 2B       		.byte	0x2b
 170 0057 5B000000 		.4byte	0x5b
 171 005b 02       		.uleb128 0x2
 172 005c 02       		.byte	0x2
 173 005d 07       		.byte	0x7
 174 005e 550A0000 		.4byte	.LASF6
 175 0062 03       		.uleb128 0x3
 176 0063 78010000 		.4byte	.LASF7
 177 0067 05       		.byte	0x5
 178 0068 3F       		.byte	0x3f
 179 0069 6D000000 		.4byte	0x6d
 180 006d 02       		.uleb128 0x2
 181 006e 04       		.byte	0x4
 182 006f 05       		.byte	0x5
 183 0070 EE0B0000 		.4byte	.LASF8
 184 0074 03       		.uleb128 0x3
 185 0075 C00A0000 		.4byte	.LASF9
 186 0079 05       		.byte	0x5
 187 007a 41       		.byte	0x41
 188 007b 7F000000 		.4byte	0x7f
 189 007f 02       		.uleb128 0x2
 190 0080 04       		.byte	0x4
 191 0081 07       		.byte	0x7
 192 0082 9B0D0000 		.4byte	.LASF10
 193 0086 02       		.uleb128 0x2
 194 0087 08       		.byte	0x8
 195 0088 05       		.byte	0x5
 196 0089 AC080000 		.4byte	.LASF11
 197 008d 02       		.uleb128 0x2
 198 008e 08       		.byte	0x8
 199 008f 07       		.byte	0x7
 200 0090 D8040000 		.4byte	.LASF12
 201 0094 04       		.uleb128 0x4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 59


 202 0095 04       		.byte	0x4
 203 0096 05       		.byte	0x5
 204 0097 696E7400 		.ascii	"int\000"
 205 009b 02       		.uleb128 0x2
 206 009c 04       		.byte	0x4
 207 009d 07       		.byte	0x7
 208 009e 06080000 		.4byte	.LASF13
 209 00a2 03       		.uleb128 0x3
 210 00a3 2E080000 		.4byte	.LASF14
 211 00a7 06       		.byte	0x6
 212 00a8 18       		.byte	0x18
 213 00a9 33000000 		.4byte	0x33
 214 00ad 03       		.uleb128 0x3
 215 00ae 9C040000 		.4byte	.LASF15
 216 00b2 06       		.byte	0x6
 217 00b3 20       		.byte	0x20
 218 00b4 45000000 		.4byte	0x45
 219 00b8 03       		.uleb128 0x3
 220 00b9 100E0000 		.4byte	.LASF16
 221 00bd 06       		.byte	0x6
 222 00be 24       		.byte	0x24
 223 00bf 50000000 		.4byte	0x50
 224 00c3 03       		.uleb128 0x3
 225 00c4 C00D0000 		.4byte	.LASF17
 226 00c8 06       		.byte	0x6
 227 00c9 2C       		.byte	0x2c
 228 00ca 62000000 		.4byte	0x62
 229 00ce 03       		.uleb128 0x3
 230 00cf 1B040000 		.4byte	.LASF18
 231 00d3 06       		.byte	0x6
 232 00d4 30       		.byte	0x30
 233 00d5 74000000 		.4byte	0x74
 234 00d9 02       		.uleb128 0x2
 235 00da 04       		.byte	0x4
 236 00db 07       		.byte	0x7
 237 00dc 0C0B0000 		.4byte	.LASF19
 238 00e0 05       		.uleb128 0x5
 239 00e1 CE000000 		.4byte	0xce
 240 00e5 06       		.uleb128 0x6
 241 00e6 E0000000 		.4byte	0xe0
 242 00ea 07       		.uleb128 0x7
 243 00eb E0000000 		.4byte	0xe0
 244 00ef FA000000 		.4byte	0xfa
 245 00f3 08       		.uleb128 0x8
 246 00f4 D9000000 		.4byte	0xd9
 247 00f8 7F       		.byte	0x7f
 248 00f9 00       		.byte	0
 249 00fa 07       		.uleb128 0x7
 250 00fb E5000000 		.4byte	0xe5
 251 00ff 0A010000 		.4byte	0x10a
 252 0103 08       		.uleb128 0x8
 253 0104 D9000000 		.4byte	0xd9
 254 0108 06       		.byte	0x6
 255 0109 00       		.byte	0
 256 010a 09       		.uleb128 0x9
 257 010b 40       		.byte	0x40
 258 010c 07       		.byte	0x7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 60


 259 010d 27       		.byte	0x27
 260 010e 4F010000 		.4byte	0x14f
 261 0112 0A       		.uleb128 0xa
 262 0113 F4060000 		.4byte	.LASF20
 263 0117 07       		.byte	0x7
 264 0118 28       		.byte	0x28
 265 0119 E0000000 		.4byte	0xe0
 266 011d 00       		.byte	0
 267 011e 0A       		.uleb128 0xa
 268 011f 41000000 		.4byte	.LASF21
 269 0123 07       		.byte	0x7
 270 0124 29       		.byte	0x29
 271 0125 54010000 		.4byte	0x154
 272 0129 04       		.byte	0x4
 273 012a 0A       		.uleb128 0xa
 274 012b 95040000 		.4byte	.LASF22
 275 012f 07       		.byte	0x7
 276 0130 2A       		.byte	0x2a
 277 0131 E0000000 		.4byte	0xe0
 278 0135 20       		.byte	0x20
 279 0136 0A       		.uleb128 0xa
 280 0137 38110000 		.4byte	.LASF23
 281 013b 07       		.byte	0x7
 282 013c 2B       		.byte	0x2b
 283 013d E0000000 		.4byte	0xe0
 284 0141 24       		.byte	0x24
 285 0142 0A       		.uleb128 0xa
 286 0143 F1100000 		.4byte	.LASF24
 287 0147 07       		.byte	0x7
 288 0148 2C       		.byte	0x2c
 289 0149 6E010000 		.4byte	0x16e
 290 014d 28       		.byte	0x28
 291 014e 00       		.byte	0
 292 014f 05       		.uleb128 0x5
 293 0150 FA000000 		.4byte	0xfa
 294 0154 06       		.uleb128 0x6
 295 0155 4F010000 		.4byte	0x14f
 296 0159 07       		.uleb128 0x7
 297 015a E5000000 		.4byte	0xe5
 298 015e 69010000 		.4byte	0x169
 299 0162 08       		.uleb128 0x8
 300 0163 D9000000 		.4byte	0xd9
 301 0167 05       		.byte	0x5
 302 0168 00       		.byte	0
 303 0169 05       		.uleb128 0x5
 304 016a 59010000 		.4byte	0x159
 305 016e 06       		.uleb128 0x6
 306 016f 69010000 		.4byte	0x169
 307 0173 03       		.uleb128 0x3
 308 0174 0A110000 		.4byte	.LASF25
 309 0178 07       		.byte	0x7
 310 0179 2D       		.byte	0x2d
 311 017a 0A010000 		.4byte	0x10a
 312 017e 0B       		.uleb128 0xb
 313 017f 0002     		.2byte	0x200
 314 0181 07       		.byte	0x7
 315 0182 32       		.byte	0x32
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 61


 316 0183 94010000 		.4byte	0x194
 317 0187 0A       		.uleb128 0xa
 318 0188 7E070000 		.4byte	.LASF26
 319 018c 07       		.byte	0x7
 320 018d 33       		.byte	0x33
 321 018e 94010000 		.4byte	0x194
 322 0192 00       		.byte	0
 323 0193 00       		.byte	0
 324 0194 05       		.uleb128 0x5
 325 0195 EA000000 		.4byte	0xea
 326 0199 03       		.uleb128 0x3
 327 019a 2E000000 		.4byte	.LASF27
 328 019e 07       		.byte	0x7
 329 019f 34       		.byte	0x34
 330 01a0 7E010000 		.4byte	0x17e
 331 01a4 09       		.uleb128 0x9
 332 01a5 40       		.byte	0x40
 333 01a6 07       		.byte	0x7
 334 01a7 39       		.byte	0x39
 335 01a8 F5010000 		.4byte	0x1f5
 336 01ac 0A       		.uleb128 0xa
 337 01ad 90100000 		.4byte	.LASF28
 338 01b1 07       		.byte	0x7
 339 01b2 3A       		.byte	0x3a
 340 01b3 E0000000 		.4byte	0xe0
 341 01b7 00       		.byte	0
 342 01b8 0A       		.uleb128 0xa
 343 01b9 D1100000 		.4byte	.LASF29
 344 01bd 07       		.byte	0x7
 345 01be 3B       		.byte	0x3b
 346 01bf E0000000 		.4byte	0xe0
 347 01c3 04       		.byte	0x4
 348 01c4 0A       		.uleb128 0xa
 349 01c5 41000000 		.4byte	.LASF21
 350 01c9 07       		.byte	0x7
 351 01ca 3C       		.byte	0x3c
 352 01cb FA010000 		.4byte	0x1fa
 353 01cf 08       		.byte	0x8
 354 01d0 0A       		.uleb128 0xa
 355 01d1 96100000 		.4byte	.LASF30
 356 01d5 07       		.byte	0x7
 357 01d6 3D       		.byte	0x3d
 358 01d7 E5000000 		.4byte	0xe5
 359 01db 20       		.byte	0x20
 360 01dc 0A       		.uleb128 0xa
 361 01dd D6100000 		.4byte	.LASF31
 362 01e1 07       		.byte	0x7
 363 01e2 3E       		.byte	0x3e
 364 01e3 E0000000 		.4byte	0xe0
 365 01e7 24       		.byte	0x24
 366 01e8 0A       		.uleb128 0xa
 367 01e9 F1100000 		.4byte	.LASF24
 368 01ed 07       		.byte	0x7
 369 01ee 3F       		.byte	0x3f
 370 01ef 04020000 		.4byte	0x204
 371 01f3 28       		.byte	0x28
 372 01f4 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 62


 373 01f5 05       		.uleb128 0x5
 374 01f6 59010000 		.4byte	0x159
 375 01fa 06       		.uleb128 0x6
 376 01fb F5010000 		.4byte	0x1f5
 377 01ff 05       		.uleb128 0x5
 378 0200 59010000 		.4byte	0x159
 379 0204 06       		.uleb128 0x6
 380 0205 FF010000 		.4byte	0x1ff
 381 0209 03       		.uleb128 0x3
 382 020a 07040000 		.4byte	.LASF32
 383 020e 07       		.byte	0x7
 384 020f 40       		.byte	0x40
 385 0210 A4010000 		.4byte	0x1a4
 386 0214 09       		.uleb128 0x9
 387 0215 40       		.byte	0x40
 388 0216 07       		.byte	0x7
 389 0217 45       		.byte	0x45
 390 0218 65020000 		.4byte	0x265
 391 021c 0A       		.uleb128 0xa
 392 021d 90100000 		.4byte	.LASF28
 393 0221 07       		.byte	0x7
 394 0222 46       		.byte	0x46
 395 0223 E5000000 		.4byte	0xe5
 396 0227 00       		.byte	0
 397 0228 0A       		.uleb128 0xa
 398 0229 D1100000 		.4byte	.LASF29
 399 022d 07       		.byte	0x7
 400 022e 47       		.byte	0x47
 401 022f E0000000 		.4byte	0xe0
 402 0233 04       		.byte	0x4
 403 0234 0A       		.uleb128 0xa
 404 0235 41000000 		.4byte	.LASF21
 405 0239 07       		.byte	0x7
 406 023a 48       		.byte	0x48
 407 023b 6A020000 		.4byte	0x26a
 408 023f 08       		.byte	0x8
 409 0240 0A       		.uleb128 0xa
 410 0241 96100000 		.4byte	.LASF30
 411 0245 07       		.byte	0x7
 412 0246 49       		.byte	0x49
 413 0247 E5000000 		.4byte	0xe5
 414 024b 20       		.byte	0x20
 415 024c 0A       		.uleb128 0xa
 416 024d D6100000 		.4byte	.LASF31
 417 0251 07       		.byte	0x7
 418 0252 4A       		.byte	0x4a
 419 0253 E0000000 		.4byte	0xe0
 420 0257 24       		.byte	0x24
 421 0258 0A       		.uleb128 0xa
 422 0259 F1100000 		.4byte	.LASF24
 423 025d 07       		.byte	0x7
 424 025e 4B       		.byte	0x4b
 425 025f 74020000 		.4byte	0x274
 426 0263 28       		.byte	0x28
 427 0264 00       		.byte	0
 428 0265 05       		.uleb128 0x5
 429 0266 59010000 		.4byte	0x159
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 63


 430 026a 06       		.uleb128 0x6
 431 026b 65020000 		.4byte	0x265
 432 026f 05       		.uleb128 0x5
 433 0270 59010000 		.4byte	0x159
 434 0274 06       		.uleb128 0x6
 435 0275 6F020000 		.4byte	0x26f
 436 0279 03       		.uleb128 0x3
 437 027a D9000000 		.4byte	.LASF33
 438 027e 07       		.byte	0x7
 439 027f 4C       		.byte	0x4c
 440 0280 14020000 		.4byte	0x214
 441 0284 0B       		.uleb128 0xb
 442 0285 0054     		.2byte	0x5400
 443 0287 07       		.byte	0x7
 444 0288 69       		.byte	0x69
 445 0289 5C030000 		.4byte	0x35c
 446 028d 0C       		.uleb128 0xc
 447 028e 475200   		.ascii	"GR\000"
 448 0291 07       		.byte	0x7
 449 0292 6A       		.byte	0x6a
 450 0293 5C030000 		.4byte	0x35c
 451 0297 00       		.byte	0
 452 0298 0D       		.uleb128 0xd
 453 0299 B6070000 		.4byte	.LASF34
 454 029d 07       		.byte	0x7
 455 029e 6B       		.byte	0x6b
 456 029f E0000000 		.4byte	0xe0
 457 02a3 0004     		.2byte	0x400
 458 02a5 0D       		.uleb128 0xd
 459 02a6 41000000 		.4byte	.LASF21
 460 02aa 07       		.byte	0x7
 461 02ab 6C       		.byte	0x6c
 462 02ac 81030000 		.4byte	0x381
 463 02b0 0404     		.2byte	0x404
 464 02b2 0D       		.uleb128 0xd
 465 02b3 B2000000 		.4byte	.LASF35
 466 02b7 07       		.byte	0x7
 467 02b8 6D       		.byte	0x6d
 468 02b9 96030000 		.4byte	0x396
 469 02bd 0008     		.2byte	0x800
 470 02bf 0D       		.uleb128 0xd
 471 02c0 E9060000 		.4byte	.LASF36
 472 02c4 07       		.byte	0x7
 473 02c5 6E       		.byte	0x6e
 474 02c6 9B030000 		.4byte	0x39b
 475 02ca 0009     		.2byte	0x900
 476 02cc 0D       		.uleb128 0xd
 477 02cd 9E010000 		.4byte	.LASF37
 478 02d1 07       		.byte	0x7
 479 02d2 6F       		.byte	0x6f
 480 02d3 A0030000 		.4byte	0x3a0
 481 02d7 000A     		.2byte	0xa00
 482 02d9 0D       		.uleb128 0xd
 483 02da 96060000 		.4byte	.LASF38
 484 02de 07       		.byte	0x7
 485 02df 70       		.byte	0x70
 486 02e0 B5030000 		.4byte	0x3b5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 64


 487 02e4 000B     		.2byte	0xb00
 488 02e6 0D       		.uleb128 0xd
 489 02e7 F1100000 		.4byte	.LASF24
 490 02eb 07       		.byte	0x7
 491 02ec 71       		.byte	0x71
 492 02ed E5000000 		.4byte	0xe5
 493 02f1 FC0B     		.2byte	0xbfc
 494 02f3 0D       		.uleb128 0xd
 495 02f4 F4060000 		.4byte	.LASF20
 496 02f8 07       		.byte	0x7
 497 02f9 72       		.byte	0x72
 498 02fa BA030000 		.4byte	0x3ba
 499 02fe 000C     		.2byte	0xc00
 500 0300 0D       		.uleb128 0xd
 501 0301 650B0000 		.4byte	.LASF39
 502 0305 07       		.byte	0x7
 503 0306 73       		.byte	0x73
 504 0307 D4030000 		.4byte	0x3d4
 505 030b 000E     		.2byte	0xe00
 506 030d 0D       		.uleb128 0xd
 507 030e E9050000 		.4byte	.LASF40
 508 0312 07       		.byte	0x7
 509 0313 74       		.byte	0x74
 510 0314 E0000000 		.4byte	0xe0
 511 0318 0010     		.2byte	0x1000
 512 031a 0D       		.uleb128 0xd
 513 031b 6F0B0000 		.4byte	.LASF41
 514 031f 07       		.byte	0x7
 515 0320 75       		.byte	0x75
 516 0321 EF030000 		.4byte	0x3ef
 517 0325 0410     		.2byte	0x1004
 518 0327 0D       		.uleb128 0xd
 519 0328 A0070000 		.4byte	.LASF42
 520 032c 07       		.byte	0x7
 521 032d 76       		.byte	0x76
 522 032e F4030000 		.4byte	0x3f4
 523 0332 0020     		.2byte	0x2000
 524 0334 0D       		.uleb128 0xd
 525 0335 AB010000 		.4byte	.LASF43
 526 0339 07       		.byte	0x7
 527 033a 77       		.byte	0x77
 528 033b 04040000 		.4byte	0x404
 529 033f 0040     		.2byte	0x4000
 530 0341 0D       		.uleb128 0xd
 531 0342 790B0000 		.4byte	.LASF44
 532 0346 07       		.byte	0x7
 533 0347 78       		.byte	0x78
 534 0348 2A040000 		.4byte	0x42a
 535 034c 0048     		.2byte	0x4800
 536 034e 0D       		.uleb128 0xd
 537 034f EC080000 		.4byte	.LASF45
 538 0353 07       		.byte	0x7
 539 0354 79       		.byte	0x79
 540 0355 2F040000 		.4byte	0x42f
 541 0359 0050     		.2byte	0x5000
 542 035b 00       		.byte	0
 543 035c 07       		.uleb128 0x7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 65


 544 035d 73010000 		.4byte	0x173
 545 0361 6C030000 		.4byte	0x36c
 546 0365 08       		.uleb128 0x8
 547 0366 D9000000 		.4byte	0xd9
 548 036a 0F       		.byte	0xf
 549 036b 00       		.byte	0
 550 036c 07       		.uleb128 0x7
 551 036d E5000000 		.4byte	0xe5
 552 0371 7C030000 		.4byte	0x37c
 553 0375 08       		.uleb128 0x8
 554 0376 D9000000 		.4byte	0xd9
 555 037a FE       		.byte	0xfe
 556 037b 00       		.byte	0
 557 037c 05       		.uleb128 0x5
 558 037d 6C030000 		.4byte	0x36c
 559 0381 06       		.uleb128 0x6
 560 0382 7C030000 		.4byte	0x37c
 561 0386 07       		.uleb128 0x7
 562 0387 E0000000 		.4byte	0xe0
 563 038b 96030000 		.4byte	0x396
 564 038f 08       		.uleb128 0x8
 565 0390 D9000000 		.4byte	0xd9
 566 0394 3F       		.byte	0x3f
 567 0395 00       		.byte	0
 568 0396 05       		.uleb128 0x5
 569 0397 86030000 		.4byte	0x386
 570 039b 05       		.uleb128 0x5
 571 039c 86030000 		.4byte	0x386
 572 03a0 05       		.uleb128 0x5
 573 03a1 86030000 		.4byte	0x386
 574 03a5 07       		.uleb128 0x7
 575 03a6 E0000000 		.4byte	0xe0
 576 03aa B5030000 		.4byte	0x3b5
 577 03ae 08       		.uleb128 0x8
 578 03af D9000000 		.4byte	0xd9
 579 03b3 3E       		.byte	0x3e
 580 03b4 00       		.byte	0
 581 03b5 05       		.uleb128 0x5
 582 03b6 A5030000 		.4byte	0x3a5
 583 03ba 05       		.uleb128 0x5
 584 03bb EA000000 		.4byte	0xea
 585 03bf 07       		.uleb128 0x7
 586 03c0 E5000000 		.4byte	0xe5
 587 03c4 CF030000 		.4byte	0x3cf
 588 03c8 08       		.uleb128 0x8
 589 03c9 D9000000 		.4byte	0xd9
 590 03cd 7F       		.byte	0x7f
 591 03ce 00       		.byte	0
 592 03cf 05       		.uleb128 0x5
 593 03d0 BF030000 		.4byte	0x3bf
 594 03d4 06       		.uleb128 0x6
 595 03d5 CF030000 		.4byte	0x3cf
 596 03d9 07       		.uleb128 0x7
 597 03da E5000000 		.4byte	0xe5
 598 03de EA030000 		.4byte	0x3ea
 599 03e2 0E       		.uleb128 0xe
 600 03e3 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 66


 601 03e7 FE03     		.2byte	0x3fe
 602 03e9 00       		.byte	0
 603 03ea 05       		.uleb128 0x5
 604 03eb D9030000 		.4byte	0x3d9
 605 03ef 06       		.uleb128 0x6
 606 03f0 EA030000 		.4byte	0x3ea
 607 03f4 07       		.uleb128 0x7
 608 03f5 99010000 		.4byte	0x199
 609 03f9 04040000 		.4byte	0x404
 610 03fd 08       		.uleb128 0x8
 611 03fe D9000000 		.4byte	0xd9
 612 0402 0F       		.byte	0xf
 613 0403 00       		.byte	0
 614 0404 07       		.uleb128 0x7
 615 0405 09020000 		.4byte	0x209
 616 0409 14040000 		.4byte	0x414
 617 040d 08       		.uleb128 0x8
 618 040e D9000000 		.4byte	0xd9
 619 0412 1F       		.byte	0x1f
 620 0413 00       		.byte	0
 621 0414 07       		.uleb128 0x7
 622 0415 E5000000 		.4byte	0xe5
 623 0419 25040000 		.4byte	0x425
 624 041d 0E       		.uleb128 0xe
 625 041e D9000000 		.4byte	0xd9
 626 0422 FF01     		.2byte	0x1ff
 627 0424 00       		.byte	0
 628 0425 05       		.uleb128 0x5
 629 0426 14040000 		.4byte	0x414
 630 042a 06       		.uleb128 0x6
 631 042b 25040000 		.4byte	0x425
 632 042f 07       		.uleb128 0x7
 633 0430 79020000 		.4byte	0x279
 634 0434 3F040000 		.4byte	0x43f
 635 0438 08       		.uleb128 0x8
 636 0439 D9000000 		.4byte	0xd9
 637 043d 0F       		.byte	0xf
 638 043e 00       		.byte	0
 639 043f 03       		.uleb128 0x3
 640 0440 C70B0000 		.4byte	.LASF46
 641 0444 07       		.byte	0x7
 642 0445 7B       		.byte	0x7b
 643 0446 84020000 		.4byte	0x284
 644 044a 07       		.uleb128 0x7
 645 044b E5000000 		.4byte	0xe5
 646 044f 5A040000 		.4byte	0x45a
 647 0453 08       		.uleb128 0x8
 648 0454 D9000000 		.4byte	0xd9
 649 0458 1F       		.byte	0x1f
 650 0459 00       		.byte	0
 651 045a 0B       		.uleb128 0xb
 652 045b 0801     		.2byte	0x108
 653 045d 08       		.byte	0x8
 654 045e 21       		.byte	0x21
 655 045f F6040000 		.4byte	0x4f6
 656 0463 0A       		.uleb128 0xa
 657 0464 14010000 		.4byte	.LASF47
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 67


 658 0468 08       		.byte	0x8
 659 0469 22       		.byte	0x22
 660 046a E0000000 		.4byte	0xe0
 661 046e 00       		.byte	0
 662 046f 0A       		.uleb128 0xa
 663 0470 41000000 		.4byte	.LASF21
 664 0474 08       		.byte	0x8
 665 0475 23       		.byte	0x23
 666 0476 FB040000 		.4byte	0x4fb
 667 047a 04       		.byte	0x4
 668 047b 0A       		.uleb128 0xa
 669 047c 54040000 		.4byte	.LASF48
 670 0480 08       		.byte	0x8
 671 0481 24       		.byte	0x24
 672 0482 E0000000 		.4byte	0xe0
 673 0486 20       		.byte	0x20
 674 0487 0A       		.uleb128 0xa
 675 0488 6C020000 		.4byte	.LASF49
 676 048c 08       		.byte	0x8
 677 048d 25       		.byte	0x25
 678 048e E0000000 		.4byte	0xe0
 679 0492 24       		.byte	0x24
 680 0493 0A       		.uleb128 0xa
 681 0494 5D090000 		.4byte	.LASF50
 682 0498 08       		.byte	0x8
 683 0499 26       		.byte	0x26
 684 049a E0000000 		.4byte	0xe0
 685 049e 28       		.byte	0x28
 686 049f 0A       		.uleb128 0xa
 687 04a0 2D0D0000 		.4byte	.LASF51
 688 04a4 08       		.byte	0x8
 689 04a5 27       		.byte	0x27
 690 04a6 E5000000 		.4byte	0xe5
 691 04aa 2C       		.byte	0x2c
 692 04ab 0A       		.uleb128 0xa
 693 04ac F1100000 		.4byte	.LASF24
 694 04b0 08       		.byte	0x8
 695 04b1 28       		.byte	0x28
 696 04b2 05050000 		.4byte	0x505
 697 04b6 30       		.byte	0x30
 698 04b7 0A       		.uleb128 0xa
 699 04b8 BC000000 		.4byte	.LASF52
 700 04bc 08       		.byte	0x8
 701 04bd 29       		.byte	0x29
 702 04be E0000000 		.4byte	0xe0
 703 04c2 B0       		.byte	0xb0
 704 04c3 0A       		.uleb128 0xa
 705 04c4 010E0000 		.4byte	.LASF53
 706 04c8 08       		.byte	0x8
 707 04c9 2A       		.byte	0x2a
 708 04ca E0000000 		.4byte	0xe0
 709 04ce B4       		.byte	0xb4
 710 04cf 0A       		.uleb128 0xa
 711 04d0 650B0000 		.4byte	.LASF39
 712 04d4 08       		.byte	0x8
 713 04d5 2B       		.byte	0x2b
 714 04d6 1F050000 		.4byte	0x51f
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 68


 715 04da B8       		.byte	0xb8
 716 04db 0D       		.uleb128 0xd
 717 04dc 2E110000 		.4byte	.LASF54
 718 04e0 08       		.byte	0x8
 719 04e1 2C       		.byte	0x2c
 720 04e2 E0000000 		.4byte	0xe0
 721 04e6 0001     		.2byte	0x100
 722 04e8 0D       		.uleb128 0xd
 723 04e9 740F0000 		.4byte	.LASF55
 724 04ed 08       		.byte	0x8
 725 04ee 2D       		.byte	0x2d
 726 04ef E0000000 		.4byte	0xe0
 727 04f3 0401     		.2byte	0x104
 728 04f5 00       		.byte	0
 729 04f6 05       		.uleb128 0x5
 730 04f7 FA000000 		.4byte	0xfa
 731 04fb 06       		.uleb128 0x6
 732 04fc F6040000 		.4byte	0x4f6
 733 0500 05       		.uleb128 0x5
 734 0501 4A040000 		.4byte	0x44a
 735 0505 06       		.uleb128 0x6
 736 0506 00050000 		.4byte	0x500
 737 050a 07       		.uleb128 0x7
 738 050b E5000000 		.4byte	0xe5
 739 050f 1A050000 		.4byte	0x51a
 740 0513 08       		.uleb128 0x8
 741 0514 D9000000 		.4byte	0xd9
 742 0518 11       		.byte	0x11
 743 0519 00       		.byte	0
 744 051a 05       		.uleb128 0x5
 745 051b 0A050000 		.4byte	0x50a
 746 051f 06       		.uleb128 0x6
 747 0520 1A050000 		.4byte	0x51a
 748 0524 03       		.uleb128 0x3
 749 0525 500F0000 		.4byte	.LASF56
 750 0529 08       		.byte	0x8
 751 052a 2E       		.byte	0x2e
 752 052b 5A040000 		.4byte	0x45a
 753 052f 0F       		.uleb128 0xf
 754 0530 22090000 		.4byte	.LASF57
 755 0534 09       		.byte	0x9
 756 0535 5106     		.2byte	0x651
 757 0537 24050000 		.4byte	0x524
 758 053b 02       		.uleb128 0x2
 759 053c 08       		.byte	0x8
 760 053d 04       		.byte	0x4
 761 053e 680A0000 		.4byte	.LASF58
 762 0542 09       		.uleb128 0x9
 763 0543 B8       		.byte	0xb8
 764 0544 0A       		.byte	0xa
 765 0545 34       		.byte	0x34
 766 0546 53090000 		.4byte	0x953
 767 054a 0A       		.uleb128 0xa
 768 054b 94010000 		.4byte	.LASF59
 769 054f 0A       		.byte	0xa
 770 0550 37       		.byte	0x37
 771 0551 CE000000 		.4byte	0xce
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 69


 772 0555 00       		.byte	0
 773 0556 0A       		.uleb128 0xa
 774 0557 A6070000 		.4byte	.LASF60
 775 055b 0A       		.byte	0xa
 776 055c 38       		.byte	0x38
 777 055d CE000000 		.4byte	0xce
 778 0561 04       		.byte	0x4
 779 0562 0A       		.uleb128 0xa
 780 0563 ED000000 		.4byte	.LASF61
 781 0567 0A       		.byte	0xa
 782 0568 39       		.byte	0x39
 783 0569 CE000000 		.4byte	0xce
 784 056d 08       		.byte	0x8
 785 056e 0A       		.uleb128 0xa
 786 056f F90D0000 		.4byte	.LASF62
 787 0573 0A       		.byte	0xa
 788 0574 3A       		.byte	0x3a
 789 0575 CE000000 		.4byte	0xce
 790 0579 0C       		.byte	0xc
 791 057a 0A       		.uleb128 0xa
 792 057b 8D0A0000 		.4byte	.LASF63
 793 057f 0A       		.byte	0xa
 794 0580 3B       		.byte	0x3b
 795 0581 CE000000 		.4byte	0xce
 796 0585 10       		.byte	0x10
 797 0586 0A       		.uleb128 0xa
 798 0587 18090000 		.4byte	.LASF64
 799 058b 0A       		.byte	0xa
 800 058c 3C       		.byte	0x3c
 801 058d CE000000 		.4byte	0xce
 802 0591 14       		.byte	0x14
 803 0592 0A       		.uleb128 0xa
 804 0593 B4060000 		.4byte	.LASF65
 805 0597 0A       		.byte	0xa
 806 0598 3D       		.byte	0x3d
 807 0599 CE000000 		.4byte	0xce
 808 059d 18       		.byte	0x18
 809 059e 0A       		.uleb128 0xa
 810 059f C8100000 		.4byte	.LASF66
 811 05a3 0A       		.byte	0xa
 812 05a4 3E       		.byte	0x3e
 813 05a5 CE000000 		.4byte	0xce
 814 05a9 1C       		.byte	0x1c
 815 05aa 0A       		.uleb128 0xa
 816 05ab BA080000 		.4byte	.LASF67
 817 05af 0A       		.byte	0xa
 818 05b0 3F       		.byte	0x3f
 819 05b1 CE000000 		.4byte	0xce
 820 05b5 20       		.byte	0x20
 821 05b6 0A       		.uleb128 0xa
 822 05b7 D1080000 		.4byte	.LASF68
 823 05bb 0A       		.byte	0xa
 824 05bc 40       		.byte	0x40
 825 05bd CE000000 		.4byte	0xce
 826 05c1 24       		.byte	0x24
 827 05c2 0A       		.uleb128 0xa
 828 05c3 F70B0000 		.4byte	.LASF69
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 70


 829 05c7 0A       		.byte	0xa
 830 05c8 43       		.byte	0x43
 831 05c9 A2000000 		.4byte	0xa2
 832 05cd 28       		.byte	0x28
 833 05ce 0A       		.uleb128 0xa
 834 05cf 5F040000 		.4byte	.LASF70
 835 05d3 0A       		.byte	0xa
 836 05d4 44       		.byte	0x44
 837 05d5 A2000000 		.4byte	0xa2
 838 05d9 29       		.byte	0x29
 839 05da 0A       		.uleb128 0xa
 840 05db EE0A0000 		.4byte	.LASF71
 841 05df 0A       		.byte	0xa
 842 05e0 45       		.byte	0x45
 843 05e1 A2000000 		.4byte	0xa2
 844 05e5 2A       		.byte	0x2a
 845 05e6 0A       		.uleb128 0xa
 846 05e7 240C0000 		.4byte	.LASF72
 847 05eb 0A       		.byte	0xa
 848 05ec 46       		.byte	0x46
 849 05ed A2000000 		.4byte	0xa2
 850 05f1 2B       		.byte	0x2b
 851 05f2 0A       		.uleb128 0xa
 852 05f3 110C0000 		.4byte	.LASF73
 853 05f7 0A       		.byte	0xa
 854 05f8 47       		.byte	0x47
 855 05f9 A2000000 		.4byte	0xa2
 856 05fd 2C       		.byte	0x2c
 857 05fe 0A       		.uleb128 0xa
 858 05ff 710D0000 		.4byte	.LASF74
 859 0603 0A       		.byte	0xa
 860 0604 48       		.byte	0x48
 861 0605 A2000000 		.4byte	0xa2
 862 0609 2D       		.byte	0x2d
 863 060a 0A       		.uleb128 0xa
 864 060b 4B110000 		.4byte	.LASF75
 865 060f 0A       		.byte	0xa
 866 0610 49       		.byte	0x49
 867 0611 A2000000 		.4byte	0xa2
 868 0615 2E       		.byte	0x2e
 869 0616 0A       		.uleb128 0xa
 870 0617 9C100000 		.4byte	.LASF76
 871 061b 0A       		.byte	0xa
 872 061c 4A       		.byte	0x4a
 873 061d A2000000 		.4byte	0xa2
 874 0621 2F       		.byte	0x2f
 875 0622 0A       		.uleb128 0xa
 876 0623 61030000 		.4byte	.LASF77
 877 0627 0A       		.byte	0xa
 878 0628 4B       		.byte	0x4b
 879 0629 A2000000 		.4byte	0xa2
 880 062d 30       		.byte	0x30
 881 062e 0A       		.uleb128 0xa
 882 062f 90090000 		.4byte	.LASF78
 883 0633 0A       		.byte	0xa
 884 0634 4E       		.byte	0x4e
 885 0635 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 71


 886 0639 31       		.byte	0x31
 887 063a 0A       		.uleb128 0xa
 888 063b 27100000 		.4byte	.LASF79
 889 063f 0A       		.byte	0xa
 890 0640 4F       		.byte	0x4f
 891 0641 A2000000 		.4byte	0xa2
 892 0645 32       		.byte	0x32
 893 0646 0A       		.uleb128 0xa
 894 0647 51090000 		.4byte	.LASF80
 895 064b 0A       		.byte	0xa
 896 064c 50       		.byte	0x50
 897 064d A2000000 		.4byte	0xa2
 898 0651 33       		.byte	0x33
 899 0652 0A       		.uleb128 0xa
 900 0653 6D070000 		.4byte	.LASF81
 901 0657 0A       		.byte	0xa
 902 0658 51       		.byte	0x51
 903 0659 A2000000 		.4byte	0xa2
 904 065d 34       		.byte	0x34
 905 065e 0A       		.uleb128 0xa
 906 065f 18050000 		.4byte	.LASF82
 907 0663 0A       		.byte	0xa
 908 0664 52       		.byte	0x52
 909 0665 AD000000 		.4byte	0xad
 910 0669 36       		.byte	0x36
 911 066a 0A       		.uleb128 0xa
 912 066b B2010000 		.4byte	.LASF83
 913 066f 0A       		.byte	0xa
 914 0670 53       		.byte	0x53
 915 0671 AD000000 		.4byte	0xad
 916 0675 38       		.byte	0x38
 917 0676 0A       		.uleb128 0xa
 918 0677 3C090000 		.4byte	.LASF84
 919 067b 0A       		.byte	0xa
 920 067c 54       		.byte	0x54
 921 067d AD000000 		.4byte	0xad
 922 0681 3A       		.byte	0x3a
 923 0682 0A       		.uleb128 0xa
 924 0683 FB100000 		.4byte	.LASF85
 925 0687 0A       		.byte	0xa
 926 0688 55       		.byte	0x55
 927 0689 A2000000 		.4byte	0xa2
 928 068d 3C       		.byte	0x3c
 929 068e 0A       		.uleb128 0xa
 930 068f DE050000 		.4byte	.LASF86
 931 0693 0A       		.byte	0xa
 932 0694 56       		.byte	0x56
 933 0695 A2000000 		.4byte	0xa2
 934 0699 3D       		.byte	0x3d
 935 069a 0A       		.uleb128 0xa
 936 069b CB0A0000 		.4byte	.LASF87
 937 069f 0A       		.byte	0xa
 938 06a0 57       		.byte	0x57
 939 06a1 A2000000 		.4byte	0xa2
 940 06a5 3E       		.byte	0x3e
 941 06a6 0A       		.uleb128 0xa
 942 06a7 8D000000 		.4byte	.LASF88
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 72


 943 06ab 0A       		.byte	0xa
 944 06ac 58       		.byte	0x58
 945 06ad A2000000 		.4byte	0xa2
 946 06b1 3F       		.byte	0x3f
 947 06b2 0A       		.uleb128 0xa
 948 06b3 3D010000 		.4byte	.LASF89
 949 06b7 0A       		.byte	0xa
 950 06b8 59       		.byte	0x59
 951 06b9 A2000000 		.4byte	0xa2
 952 06bd 40       		.byte	0x40
 953 06be 0A       		.uleb128 0xa
 954 06bf EC0C0000 		.4byte	.LASF90
 955 06c3 0A       		.byte	0xa
 956 06c4 5A       		.byte	0x5a
 957 06c5 A2000000 		.4byte	0xa2
 958 06c9 41       		.byte	0x41
 959 06ca 0A       		.uleb128 0xa
 960 06cb E90F0000 		.4byte	.LASF91
 961 06cf 0A       		.byte	0xa
 962 06d0 5B       		.byte	0x5b
 963 06d1 A2000000 		.4byte	0xa2
 964 06d5 42       		.byte	0x42
 965 06d6 0A       		.uleb128 0xa
 966 06d7 41070000 		.4byte	.LASF92
 967 06db 0A       		.byte	0xa
 968 06dc 5C       		.byte	0x5c
 969 06dd A2000000 		.4byte	0xa2
 970 06e1 43       		.byte	0x43
 971 06e2 0A       		.uleb128 0xa
 972 06e3 CA070000 		.4byte	.LASF93
 973 06e7 0A       		.byte	0xa
 974 06e8 5D       		.byte	0x5d
 975 06e9 A2000000 		.4byte	0xa2
 976 06ed 44       		.byte	0x44
 977 06ee 0A       		.uleb128 0xa
 978 06ef 320C0000 		.4byte	.LASF94
 979 06f3 0A       		.byte	0xa
 980 06f4 5E       		.byte	0x5e
 981 06f5 CE000000 		.4byte	0xce
 982 06f9 48       		.byte	0x48
 983 06fa 0A       		.uleb128 0xa
 984 06fb 75020000 		.4byte	.LASF95
 985 06ff 0A       		.byte	0xa
 986 0700 5F       		.byte	0x5f
 987 0701 CE000000 		.4byte	0xce
 988 0705 4C       		.byte	0x4c
 989 0706 0A       		.uleb128 0xa
 990 0707 A60F0000 		.4byte	.LASF96
 991 070b 0A       		.byte	0xa
 992 070c 60       		.byte	0x60
 993 070d A2000000 		.4byte	0xa2
 994 0711 50       		.byte	0x50
 995 0712 0A       		.uleb128 0xa
 996 0713 06060000 		.4byte	.LASF97
 997 0717 0A       		.byte	0xa
 998 0718 61       		.byte	0x61
 999 0719 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 73


 1000 071d 51       		.byte	0x51
 1001 071e 0A       		.uleb128 0xa
 1002 071f DC080000 		.4byte	.LASF98
 1003 0723 0A       		.byte	0xa
 1004 0724 62       		.byte	0x62
 1005 0725 A2000000 		.4byte	0xa2
 1006 0729 52       		.byte	0x52
 1007 072a 0A       		.uleb128 0xa
 1008 072b 6D040000 		.4byte	.LASF99
 1009 072f 0A       		.byte	0xa
 1010 0730 63       		.byte	0x63
 1011 0731 A2000000 		.4byte	0xa2
 1012 0735 53       		.byte	0x53
 1013 0736 0A       		.uleb128 0xa
 1014 0737 200F0000 		.4byte	.LASF100
 1015 073b 0A       		.byte	0xa
 1016 073c 64       		.byte	0x64
 1017 073d A2000000 		.4byte	0xa2
 1018 0741 54       		.byte	0x54
 1019 0742 0A       		.uleb128 0xa
 1020 0743 82060000 		.4byte	.LASF101
 1021 0747 0A       		.byte	0xa
 1022 0748 65       		.byte	0x65
 1023 0749 A2000000 		.4byte	0xa2
 1024 074d 55       		.byte	0x55
 1025 074e 0A       		.uleb128 0xa
 1026 074f 00000000 		.4byte	.LASF102
 1027 0753 0A       		.byte	0xa
 1028 0754 66       		.byte	0x66
 1029 0755 A2000000 		.4byte	0xa2
 1030 0759 56       		.byte	0x56
 1031 075a 0A       		.uleb128 0xa
 1032 075b F80A0000 		.4byte	.LASF103
 1033 075f 0A       		.byte	0xa
 1034 0760 67       		.byte	0x67
 1035 0761 A2000000 		.4byte	0xa2
 1036 0765 57       		.byte	0x57
 1037 0766 0A       		.uleb128 0xa
 1038 0767 AE050000 		.4byte	.LASF104
 1039 076b 0A       		.byte	0xa
 1040 076c 68       		.byte	0x68
 1041 076d A2000000 		.4byte	0xa2
 1042 0771 58       		.byte	0x58
 1043 0772 0A       		.uleb128 0xa
 1044 0773 1A110000 		.4byte	.LASF105
 1045 0777 0A       		.byte	0xa
 1046 0778 69       		.byte	0x69
 1047 0779 A2000000 		.4byte	0xa2
 1048 077d 59       		.byte	0x59
 1049 077e 0A       		.uleb128 0xa
 1050 077f 1C100000 		.4byte	.LASF106
 1051 0783 0A       		.byte	0xa
 1052 0784 6E       		.byte	0x6e
 1053 0785 B8000000 		.4byte	0xb8
 1054 0789 5A       		.byte	0x5a
 1055 078a 0A       		.uleb128 0xa
 1056 078b 0B010000 		.4byte	.LASF107
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 74


 1057 078f 0A       		.byte	0xa
 1058 0790 6F       		.byte	0x6f
 1059 0791 B8000000 		.4byte	0xb8
 1060 0795 5C       		.byte	0x5c
 1061 0796 0A       		.uleb128 0xa
 1062 0797 C2080000 		.4byte	.LASF108
 1063 079b 0A       		.byte	0xa
 1064 079c 70       		.byte	0x70
 1065 079d A2000000 		.4byte	0xa2
 1066 07a1 5E       		.byte	0x5e
 1067 07a2 0A       		.uleb128 0xa
 1068 07a3 35100000 		.4byte	.LASF109
 1069 07a7 0A       		.byte	0xa
 1070 07a8 71       		.byte	0x71
 1071 07a9 A2000000 		.4byte	0xa2
 1072 07ad 5F       		.byte	0x5f
 1073 07ae 0A       		.uleb128 0xa
 1074 07af 4C070000 		.4byte	.LASF110
 1075 07b3 0A       		.byte	0xa
 1076 07b4 72       		.byte	0x72
 1077 07b5 A2000000 		.4byte	0xa2
 1078 07b9 60       		.byte	0x60
 1079 07ba 0A       		.uleb128 0xa
 1080 07bb A3060000 		.4byte	.LASF111
 1081 07bf 0A       		.byte	0xa
 1082 07c0 73       		.byte	0x73
 1083 07c1 CE000000 		.4byte	0xce
 1084 07c5 64       		.byte	0x64
 1085 07c6 0A       		.uleb128 0xa
 1086 07c7 18060000 		.4byte	.LASF112
 1087 07cb 0A       		.byte	0xa
 1088 07cc 76       		.byte	0x76
 1089 07cd B8000000 		.4byte	0xb8
 1090 07d1 68       		.byte	0x68
 1091 07d2 0A       		.uleb128 0xa
 1092 07d3 960A0000 		.4byte	.LASF113
 1093 07d7 0A       		.byte	0xa
 1094 07d8 77       		.byte	0x77
 1095 07d9 B8000000 		.4byte	0xb8
 1096 07dd 6A       		.byte	0x6a
 1097 07de 0A       		.uleb128 0xa
 1098 07df 2D090000 		.4byte	.LASF114
 1099 07e3 0A       		.byte	0xa
 1100 07e4 78       		.byte	0x78
 1101 07e5 B8000000 		.4byte	0xb8
 1102 07e9 6C       		.byte	0x6c
 1103 07ea 0A       		.uleb128 0xa
 1104 07eb 3F020000 		.4byte	.LASF115
 1105 07ef 0A       		.byte	0xa
 1106 07f0 79       		.byte	0x79
 1107 07f1 B8000000 		.4byte	0xb8
 1108 07f5 6E       		.byte	0x6e
 1109 07f6 0A       		.uleb128 0xa
 1110 07f7 4F080000 		.4byte	.LASF116
 1111 07fb 0A       		.byte	0xa
 1112 07fc 7B       		.byte	0x7b
 1113 07fd A2000000 		.4byte	0xa2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 75


 1114 0801 70       		.byte	0x70
 1115 0802 0A       		.uleb128 0xa
 1116 0803 AF030000 		.4byte	.LASF117
 1117 0807 0A       		.byte	0xa
 1118 0808 7C       		.byte	0x7c
 1119 0809 A2000000 		.4byte	0xa2
 1120 080d 71       		.byte	0x71
 1121 080e 0A       		.uleb128 0xa
 1122 080f 4C020000 		.4byte	.LASF118
 1123 0813 0A       		.byte	0xa
 1124 0814 7D       		.byte	0x7d
 1125 0815 A2000000 		.4byte	0xa2
 1126 0819 72       		.byte	0x72
 1127 081a 0A       		.uleb128 0xa
 1128 081b 4A010000 		.4byte	.LASF119
 1129 081f 0A       		.byte	0xa
 1130 0820 7E       		.byte	0x7e
 1131 0821 A2000000 		.4byte	0xa2
 1132 0825 73       		.byte	0x73
 1133 0826 0A       		.uleb128 0xa
 1134 0827 530B0000 		.4byte	.LASF120
 1135 082b 0A       		.byte	0xa
 1136 082c 80       		.byte	0x80
 1137 082d B8000000 		.4byte	0xb8
 1138 0831 74       		.byte	0x74
 1139 0832 0A       		.uleb128 0xa
 1140 0833 300A0000 		.4byte	.LASF121
 1141 0837 0A       		.byte	0xa
 1142 0838 81       		.byte	0x81
 1143 0839 B8000000 		.4byte	0xb8
 1144 083d 76       		.byte	0x76
 1145 083e 0A       		.uleb128 0xa
 1146 083f 75080000 		.4byte	.LASF122
 1147 0843 0A       		.byte	0xa
 1148 0844 82       		.byte	0x82
 1149 0845 B8000000 		.4byte	0xb8
 1150 0849 78       		.byte	0x78
 1151 084a 0A       		.uleb128 0xa
 1152 084b EF040000 		.4byte	.LASF123
 1153 084f 0A       		.byte	0xa
 1154 0850 83       		.byte	0x83
 1155 0851 B8000000 		.4byte	0xb8
 1156 0855 7A       		.byte	0x7a
 1157 0856 0A       		.uleb128 0xa
 1158 0857 D70C0000 		.4byte	.LASF124
 1159 085b 0A       		.byte	0xa
 1160 085c 86       		.byte	0x86
 1161 085d A2000000 		.4byte	0xa2
 1162 0861 7C       		.byte	0x7c
 1163 0862 0A       		.uleb128 0xa
 1164 0863 C20F0000 		.4byte	.LASF125
 1165 0867 0A       		.byte	0xa
 1166 0868 87       		.byte	0x87
 1167 0869 A2000000 		.4byte	0xa2
 1168 086d 7D       		.byte	0x7d
 1169 086e 0A       		.uleb128 0xa
 1170 086f AC040000 		.4byte	.LASF126
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 76


 1171 0873 0A       		.byte	0xa
 1172 0874 88       		.byte	0x88
 1173 0875 A2000000 		.4byte	0xa2
 1174 0879 7E       		.byte	0x7e
 1175 087a 0A       		.uleb128 0xa
 1176 087b 24040000 		.4byte	.LASF127
 1177 087f 0A       		.byte	0xa
 1178 0880 89       		.byte	0x89
 1179 0881 A2000000 		.4byte	0xa2
 1180 0885 7F       		.byte	0x7f
 1181 0886 0A       		.uleb128 0xa
 1182 0887 04050000 		.4byte	.LASF128
 1183 088b 0A       		.byte	0xa
 1184 088c 8A       		.byte	0x8a
 1185 088d A2000000 		.4byte	0xa2
 1186 0891 80       		.byte	0x80
 1187 0892 0A       		.uleb128 0xa
 1188 0893 76000000 		.4byte	.LASF129
 1189 0897 0A       		.byte	0xa
 1190 0898 8D       		.byte	0x8d
 1191 0899 CE000000 		.4byte	0xce
 1192 089d 84       		.byte	0x84
 1193 089e 0A       		.uleb128 0xa
 1194 089f 160D0000 		.4byte	.LASF130
 1195 08a3 0A       		.byte	0xa
 1196 08a4 8E       		.byte	0x8e
 1197 08a5 CE000000 		.4byte	0xce
 1198 08a9 88       		.byte	0x88
 1199 08aa 0A       		.uleb128 0xa
 1200 08ab 9B090000 		.4byte	.LASF131
 1201 08af 0A       		.byte	0xa
 1202 08b0 8F       		.byte	0x8f
 1203 08b1 CE000000 		.4byte	0xce
 1204 08b5 8C       		.byte	0x8c
 1205 08b6 0A       		.uleb128 0xa
 1206 08b7 3E0B0000 		.4byte	.LASF132
 1207 08bb 0A       		.byte	0xa
 1208 08bc 90       		.byte	0x90
 1209 08bd CE000000 		.4byte	0xce
 1210 08c1 90       		.byte	0x90
 1211 08c2 0A       		.uleb128 0xa
 1212 08c3 9E0C0000 		.4byte	.LASF133
 1213 08c7 0A       		.byte	0xa
 1214 08c8 91       		.byte	0x91
 1215 08c9 CE000000 		.4byte	0xce
 1216 08cd 94       		.byte	0x94
 1217 08ce 0A       		.uleb128 0xa
 1218 08cf C4030000 		.4byte	.LASF134
 1219 08d3 0A       		.byte	0xa
 1220 08d4 92       		.byte	0x92
 1221 08d5 CE000000 		.4byte	0xce
 1222 08d9 98       		.byte	0x98
 1223 08da 0A       		.uleb128 0xa
 1224 08db 5B0D0000 		.4byte	.LASF135
 1225 08df 0A       		.byte	0xa
 1226 08e0 93       		.byte	0x93
 1227 08e1 CE000000 		.4byte	0xce
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 77


 1228 08e5 9C       		.byte	0x9c
 1229 08e6 0A       		.uleb128 0xa
 1230 08e7 2B070000 		.4byte	.LASF136
 1231 08eb 0A       		.byte	0xa
 1232 08ec 94       		.byte	0x94
 1233 08ed CE000000 		.4byte	0xce
 1234 08f1 A0       		.byte	0xa0
 1235 08f2 0A       		.uleb128 0xa
 1236 08f3 F6000000 		.4byte	.LASF137
 1237 08f7 0A       		.byte	0xa
 1238 08f8 95       		.byte	0x95
 1239 08f9 B8000000 		.4byte	0xb8
 1240 08fd A4       		.byte	0xa4
 1241 08fe 0A       		.uleb128 0xa
 1242 08ff 290B0000 		.4byte	.LASF138
 1243 0903 0A       		.byte	0xa
 1244 0904 96       		.byte	0x96
 1245 0905 B8000000 		.4byte	0xb8
 1246 0909 A6       		.byte	0xa6
 1247 090a 0A       		.uleb128 0xa
 1248 090b B40D0000 		.4byte	.LASF139
 1249 090f 0A       		.byte	0xa
 1250 0910 97       		.byte	0x97
 1251 0911 B8000000 		.4byte	0xb8
 1252 0915 A8       		.byte	0xa8
 1253 0916 0A       		.uleb128 0xa
 1254 0917 8A080000 		.4byte	.LASF140
 1255 091b 0A       		.byte	0xa
 1256 091c 98       		.byte	0x98
 1257 091d B8000000 		.4byte	0xb8
 1258 0921 AA       		.byte	0xaa
 1259 0922 0A       		.uleb128 0xa
 1260 0923 83020000 		.4byte	.LASF141
 1261 0927 0A       		.byte	0xa
 1262 0928 99       		.byte	0x99
 1263 0929 B8000000 		.4byte	0xb8
 1264 092d AC       		.byte	0xac
 1265 092e 0A       		.uleb128 0xa
 1266 092f C8090000 		.4byte	.LASF142
 1267 0933 0A       		.byte	0xa
 1268 0934 9A       		.byte	0x9a
 1269 0935 B8000000 		.4byte	0xb8
 1270 0939 AE       		.byte	0xae
 1271 093a 0A       		.uleb128 0xa
 1272 093b 91020000 		.4byte	.LASF143
 1273 093f 0A       		.byte	0xa
 1274 0940 9D       		.byte	0x9d
 1275 0941 B8000000 		.4byte	0xb8
 1276 0945 B0       		.byte	0xb0
 1277 0946 0A       		.uleb128 0xa
 1278 0947 450E0000 		.4byte	.LASF144
 1279 094b 0A       		.byte	0xa
 1280 094c 9E       		.byte	0x9e
 1281 094d CE000000 		.4byte	0xce
 1282 0951 B4       		.byte	0xb4
 1283 0952 00       		.byte	0
 1284 0953 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 78


 1285 0954 50100000 		.4byte	.LASF145
 1286 0958 0A       		.byte	0xa
 1287 0959 9F       		.byte	0x9f
 1288 095a 42050000 		.4byte	0x542
 1289 095e 02       		.uleb128 0x2
 1290 095f 01       		.byte	0x1
 1291 0960 08       		.byte	0x8
 1292 0961 B1070000 		.4byte	.LASF146
 1293 0965 02       		.uleb128 0x2
 1294 0966 04       		.byte	0x4
 1295 0967 04       		.byte	0x4
 1296 0968 59040000 		.4byte	.LASF147
 1297 096c 02       		.uleb128 0x2
 1298 096d 08       		.byte	0x8
 1299 096e 04       		.byte	0x4
 1300 096f C1100000 		.4byte	.LASF148
 1301 0973 10       		.uleb128 0x10
 1302 0974 04       		.byte	0x4
 1303 0975 9B000000 		.4byte	0x9b
 1304 0979 0B       		.byte	0xb
 1305 097a C701     		.2byte	0x1c7
 1306 097c 90090000 		.4byte	0x990
 1307 0980 11       		.uleb128 0x11
 1308 0981 BF040000 		.4byte	.LASF149
 1309 0985 00       		.byte	0
 1310 0986 12       		.uleb128 0x12
 1311 0987 6C0C0000 		.4byte	.LASF150
 1312 098b 00000040 		.4byte	0x40000000
 1313 098f 00       		.byte	0
 1314 0990 0F       		.uleb128 0xf
 1315 0991 3B050000 		.4byte	.LASF151
 1316 0995 0B       		.byte	0xb
 1317 0996 CA01     		.2byte	0x1ca
 1318 0998 73090000 		.4byte	0x973
 1319 099c 10       		.uleb128 0x10
 1320 099d 01       		.byte	0x1
 1321 099e 3E000000 		.4byte	0x3e
 1322 09a2 0B       		.byte	0xb
 1323 09a3 EA01     		.2byte	0x1ea
 1324 09a5 C2090000 		.4byte	0x9c2
 1325 09a9 11       		.uleb128 0x11
 1326 09aa E80D0000 		.4byte	.LASF152
 1327 09ae 00       		.byte	0
 1328 09af 11       		.uleb128 0x11
 1329 09b0 84040000 		.4byte	.LASF153
 1330 09b4 01       		.byte	0x1
 1331 09b5 11       		.uleb128 0x11
 1332 09b6 28060000 		.4byte	.LASF154
 1333 09ba 02       		.byte	0x2
 1334 09bb 11       		.uleb128 0x11
 1335 09bc 63080000 		.4byte	.LASF155
 1336 09c0 03       		.byte	0x3
 1337 09c1 00       		.byte	0
 1338 09c2 0F       		.uleb128 0xf
 1339 09c3 430A0000 		.4byte	.LASF156
 1340 09c7 0B       		.byte	0xb
 1341 09c8 EF01     		.2byte	0x1ef
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 79


 1342 09ca 9C090000 		.4byte	0x99c
 1343 09ce 10       		.uleb128 0x10
 1344 09cf 01       		.byte	0x1
 1345 09d0 3E000000 		.4byte	0x3e
 1346 09d4 0B       		.byte	0xb
 1347 09d5 F501     		.2byte	0x1f5
 1348 09d7 EE090000 		.4byte	0x9ee
 1349 09db 11       		.uleb128 0x11
 1350 09dc 98080000 		.4byte	.LASF157
 1351 09e0 00       		.byte	0
 1352 09e1 11       		.uleb128 0x11
 1353 09e2 300F0000 		.4byte	.LASF158
 1354 09e6 08       		.byte	0x8
 1355 09e7 11       		.uleb128 0x11
 1356 09e8 13020000 		.4byte	.LASF159
 1357 09ec 10       		.byte	0x10
 1358 09ed 00       		.byte	0
 1359 09ee 0F       		.uleb128 0xf
 1360 09ef 7F090000 		.4byte	.LASF160
 1361 09f3 0B       		.byte	0xb
 1362 09f4 F901     		.2byte	0x1f9
 1363 09f6 CE090000 		.4byte	0x9ce
 1364 09fa 10       		.uleb128 0x10
 1365 09fb 02       		.byte	0x2
 1366 09fc 5B000000 		.4byte	0x5b
 1367 0a00 0B       		.byte	0xb
 1368 0a01 0F02     		.2byte	0x20f
 1369 0a03 150A0000 		.4byte	0xa15
 1370 0a07 11       		.uleb128 0x11
 1371 0a08 FE060000 		.4byte	.LASF161
 1372 0a0c 00       		.byte	0
 1373 0a0d 13       		.uleb128 0x13
 1374 0a0e C80D0000 		.4byte	.LASF162
 1375 0a12 0008     		.2byte	0x800
 1376 0a14 00       		.byte	0
 1377 0a15 0F       		.uleb128 0xf
 1378 0a16 270E0000 		.4byte	.LASF163
 1379 0a1a 0B       		.byte	0xb
 1380 0a1b 1202     		.2byte	0x212
 1381 0a1d FA090000 		.4byte	0x9fa
 1382 0a21 10       		.uleb128 0x10
 1383 0a22 02       		.byte	0x2
 1384 0a23 5B000000 		.4byte	0x5b
 1385 0a27 0B       		.byte	0xb
 1386 0a28 1902     		.2byte	0x219
 1387 0a2a 4A0A0000 		.4byte	0xa4a
 1388 0a2e 11       		.uleb128 0x11
 1389 0a2f BE0E0000 		.4byte	.LASF164
 1390 0a33 00       		.byte	0
 1391 0a34 13       		.uleb128 0x13
 1392 0a35 BD010000 		.4byte	.LASF165
 1393 0a39 0001     		.2byte	0x100
 1394 0a3b 13       		.uleb128 0x13
 1395 0a3c 820F0000 		.4byte	.LASF166
 1396 0a40 0002     		.2byte	0x200
 1397 0a42 13       		.uleb128 0x13
 1398 0a43 98050000 		.4byte	.LASF167
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 80


 1399 0a47 0003     		.2byte	0x300
 1400 0a49 00       		.byte	0
 1401 0a4a 0F       		.uleb128 0xf
 1402 0a4b D6090000 		.4byte	.LASF168
 1403 0a4f 0B       		.byte	0xb
 1404 0a50 1E02     		.2byte	0x21e
 1405 0a52 210A0000 		.4byte	0xa21
 1406 0a56 10       		.uleb128 0x10
 1407 0a57 01       		.byte	0x1
 1408 0a58 3E000000 		.4byte	0x3e
 1409 0a5c 0B       		.byte	0xb
 1410 0a5d 2202     		.2byte	0x222
 1411 0a5f 700A0000 		.4byte	0xa70
 1412 0a63 11       		.uleb128 0x11
 1413 0a64 390D0000 		.4byte	.LASF169
 1414 0a68 00       		.byte	0
 1415 0a69 11       		.uleb128 0x11
 1416 0a6a 56110000 		.4byte	.LASF170
 1417 0a6e 80       		.byte	0x80
 1418 0a6f 00       		.byte	0
 1419 0a70 0F       		.uleb128 0xf
 1420 0a71 89070000 		.4byte	.LASF171
 1421 0a75 0B       		.byte	0xb
 1422 0a76 2502     		.2byte	0x225
 1423 0a78 560A0000 		.4byte	0xa56
 1424 0a7c 10       		.uleb128 0x10
 1425 0a7d 01       		.byte	0x1
 1426 0a7e 3E000000 		.4byte	0x3e
 1427 0a82 0B       		.byte	0xb
 1428 0a83 2902     		.2byte	0x229
 1429 0a85 960A0000 		.4byte	0xa96
 1430 0a89 11       		.uleb128 0x11
 1431 0a8a 67090000 		.4byte	.LASF172
 1432 0a8e 00       		.byte	0
 1433 0a8f 11       		.uleb128 0x11
 1434 0a90 F3080000 		.4byte	.LASF173
 1435 0a94 40       		.byte	0x40
 1436 0a95 00       		.byte	0
 1437 0a96 0F       		.uleb128 0xf
 1438 0a97 EE070000 		.4byte	.LASF174
 1439 0a9b 0B       		.byte	0xb
 1440 0a9c 2C02     		.2byte	0x22c
 1441 0a9e 7C0A0000 		.4byte	0xa7c
 1442 0aa2 10       		.uleb128 0x10
 1443 0aa3 01       		.byte	0x1
 1444 0aa4 3E000000 		.4byte	0x3e
 1445 0aa8 0B       		.byte	0xb
 1446 0aa9 3002     		.2byte	0x230
 1447 0aab BC0A0000 		.4byte	0xabc
 1448 0aaf 11       		.uleb128 0x11
 1449 0ab0 12070000 		.4byte	.LASF175
 1450 0ab4 00       		.byte	0
 1451 0ab5 11       		.uleb128 0x11
 1452 0ab6 78110000 		.4byte	.LASF176
 1453 0aba 20       		.byte	0x20
 1454 0abb 00       		.byte	0
 1455 0abc 0F       		.uleb128 0xf
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 81


 1456 0abd DB100000 		.4byte	.LASF177
 1457 0ac1 0B       		.byte	0xb
 1458 0ac2 3302     		.2byte	0x233
 1459 0ac4 A20A0000 		.4byte	0xaa2
 1460 0ac8 02       		.uleb128 0x2
 1461 0ac9 01       		.byte	0x1
 1462 0aca 02       		.byte	0x2
 1463 0acb 3C060000 		.4byte	.LASF178
 1464 0acf 14       		.uleb128 0x14
 1465 0ad0 10       		.byte	0x10
 1466 0ad1 0B       		.byte	0xb
 1467 0ad2 0503     		.2byte	0x305
 1468 0ad4 4E0B0000 		.4byte	0xb4e
 1469 0ad8 15       		.uleb128 0x15
 1470 0ad9 440C0000 		.4byte	.LASF179
 1471 0add 0B       		.byte	0xb
 1472 0ade 0603     		.2byte	0x306
 1473 0ae0 90090000 		.4byte	0x990
 1474 0ae4 00       		.byte	0
 1475 0ae5 15       		.uleb128 0x15
 1476 0ae6 A4040000 		.4byte	.LASF180
 1477 0aea 0B       		.byte	0xb
 1478 0aeb 0903     		.2byte	0x309
 1479 0aed C2090000 		.4byte	0x9c2
 1480 0af1 04       		.byte	0x4
 1481 0af2 15       		.uleb128 0x15
 1482 0af3 44110000 		.4byte	.LASF181
 1483 0af7 0B       		.byte	0xb
 1484 0af8 0A03     		.2byte	0x30a
 1485 0afa EE090000 		.4byte	0x9ee
 1486 0afe 05       		.byte	0x5
 1487 0aff 15       		.uleb128 0x15
 1488 0b00 1D0C0000 		.4byte	.LASF182
 1489 0b04 0B       		.byte	0xb
 1490 0b05 0B03     		.2byte	0x30b
 1491 0b07 150A0000 		.4byte	0xa15
 1492 0b0b 06       		.byte	0x6
 1493 0b0c 15       		.uleb128 0x15
 1494 0b0d B70F0000 		.4byte	.LASF183
 1495 0b11 0B       		.byte	0xb
 1496 0b12 0C03     		.2byte	0x30c
 1497 0b14 4A0A0000 		.4byte	0xa4a
 1498 0b18 08       		.byte	0x8
 1499 0b19 15       		.uleb128 0x15
 1500 0b1a 31010000 		.4byte	.LASF184
 1501 0b1e 0B       		.byte	0xb
 1502 0b1f 0D03     		.2byte	0x30d
 1503 0b21 700A0000 		.4byte	0xa70
 1504 0b25 0A       		.byte	0xa
 1505 0b26 15       		.uleb128 0x15
 1506 0b27 230A0000 		.4byte	.LASF185
 1507 0b2b 0B       		.byte	0xb
 1508 0b2c 0E03     		.2byte	0x30e
 1509 0b2e 960A0000 		.4byte	0xa96
 1510 0b32 0B       		.byte	0xb
 1511 0b33 15       		.uleb128 0x15
 1512 0b34 BD060000 		.4byte	.LASF186
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 82


 1513 0b38 0B       		.byte	0xb
 1514 0b39 0F03     		.2byte	0x30f
 1515 0b3b BC0A0000 		.4byte	0xabc
 1516 0b3f 0C       		.byte	0xc
 1517 0b40 15       		.uleb128 0x15
 1518 0b41 910C0000 		.4byte	.LASF187
 1519 0b45 0B       		.byte	0xb
 1520 0b46 1003     		.2byte	0x310
 1521 0b48 C80A0000 		.4byte	0xac8
 1522 0b4c 0D       		.byte	0xd
 1523 0b4d 00       		.byte	0
 1524 0b4e 0F       		.uleb128 0xf
 1525 0b4f D40B0000 		.4byte	.LASF188
 1526 0b53 0B       		.byte	0xb
 1527 0b54 1103     		.2byte	0x311
 1528 0b56 CF0A0000 		.4byte	0xacf
 1529 0b5a 10       		.uleb128 0x10
 1530 0b5b 04       		.byte	0x4
 1531 0b5c 9B000000 		.4byte	0x9b
 1532 0b60 03       		.byte	0x3
 1533 0b61 5102     		.2byte	0x251
 1534 0b63 890B0000 		.4byte	0xb89
 1535 0b67 11       		.uleb128 0x11
 1536 0b68 82010000 		.4byte	.LASF189
 1537 0b6c 00       		.byte	0
 1538 0b6d 12       		.uleb128 0x12
 1539 0b6e 150B0000 		.4byte	.LASF190
 1540 0b72 01004A00 		.4byte	0x4a0001
 1541 0b76 12       		.uleb128 0x12
 1542 0b77 1F010000 		.4byte	.LASF191
 1543 0b7b 02004A00 		.4byte	0x4a0002
 1544 0b7f 12       		.uleb128 0x12
 1545 0b80 A80A0000 		.4byte	.LASF192
 1546 0b84 03004A00 		.4byte	0x4a0003
 1547 0b88 00       		.byte	0
 1548 0b89 0F       		.uleb128 0xf
 1549 0b8a F0050000 		.4byte	.LASF193
 1550 0b8e 03       		.byte	0x3
 1551 0b8f 5602     		.2byte	0x256
 1552 0b91 5A0B0000 		.4byte	0xb5a
 1553 0b95 10       		.uleb128 0x10
 1554 0b96 01       		.byte	0x1
 1555 0b97 3E000000 		.4byte	0x3e
 1556 0b9b 03       		.byte	0x3
 1557 0b9c 1607     		.2byte	0x716
 1558 0b9e BB0B0000 		.4byte	0xbbb
 1559 0ba2 11       		.uleb128 0x11
 1560 0ba3 C5000000 		.4byte	.LASF194
 1561 0ba7 00       		.byte	0
 1562 0ba8 11       		.uleb128 0x11
 1563 0ba9 D90A0000 		.4byte	.LASF195
 1564 0bad 01       		.byte	0x1
 1565 0bae 11       		.uleb128 0x11
 1566 0baf 010A0000 		.4byte	.LASF196
 1567 0bb3 02       		.byte	0x2
 1568 0bb4 11       		.uleb128 0x11
 1569 0bb5 D70E0000 		.4byte	.LASF197
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 83


 1570 0bb9 03       		.byte	0x3
 1571 0bba 00       		.byte	0
 1572 0bbb 0F       		.uleb128 0xf
 1573 0bbc 5E0F0000 		.4byte	.LASF198
 1574 0bc0 03       		.byte	0x3
 1575 0bc1 1B07     		.2byte	0x71b
 1576 0bc3 950B0000 		.4byte	0xb95
 1577 0bc7 10       		.uleb128 0x10
 1578 0bc8 01       		.byte	0x1
 1579 0bc9 3E000000 		.4byte	0x3e
 1580 0bcd 04       		.byte	0x4
 1581 0bce B101     		.2byte	0x1b1
 1582 0bd0 F30B0000 		.4byte	0xbf3
 1583 0bd4 11       		.uleb128 0x11
 1584 0bd5 EE0E0000 		.4byte	.LASF199
 1585 0bd9 00       		.byte	0
 1586 0bda 11       		.uleb128 0x11
 1587 0bdb 42060000 		.4byte	.LASF200
 1588 0bdf 01       		.byte	0x1
 1589 0be0 11       		.uleb128 0x11
 1590 0be1 C8060000 		.4byte	.LASF201
 1591 0be5 02       		.byte	0x2
 1592 0be6 11       		.uleb128 0x11
 1593 0be7 ED010000 		.4byte	.LASF202
 1594 0beb 03       		.byte	0x3
 1595 0bec 11       		.uleb128 0x11
 1596 0bed 7E0D0000 		.4byte	.LASF203
 1597 0bf1 04       		.byte	0x4
 1598 0bf2 00       		.byte	0
 1599 0bf3 0F       		.uleb128 0xf
 1600 0bf4 EC090000 		.4byte	.LASF204
 1601 0bf8 04       		.byte	0x4
 1602 0bf9 B701     		.2byte	0x1b7
 1603 0bfb C70B0000 		.4byte	0xbc7
 1604 0bff 10       		.uleb128 0x10
 1605 0c00 04       		.byte	0x4
 1606 0c01 9B000000 		.4byte	0x9b
 1607 0c05 04       		.byte	0x4
 1608 0c06 BC01     		.2byte	0x1bc
 1609 0c08 1C0C0000 		.4byte	0xc1c
 1610 0c0c 11       		.uleb128 0x11
 1611 0c0d 36080000 		.4byte	.LASF205
 1612 0c11 00       		.byte	0
 1613 0c12 12       		.uleb128 0x12
 1614 0c13 5F000000 		.4byte	.LASF206
 1615 0c17 00000001 		.4byte	0x1000000
 1616 0c1b 00       		.byte	0
 1617 0c1c 0F       		.uleb128 0xf
 1618 0c1d 7B100000 		.4byte	.LASF207
 1619 0c21 04       		.byte	0x4
 1620 0c22 BF01     		.2byte	0x1bf
 1621 0c24 FF0B0000 		.4byte	0xbff
 1622 0c28 10       		.uleb128 0x10
 1623 0c29 04       		.byte	0x4
 1624 0c2a 9B000000 		.4byte	0x9b
 1625 0c2e 04       		.byte	0x4
 1626 0c2f C401     		.2byte	0x1c4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 84


 1627 0c31 450C0000 		.4byte	0xc45
 1628 0c35 11       		.uleb128 0x11
 1629 0c36 13080000 		.4byte	.LASF208
 1630 0c3a 00       		.byte	0
 1631 0c3b 12       		.uleb128 0x12
 1632 0c3c 78050000 		.4byte	.LASF209
 1633 0c40 00000040 		.4byte	0x40000000
 1634 0c44 00       		.byte	0
 1635 0c45 0F       		.uleb128 0xf
 1636 0c46 A8100000 		.4byte	.LASF210
 1637 0c4a 04       		.byte	0x4
 1638 0c4b C701     		.2byte	0x1c7
 1639 0c4d 280C0000 		.4byte	0xc28
 1640 0c51 10       		.uleb128 0x10
 1641 0c52 04       		.byte	0x4
 1642 0c53 9B000000 		.4byte	0x9b
 1643 0c57 04       		.byte	0x4
 1644 0c58 CC01     		.2byte	0x1cc
 1645 0c5a 890C0000 		.4byte	0xc89
 1646 0c5e 11       		.uleb128 0x11
 1647 0c5f 6D030000 		.4byte	.LASF211
 1648 0c63 00       		.byte	0
 1649 0c64 12       		.uleb128 0x12
 1650 0c65 25050000 		.4byte	.LASF212
 1651 0c69 00004000 		.4byte	0x400000
 1652 0c6d 12       		.uleb128 0x12
 1653 0c6e 38040000 		.4byte	.LASF213
 1654 0c72 0000C000 		.4byte	0xc00000
 1655 0c76 12       		.uleb128 0x12
 1656 0c77 8D030000 		.4byte	.LASF214
 1657 0c7b 00000008 		.4byte	0x8000000
 1658 0c7f 12       		.uleb128 0x12
 1659 0c80 0B0F0000 		.4byte	.LASF215
 1660 0c84 00008008 		.4byte	0x8800000
 1661 0c88 00       		.byte	0
 1662 0c89 0F       		.uleb128 0xf
 1663 0c8a FC0C0000 		.4byte	.LASF216
 1664 0c8e 04       		.byte	0x4
 1665 0c8f D401     		.2byte	0x1d4
 1666 0c91 510C0000 		.4byte	0xc51
 1667 0c95 10       		.uleb128 0x10
 1668 0c96 02       		.byte	0x2
 1669 0c97 5B000000 		.4byte	0x5b
 1670 0c9b 04       		.byte	0x4
 1671 0c9c DA01     		.2byte	0x1da
 1672 0c9e BE0C0000 		.4byte	0xcbe
 1673 0ca2 11       		.uleb128 0x11
 1674 0ca3 F50F0000 		.4byte	.LASF217
 1675 0ca7 00       		.byte	0
 1676 0ca8 13       		.uleb128 0x13
 1677 0ca9 61060000 		.4byte	.LASF218
 1678 0cad 0001     		.2byte	0x100
 1679 0caf 13       		.uleb128 0x13
 1680 0cb0 8D0B0000 		.4byte	.LASF219
 1681 0cb4 0002     		.2byte	0x200
 1682 0cb6 13       		.uleb128 0x13
 1683 0cb7 60100000 		.4byte	.LASF220
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 85


 1684 0cbb 0003     		.2byte	0x300
 1685 0cbd 00       		.byte	0
 1686 0cbe 0F       		.uleb128 0xf
 1687 0cbf 61010000 		.4byte	.LASF221
 1688 0cc3 04       		.byte	0x4
 1689 0cc4 E001     		.2byte	0x1e0
 1690 0cc6 950C0000 		.4byte	0xc95
 1691 0cca 10       		.uleb128 0x10
 1692 0ccb 01       		.byte	0x1
 1693 0ccc 3E000000 		.4byte	0x3e
 1694 0cd0 04       		.byte	0x4
 1695 0cd1 E701     		.2byte	0x1e7
 1696 0cd3 E40C0000 		.4byte	0xce4
 1697 0cd7 11       		.uleb128 0x11
 1698 0cd8 C2050000 		.4byte	.LASF222
 1699 0cdc 00       		.byte	0
 1700 0cdd 11       		.uleb128 0x11
 1701 0cde B0090000 		.4byte	.LASF223
 1702 0ce2 01       		.byte	0x1
 1703 0ce3 00       		.byte	0
 1704 0ce4 0F       		.uleb128 0xf
 1705 0ce5 740A0000 		.4byte	.LASF224
 1706 0ce9 04       		.byte	0x4
 1707 0cea EA01     		.2byte	0x1ea
 1708 0cec CA0C0000 		.4byte	0xcca
 1709 0cf0 10       		.uleb128 0x10
 1710 0cf1 01       		.byte	0x1
 1711 0cf2 3E000000 		.4byte	0x3e
 1712 0cf6 04       		.byte	0x4
 1713 0cf7 F101     		.2byte	0x1f1
 1714 0cf9 0A0D0000 		.4byte	0xd0a
 1715 0cfd 11       		.uleb128 0x11
 1716 0cfe 99000000 		.4byte	.LASF225
 1717 0d02 00       		.byte	0
 1718 0d03 11       		.uleb128 0x11
 1719 0d04 AC0B0000 		.4byte	.LASF226
 1720 0d08 01       		.byte	0x1
 1721 0d09 00       		.byte	0
 1722 0d0a 0F       		.uleb128 0xf
 1723 0d0b EB030000 		.4byte	.LASF227
 1724 0d0f 04       		.byte	0x4
 1725 0d10 F401     		.2byte	0x1f4
 1726 0d12 F00C0000 		.4byte	0xcf0
 1727 0d16 14       		.uleb128 0x14
 1728 0d17 34       		.byte	0x34
 1729 0d18 04       		.byte	0x4
 1730 0d19 1702     		.2byte	0x217
 1731 0d1b F00D0000 		.4byte	0xdf0
 1732 0d1f 15       		.uleb128 0x15
 1733 0d20 83030000 		.4byte	.LASF228
 1734 0d24 04       		.byte	0x4
 1735 0d25 1902     		.2byte	0x219
 1736 0d27 E40C0000 		.4byte	0xce4
 1737 0d2b 00       		.byte	0
 1738 0d2c 15       		.uleb128 0x15
 1739 0d2d 9B0F0000 		.4byte	.LASF229
 1740 0d31 04       		.byte	0x4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 86


 1741 0d32 1A02     		.2byte	0x21a
 1742 0d34 1C0C0000 		.4byte	0xc1c
 1743 0d38 04       		.byte	0x4
 1744 0d39 15       		.uleb128 0x15
 1745 0d3a 180A0000 		.4byte	.LASF230
 1746 0d3e 04       		.byte	0x4
 1747 0d3f 1B02     		.2byte	0x21b
 1748 0d41 F30B0000 		.4byte	0xbf3
 1749 0d45 08       		.byte	0x8
 1750 0d46 15       		.uleb128 0x15
 1751 0d47 DB0D0000 		.4byte	.LASF231
 1752 0d4b 04       		.byte	0x4
 1753 0d4c 1C02     		.2byte	0x21c
 1754 0d4e BE0C0000 		.4byte	0xcbe
 1755 0d52 0A       		.byte	0xa
 1756 0d53 15       		.uleb128 0x15
 1757 0d54 450F0000 		.4byte	.LASF232
 1758 0d58 04       		.byte	0x4
 1759 0d59 1D02     		.2byte	0x21d
 1760 0d5b 890C0000 		.4byte	0xc89
 1761 0d5f 0C       		.byte	0xc
 1762 0d60 15       		.uleb128 0x15
 1763 0d61 380E0000 		.4byte	.LASF233
 1764 0d65 04       		.byte	0x4
 1765 0d66 1E02     		.2byte	0x21e
 1766 0d68 0A0D0000 		.4byte	0xd0a
 1767 0d6c 10       		.byte	0x10
 1768 0d6d 15       		.uleb128 0x15
 1769 0d6e 440C0000 		.4byte	.LASF179
 1770 0d72 04       		.byte	0x4
 1771 0d73 1F02     		.2byte	0x21f
 1772 0d75 450C0000 		.4byte	0xc45
 1773 0d79 14       		.byte	0x14
 1774 0d7a 15       		.uleb128 0x15
 1775 0d7b 9F020000 		.4byte	.LASF234
 1776 0d7f 04       		.byte	0x4
 1777 0d80 2002     		.2byte	0x220
 1778 0d82 CE000000 		.4byte	0xce
 1779 0d86 18       		.byte	0x18
 1780 0d87 15       		.uleb128 0x15
 1781 0d88 92050000 		.4byte	.LASF235
 1782 0d8c 04       		.byte	0x4
 1783 0d8d 2102     		.2byte	0x221
 1784 0d8f C3000000 		.4byte	0xc3
 1785 0d93 1C       		.byte	0x1c
 1786 0d94 15       		.uleb128 0x15
 1787 0d95 62020000 		.4byte	.LASF236
 1788 0d99 04       		.byte	0x4
 1789 0d9a 2202     		.2byte	0x222
 1790 0d9c C3000000 		.4byte	0xc3
 1791 0da0 20       		.byte	0x20
 1792 0da1 15       		.uleb128 0x15
 1793 0da2 68050000 		.4byte	.LASF237
 1794 0da6 04       		.byte	0x4
 1795 0da7 2302     		.2byte	0x223
 1796 0da9 C80A0000 		.4byte	0xac8
 1797 0dad 24       		.byte	0x24
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 87


 1798 0dae 15       		.uleb128 0x15
 1799 0daf 33020000 		.4byte	.LASF238
 1800 0db3 04       		.byte	0x4
 1801 0db4 2602     		.2byte	0x226
 1802 0db6 C80A0000 		.4byte	0xac8
 1803 0dba 25       		.byte	0x25
 1804 0dbb 15       		.uleb128 0x15
 1805 0dbc BE070000 		.4byte	.LASF239
 1806 0dc0 04       		.byte	0x4
 1807 0dc1 2702     		.2byte	0x227
 1808 0dc3 BB0B0000 		.4byte	0xbbb
 1809 0dc7 26       		.byte	0x26
 1810 0dc8 15       		.uleb128 0x15
 1811 0dc9 52050000 		.4byte	.LASF240
 1812 0dcd 04       		.byte	0x4
 1813 0dce 2802     		.2byte	0x228
 1814 0dd0 CE000000 		.4byte	0xce
 1815 0dd4 28       		.byte	0x28
 1816 0dd5 15       		.uleb128 0x15
 1817 0dd6 5D070000 		.4byte	.LASF241
 1818 0dda 04       		.byte	0x4
 1819 0ddb 2902     		.2byte	0x229
 1820 0ddd CE000000 		.4byte	0xce
 1821 0de1 2C       		.byte	0x2c
 1822 0de2 15       		.uleb128 0x15
 1823 0de3 DA030000 		.4byte	.LASF242
 1824 0de7 04       		.byte	0x4
 1825 0de8 2A02     		.2byte	0x22a
 1826 0dea CE000000 		.4byte	0xce
 1827 0dee 30       		.byte	0x30
 1828 0def 00       		.byte	0
 1829 0df0 0F       		.uleb128 0xf
 1830 0df1 D30F0000 		.4byte	.LASF243
 1831 0df5 04       		.byte	0x4
 1832 0df6 2B02     		.2byte	0x22b
 1833 0df8 160D0000 		.4byte	0xd16
 1834 0dfc 16       		.uleb128 0x16
 1835 0dfd 14000000 		.4byte	.LASF247
 1836 0e01 04       		.byte	0x4
 1837 0e02 2D03     		.2byte	0x32d
 1838 0e04 03       		.byte	0x3
 1839 0e05 220E0000 		.4byte	0xe22
 1840 0e09 17       		.uleb128 0x17
 1841 0e0a 7F040000 		.4byte	.LASF244
 1842 0e0e 04       		.byte	0x4
 1843 0e0f 2D03     		.2byte	0x32d
 1844 0e11 220E0000 		.4byte	0xe22
 1845 0e15 17       		.uleb128 0x17
 1846 0e16 92050000 		.4byte	.LASF235
 1847 0e1a 04       		.byte	0x4
 1848 0e1b 2D03     		.2byte	0x32d
 1849 0e1d C3000000 		.4byte	0xc3
 1850 0e21 00       		.byte	0
 1851 0e22 18       		.uleb128 0x18
 1852 0e23 04       		.byte	0x4
 1853 0e24 2F050000 		.4byte	0x52f
 1854 0e28 19       		.uleb128 0x19
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 88


 1855 0e29 A2030000 		.4byte	.LASF245
 1856 0e2d 02       		.byte	0x2
 1857 0e2e 81       		.byte	0x81
 1858 0e2f 03       		.byte	0x3
 1859 0e30 19       		.uleb128 0x19
 1860 0e31 24020000 		.4byte	.LASF246
 1861 0e35 0C       		.byte	0xc
 1862 0e36 3C       		.byte	0x3c
 1863 0e37 03       		.byte	0x3
 1864 0e38 16       		.uleb128 0x16
 1865 0e39 D5010000 		.4byte	.LASF248
 1866 0e3d 0D       		.byte	0xd
 1867 0e3e 3A01     		.2byte	0x13a
 1868 0e40 03       		.byte	0x3
 1869 0e41 520E0000 		.4byte	0xe52
 1870 0e45 17       		.uleb128 0x17
 1871 0e46 92050000 		.4byte	.LASF235
 1872 0e4a 0D       		.byte	0xd
 1873 0e4b 3A01     		.2byte	0x13a
 1874 0e4d C3000000 		.4byte	0xc3
 1875 0e51 00       		.byte	0
 1876 0e52 1A       		.uleb128 0x1a
 1877 0e53 4E0C0000 		.4byte	.LASF256
 1878 0e57 03       		.byte	0x3
 1879 0e58 3E08     		.2byte	0x83e
 1880 0e5a 890B0000 		.4byte	0xb89
 1881 0e5e 03       		.byte	0x3
 1882 0e5f 880E0000 		.4byte	0xe88
 1883 0e63 17       		.uleb128 0x17
 1884 0e64 BE070000 		.4byte	.LASF239
 1885 0e68 03       		.byte	0x3
 1886 0e69 3E08     		.2byte	0x83e
 1887 0e6b BB0B0000 		.4byte	0xbbb
 1888 0e6f 17       		.uleb128 0x17
 1889 0e70 52050000 		.4byte	.LASF240
 1890 0e74 03       		.byte	0x3
 1891 0e75 3E08     		.2byte	0x83e
 1892 0e77 CE000000 		.4byte	0xce
 1893 0e7b 1B       		.uleb128 0x1b
 1894 0e7c AD0D0000 		.4byte	.LASF257
 1895 0e80 03       		.byte	0x3
 1896 0e81 4008     		.2byte	0x840
 1897 0e83 890B0000 		.4byte	0xb89
 1898 0e87 00       		.byte	0
 1899 0e88 1C       		.uleb128 0x1c
 1900 0e89 4B100000 		.4byte	.LASF258
 1901 0e8d 01       		.byte	0x1
 1902 0e8e 0E       		.byte	0xe
 1903 0e8f 94000000 		.4byte	0x94
 1904 0e93 00000000 		.4byte	.LFB375
 1905 0e97 5C000000 		.4byte	.LFE375-.LFB375
 1906 0e9b 01       		.uleb128 0x1
 1907 0e9c 9C       		.byte	0x9c
 1908 0e9d 4A0F0000 		.4byte	0xf4a
 1909 0ea1 1D       		.uleb128 0x1d
 1910 0ea2 92050000 		.4byte	.LASF235
 1911 0ea6 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 89


 1912 0ea7 13       		.byte	0x13
 1913 0ea8 C3000000 		.4byte	0xc3
 1914 0eac 01       		.uleb128 0x1
 1915 0ead 53       		.byte	0x53
 1916 0eae 1E       		.uleb128 0x1e
 1917 0eaf 280E0000 		.4byte	0xe28
 1918 0eb3 02000000 		.4byte	.LBB23
 1919 0eb7 02000000 		.4byte	.LBE23-.LBB23
 1920 0ebb 01       		.byte	0x1
 1921 0ebc 10       		.byte	0x10
 1922 0ebd 1F       		.uleb128 0x1f
 1923 0ebe 300E0000 		.4byte	0xe30
 1924 0ec2 08000000 		.4byte	.LBB25
 1925 0ec6 2C000000 		.4byte	.LBE25-.LBB25
 1926 0eca 01       		.byte	0x1
 1927 0ecb 12       		.byte	0x12
 1928 0ecc 000F0000 		.4byte	0xf00
 1929 0ed0 20       		.uleb128 0x20
 1930 0ed1 520E0000 		.4byte	0xe52
 1931 0ed5 08000000 		.4byte	.LBB26
 1932 0ed9 2C000000 		.4byte	.LBE26-.LBB26
 1933 0edd 0C       		.byte	0xc
 1934 0ede 3E       		.byte	0x3e
 1935 0edf 21       		.uleb128 0x21
 1936 0ee0 6F0E0000 		.4byte	0xe6f
 1937 0ee4 00       		.byte	0
 1938 0ee5 21       		.uleb128 0x21
 1939 0ee6 630E0000 		.4byte	0xe63
 1940 0eea 00       		.byte	0
 1941 0eeb 22       		.uleb128 0x22
 1942 0eec 08000000 		.4byte	.LBB27
 1943 0ef0 2C000000 		.4byte	.LBE27-.LBB27
 1944 0ef4 23       		.uleb128 0x23
 1945 0ef5 7B0E0000 		.4byte	0xe7b
 1946 0ef9 00000000 		.4byte	.LLST0
 1947 0efd 00       		.byte	0
 1948 0efe 00       		.byte	0
 1949 0eff 00       		.byte	0
 1950 0f00 1F       		.uleb128 0x1f
 1951 0f01 380E0000 		.4byte	0xe38
 1952 0f05 3A000000 		.4byte	.LBB28
 1953 0f09 0A000000 		.4byte	.LBE28-.LBB28
 1954 0f0d 01       		.byte	0x1
 1955 0f0e 19       		.byte	0x19
 1956 0f0f 400F0000 		.4byte	0xf40
 1957 0f13 24       		.uleb128 0x24
 1958 0f14 450E0000 		.4byte	0xe45
 1959 0f18 24000000 		.4byte	.LLST1
 1960 0f1c 25       		.uleb128 0x25
 1961 0f1d FC0D0000 		.4byte	0xdfc
 1962 0f21 3A000000 		.4byte	.LBB29
 1963 0f25 0A000000 		.4byte	.LBE29-.LBB29
 1964 0f29 0D       		.byte	0xd
 1965 0f2a 3C01     		.2byte	0x13c
 1966 0f2c 24       		.uleb128 0x24
 1967 0f2d 150E0000 		.4byte	0xe15
 1968 0f31 24000000 		.4byte	.LLST1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 90


 1969 0f35 24       		.uleb128 0x24
 1970 0f36 090E0000 		.4byte	0xe09
 1971 0f3a 37000000 		.4byte	.LLST3
 1972 0f3e 00       		.byte	0
 1973 0f3f 00       		.byte	0
 1974 0f40 26       		.uleb128 0x26
 1975 0f41 08000000 		.4byte	.LVL0
 1976 0f45 910F0000 		.4byte	0xf91
 1977 0f49 00       		.byte	0
 1978 0f4a 27       		.uleb128 0x27
 1979 0f4b 040C0000 		.4byte	.LASF249
 1980 0f4f 0E       		.byte	0xe
 1981 0f50 F907     		.2byte	0x7f9
 1982 0f52 560F0000 		.4byte	0xf56
 1983 0f56 05       		.uleb128 0x5
 1984 0f57 C3000000 		.4byte	0xc3
 1985 0f5b 28       		.uleb128 0x28
 1986 0f5c 55000000 		.4byte	.LASF250
 1987 0f60 0A       		.byte	0xa
 1988 0f61 A7       		.byte	0xa7
 1989 0f62 660F0000 		.4byte	0xf66
 1990 0f66 18       		.uleb128 0x18
 1991 0f67 04       		.byte	0x4
 1992 0f68 6C0F0000 		.4byte	0xf6c
 1993 0f6c 06       		.uleb128 0x6
 1994 0f6d 53090000 		.4byte	0x953
 1995 0f71 28       		.uleb128 0x28
 1996 0f72 DB070000 		.4byte	.LASF251
 1997 0f76 0D       		.byte	0xd
 1998 0f77 5A       		.byte	0x5a
 1999 0f78 7C0F0000 		.4byte	0xf7c
 2000 0f7c 06       		.uleb128 0x6
 2001 0f7d F00D0000 		.4byte	0xdf0
 2002 0f81 28       		.uleb128 0x28
 2003 0f82 BD0C0000 		.4byte	.LASF252
 2004 0f86 0D       		.byte	0xd
 2005 0f87 5E       		.byte	0x5e
 2006 0f88 8C0F0000 		.4byte	0xf8c
 2007 0f8c 06       		.uleb128 0x6
 2008 0f8d 4E0B0000 		.4byte	0xb4e
 2009 0f91 29       		.uleb128 0x29
 2010 0f92 840C0000 		.4byte	.LASF259
 2011 0f96 840C0000 		.4byte	.LASF259
 2012 0f9a 0D       		.byte	0xd
 2013 0f9b BA       		.byte	0xba
 2014 0f9c 00       		.byte	0
 2015              		.section	.debug_abbrev,"",%progbits
 2016              	.Ldebug_abbrev0:
 2017 0000 01       		.uleb128 0x1
 2018 0001 11       		.uleb128 0x11
 2019 0002 01       		.byte	0x1
 2020 0003 25       		.uleb128 0x25
 2021 0004 0E       		.uleb128 0xe
 2022 0005 13       		.uleb128 0x13
 2023 0006 0B       		.uleb128 0xb
 2024 0007 03       		.uleb128 0x3
 2025 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 91


 2026 0009 1B       		.uleb128 0x1b
 2027 000a 0E       		.uleb128 0xe
 2028 000b 55       		.uleb128 0x55
 2029 000c 17       		.uleb128 0x17
 2030 000d 11       		.uleb128 0x11
 2031 000e 01       		.uleb128 0x1
 2032 000f 10       		.uleb128 0x10
 2033 0010 17       		.uleb128 0x17
 2034 0011 00       		.byte	0
 2035 0012 00       		.byte	0
 2036 0013 02       		.uleb128 0x2
 2037 0014 24       		.uleb128 0x24
 2038 0015 00       		.byte	0
 2039 0016 0B       		.uleb128 0xb
 2040 0017 0B       		.uleb128 0xb
 2041 0018 3E       		.uleb128 0x3e
 2042 0019 0B       		.uleb128 0xb
 2043 001a 03       		.uleb128 0x3
 2044 001b 0E       		.uleb128 0xe
 2045 001c 00       		.byte	0
 2046 001d 00       		.byte	0
 2047 001e 03       		.uleb128 0x3
 2048 001f 16       		.uleb128 0x16
 2049 0020 00       		.byte	0
 2050 0021 03       		.uleb128 0x3
 2051 0022 0E       		.uleb128 0xe
 2052 0023 3A       		.uleb128 0x3a
 2053 0024 0B       		.uleb128 0xb
 2054 0025 3B       		.uleb128 0x3b
 2055 0026 0B       		.uleb128 0xb
 2056 0027 49       		.uleb128 0x49
 2057 0028 13       		.uleb128 0x13
 2058 0029 00       		.byte	0
 2059 002a 00       		.byte	0
 2060 002b 04       		.uleb128 0x4
 2061 002c 24       		.uleb128 0x24
 2062 002d 00       		.byte	0
 2063 002e 0B       		.uleb128 0xb
 2064 002f 0B       		.uleb128 0xb
 2065 0030 3E       		.uleb128 0x3e
 2066 0031 0B       		.uleb128 0xb
 2067 0032 03       		.uleb128 0x3
 2068 0033 08       		.uleb128 0x8
 2069 0034 00       		.byte	0
 2070 0035 00       		.byte	0
 2071 0036 05       		.uleb128 0x5
 2072 0037 35       		.uleb128 0x35
 2073 0038 00       		.byte	0
 2074 0039 49       		.uleb128 0x49
 2075 003a 13       		.uleb128 0x13
 2076 003b 00       		.byte	0
 2077 003c 00       		.byte	0
 2078 003d 06       		.uleb128 0x6
 2079 003e 26       		.uleb128 0x26
 2080 003f 00       		.byte	0
 2081 0040 49       		.uleb128 0x49
 2082 0041 13       		.uleb128 0x13
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 92


 2083 0042 00       		.byte	0
 2084 0043 00       		.byte	0
 2085 0044 07       		.uleb128 0x7
 2086 0045 01       		.uleb128 0x1
 2087 0046 01       		.byte	0x1
 2088 0047 49       		.uleb128 0x49
 2089 0048 13       		.uleb128 0x13
 2090 0049 01       		.uleb128 0x1
 2091 004a 13       		.uleb128 0x13
 2092 004b 00       		.byte	0
 2093 004c 00       		.byte	0
 2094 004d 08       		.uleb128 0x8
 2095 004e 21       		.uleb128 0x21
 2096 004f 00       		.byte	0
 2097 0050 49       		.uleb128 0x49
 2098 0051 13       		.uleb128 0x13
 2099 0052 2F       		.uleb128 0x2f
 2100 0053 0B       		.uleb128 0xb
 2101 0054 00       		.byte	0
 2102 0055 00       		.byte	0
 2103 0056 09       		.uleb128 0x9
 2104 0057 13       		.uleb128 0x13
 2105 0058 01       		.byte	0x1
 2106 0059 0B       		.uleb128 0xb
 2107 005a 0B       		.uleb128 0xb
 2108 005b 3A       		.uleb128 0x3a
 2109 005c 0B       		.uleb128 0xb
 2110 005d 3B       		.uleb128 0x3b
 2111 005e 0B       		.uleb128 0xb
 2112 005f 01       		.uleb128 0x1
 2113 0060 13       		.uleb128 0x13
 2114 0061 00       		.byte	0
 2115 0062 00       		.byte	0
 2116 0063 0A       		.uleb128 0xa
 2117 0064 0D       		.uleb128 0xd
 2118 0065 00       		.byte	0
 2119 0066 03       		.uleb128 0x3
 2120 0067 0E       		.uleb128 0xe
 2121 0068 3A       		.uleb128 0x3a
 2122 0069 0B       		.uleb128 0xb
 2123 006a 3B       		.uleb128 0x3b
 2124 006b 0B       		.uleb128 0xb
 2125 006c 49       		.uleb128 0x49
 2126 006d 13       		.uleb128 0x13
 2127 006e 38       		.uleb128 0x38
 2128 006f 0B       		.uleb128 0xb
 2129 0070 00       		.byte	0
 2130 0071 00       		.byte	0
 2131 0072 0B       		.uleb128 0xb
 2132 0073 13       		.uleb128 0x13
 2133 0074 01       		.byte	0x1
 2134 0075 0B       		.uleb128 0xb
 2135 0076 05       		.uleb128 0x5
 2136 0077 3A       		.uleb128 0x3a
 2137 0078 0B       		.uleb128 0xb
 2138 0079 3B       		.uleb128 0x3b
 2139 007a 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 93


 2140 007b 01       		.uleb128 0x1
 2141 007c 13       		.uleb128 0x13
 2142 007d 00       		.byte	0
 2143 007e 00       		.byte	0
 2144 007f 0C       		.uleb128 0xc
 2145 0080 0D       		.uleb128 0xd
 2146 0081 00       		.byte	0
 2147 0082 03       		.uleb128 0x3
 2148 0083 08       		.uleb128 0x8
 2149 0084 3A       		.uleb128 0x3a
 2150 0085 0B       		.uleb128 0xb
 2151 0086 3B       		.uleb128 0x3b
 2152 0087 0B       		.uleb128 0xb
 2153 0088 49       		.uleb128 0x49
 2154 0089 13       		.uleb128 0x13
 2155 008a 38       		.uleb128 0x38
 2156 008b 0B       		.uleb128 0xb
 2157 008c 00       		.byte	0
 2158 008d 00       		.byte	0
 2159 008e 0D       		.uleb128 0xd
 2160 008f 0D       		.uleb128 0xd
 2161 0090 00       		.byte	0
 2162 0091 03       		.uleb128 0x3
 2163 0092 0E       		.uleb128 0xe
 2164 0093 3A       		.uleb128 0x3a
 2165 0094 0B       		.uleb128 0xb
 2166 0095 3B       		.uleb128 0x3b
 2167 0096 0B       		.uleb128 0xb
 2168 0097 49       		.uleb128 0x49
 2169 0098 13       		.uleb128 0x13
 2170 0099 38       		.uleb128 0x38
 2171 009a 05       		.uleb128 0x5
 2172 009b 00       		.byte	0
 2173 009c 00       		.byte	0
 2174 009d 0E       		.uleb128 0xe
 2175 009e 21       		.uleb128 0x21
 2176 009f 00       		.byte	0
 2177 00a0 49       		.uleb128 0x49
 2178 00a1 13       		.uleb128 0x13
 2179 00a2 2F       		.uleb128 0x2f
 2180 00a3 05       		.uleb128 0x5
 2181 00a4 00       		.byte	0
 2182 00a5 00       		.byte	0
 2183 00a6 0F       		.uleb128 0xf
 2184 00a7 16       		.uleb128 0x16
 2185 00a8 00       		.byte	0
 2186 00a9 03       		.uleb128 0x3
 2187 00aa 0E       		.uleb128 0xe
 2188 00ab 3A       		.uleb128 0x3a
 2189 00ac 0B       		.uleb128 0xb
 2190 00ad 3B       		.uleb128 0x3b
 2191 00ae 05       		.uleb128 0x5
 2192 00af 49       		.uleb128 0x49
 2193 00b0 13       		.uleb128 0x13
 2194 00b1 00       		.byte	0
 2195 00b2 00       		.byte	0
 2196 00b3 10       		.uleb128 0x10
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 94


 2197 00b4 04       		.uleb128 0x4
 2198 00b5 01       		.byte	0x1
 2199 00b6 0B       		.uleb128 0xb
 2200 00b7 0B       		.uleb128 0xb
 2201 00b8 49       		.uleb128 0x49
 2202 00b9 13       		.uleb128 0x13
 2203 00ba 3A       		.uleb128 0x3a
 2204 00bb 0B       		.uleb128 0xb
 2205 00bc 3B       		.uleb128 0x3b
 2206 00bd 05       		.uleb128 0x5
 2207 00be 01       		.uleb128 0x1
 2208 00bf 13       		.uleb128 0x13
 2209 00c0 00       		.byte	0
 2210 00c1 00       		.byte	0
 2211 00c2 11       		.uleb128 0x11
 2212 00c3 28       		.uleb128 0x28
 2213 00c4 00       		.byte	0
 2214 00c5 03       		.uleb128 0x3
 2215 00c6 0E       		.uleb128 0xe
 2216 00c7 1C       		.uleb128 0x1c
 2217 00c8 0B       		.uleb128 0xb
 2218 00c9 00       		.byte	0
 2219 00ca 00       		.byte	0
 2220 00cb 12       		.uleb128 0x12
 2221 00cc 28       		.uleb128 0x28
 2222 00cd 00       		.byte	0
 2223 00ce 03       		.uleb128 0x3
 2224 00cf 0E       		.uleb128 0xe
 2225 00d0 1C       		.uleb128 0x1c
 2226 00d1 06       		.uleb128 0x6
 2227 00d2 00       		.byte	0
 2228 00d3 00       		.byte	0
 2229 00d4 13       		.uleb128 0x13
 2230 00d5 28       		.uleb128 0x28
 2231 00d6 00       		.byte	0
 2232 00d7 03       		.uleb128 0x3
 2233 00d8 0E       		.uleb128 0xe
 2234 00d9 1C       		.uleb128 0x1c
 2235 00da 05       		.uleb128 0x5
 2236 00db 00       		.byte	0
 2237 00dc 00       		.byte	0
 2238 00dd 14       		.uleb128 0x14
 2239 00de 13       		.uleb128 0x13
 2240 00df 01       		.byte	0x1
 2241 00e0 0B       		.uleb128 0xb
 2242 00e1 0B       		.uleb128 0xb
 2243 00e2 3A       		.uleb128 0x3a
 2244 00e3 0B       		.uleb128 0xb
 2245 00e4 3B       		.uleb128 0x3b
 2246 00e5 05       		.uleb128 0x5
 2247 00e6 01       		.uleb128 0x1
 2248 00e7 13       		.uleb128 0x13
 2249 00e8 00       		.byte	0
 2250 00e9 00       		.byte	0
 2251 00ea 15       		.uleb128 0x15
 2252 00eb 0D       		.uleb128 0xd
 2253 00ec 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 95


 2254 00ed 03       		.uleb128 0x3
 2255 00ee 0E       		.uleb128 0xe
 2256 00ef 3A       		.uleb128 0x3a
 2257 00f0 0B       		.uleb128 0xb
 2258 00f1 3B       		.uleb128 0x3b
 2259 00f2 05       		.uleb128 0x5
 2260 00f3 49       		.uleb128 0x49
 2261 00f4 13       		.uleb128 0x13
 2262 00f5 38       		.uleb128 0x38
 2263 00f6 0B       		.uleb128 0xb
 2264 00f7 00       		.byte	0
 2265 00f8 00       		.byte	0
 2266 00f9 16       		.uleb128 0x16
 2267 00fa 2E       		.uleb128 0x2e
 2268 00fb 01       		.byte	0x1
 2269 00fc 03       		.uleb128 0x3
 2270 00fd 0E       		.uleb128 0xe
 2271 00fe 3A       		.uleb128 0x3a
 2272 00ff 0B       		.uleb128 0xb
 2273 0100 3B       		.uleb128 0x3b
 2274 0101 05       		.uleb128 0x5
 2275 0102 27       		.uleb128 0x27
 2276 0103 19       		.uleb128 0x19
 2277 0104 20       		.uleb128 0x20
 2278 0105 0B       		.uleb128 0xb
 2279 0106 01       		.uleb128 0x1
 2280 0107 13       		.uleb128 0x13
 2281 0108 00       		.byte	0
 2282 0109 00       		.byte	0
 2283 010a 17       		.uleb128 0x17
 2284 010b 05       		.uleb128 0x5
 2285 010c 00       		.byte	0
 2286 010d 03       		.uleb128 0x3
 2287 010e 0E       		.uleb128 0xe
 2288 010f 3A       		.uleb128 0x3a
 2289 0110 0B       		.uleb128 0xb
 2290 0111 3B       		.uleb128 0x3b
 2291 0112 05       		.uleb128 0x5
 2292 0113 49       		.uleb128 0x49
 2293 0114 13       		.uleb128 0x13
 2294 0115 00       		.byte	0
 2295 0116 00       		.byte	0
 2296 0117 18       		.uleb128 0x18
 2297 0118 0F       		.uleb128 0xf
 2298 0119 00       		.byte	0
 2299 011a 0B       		.uleb128 0xb
 2300 011b 0B       		.uleb128 0xb
 2301 011c 49       		.uleb128 0x49
 2302 011d 13       		.uleb128 0x13
 2303 011e 00       		.byte	0
 2304 011f 00       		.byte	0
 2305 0120 19       		.uleb128 0x19
 2306 0121 2E       		.uleb128 0x2e
 2307 0122 00       		.byte	0
 2308 0123 03       		.uleb128 0x3
 2309 0124 0E       		.uleb128 0xe
 2310 0125 3A       		.uleb128 0x3a
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 96


 2311 0126 0B       		.uleb128 0xb
 2312 0127 3B       		.uleb128 0x3b
 2313 0128 0B       		.uleb128 0xb
 2314 0129 27       		.uleb128 0x27
 2315 012a 19       		.uleb128 0x19
 2316 012b 20       		.uleb128 0x20
 2317 012c 0B       		.uleb128 0xb
 2318 012d 00       		.byte	0
 2319 012e 00       		.byte	0
 2320 012f 1A       		.uleb128 0x1a
 2321 0130 2E       		.uleb128 0x2e
 2322 0131 01       		.byte	0x1
 2323 0132 03       		.uleb128 0x3
 2324 0133 0E       		.uleb128 0xe
 2325 0134 3A       		.uleb128 0x3a
 2326 0135 0B       		.uleb128 0xb
 2327 0136 3B       		.uleb128 0x3b
 2328 0137 05       		.uleb128 0x5
 2329 0138 27       		.uleb128 0x27
 2330 0139 19       		.uleb128 0x19
 2331 013a 49       		.uleb128 0x49
 2332 013b 13       		.uleb128 0x13
 2333 013c 20       		.uleb128 0x20
 2334 013d 0B       		.uleb128 0xb
 2335 013e 01       		.uleb128 0x1
 2336 013f 13       		.uleb128 0x13
 2337 0140 00       		.byte	0
 2338 0141 00       		.byte	0
 2339 0142 1B       		.uleb128 0x1b
 2340 0143 34       		.uleb128 0x34
 2341 0144 00       		.byte	0
 2342 0145 03       		.uleb128 0x3
 2343 0146 0E       		.uleb128 0xe
 2344 0147 3A       		.uleb128 0x3a
 2345 0148 0B       		.uleb128 0xb
 2346 0149 3B       		.uleb128 0x3b
 2347 014a 05       		.uleb128 0x5
 2348 014b 49       		.uleb128 0x49
 2349 014c 13       		.uleb128 0x13
 2350 014d 00       		.byte	0
 2351 014e 00       		.byte	0
 2352 014f 1C       		.uleb128 0x1c
 2353 0150 2E       		.uleb128 0x2e
 2354 0151 01       		.byte	0x1
 2355 0152 3F       		.uleb128 0x3f
 2356 0153 19       		.uleb128 0x19
 2357 0154 03       		.uleb128 0x3
 2358 0155 0E       		.uleb128 0xe
 2359 0156 3A       		.uleb128 0x3a
 2360 0157 0B       		.uleb128 0xb
 2361 0158 3B       		.uleb128 0x3b
 2362 0159 0B       		.uleb128 0xb
 2363 015a 27       		.uleb128 0x27
 2364 015b 19       		.uleb128 0x19
 2365 015c 49       		.uleb128 0x49
 2366 015d 13       		.uleb128 0x13
 2367 015e 8701     		.uleb128 0x87
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 97


 2368 0160 19       		.uleb128 0x19
 2369 0161 11       		.uleb128 0x11
 2370 0162 01       		.uleb128 0x1
 2371 0163 12       		.uleb128 0x12
 2372 0164 06       		.uleb128 0x6
 2373 0165 40       		.uleb128 0x40
 2374 0166 18       		.uleb128 0x18
 2375 0167 9742     		.uleb128 0x2117
 2376 0169 19       		.uleb128 0x19
 2377 016a 01       		.uleb128 0x1
 2378 016b 13       		.uleb128 0x13
 2379 016c 00       		.byte	0
 2380 016d 00       		.byte	0
 2381 016e 1D       		.uleb128 0x1d
 2382 016f 34       		.uleb128 0x34
 2383 0170 00       		.byte	0
 2384 0171 03       		.uleb128 0x3
 2385 0172 0E       		.uleb128 0xe
 2386 0173 3A       		.uleb128 0x3a
 2387 0174 0B       		.uleb128 0xb
 2388 0175 3B       		.uleb128 0x3b
 2389 0176 0B       		.uleb128 0xb
 2390 0177 49       		.uleb128 0x49
 2391 0178 13       		.uleb128 0x13
 2392 0179 02       		.uleb128 0x2
 2393 017a 18       		.uleb128 0x18
 2394 017b 00       		.byte	0
 2395 017c 00       		.byte	0
 2396 017d 1E       		.uleb128 0x1e
 2397 017e 1D       		.uleb128 0x1d
 2398 017f 00       		.byte	0
 2399 0180 31       		.uleb128 0x31
 2400 0181 13       		.uleb128 0x13
 2401 0182 11       		.uleb128 0x11
 2402 0183 01       		.uleb128 0x1
 2403 0184 12       		.uleb128 0x12
 2404 0185 06       		.uleb128 0x6
 2405 0186 58       		.uleb128 0x58
 2406 0187 0B       		.uleb128 0xb
 2407 0188 59       		.uleb128 0x59
 2408 0189 0B       		.uleb128 0xb
 2409 018a 00       		.byte	0
 2410 018b 00       		.byte	0
 2411 018c 1F       		.uleb128 0x1f
 2412 018d 1D       		.uleb128 0x1d
 2413 018e 01       		.byte	0x1
 2414 018f 31       		.uleb128 0x31
 2415 0190 13       		.uleb128 0x13
 2416 0191 11       		.uleb128 0x11
 2417 0192 01       		.uleb128 0x1
 2418 0193 12       		.uleb128 0x12
 2419 0194 06       		.uleb128 0x6
 2420 0195 58       		.uleb128 0x58
 2421 0196 0B       		.uleb128 0xb
 2422 0197 59       		.uleb128 0x59
 2423 0198 0B       		.uleb128 0xb
 2424 0199 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 98


 2425 019a 13       		.uleb128 0x13
 2426 019b 00       		.byte	0
 2427 019c 00       		.byte	0
 2428 019d 20       		.uleb128 0x20
 2429 019e 1D       		.uleb128 0x1d
 2430 019f 01       		.byte	0x1
 2431 01a0 31       		.uleb128 0x31
 2432 01a1 13       		.uleb128 0x13
 2433 01a2 11       		.uleb128 0x11
 2434 01a3 01       		.uleb128 0x1
 2435 01a4 12       		.uleb128 0x12
 2436 01a5 06       		.uleb128 0x6
 2437 01a6 58       		.uleb128 0x58
 2438 01a7 0B       		.uleb128 0xb
 2439 01a8 59       		.uleb128 0x59
 2440 01a9 0B       		.uleb128 0xb
 2441 01aa 00       		.byte	0
 2442 01ab 00       		.byte	0
 2443 01ac 21       		.uleb128 0x21
 2444 01ad 05       		.uleb128 0x5
 2445 01ae 00       		.byte	0
 2446 01af 31       		.uleb128 0x31
 2447 01b0 13       		.uleb128 0x13
 2448 01b1 1C       		.uleb128 0x1c
 2449 01b2 0B       		.uleb128 0xb
 2450 01b3 00       		.byte	0
 2451 01b4 00       		.byte	0
 2452 01b5 22       		.uleb128 0x22
 2453 01b6 0B       		.uleb128 0xb
 2454 01b7 01       		.byte	0x1
 2455 01b8 11       		.uleb128 0x11
 2456 01b9 01       		.uleb128 0x1
 2457 01ba 12       		.uleb128 0x12
 2458 01bb 06       		.uleb128 0x6
 2459 01bc 00       		.byte	0
 2460 01bd 00       		.byte	0
 2461 01be 23       		.uleb128 0x23
 2462 01bf 34       		.uleb128 0x34
 2463 01c0 00       		.byte	0
 2464 01c1 31       		.uleb128 0x31
 2465 01c2 13       		.uleb128 0x13
 2466 01c3 02       		.uleb128 0x2
 2467 01c4 17       		.uleb128 0x17
 2468 01c5 00       		.byte	0
 2469 01c6 00       		.byte	0
 2470 01c7 24       		.uleb128 0x24
 2471 01c8 05       		.uleb128 0x5
 2472 01c9 00       		.byte	0
 2473 01ca 31       		.uleb128 0x31
 2474 01cb 13       		.uleb128 0x13
 2475 01cc 02       		.uleb128 0x2
 2476 01cd 17       		.uleb128 0x17
 2477 01ce 00       		.byte	0
 2478 01cf 00       		.byte	0
 2479 01d0 25       		.uleb128 0x25
 2480 01d1 1D       		.uleb128 0x1d
 2481 01d2 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 99


 2482 01d3 31       		.uleb128 0x31
 2483 01d4 13       		.uleb128 0x13
 2484 01d5 11       		.uleb128 0x11
 2485 01d6 01       		.uleb128 0x1
 2486 01d7 12       		.uleb128 0x12
 2487 01d8 06       		.uleb128 0x6
 2488 01d9 58       		.uleb128 0x58
 2489 01da 0B       		.uleb128 0xb
 2490 01db 59       		.uleb128 0x59
 2491 01dc 05       		.uleb128 0x5
 2492 01dd 00       		.byte	0
 2493 01de 00       		.byte	0
 2494 01df 26       		.uleb128 0x26
 2495 01e0 898201   		.uleb128 0x4109
 2496 01e3 00       		.byte	0
 2497 01e4 11       		.uleb128 0x11
 2498 01e5 01       		.uleb128 0x1
 2499 01e6 31       		.uleb128 0x31
 2500 01e7 13       		.uleb128 0x13
 2501 01e8 00       		.byte	0
 2502 01e9 00       		.byte	0
 2503 01ea 27       		.uleb128 0x27
 2504 01eb 34       		.uleb128 0x34
 2505 01ec 00       		.byte	0
 2506 01ed 03       		.uleb128 0x3
 2507 01ee 0E       		.uleb128 0xe
 2508 01ef 3A       		.uleb128 0x3a
 2509 01f0 0B       		.uleb128 0xb
 2510 01f1 3B       		.uleb128 0x3b
 2511 01f2 05       		.uleb128 0x5
 2512 01f3 49       		.uleb128 0x49
 2513 01f4 13       		.uleb128 0x13
 2514 01f5 3F       		.uleb128 0x3f
 2515 01f6 19       		.uleb128 0x19
 2516 01f7 3C       		.uleb128 0x3c
 2517 01f8 19       		.uleb128 0x19
 2518 01f9 00       		.byte	0
 2519 01fa 00       		.byte	0
 2520 01fb 28       		.uleb128 0x28
 2521 01fc 34       		.uleb128 0x34
 2522 01fd 00       		.byte	0
 2523 01fe 03       		.uleb128 0x3
 2524 01ff 0E       		.uleb128 0xe
 2525 0200 3A       		.uleb128 0x3a
 2526 0201 0B       		.uleb128 0xb
 2527 0202 3B       		.uleb128 0x3b
 2528 0203 0B       		.uleb128 0xb
 2529 0204 49       		.uleb128 0x49
 2530 0205 13       		.uleb128 0x13
 2531 0206 3F       		.uleb128 0x3f
 2532 0207 19       		.uleb128 0x19
 2533 0208 3C       		.uleb128 0x3c
 2534 0209 19       		.uleb128 0x19
 2535 020a 00       		.byte	0
 2536 020b 00       		.byte	0
 2537 020c 29       		.uleb128 0x29
 2538 020d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 100


 2539 020e 00       		.byte	0
 2540 020f 3F       		.uleb128 0x3f
 2541 0210 19       		.uleb128 0x19
 2542 0211 3C       		.uleb128 0x3c
 2543 0212 19       		.uleb128 0x19
 2544 0213 6E       		.uleb128 0x6e
 2545 0214 0E       		.uleb128 0xe
 2546 0215 03       		.uleb128 0x3
 2547 0216 0E       		.uleb128 0xe
 2548 0217 3A       		.uleb128 0x3a
 2549 0218 0B       		.uleb128 0xb
 2550 0219 3B       		.uleb128 0x3b
 2551 021a 0B       		.uleb128 0xb
 2552 021b 00       		.byte	0
 2553 021c 00       		.byte	0
 2554 021d 00       		.byte	0
 2555              		.section	.debug_loc,"",%progbits
 2556              	.Ldebug_loc0:
 2557              	.LLST0:
 2558 0000 08000000 		.4byte	.LVL0
 2559 0004 34000000 		.4byte	.LVL1
 2560 0008 0600     		.2byte	0x6
 2561 000a 0C       		.byte	0xc
 2562 000b 01004A00 		.4byte	0x4a0001
 2563 000f 9F       		.byte	0x9f
 2564 0010 34000000 		.4byte	.LVL1
 2565 0014 5C000000 		.4byte	.LFE375
 2566 0018 0200     		.2byte	0x2
 2567 001a 30       		.byte	0x30
 2568 001b 9F       		.byte	0x9f
 2569 001c 00000000 		.4byte	0
 2570 0020 00000000 		.4byte	0
 2571              	.LLST1:
 2572 0024 3A000000 		.4byte	.LVL3
 2573 0028 44000000 		.4byte	.LVL4
 2574 002c 0100     		.2byte	0x1
 2575 002e 53       		.byte	0x53
 2576 002f 00000000 		.4byte	0
 2577 0033 00000000 		.4byte	0
 2578              	.LLST3:
 2579 0037 3A000000 		.4byte	.LVL3
 2580 003b 44000000 		.4byte	.LVL4
 2581 003f 0600     		.2byte	0x6
 2582 0041 0C       		.byte	0xc
 2583 0042 00001441 		.4byte	0x41140000
 2584 0046 9F       		.byte	0x9f
 2585 0047 00000000 		.4byte	0
 2586 004b 00000000 		.4byte	0
 2587              		.section	.debug_aranges,"",%progbits
 2588 0000 1C000000 		.4byte	0x1c
 2589 0004 0200     		.2byte	0x2
 2590 0006 00000000 		.4byte	.Ldebug_info0
 2591 000a 04       		.byte	0x4
 2592 000b 00       		.byte	0
 2593 000c 0000     		.2byte	0
 2594 000e 0000     		.2byte	0
 2595 0010 00000000 		.4byte	.LFB375
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 101


 2596 0014 5C000000 		.4byte	.LFE375-.LFB375
 2597 0018 00000000 		.4byte	0
 2598 001c 00000000 		.4byte	0
 2599              		.section	.debug_ranges,"",%progbits
 2600              	.Ldebug_ranges0:
 2601 0000 00000000 		.4byte	.LFB375
 2602 0004 5C000000 		.4byte	.LFE375
 2603 0008 00000000 		.4byte	0
 2604 000c 00000000 		.4byte	0
 2605              		.section	.debug_line,"",%progbits
 2606              	.Ldebug_line0:
 2607 0000 78030000 		.section	.debug_str,"MS",%progbits,1
 2607      02003503 
 2607      00000201 
 2607      FB0E0D00 
 2607      01010101 
 2608              	.LASF102:
 2609 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2609      6843746C 
 2609      4D61696E 
 2609      57733146 
 2609      72657100 
 2610              	.LASF247:
 2611 0014 43795F43 		.ascii	"Cy_CTDAC_SetValueBuffered\000"
 2611      54444143 
 2611      5F536574 
 2611      56616C75 
 2611      65427566 
 2612              	.LASF27:
 2613 002e 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 2613      5F54525F 
 2613      47525F56 
 2613      315F5479 
 2613      706500
 2614              	.LASF21:
 2615 0041 52455345 		.ascii	"RESERVED\000"
 2615      52564544 
 2615      00
 2616              	.LASF254:
 2617 004a 6D61696E 		.ascii	"main_cm4.c\000"
 2617      5F636D34 
 2617      2E6300
 2618              	.LASF250:
 2619 0055 63795F64 		.ascii	"cy_device\000"
 2619      65766963 
 2619      6500
 2620              	.LASF206:
 2621 005f 43595F43 		.ascii	"CY_CTDAC_FORMAT_SIGNED\000"
 2621      54444143 
 2621      5F464F52 
 2621      4D41545F 
 2621      5349474E 
 2622              	.LASF129:
 2623 0076 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2623      73436D30 
 2623      436C6F63 
 2623      6B43746C 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 102


 2623      4F666673 
 2624              	.LASF88:
 2625 008d 70657269 		.ascii	"periClockNr\000"
 2625      436C6F63 
 2625      6B4E7200 
 2626              	.LASF225:
 2627 0099 43595F43 		.ascii	"CY_CTDAC_OUTPUT_BUFFERED\000"
 2627      54444143 
 2627      5F4F5554 
 2627      5055545F 
 2627      42554646 
 2628              	.LASF35:
 2629 00b2 4449565F 		.ascii	"DIV_8_CTL\000"
 2629      385F4354 
 2629      4C00
 2630              	.LASF52:
 2631 00bc 43544441 		.ascii	"CTDAC_SW\000"
 2631      435F5357 
 2631      00
 2632              	.LASF194:
 2633 00c5 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 2633      5953434C 
 2633      4B5F4449 
 2633      565F385F 
 2633      42495400 
 2634              	.LASF33:
 2635 00d9 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 2635      5F505055 
 2635      5F47525F 
 2635      56315F54 
 2635      79706500 
 2636              	.LASF61:
 2637 00ed 70657269 		.ascii	"periBase\000"
 2637      42617365 
 2637      00
 2638              	.LASF137:
 2639 00f6 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2639      73436D30 
 2639      4E6D6943 
 2639      746C4F66 
 2639      66736574 
 2640              	.LASF107:
 2641 010b 64774368 		.ascii	"dwChSize\000"
 2641      53697A65 
 2641      00
 2642              	.LASF47:
 2643 0114 43544441 		.ascii	"CTDAC_CTRL\000"
 2643      435F4354 
 2643      524C00
 2644              	.LASF191:
 2645 011f 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 2645      5953434C 
 2645      4B5F5449 
 2645      4D454F55 
 2645      5400
 2646              	.LASF184:
 2647 0131 6F61436F 		.ascii	"oaCompLevel\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 103


 2647      6D704C65 
 2647      76656C00 
 2648              	.LASF89:
 2649 013d 736D6966 		.ascii	"smifDeviceNr\000"
 2649      44657669 
 2649      63654E72 
 2649      00
 2650              	.LASF119:
 2651 014a 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2651      44697643 
 2651      6D645061 
 2651      54797065 
 2651      53656C50 
 2652              	.LASF221:
 2653 0161 63795F65 		.ascii	"cy_en_ctdac_deglitch_t\000"
 2653      6E5F6374 
 2653      6461635F 
 2653      6465676C 
 2653      69746368 
 2654              	.LASF7:
 2655 0178 5F5F696E 		.ascii	"__int32_t\000"
 2655      7433325F 
 2655      7400
 2656              	.LASF189:
 2657 0182 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 2657      5953434C 
 2657      4B5F5355 
 2657      43434553 
 2657      5300
 2658              	.LASF59:
 2659 0194 63707573 		.ascii	"cpussBase\000"
 2659      73426173 
 2659      6500
 2660              	.LASF37:
 2661 019e 4449565F 		.ascii	"DIV_16_5_CTL\000"
 2661      31365F35 
 2661      5F43544C 
 2661      00
 2662              	.LASF43:
 2663 01ab 5050555F 		.ascii	"PPU_PR\000"
 2663      505200
 2664              	.LASF83:
 2665 01b2 63707573 		.ascii	"cpussFmIrq\000"
 2665      73466D49 
 2665      727100
 2666              	.LASF165:
 2667 01bd 43595F43 		.ascii	"CY_CTB_COMP_EDGE_RISING\000"
 2667      54425F43 
 2667      4F4D505F 
 2667      45444745 
 2667      5F524953 
 2668              	.LASF248:
 2669 01d5 56444143 		.ascii	"VDAC_1_SetValueBuffered\000"
 2669      5F315F53 
 2669      65745661 
 2669      6C756542 
 2669      75666665 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 104


 2670              	.LASF202:
 2671 01ed 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_EDGE_IMMEDIATE\000"
 2671      54444143 
 2671      5F555044 
 2671      4154455F 
 2671      5354524F 
 2672              	.LASF159:
 2673 0213 43595F43 		.ascii	"CY_CTB_MODE_COMP\000"
 2673      54425F4D 
 2673      4F44455F 
 2673      434F4D50 
 2673      00
 2674              	.LASF246:
 2675 0224 436C6F63 		.ascii	"Clock_1_Enable\000"
 2675      6B5F315F 
 2675      456E6162 
 2675      6C6500
 2676              	.LASF238:
 2677 0233 636F6E66 		.ascii	"configClock\000"
 2677      6967436C 
 2677      6F636B00 
 2678              	.LASF115:
 2679 023f 70657269 		.ascii	"periTrGrSize\000"
 2679      54724772 
 2679      53697A65 
 2679      00
 2680              	.LASF118:
 2681 024c 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2681      44697643 
 2681      6D645061 
 2681      44697653 
 2681      656C506F 
 2682              	.LASF236:
 2683 0262 6E657874 		.ascii	"nextValue\000"
 2683      56616C75 
 2683      6500
 2684              	.LASF49:
 2685 026c 494E5452 		.ascii	"INTR_SET\000"
 2685      5F534554 
 2685      00
 2686              	.LASF95:
 2687 0275 63727970 		.ascii	"cryptoMemSize\000"
 2687      746F4D65 
 2687      6D53697A 
 2687      6500
 2688              	.LASF141:
 2689 0283 63707573 		.ascii	"cpussRam1Ctl0\000"
 2689      7352616D 
 2689      3143746C 
 2689      3000
 2690              	.LASF143:
 2691 0291 69706353 		.ascii	"ipcStructSize\000"
 2691      74727563 
 2691      7453697A 
 2691      6500
 2692              	.LASF234:
 2693 029f 6465676C 		.ascii	"deglitchCycles\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 105


 2693      69746368 
 2693      4379636C 
 2693      657300
 2694              	.LASF253:
 2695 02ae 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2695      43313120 
 2695      352E342E 
 2695      31203230 
 2695      31363036 
 2696 02e1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2696      20726576 
 2696      6973696F 
 2696      6E203233 
 2696      37373135 
 2697 0314 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2697      70202D6D 
 2697      6670753D 
 2697      66707634 
 2697      2D73702D 
 2698 0347 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2698      6F6E7320 
 2698      2D666661 
 2698      742D6C74 
 2698      6F2D6F62 
 2699              	.LASF77:
 2700 0361 70726F74 		.ascii	"protVersion\000"
 2700      56657273 
 2700      696F6E00 
 2701              	.LASF211:
 2702 036d 43595F43 		.ascii	"CY_CTDAC_OUTPUT_HIGHZ\000"
 2702      54444143 
 2702      5F4F5554 
 2702      5055545F 
 2702      48494748 
 2703              	.LASF228:
 2704 0383 72656653 		.ascii	"refSource\000"
 2704      6F757263 
 2704      6500
 2705              	.LASF214:
 2706 038d 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VSSA\000"
 2706      54444143 
 2706      5F4F5554 
 2706      5055545F 
 2706      56535341 
 2707              	.LASF245:
 2708 03a2 5F5F656E 		.ascii	"__enable_irq\000"
 2708      61626C65 
 2708      5F697271 
 2708      00
 2709              	.LASF117:
 2710 03af 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2710      44697643 
 2710      6D645479 
 2710      70655365 
 2710      6C506F73 
 2711              	.LASF134:
 2712 03c4 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 106


 2712      73547269 
 2712      6D52616D 
 2712      43746C4F 
 2712      66667365 
 2713              	.LASF242:
 2714 03da 64697669 		.ascii	"dividerFracValue\000"
 2714      64657246 
 2714      72616356 
 2714      616C7565 
 2714      00
 2715              	.LASF227:
 2716 03eb 63795F65 		.ascii	"cy_en_ctdac_output_buffer_t\000"
 2716      6E5F6374 
 2716      6461635F 
 2716      6F757470 
 2716      75745F62 
 2717              	.LASF32:
 2718 0407 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 2718      5F505055 
 2718      5F50525F 
 2718      56315F54 
 2718      79706500 
 2719              	.LASF18:
 2720 041b 75696E74 		.ascii	"uint32_t\000"
 2720      33325F74 
 2720      00
 2721              	.LASF127:
 2722 0424 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2722      50727443 
 2722      66674F75 
 2722      744F6666 
 2722      73657400 
 2723              	.LASF213:
 2724 0438 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VALUE_PLUS1\000"
 2724      54444143 
 2724      5F4F5554 
 2724      5055545F 
 2724      56414C55 
 2725              	.LASF48:
 2726 0454 494E5452 		.ascii	"INTR\000"
 2726      00
 2727              	.LASF147:
 2728 0459 666C6F61 		.ascii	"float\000"
 2728      7400
 2729              	.LASF70:
 2730 045f 63727970 		.ascii	"cryptoVersion\000"
 2730      746F5665 
 2730      7273696F 
 2730      6E00
 2731              	.LASF99:
 2732 046d 666C6173 		.ascii	"flashProgramDelay\000"
 2732      6850726F 
 2732      6772616D 
 2732      44656C61 
 2732      7900
 2733              	.LASF244:
 2734 047f 62617365 		.ascii	"base\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 107


 2734      00
 2735              	.LASF153:
 2736 0484 43595F43 		.ascii	"CY_CTB_POWER_LOW\000"
 2736      54425F50 
 2736      4F574552 
 2736      5F4C4F57 
 2736      00
 2737              	.LASF22:
 2738 0495 534C5F43 		.ascii	"SL_CTL\000"
 2738      544C00
 2739              	.LASF15:
 2740 049c 696E7431 		.ascii	"int16_t\000"
 2740      365F7400 
 2741              	.LASF180:
 2742 04a4 6F61506F 		.ascii	"oaPower\000"
 2742      77657200 
 2743              	.LASF126:
 2744 04ac 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2744      50727443 
 2744      6667496E 
 2744      4F666673 
 2744      657400
 2745              	.LASF149:
 2746 04bf 43595F43 		.ascii	"CY_CTB_DEEPSLEEP_DISABLE\000"
 2746      54425F44 
 2746      45455053 
 2746      4C454550 
 2746      5F444953 
 2747              	.LASF12:
 2748 04d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2748      206C6F6E 
 2748      6720756E 
 2748      7369676E 
 2748      65642069 
 2749              	.LASF123:
 2750 04ef 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2750      44697632 
 2750      345F3543 
 2750      746C4F66 
 2750      66736574 
 2751              	.LASF128:
 2752 0504 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2752      50727443 
 2752      66675369 
 2752      6F4F6666 
 2752      73657400 
 2753              	.LASF82:
 2754 0518 63707573 		.ascii	"cpussIpc0Irq\000"
 2754      73497063 
 2754      30497271 
 2754      00
 2755              	.LASF212:
 2756 0525 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VALUE\000"
 2756      54444143 
 2756      5F4F5554 
 2756      5055545F 
 2756      56414C55 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 108


 2757              	.LASF151:
 2758 053b 63795F65 		.ascii	"cy_en_ctb_deep_sleep_t\000"
 2758      6E5F6374 
 2758      625F6465 
 2758      65705F73 
 2758      6C656570 
 2759              	.LASF240:
 2760 0552 64697669 		.ascii	"dividerNum\000"
 2760      6465724E 
 2760      756D00
 2761              	.LASF5:
 2762 055d 5F5F7569 		.ascii	"__uint16_t\000"
 2762      6E743136 
 2762      5F7400
 2763              	.LASF237:
 2764 0568 656E6162 		.ascii	"enableInterrupt\000"
 2764      6C65496E 
 2764      74657272 
 2764      75707400 
 2765              	.LASF209:
 2766 0578 43595F43 		.ascii	"CY_CTDAC_DEEPSLEEP_ENABLE\000"
 2766      54444143 
 2766      5F444545 
 2766      50534C45 
 2766      45505F45 
 2767              	.LASF235:
 2768 0592 76616C75 		.ascii	"value\000"
 2768      6500
 2769              	.LASF167:
 2770 0598 43595F43 		.ascii	"CY_CTB_COMP_EDGE_BOTH\000"
 2770      54425F43 
 2770      4F4D505F 
 2770      45444745 
 2770      5F424F54 
 2771              	.LASF104:
 2772 05ae 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 2772      6843746C 
 2772      4D61696E 
 2772      57733346 
 2772      72657100 
 2773              	.LASF222:
 2774 05c2 43595F43 		.ascii	"CY_CTDAC_REFSOURCE_EXTERNAL\000"
 2774      54444143 
 2774      5F524546 
 2774      534F5552 
 2774      43455F45 
 2775              	.LASF86:
 2776 05de 73727373 		.ascii	"srssNumPll\000"
 2776      4E756D50 
 2776      6C6C00
 2777              	.LASF40:
 2778 05e9 54525F43 		.ascii	"TR_CMD\000"
 2778      4D4400
 2779              	.LASF193:
 2780 05f0 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 2780      6E5F7379 
 2780      73636C6B 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 109


 2780      5F737461 
 2780      7475735F 
 2781              	.LASF97:
 2782 0606 666C6173 		.ascii	"flashPipeRequired\000"
 2782      68506970 
 2782      65526571 
 2782      75697265 
 2782      6400
 2783              	.LASF112:
 2784 0618 70657269 		.ascii	"periTrCmdOffset\000"
 2784      5472436D 
 2784      644F6666 
 2784      73657400 
 2785              	.LASF154:
 2786 0628 43595F43 		.ascii	"CY_CTB_POWER_MEDIUM\000"
 2786      54425F50 
 2786      4F574552 
 2786      5F4D4544 
 2786      49554D00 
 2787              	.LASF178:
 2788 063c 5F426F6F 		.ascii	"_Bool\000"
 2788      6C00
 2789              	.LASF200:
 2790 0642 43595F43 		.ascii	"CY_CTDAC_UPDATE_BUFFERED_WRITE\000"
 2790      54444143 
 2790      5F555044 
 2790      4154455F 
 2790      42554646 
 2791              	.LASF218:
 2792 0661 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_UNBUFFERED\000"
 2792      54444143 
 2792      5F444547 
 2792      4C495443 
 2792      484D4F44 
 2793              	.LASF101:
 2794 0682 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2794      6843746C 
 2794      4D61696E 
 2794      57733046 
 2794      72657100 
 2795              	.LASF38:
 2796 0696 4449565F 		.ascii	"DIV_24_5_CTL\000"
 2796      32345F35 
 2796      5F43544C 
 2796      00
 2797              	.LASF111:
 2798 06a3 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2798      61747573 
 2798      43684964 
 2798      784D736B 
 2798      00
 2799              	.LASF65:
 2800 06b4 6770696F 		.ascii	"gpioBase\000"
 2800      42617365 
 2800      00
 2801              	.LASF186:
 2802 06bd 6F61436F 		.ascii	"oaCompHyst\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 110


 2802      6D704879 
 2802      737400
 2803              	.LASF201:
 2804 06c8 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_EDGE_SYNC\000"
 2804      54444143 
 2804      5F555044 
 2804      4154455F 
 2804      5354524F 
 2805              	.LASF36:
 2806 06e9 4449565F 		.ascii	"DIV_16_CTL\000"
 2806      31365F43 
 2806      544C00
 2807              	.LASF20:
 2808 06f4 434C4F43 		.ascii	"CLOCK_CTL\000"
 2808      4B5F4354 
 2808      4C00
 2809              	.LASF161:
 2810 06fe 43595F43 		.ascii	"CY_CTB_PUMP_DISABLE\000"
 2810      54425F50 
 2810      554D505F 
 2810      44495341 
 2810      424C4500 
 2811              	.LASF175:
 2812 0712 43595F43 		.ascii	"CY_CTB_COMP_HYST_DISABLE\000"
 2812      54425F43 
 2812      4F4D505F 
 2812      48595354 
 2812      5F444953 
 2813              	.LASF136:
 2814 072b 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2814      73537973 
 2814      5469636B 
 2814      43746C4F 
 2814      66667365 
 2815              	.LASF92:
 2816 0741 75646250 		.ascii	"udbPresent\000"
 2816      72657365 
 2816      6E7400
 2817              	.LASF110:
 2818 074c 64775374 		.ascii	"dwStatusChIdxPos\000"
 2818      61747573 
 2818      43684964 
 2818      78506F73 
 2818      00
 2819              	.LASF241:
 2820 075d 64697669 		.ascii	"dividerIntValue\000"
 2820      64657249 
 2820      6E745661 
 2820      6C756500 
 2821              	.LASF81:
 2822 076d 63707573 		.ascii	"cpussFlashPaSize\000"
 2822      73466C61 
 2822      73685061 
 2822      53697A65 
 2822      00
 2823              	.LASF26:
 2824 077e 54525F4F 		.ascii	"TR_OUT_CTL\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 111


 2824      55545F43 
 2824      544C00
 2825              	.LASF171:
 2826 0789 63795F65 		.ascii	"cy_en_ctb_comp_level_t\000"
 2826      6E5F6374 
 2826      625F636F 
 2826      6D705F6C 
 2826      6576656C 
 2827              	.LASF42:
 2828 07a0 54525F47 		.ascii	"TR_GR\000"
 2828      5200
 2829              	.LASF60:
 2830 07a6 666C6173 		.ascii	"flashcBase\000"
 2830      68634261 
 2830      736500
 2831              	.LASF146:
 2832 07b1 63686172 		.ascii	"char\000"
 2832      00
 2833              	.LASF34:
 2834 07b6 4449565F 		.ascii	"DIV_CMD\000"
 2834      434D4400 
 2835              	.LASF239:
 2836 07be 64697669 		.ascii	"dividerType\000"
 2836      64657254 
 2836      79706500 
 2837              	.LASF93:
 2838 07ca 73797350 		.ascii	"sysPmSimoPresent\000"
 2838      6D53696D 
 2838      6F507265 
 2838      73656E74 
 2838      00
 2839              	.LASF251:
 2840 07db 56444143 		.ascii	"VDAC_1_ctdacConfig\000"
 2840      5F315F63 
 2840      74646163 
 2840      436F6E66 
 2840      696700
 2841              	.LASF174:
 2842 07ee 63795F65 		.ascii	"cy_en_ctb_comp_bypass_t\000"
 2842      6E5F6374 
 2842      625F636F 
 2842      6D705F62 
 2842      79706173 
 2843              	.LASF13:
 2844 0806 756E7369 		.ascii	"unsigned int\000"
 2844      676E6564 
 2844      20696E74 
 2844      00
 2845              	.LASF208:
 2846 0813 43595F43 		.ascii	"CY_CTDAC_DEEPSLEEP_DISABLE\000"
 2846      54444143 
 2846      5F444545 
 2846      50534C45 
 2846      45505F44 
 2847              	.LASF14:
 2848 082e 75696E74 		.ascii	"uint8_t\000"
 2848      385F7400 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 112


 2849              	.LASF205:
 2850 0836 43595F43 		.ascii	"CY_CTDAC_FORMAT_UNSIGNED\000"
 2850      54444143 
 2850      5F464F52 
 2850      4D41545F 
 2850      554E5349 
 2851              	.LASF116:
 2852 084f 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2852      44697643 
 2852      6D644469 
 2852      7653656C 
 2852      4D736B00 
 2853              	.LASF155:
 2854 0863 43595F43 		.ascii	"CY_CTB_POWER_HIGH\000"
 2854      54425F50 
 2854      4F574552 
 2854      5F484947 
 2854      4800
 2855              	.LASF122:
 2856 0875 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2856      44697631 
 2856      365F3543 
 2856      746C4F66 
 2856      66736574 
 2857              	.LASF140:
 2858 088a 63707573 		.ascii	"cpussRam0Ctl0\000"
 2858      7352616D 
 2858      3043746C 
 2858      3000
 2859              	.LASF157:
 2860 0898 43595F43 		.ascii	"CY_CTB_MODE_OPAMP1X\000"
 2860      54425F4D 
 2860      4F44455F 
 2860      4F50414D 
 2860      50315800 
 2861              	.LASF11:
 2862 08ac 6C6F6E67 		.ascii	"long long int\000"
 2862      206C6F6E 
 2862      6720696E 
 2862      7400
 2863              	.LASF67:
 2864 08ba 69706342 		.ascii	"ipcBase\000"
 2864      61736500 
 2865              	.LASF108:
 2866 08c2 64774368 		.ascii	"dwChCtlPrioPos\000"
 2866      43746C50 
 2866      72696F50 
 2866      6F7300
 2867              	.LASF68:
 2868 08d1 63727970 		.ascii	"cryptoBase\000"
 2868      746F4261 
 2868      736500
 2869              	.LASF98:
 2870 08dc 666C6173 		.ascii	"flashWriteDelay\000"
 2870      68577269 
 2870      74654465 
 2870      6C617900 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 113


 2871              	.LASF45:
 2872 08ec 5050555F 		.ascii	"PPU_GR\000"
 2872      475200
 2873              	.LASF173:
 2874 08f3 43595F43 		.ascii	"CY_CTB_COMP_BYPASS_NO_SYNC\000"
 2874      54425F43 
 2874      4F4D505F 
 2874      42595041 
 2874      53535F4E 
 2875              	.LASF4:
 2876 090e 5F5F696E 		.ascii	"__int16_t\000"
 2876      7431365F 
 2876      7400
 2877              	.LASF64:
 2878 0918 6873696F 		.ascii	"hsiomBase\000"
 2878      6D426173 
 2878      6500
 2879              	.LASF57:
 2880 0922 43544441 		.ascii	"CTDAC_Type\000"
 2880      435F5479 
 2880      706500
 2881              	.LASF114:
 2882 092d 70657269 		.ascii	"periTrGrOffset\000"
 2882      54724772 
 2882      4F666673 
 2882      657400
 2883              	.LASF84:
 2884 093c 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2884      734E6F74 
 2884      436F6E6E 
 2884      65637465 
 2884      64497271 
 2885              	.LASF80:
 2886 0951 63707573 		.ascii	"cpussDwChNr\000"
 2886      73447743 
 2886      684E7200 
 2887              	.LASF50:
 2888 095d 494E5452 		.ascii	"INTR_MASK\000"
 2888      5F4D4153 
 2888      4B00
 2889              	.LASF172:
 2890 0967 43595F43 		.ascii	"CY_CTB_COMP_BYPASS_SYNC\000"
 2890      54425F43 
 2890      4F4D505F 
 2890      42595041 
 2890      53535F53 
 2891              	.LASF160:
 2892 097f 63795F65 		.ascii	"cy_en_ctb_mode_t\000"
 2892      6E5F6374 
 2892      625F6D6F 
 2892      64655F74 
 2892      00
 2893              	.LASF78:
 2894 0990 63707573 		.ascii	"cpussIpcNr\000"
 2894      73497063 
 2894      4E7200
 2895              	.LASF131:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 114


 2896 099b 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2896      73436D34 
 2896      53746174 
 2896      75734F66 
 2896      66736574 
 2897              	.LASF223:
 2898 09b0 43595F43 		.ascii	"CY_CTDAC_REFSOURCE_VDDA\000"
 2898      54444143 
 2898      5F524546 
 2898      534F5552 
 2898      43455F56 
 2899              	.LASF142:
 2900 09c8 63707573 		.ascii	"cpussRam2Ctl0\000"
 2900      7352616D 
 2900      3243746C 
 2900      3000
 2901              	.LASF168:
 2902 09d6 63795F65 		.ascii	"cy_en_ctb_comp_edge_t\000"
 2902      6E5F6374 
 2902      625F636F 
 2902      6D705F65 
 2902      6467655F 
 2903              	.LASF204:
 2904 09ec 63795F65 		.ascii	"cy_en_ctdac_update_t\000"
 2904      6E5F6374 
 2904      6461635F 
 2904      75706461 
 2904      74655F74 
 2905              	.LASF196:
 2906 0a01 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 2906      5953434C 
 2906      4B5F4449 
 2906      565F3136 
 2906      5F355F42 
 2907              	.LASF230:
 2908 0a18 75706461 		.ascii	"updateMode\000"
 2908      74654D6F 
 2908      646500
 2909              	.LASF185:
 2910 0a23 6F61436F 		.ascii	"oaCompBypass\000"
 2910      6D704279 
 2910      70617373 
 2910      00
 2911              	.LASF121:
 2912 0a30 70657269 		.ascii	"periDiv16CtlOffset\000"
 2912      44697631 
 2912      3643746C 
 2912      4F666673 
 2912      657400
 2913              	.LASF156:
 2914 0a43 63795F65 		.ascii	"cy_en_ctb_power_t\000"
 2914      6E5F6374 
 2914      625F706F 
 2914      7765725F 
 2914      7400
 2915              	.LASF6:
 2916 0a55 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 115


 2916      7420756E 
 2916      7369676E 
 2916      65642069 
 2916      6E7400
 2917              	.LASF58:
 2918 0a68 6C6F6E67 		.ascii	"long double\000"
 2918      20646F75 
 2918      626C6500 
 2919              	.LASF224:
 2920 0a74 63795F65 		.ascii	"cy_en_ctdac_ref_source_t\000"
 2920      6E5F6374 
 2920      6461635F 
 2920      7265665F 
 2920      736F7572 
 2921              	.LASF63:
 2922 0a8d 70726F74 		.ascii	"protBase\000"
 2922      42617365 
 2922      00
 2923              	.LASF113:
 2924 0a96 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2924      5472436D 
 2924      64477253 
 2924      656C4D73 
 2924      6B00
 2925              	.LASF192:
 2926 0aa8 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 2926      5953434C 
 2926      4B5F494E 
 2926      56414C49 
 2926      445F5354 
 2927              	.LASF9:
 2928 0ac0 5F5F7569 		.ascii	"__uint32_t\000"
 2928      6E743332 
 2928      5F7400
 2929              	.LASF87:
 2930 0acb 73727373 		.ascii	"srssNumHfroot\000"
 2930      4E756D48 
 2930      66726F6F 
 2930      7400
 2931              	.LASF195:
 2932 0ad9 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 2932      5953434C 
 2932      4B5F4449 
 2932      565F3136 
 2932      5F424954 
 2933              	.LASF71:
 2934 0aee 64775665 		.ascii	"dwVersion\000"
 2934      7273696F 
 2934      6E00
 2935              	.LASF103:
 2936 0af8 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2936      6843746C 
 2936      4D61696E 
 2936      57733246 
 2936      72657100 
 2937              	.LASF19:
 2938 0b0c 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 116


 2938      74797065 
 2938      00
 2939              	.LASF190:
 2940 0b15 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 2940      5953434C 
 2940      4B5F4241 
 2940      445F5041 
 2940      52414D00 
 2941              	.LASF138:
 2942 0b29 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2942      73436D34 
 2942      4E6D6943 
 2942      746C4F66 
 2942      66736574 
 2943              	.LASF132:
 2944 0b3e 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2944      73436D30 
 2944      53746174 
 2944      75734F66 
 2944      66736574 
 2945              	.LASF120:
 2946 0b53 70657269 		.ascii	"periDiv8CtlOffset\000"
 2946      44697638 
 2946      43746C4F 
 2946      66667365 
 2946      7400
 2947              	.LASF39:
 2948 0b65 52455345 		.ascii	"RESERVED2\000"
 2948      52564544 
 2948      3200
 2949              	.LASF41:
 2950 0b6f 52455345 		.ascii	"RESERVED3\000"
 2950      52564544 
 2950      3300
 2951              	.LASF44:
 2952 0b79 52455345 		.ascii	"RESERVED4\000"
 2952      52564544 
 2952      3400
 2953              	.LASF0:
 2954 0b83 73686F72 		.ascii	"short int\000"
 2954      7420696E 
 2954      7400
 2955              	.LASF219:
 2956 0b8d 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_BUFFERED\000"
 2956      54444143 
 2956      5F444547 
 2956      4C495443 
 2956      484D4F44 
 2957              	.LASF226:
 2958 0bac 43595F43 		.ascii	"CY_CTDAC_OUTPUT_UNBUFFERED\000"
 2958      54444143 
 2958      5F4F5554 
 2958      5055545F 
 2958      554E4255 
 2959              	.LASF46:
 2960 0bc7 50455249 		.ascii	"PERI_V1_Type\000"
 2960      5F56315F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 117


 2960      54797065 
 2960      00
 2961              	.LASF188:
 2962 0bd4 63795F73 		.ascii	"cy_stc_ctb_opamp_config_t\000"
 2962      74635F63 
 2962      74625F6F 
 2962      70616D70 
 2962      5F636F6E 
 2963              	.LASF8:
 2964 0bee 6C6F6E67 		.ascii	"long int\000"
 2964      20696E74 
 2964      00
 2965              	.LASF69:
 2966 0bf7 63707573 		.ascii	"cpussVersion\000"
 2966      73566572 
 2966      73696F6E 
 2966      00
 2967              	.LASF249:
 2968 0c04 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2968      52784275 
 2968      66666572 
 2968      00
 2969              	.LASF73:
 2970 0c11 6770696F 		.ascii	"gpioVersion\000"
 2970      56657273 
 2970      696F6E00 
 2971              	.LASF182:
 2972 0c1d 6F615075 		.ascii	"oaPump\000"
 2972      6D7000
 2973              	.LASF72:
 2974 0c24 666C6173 		.ascii	"flashcVersion\000"
 2974      68635665 
 2974      7273696F 
 2974      6E00
 2975              	.LASF94:
 2976 0c32 70726F74 		.ascii	"protBusMasterMask\000"
 2976      4275734D 
 2976      61737465 
 2976      724D6173 
 2976      6B00
 2977              	.LASF179:
 2978 0c44 64656570 		.ascii	"deepSleep\000"
 2978      536C6565 
 2978      7000
 2979              	.LASF256:
 2980 0c4e 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 2980      7973436C 
 2980      6B5F5065 
 2980      72697068 
 2980      456E6162 
 2981              	.LASF150:
 2982 0c6c 43595F43 		.ascii	"CY_CTB_DEEPSLEEP_ENABLE\000"
 2982      54425F44 
 2982      45455053 
 2982      4C454550 
 2982      5F454E41 
 2983              	.LASF259:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 118


 2984 0c84 56444143 		.ascii	"VDAC_1_Start\000"
 2984      5F315F53 
 2984      74617274 
 2984      00
 2985              	.LASF187:
 2986 0c91 6F61436F 		.ascii	"oaCompIntrEn\000"
 2986      6D70496E 
 2986      7472456E 
 2986      00
 2987              	.LASF133:
 2988 0c9e 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2988      73436D34 
 2988      50777243 
 2988      746C4F66 
 2988      66736574 
 2989              	.LASF3:
 2990 0cb3 5F5F7569 		.ascii	"__uint8_t\000"
 2990      6E74385F 
 2990      7400
 2991              	.LASF252:
 2992 0cbd 56444143 		.ascii	"VDAC_1_outputBufferConfig\000"
 2992      5F315F6F 
 2992      75747075 
 2992      74427566 
 2992      66657243 
 2993              	.LASF124:
 2994 0cd7 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2994      50727449 
 2994      6E747243 
 2994      66674F66 
 2994      66736574 
 2995              	.LASF90:
 2996 0cec 70617373 		.ascii	"passSarChannels\000"
 2996      53617243 
 2996      68616E6E 
 2996      656C7300 
 2997              	.LASF216:
 2998 0cfc 63795F65 		.ascii	"cy_en_ctdac_output_mode_t\000"
 2998      6E5F6374 
 2998      6461635F 
 2998      6F757470 
 2998      75745F6D 
 2999              	.LASF130:
 3000 0d16 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 3000      73436D34 
 3000      436C6F63 
 3000      6B43746C 
 3000      4F666673 
 3001              	.LASF51:
 3002 0d2d 494E5452 		.ascii	"INTR_MASKED\000"
 3002      5F4D4153 
 3002      4B454400 
 3003              	.LASF169:
 3004 0d39 43595F43 		.ascii	"CY_CTB_COMP_DSI_TRIGGER_OUT_PULSE\000"
 3004      54425F43 
 3004      4F4D505F 
 3004      4453495F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 119


 3004      54524947 
 3005              	.LASF135:
 3006 0d5b 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 3006      73547269 
 3006      6D526F6D 
 3006      43746C4F 
 3006      66667365 
 3007              	.LASF74:
 3008 0d71 6873696F 		.ascii	"hsiomVersion\000"
 3008      6D566572 
 3008      73696F6E 
 3008      00
 3009              	.LASF203:
 3010 0d7e 43595F43 		.ascii	"CY_CTDAC_UPDATE_STROBE_LEVEL\000"
 3010      54444143 
 3010      5F555044 
 3010      4154455F 
 3010      5354524F 
 3011              	.LASF10:
 3012 0d9b 6C6F6E67 		.ascii	"long unsigned int\000"
 3012      20756E73 
 3012      69676E65 
 3012      6420696E 
 3012      7400
 3013              	.LASF257:
 3014 0dad 72657456 		.ascii	"retVal\000"
 3014      616C00
 3015              	.LASF139:
 3016 0db4 63707573 		.ascii	"cpussRomCtl\000"
 3016      73526F6D 
 3016      43746C00 
 3017              	.LASF17:
 3018 0dc0 696E7433 		.ascii	"int32_t\000"
 3018      325F7400 
 3019              	.LASF162:
 3020 0dc8 43595F43 		.ascii	"CY_CTB_PUMP_ENABLE\000"
 3020      54425F50 
 3020      554D505F 
 3020      454E4142 
 3020      4C4500
 3021              	.LASF231:
 3022 0ddb 6465676C 		.ascii	"deglitchMode\000"
 3022      69746368 
 3022      4D6F6465 
 3022      00
 3023              	.LASF152:
 3024 0de8 43595F43 		.ascii	"CY_CTB_POWER_OFF\000"
 3024      54425F50 
 3024      4F574552 
 3024      5F4F4646 
 3024      00
 3025              	.LASF62:
 3026 0df9 75646242 		.ascii	"udbBase\000"
 3026      61736500 
 3027              	.LASF53:
 3028 0e01 43544441 		.ascii	"CTDAC_SW_CLEAR\000"
 3028      435F5357 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 120


 3028      5F434C45 
 3028      415200
 3029              	.LASF16:
 3030 0e10 75696E74 		.ascii	"uint16_t\000"
 3030      31365F74 
 3030      00
 3031              	.LASF2:
 3032 0e19 756E7369 		.ascii	"unsigned char\000"
 3032      676E6564 
 3032      20636861 
 3032      7200
 3033              	.LASF163:
 3034 0e27 63795F65 		.ascii	"cy_en_ctb_pump_t\000"
 3034      6E5F6374 
 3034      625F7075 
 3034      6D705F74 
 3034      00
 3035              	.LASF233:
 3036 0e38 6F757470 		.ascii	"outputBuffer\000"
 3036      75744275 
 3036      66666572 
 3036      00
 3037              	.LASF144:
 3038 0e45 6970634C 		.ascii	"ipcLockStatusOffset\000"
 3038      6F636B53 
 3038      74617475 
 3038      734F6666 
 3038      73657400 
 3039              	.LASF255:
 3040 0e59 433A5C55 		.ascii	"C:\\Users\\tmj32\\Documents\\TCNJ\\Senior_Project\\"
 3040      73657273 
 3040      5C746D6A 
 3040      33325C44 
 3040      6F63756D 
 3041 0e86 4F736369 		.ascii	"Oscilloscope_Senior_Project\\Workspace01\\SignalGen"
 3041      6C6C6F73 
 3041      636F7065 
 3041      5F53656E 
 3041      696F725F 
 3042 0eb7 2E637964 		.ascii	".cydsn\000"
 3042      736E00
 3043              	.LASF164:
 3044 0ebe 43595F43 		.ascii	"CY_CTB_COMP_EDGE_DISABLE\000"
 3044      54425F43 
 3044      4F4D505F 
 3044      45444745 
 3044      5F444953 
 3045              	.LASF197:
 3046 0ed7 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 3046      5953434C 
 3046      4B5F4449 
 3046      565F3234 
 3046      5F355F42 
 3047              	.LASF199:
 3048 0eee 43595F43 		.ascii	"CY_CTDAC_UPDATE_DIRECT_WRITE\000"
 3048      54444143 
 3048      5F555044 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 121


 3048      4154455F 
 3048      44495245 
 3049              	.LASF215:
 3050 0f0b 43595F43 		.ascii	"CY_CTDAC_OUTPUT_VREF\000"
 3050      54444143 
 3050      5F4F5554 
 3050      5055545F 
 3050      56524546 
 3051              	.LASF100:
 3052 0f20 666C6173 		.ascii	"flashEraseDelay\000"
 3052      68457261 
 3052      73654465 
 3052      6C617900 
 3053              	.LASF158:
 3054 0f30 43595F43 		.ascii	"CY_CTB_MODE_OPAMP10X\000"
 3054      54425F4D 
 3054      4F44455F 
 3054      4F50414D 
 3054      50313058 
 3055              	.LASF232:
 3056 0f45 6F757470 		.ascii	"outputMode\000"
 3056      75744D6F 
 3056      646500
 3057              	.LASF56:
 3058 0f50 43544441 		.ascii	"CTDAC_V1_Type\000"
 3058      435F5631 
 3058      5F547970 
 3058      6500
 3059              	.LASF198:
 3060 0f5e 63795F65 		.ascii	"cy_en_divider_types_t\000"
 3060      6E5F6469 
 3060      76696465 
 3060      725F7479 
 3060      7065735F 
 3061              	.LASF55:
 3062 0f74 43544441 		.ascii	"CTDAC_VAL_NXT\000"
 3062      435F5641 
 3062      4C5F4E58 
 3062      5400
 3063              	.LASF166:
 3064 0f82 43595F43 		.ascii	"CY_CTB_COMP_EDGE_FALLING\000"
 3064      54425F43 
 3064      4F4D505F 
 3064      45444745 
 3064      5F46414C 
 3065              	.LASF229:
 3066 0f9b 666F726D 		.ascii	"formatMode\000"
 3066      61744D6F 
 3066      646500
 3067              	.LASF96:
 3068 0fa6 666C6173 		.ascii	"flashRwwRequired\000"
 3068      68527777 
 3068      52657175 
 3068      69726564 
 3068      00
 3069              	.LASF183:
 3070 0fb7 6F61436F 		.ascii	"oaCompEdge\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 122


 3070      6D704564 
 3070      676500
 3071              	.LASF125:
 3072 0fc2 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 3072      50727443 
 3072      66674F66 
 3072      66736574 
 3072      00
 3073              	.LASF243:
 3074 0fd3 63795F73 		.ascii	"cy_stc_ctdac_config_t\000"
 3074      74635F63 
 3074      74646163 
 3074      5F636F6E 
 3074      6669675F 
 3075              	.LASF91:
 3076 0fe9 65704D6F 		.ascii	"epMonitorNr\000"
 3076      6E69746F 
 3076      724E7200 
 3077              	.LASF217:
 3078 0ff5 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_NONE\000"
 3078      54444143 
 3078      5F444547 
 3078      4C495443 
 3078      484D4F44 
 3079              	.LASF1:
 3080 1010 7369676E 		.ascii	"signed char\000"
 3080      65642063 
 3080      68617200 
 3081              	.LASF106:
 3082 101c 64774368 		.ascii	"dwChOffset\000"
 3082      4F666673 
 3082      657400
 3083              	.LASF79:
 3084 1027 63707573 		.ascii	"cpussIpcIrqNr\000"
 3084      73497063 
 3084      4972714E 
 3084      7200
 3085              	.LASF109:
 3086 1035 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 3086      43746C50 
 3086      7265656D 
 3086      70746162 
 3086      6C65506F 
 3087              	.LASF258:
 3088 104b 6D61696E 		.ascii	"main\000"
 3088      00
 3089              	.LASF145:
 3090 1050 63795F73 		.ascii	"cy_stc_device_t\000"
 3090      74635F64 
 3090      65766963 
 3090      655F7400 
 3091              	.LASF220:
 3092 1060 43595F43 		.ascii	"CY_CTDAC_DEGLITCHMODE_BOTH\000"
 3092      54444143 
 3092      5F444547 
 3092      4C495443 
 3092      484D4F44 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 123


 3093              	.LASF207:
 3094 107b 63795F65 		.ascii	"cy_en_ctdac_format_t\000"
 3094      6E5F6374 
 3094      6461635F 
 3094      666F726D 
 3094      61745F74 
 3095              	.LASF28:
 3096 1090 41444452 		.ascii	"ADDR0\000"
 3096      3000
 3097              	.LASF30:
 3098 1096 41444452 		.ascii	"ADDR1\000"
 3098      3100
 3099              	.LASF76:
 3100 109c 70657269 		.ascii	"periVersion\000"
 3100      56657273 
 3100      696F6E00 
 3101              	.LASF210:
 3102 10a8 63795F65 		.ascii	"cy_en_ctdac_deep_sleep_t\000"
 3102      6E5F6374 
 3102      6461635F 
 3102      64656570 
 3102      5F736C65 
 3103              	.LASF148:
 3104 10c1 646F7562 		.ascii	"double\000"
 3104      6C6500
 3105              	.LASF66:
 3106 10c8 70617373 		.ascii	"passBase\000"
 3106      42617365 
 3106      00
 3107              	.LASF29:
 3108 10d1 41545430 		.ascii	"ATT0\000"
 3108      00
 3109              	.LASF31:
 3110 10d6 41545431 		.ascii	"ATT1\000"
 3110      00
 3111              	.LASF177:
 3112 10db 63795F65 		.ascii	"cy_en_ctb_comp_hyst_t\000"
 3112      6E5F6374 
 3112      625F636F 
 3112      6D705F68 
 3112      7973745F 
 3113              	.LASF24:
 3114 10f1 52455345 		.ascii	"RESERVED1\000"
 3114      52564544 
 3114      3100
 3115              	.LASF85:
 3116 10fb 73727373 		.ascii	"srssNumClkpath\000"
 3116      4E756D43 
 3116      6C6B7061 
 3116      746800
 3117              	.LASF25:
 3118 110a 50455249 		.ascii	"PERI_GR_V1_Type\000"
 3118      5F47525F 
 3118      56315F54 
 3118      79706500 
 3119              	.LASF105:
 3120 111a 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccX77GIT.s 			page 124


 3120      6843746C 
 3120      4D61696E 
 3120      57733446 
 3120      72657100 
 3121              	.LASF54:
 3122 112e 43544441 		.ascii	"CTDAC_VAL\000"
 3122      435F5641 
 3122      4C00
 3123              	.LASF23:
 3124 1138 54494D45 		.ascii	"TIMEOUT_CTL\000"
 3124      4F55545F 
 3124      43544C00 
 3125              	.LASF181:
 3126 1144 6F614D6F 		.ascii	"oaMode\000"
 3126      646500
 3127              	.LASF75:
 3128 114b 69706356 		.ascii	"ipcVersion\000"
 3128      65727369 
 3128      6F6E00
 3129              	.LASF170:
 3130 1156 43595F43 		.ascii	"CY_CTB_COMP_DSI_TRIGGER_OUT_LEVEL\000"
 3130      54425F43 
 3130      4F4D505F 
 3130      4453495F 
 3130      54524947 
 3131              	.LASF176:
 3132 1178 43595F43 		.ascii	"CY_CTB_COMP_HYST_10MV\000"
 3132      54425F43 
 3132      4F4D505F 
 3132      48595354 
 3132      5F31304D 
 3133              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
