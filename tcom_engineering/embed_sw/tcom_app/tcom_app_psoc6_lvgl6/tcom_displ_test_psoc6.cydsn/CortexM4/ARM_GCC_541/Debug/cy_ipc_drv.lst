ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_ipc_drv.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
  23      72617465 
  23      645F536F 
  23      75726365 
  23      5C50536F 
  24 002e 6970635C 		.ascii	"ipc\\cy_ipc_drv.h\000"
  24      63795F69 
  24      70635F64 
  24      72762E68 
  24      00
  25              		.section	.text.Cy_IPC_Drv_AcquireNotify,"ax",%progbits
  26              		.align	2
  27              		.thumb
  28              		.thumb_func
  29              		.type	Cy_IPC_Drv_AcquireNotify, %function
  30              	Cy_IPC_Drv_AcquireNotify:
  31              	.LFB140:
  32              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 2


  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Include either cy_ipc_pipe.h or cy_ipc_sema.h. Alternatively include cy_pdl.h 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are three parts to the API:
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       processors
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       synchronize operations.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and complexity.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 3


  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * reserved for system use.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * direction.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * required by the application's logic.
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The PDL provides specific files that set up default IPC functionality.
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * They are system_psoc6.h, system_psoc6_cm0plus.c and system_psoc6_cm4.c. You 
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can modify these files based on the requirements of your design. 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If you use PSoC Creator as a development environment, it will not overwrite 
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * your changes when you generate the application or build your code.
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release masks used.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 4


 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are none. The startup files set up the required CYPIPE for system
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * duplex communication between cores. See System Interrupt (SysInt) for background.
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To create your own pipe (<b>USRPIPE</b>) you should edit startup files
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and take 4 steps:
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a pipe callbacks processing interrupt handler
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>Cy_SysIpcPipeIsrCm0</b> or <b>Cy_SysIpcPipeIsrCm4</b>)
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a callbacks array (similar to <b>systemIpcPipeSysCbArray</b>)
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration with a cy_stc_ipc_pipe_config_t type structure
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>systemIpcPipeConfigCm0</b> and <b>systemIpcPipeConfigCm4</b>)
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() from each core to initialize your pipe (similar
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      to call in the <b>SystemInit</b>)
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_Sema_Init() with default values to set up semaphore 
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. By default the semaphore system uses IPC channel 4, and 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * creates 128 semaphores. Do <b>not</b> change the IPC channel. 
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You can change the number of semaphores.
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in system_psoc6.h.
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \code
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 5


 189:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \endcode
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup also declares array ipcSemaArray to hold the semaphore
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If the default startup file is not used, or SystemInit() is not called in your 
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * project, call the following three functions prior to executing any flash or 
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * EmEEPROM write or erase operation:
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Sema_Init()
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Config()
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Init()
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>R</td>
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A</td>
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td rowspan="3">1.30</td>
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 6


 246:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Driver library directory-structure simplification.</td>
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Moved the Cy_IPC_SystemSemaInit(), Cy_IPC_SystemPipeInit() functions implementation from 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Changed IPC driver configuration method from compile time to run time.</td>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added register access layer. Use register access macros instead
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         of direct register access using dereferenced pointers.</td>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Makes register access device-independent, so that the PDL does 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         not need to be recompiled for each supported part number.</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.20</td>
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added \ref Cy_IPC_Pipe_ExecuteCallback function.
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Updated documentation about user pipe initialization.
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Interface improvement, documentation update</td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>New device support</td>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td></td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Users are not expected to call any of these IPC functions directly (cy_ipc_drv.h). 
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Instead include either of cy_ipc_sema.h or cy_ipc_pipe.h. 
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Alternatively include cy_pdl.h to get access to all functions and declarations in the PDL.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 7


 303:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \}
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Include files                                                              */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device.h"
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_syslib.h"
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include <stddef.h>
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver major version */
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver minor version */
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       30
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Error Code constants */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t) cy_device->cpussIpc0Irq + (x))
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* end of definition in device.h */
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #if (CY_CPU_CORTEX_M0P)
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM0
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #else
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM4
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif  /* (CY_CPU_CORTEX_M0P) */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 8


 360:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** typedef enum
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         in the function description */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** extern "C" {
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 9


 417:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIndex
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel registers.
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_CHANNELS > ipcIndex);
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 10


 474:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_INTERRUPTS > ipcIntrIndex);
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) &(((IPC_Type *)cy_device->ipcBase)->INTR_STRUCT[ipcIntrIndex])
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcAcquireMask)
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_MASK(base) = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcAcquireMa
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 11


 531:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASK(base);
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the interrupt.
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASKED(base);
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 12


 588:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR(base);
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * only if they are not masked.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_SET(base) =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask ) 
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 13


 645:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR(base) =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask) |
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     (void)REG_IPC_INTR_STRUCT_INTR(base);  /* Read the register to flush the cache */
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc */
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a acquire notification event by IPC interrupt structure.
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * structure.
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
  33              		.loc 1 698 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 14


  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46 0008 3960     		str	r1, [r7]
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
  47              		.loc 1 699 0
  48 000a 3B68     		ldr	r3, [r7]
  49 000c 1B0C     		lsrs	r3, r3, #16
  50 000e 1B04     		lsls	r3, r3, #16
  51 0010 002B     		cmp	r3, #0
  52 0012 04D0     		beq	.L2
  53              		.loc 1 699 0 is_stmt 0 discriminator 1
  54 0014 40F2BB21 		movw	r1, #699
  55 0018 0548     		ldr	r0, .L3
  56 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  57              	.L2:
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
  58              		.loc 1 700 0 is_stmt 1
  59 001e 3B68     		ldr	r3, [r7]
  60 0020 9AB2     		uxth	r2, r3
  61 0022 7B68     		ldr	r3, [r7, #4]
  62 0024 9A60     		str	r2, [r3, #8]
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
  63              		.loc 1 701 0
  64 0026 00BF     		nop
  65 0028 0837     		adds	r7, r7, #8
  66              		.cfi_def_cfa_offset 8
  67 002a BD46     		mov	sp, r7
  68              		.cfi_def_cfa_register 13
  69              		@ sp needed
  70 002c 80BD     		pop	{r7, pc}
  71              	.L4:
  72 002e 00BF     		.align	2
  73              	.L3:
  74 0030 00000000 		.word	.LC0
  75              		.cfi_endproc
  76              	.LFE140:
  77              		.size	Cy_IPC_Drv_AcquireNotify, .-Cy_IPC_Drv_AcquireNotify
  78              		.section	.text.Cy_IPC_Drv_ReleaseNotify,"ax",%progbits
  79              		.align	2
  80              		.thumb
  81              		.thumb_func
  82              		.type	Cy_IPC_Drv_ReleaseNotify, %function
  83              	Cy_IPC_Drv_ReleaseNotify:
  84              	.LFB141:
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 15


 707:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a release notification event by IPC interrupt structure.
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
  85              		.loc 1 724 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 8
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 82B0     		sub	sp, sp, #8
  94              		.cfi_def_cfa_offset 16
  95 0004 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  98 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_INTR_STRUCT_INTR_RELEASE_Msk)));
  99              		.loc 1 725 0
 100 000a 3B68     		ldr	r3, [r7]
 101 000c 1B0C     		lsrs	r3, r3, #16
 102 000e 1B04     		lsls	r3, r3, #16
 103 0010 002B     		cmp	r3, #0
 104 0012 04D0     		beq	.L6
 105              		.loc 1 725 0 is_stmt 0 discriminator 1
 106 0014 40F2D521 		movw	r1, #725
 107 0018 0548     		ldr	r0, .L7
 108 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 109              	.L6:
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 110              		.loc 1 726 0 is_stmt 1
 111 001e 3B68     		ldr	r3, [r7]
 112 0020 9AB2     		uxth	r2, r3
 113 0022 7B68     		ldr	r3, [r7, #4]
 114 0024 5A60     		str	r2, [r3, #4]
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 115              		.loc 1 727 0
 116 0026 00BF     		nop
 117 0028 0837     		adds	r7, r7, #8
 118              		.cfi_def_cfa_offset 8
 119 002a BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 16


 121              		@ sp needed
 122 002c 80BD     		pop	{r7, pc}
 123              	.L8:
 124 002e 00BF     		.align	2
 125              	.L7:
 126 0030 00000000 		.word	.LC0
 127              		.cfi_endproc
 128              	.LFE141:
 129              		.size	Cy_IPC_Drv_ReleaseNotify, .-Cy_IPC_Drv_ReleaseNotify
 130              		.section	.text.Cy_IPC_Drv_WriteDataValue,"ax",%progbits
 131              		.align	2
 132              		.thumb
 133              		.thumb_func
 134              		.type	Cy_IPC_Drv_WriteDataValue, %function
 135              	Cy_IPC_Drv_WriteDataValue:
 136              	.LFB142:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param dataValue
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value to be written.
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 137              		.loc 1 750 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0000 80B4     		push	{r7}
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 0002 83B0     		sub	sp, sp, #12
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 149 0006 7860     		str	r0, [r7, #4]
 150 0008 3960     		str	r1, [r7]
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_DATA(base) = dataValue;
 151              		.loc 1 751 0
 152 000a 7B68     		ldr	r3, [r7, #4]
 153 000c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 17


 154 000e DA60     		str	r2, [r3, #12]
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 155              		.loc 1 752 0
 156 0010 00BF     		nop
 157 0012 0C37     		adds	r7, r7, #12
 158              		.cfi_def_cfa_offset 4
 159 0014 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0016 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 001a 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE142:
 168              		.size	Cy_IPC_Drv_WriteDataValue, .-Cy_IPC_Drv_WriteDataValue
 169              		.section	.text.Cy_IPC_Drv_ReadDataValue,"ax",%progbits
 170              		.align	2
 171              		.thumb
 172              		.thumb_func
 173              		.type	Cy_IPC_Drv_ReadDataValue, %function
 174              	Cy_IPC_Drv_ReadDataValue:
 175              	.LFB143:
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from DATA register.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 176              		.loc 1 775 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 8
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 7, -4
 184 0002 83B0     		sub	sp, sp, #12
 185              		.cfi_def_cfa_offset 16
 186 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 18


 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_DATA(base);
 189              		.loc 1 776 0
 190 0008 7B68     		ldr	r3, [r7, #4]
 191 000a DB68     		ldr	r3, [r3, #12]
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 192              		.loc 1 777 0
 193 000c 1846     		mov	r0, r3
 194 000e 0C37     		adds	r7, r7, #12
 195              		.cfi_def_cfa_offset 4
 196 0010 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0012 5DF8047B 		ldr	r7, [sp], #4
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 0016 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE143:
 205              		.size	Cy_IPC_Drv_ReadDataValue, .-Cy_IPC_Drv_ReadDataValue
 206              		.section	.text.Cy_IPC_Drv_IsLockAcquired,"ax",%progbits
 207              		.align	2
 208              		.thumb
 209              		.thumb_func
 210              		.type	Cy_IPC_Drv_IsLockAcquired, %function
 211              	Cy_IPC_Drv_IsLockAcquired:
 212              	.LFB144:
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Status for the function:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 213              		.loc 1 803 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 19


 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 83B0     		sub	sp, sp, #12
 222              		.cfi_def_cfa_offset 16
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 225 0006 7860     		str	r0, [r7, #4]
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_LOCK_STATUS(base)) );
 226              		.loc 1 804 0
 227 0008 084B     		ldr	r3, .L14
 228 000a 1B68     		ldr	r3, [r3]
 229 000c D3F8B420 		ldr	r2, [r3, #180]
 230 0010 7B68     		ldr	r3, [r7, #4]
 231 0012 1344     		add	r3, r3, r2
 232 0014 1B68     		ldr	r3, [r3]
 233 0016 03F00043 		and	r3, r3, #-2147483648
 234 001a DB0F     		lsrs	r3, r3, #31
 235 001c DBB2     		uxtb	r3, r3
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 236              		.loc 1 805 0
 237 001e 1846     		mov	r0, r3
 238 0020 0C37     		adds	r7, r7, #12
 239              		.cfi_def_cfa_offset 4
 240 0022 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 0024 5DF8047B 		ldr	r7, [sp], #4
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 0028 7047     		bx	lr
 247              	.L15:
 248 002a 00BF     		.align	2
 249              	.L14:
 250 002c 00000000 		.word	cy_device
 251              		.cfi_endproc
 252              	.LFE144:
 253              		.size	Cy_IPC_Drv_IsLockAcquired, .-Cy_IPC_Drv_IsLockAcquired
 254              		.section	.text.Cy_IPC_Drv_LockAcquire,"ax",%progbits
 255              		.align	2
 256              		.thumb
 257              		.thumb_func
 258              		.type	Cy_IPC_Drv_LockAcquire, %function
 259              	Cy_IPC_Drv_LockAcquire:
 260              	.LFB150:
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 20


 816:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_LOCK_STATUS(base);
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Acquire mask value.
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release mask value.
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 21


 873:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * code.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * action.
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                               it is already locked.
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadMsgPtr
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read a 32-bit pointer message through an IPC channel.
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 22


 930:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Pointer variable to hold the data pointer that is being read from the IPC
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel.
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return Status of the operation
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       was acquired.
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       channel was already in a released state meaning the data
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       in it is invalid.
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void *
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_ReadMsgWord(base, (uint32_t *)msgPtr);
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_LockAcquire
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to acquire the IPC channel.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The IPC was successfully acquired
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC was not acquired because it was already acquired
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       by another master
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base)
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 261              		.loc 1 977 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 23


 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0ul != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_ACQUIRE(base))) ? CY_IPC_DR
 274              		.loc 1 978 0
 275 0008 7B68     		ldr	r3, [r7, #4]
 276 000a 1B68     		ldr	r3, [r3]
 277 000c 03F00043 		and	r3, r3, #-2147483648
 278 0010 002B     		cmp	r3, #0
 279 0012 01DA     		bge	.L17
 280              		.loc 1 978 0 is_stmt 0 discriminator 1
 281 0014 0023     		movs	r3, #0
 282 0016 00E0     		b	.L19
 283              	.L17:
 284              		.loc 1 978 0 discriminator 2
 285 0018 034B     		ldr	r3, .L20
 286              	.L19:
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 287              		.loc 1 979 0 is_stmt 1 discriminator 5
 288 001a 1846     		mov	r0, r3
 289 001c 0C37     		adds	r7, r7, #12
 290              		.cfi_def_cfa_offset 4
 291 001e BD46     		mov	sp, r7
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0020 5DF8047B 		ldr	r7, [sp], #4
 295              		.cfi_restore 7
 296              		.cfi_def_cfa_offset 0
 297 0024 7047     		bx	lr
 298              	.L21:
 299 0026 00BF     		.align	2
 300              	.L20:
 301 0028 01008A00 		.word	9043969
 302              		.cfi_endproc
 303              	.LFE150:
 304              		.size	Cy_IPC_Drv_LockAcquire, .-Cy_IPC_Drv_LockAcquire
 305              		.section	.text.Cy_IPC_Drv_LockRelease,"ax",%progbits
 306              		.align	2
 307              		.global	Cy_IPC_Drv_LockRelease
 308              		.thumb
 309              		.thumb_func
 310              		.type	Cy_IPC_Drv_LockRelease, %function
 311              	Cy_IPC_Drv_LockRelease:
 312              	.LFB151:
 313              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \file cy_ipc_drv.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  \brief
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   IPC Driver - This source file contains the low-level driver code for
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   the IPC hardware.
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ********************************************************************************
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 24


  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** #include "cy_ipc_drv.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_LockRelease
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function is used to release an IPC channel from the locked state.
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has a way to specify through a parameter which IPC
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * interrupts must be notified during the release event.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param releaseEventIntr
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a release event.
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC channel
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was released.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel was not acquired before the
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       function call.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type* base, uint32_t releaseEventIntr)
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 314              		.loc 2 47 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 16
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318 0000 80B5     		push	{r7, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322 0002 84B0     		sub	sp, sp, #16
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 327 0008 3960     		str	r1, [r7]
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     /* Check to make sure the IPC is Acquired */
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( Cy_IPC_Drv_IsLockAcquired(base) )
 328              		.loc 2 51 0
 329 000a 7868     		ldr	r0, [r7, #4]
 330 000c FFF7FEFF 		bl	Cy_IPC_Drv_IsLockAcquired
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 25


 331 0010 0346     		mov	r3, r0
 332 0012 002B     		cmp	r3, #0
 333 0014 06D0     		beq	.L23
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The IPC was acquired, release the IPC channel */
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_ReleaseNotify(base, releaseEventIntr);
 334              		.loc 2 54 0
 335 0016 3968     		ldr	r1, [r7]
 336 0018 7868     		ldr	r0, [r7, #4]
 337 001a FFF7FEFF 		bl	Cy_IPC_Drv_ReleaseNotify
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 338              		.loc 2 56 0
 339 001e 0023     		movs	r3, #0
 340 0020 FB60     		str	r3, [r7, #12]
 341 0022 01E0     		b	.L24
 342              	.L23:
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else   /* The IPC channel was already released (not acquired) */
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 343              		.loc 2 60 0
 344 0024 034B     		ldr	r3, .L26
 345 0026 FB60     		str	r3, [r7, #12]
 346              	.L24:
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
 347              		.loc 2 63 0
 348 0028 FB68     		ldr	r3, [r7, #12]
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 349              		.loc 2 64 0
 350 002a 1846     		mov	r0, r3
 351 002c 1037     		adds	r7, r7, #16
 352              		.cfi_def_cfa_offset 8
 353 002e BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 0030 80BD     		pop	{r7, pc}
 357              	.L27:
 358 0032 00BF     		.align	2
 359              	.L26:
 360 0034 01008A00 		.word	9043969
 361              		.cfi_endproc
 362              	.LFE151:
 363              		.size	Cy_IPC_Drv_LockRelease, .-Cy_IPC_Drv_LockRelease
 364              		.section	.text.Cy_IPC_Drv_SendMsgWord,"ax",%progbits
 365              		.align	2
 366              		.global	Cy_IPC_Drv_SendMsgWord
 367              		.thumb
 368              		.thumb_func
 369              		.type	Cy_IPC_Drv_SendMsgWord, %function
 370              	Cy_IPC_Drv_SendMsgWord:
 371              	.LFB152:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 26


  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_SendMsgWord
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to send a 32-bit word message through an IPC channel.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The function also has an associated notification field that will let the
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * message notify one or multiple IPC interrupts. The IPC channel is locked and
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * remains locked after the function returns.  The receiver of the message should
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * release the channel.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param notifyEventIntr
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The message word that is the data placed in the IPC data register.
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return   Status of the operation:
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR: The IPC channel is unavailable because it is already locked.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type* base, uint32_t notifyEventIntr, uin
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 372              		.loc 2 98 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 24
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 86B0     		sub	sp, sp, #24
 381              		.cfi_def_cfa_offset 32
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 384 0006 F860     		str	r0, [r7, #12]
 385 0008 B960     		str	r1, [r7, #8]
 386 000a 7A60     		str	r2, [r7, #4]
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if( CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockAcquire(base) )
 387              		.loc 2 101 0
 388 000c F868     		ldr	r0, [r7, #12]
 389 000e FFF7FEFF 		bl	Cy_IPC_Drv_LockAcquire
 390 0012 0346     		mov	r3, r0
 391 0014 002B     		cmp	r3, #0
 392 0016 0AD1     		bne	.L29
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* If the channel was acquired, send the message. */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 27


 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_WriteDataValue(base, message);
 393              		.loc 2 104 0
 394 0018 7968     		ldr	r1, [r7, #4]
 395 001a F868     		ldr	r0, [r7, #12]
 396 001c FFF7FEFF 		bl	Cy_IPC_Drv_WriteDataValue
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         Cy_IPC_Drv_AcquireNotify(base, notifyEventIntr);
 397              		.loc 2 106 0
 398 0020 B968     		ldr	r1, [r7, #8]
 399 0022 F868     		ldr	r0, [r7, #12]
 400 0024 FFF7FEFF 		bl	Cy_IPC_Drv_AcquireNotify
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 401              		.loc 2 108 0
 402 0028 0023     		movs	r3, #0
 403 002a 7B61     		str	r3, [r7, #20]
 404 002c 01E0     		b	.L30
 405              	.L29:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* Channel was already acquired, return Error */
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 406              		.loc 2 113 0
 407 002e 034B     		ldr	r3, .L32
 408 0030 7B61     		str	r3, [r7, #20]
 409              	.L30:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return (retStatus);
 410              		.loc 2 115 0
 411 0032 7B69     		ldr	r3, [r7, #20]
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 412              		.loc 2 116 0
 413 0034 1846     		mov	r0, r3
 414 0036 1837     		adds	r7, r7, #24
 415              		.cfi_def_cfa_offset 8
 416 0038 BD46     		mov	sp, r7
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 003a 80BD     		pop	{r7, pc}
 420              	.L33:
 421              		.align	2
 422              	.L32:
 423 003c 01008A00 		.word	9043969
 424              		.cfi_endproc
 425              	.LFE152:
 426              		.size	Cy_IPC_Drv_SendMsgWord, .-Cy_IPC_Drv_SendMsgWord
 427              		.section	.rodata
 428 003f 00       		.align	2
 429              	.LC1:
 430 0040 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 430      72617465 
 430      645F536F 
 430      75726365 
 430      5C50536F 
 431 006e 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 431      63795F69 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 28


 431      70635F64 
 431      72762E63 
 431      00
 432              		.section	.text.Cy_IPC_Drv_ReadMsgWord,"ax",%progbits
 433              		.align	2
 434              		.global	Cy_IPC_Drv_ReadMsgWord
 435              		.thumb
 436              		.thumb_func
 437              		.type	Cy_IPC_Drv_ReadMsgWord, %function
 438              	Cy_IPC_Drv_ReadMsgWord:
 439              	.LFB153:
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** /*******************************************************************************
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Function Name: Cy_IPC_Drv_ReadMsgWord
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** ****************************************************************************//**
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function is used to read a 32-bit word message through an IPC channel.
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This function assumes that the channel is locked (for a valid message).
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * If the channel is not locked, the message is invalid.  The user must call
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_Release() function after reading the message to release the
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * IPC channel.
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param base
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * This parameter is a handle that represents the base address of the registers
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * of the IPC channel.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * The parameter is generally returned from a call to the \ref
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * Cy_IPC_Drv_GetIpcBaseAddress.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \param message
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *  A variable where the read data is copied.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \return  Status of the operation
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       was acquired.
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       channel was already in a released state, meaning the data
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *                       may be invalid.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \funcusage
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** *******************************************************************************/
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message)
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** {
 440              		.loc 2 150 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 84B0     		sub	sp, sp, #16
 449              		.cfi_def_cfa_offset 24
 450 0004 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 29


 452 0006 7860     		str	r0, [r7, #4]
 453 0008 3960     		str	r1, [r7]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     cy_en_ipcdrv_status_t retStatus;
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     CY_ASSERT_L1(NULL != message);
 454              		.loc 2 153 0
 455 000a 3B68     		ldr	r3, [r7]
 456 000c 002B     		cmp	r3, #0
 457 000e 03D1     		bne	.L35
 458              		.loc 2 153 0 is_stmt 0 discriminator 1
 459 0010 9921     		movs	r1, #153
 460 0012 0C48     		ldr	r0, .L39
 461 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 462              	.L35:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     if ( Cy_IPC_Drv_IsLockAcquired(base) )
 463              		.loc 2 155 0 is_stmt 1
 464 0018 7868     		ldr	r0, [r7, #4]
 465 001a FFF7FEFF 		bl	Cy_IPC_Drv_IsLockAcquired
 466 001e 0346     		mov	r3, r0
 467 0020 002B     		cmp	r3, #0
 468 0022 08D0     		beq	.L36
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is locked; message is valid. */
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         *message = Cy_IPC_Drv_ReadDataValue(base);
 469              		.loc 2 158 0
 470 0024 7868     		ldr	r0, [r7, #4]
 471 0026 FFF7FEFF 		bl	Cy_IPC_Drv_ReadDataValue
 472 002a 0246     		mov	r2, r0
 473 002c 3B68     		ldr	r3, [r7]
 474 002e 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** 
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_SUCCESS;
 475              		.loc 2 160 0
 476 0030 0023     		movs	r3, #0
 477 0032 FB60     		str	r3, [r7, #12]
 478 0034 01E0     		b	.L37
 479              	.L36:
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     else
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     {
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         /* The channel is not locked so channel is invalid. */
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****         retStatus = CY_IPC_DRV_ERROR;
 480              		.loc 2 165 0
 481 0036 044B     		ldr	r3, .L39+4
 482 0038 FB60     		str	r3, [r7, #12]
 483              	.L37:
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     }
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c ****     return(retStatus);
 484              		.loc 2 167 0
 485 003a FB68     		ldr	r3, [r7, #12]
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.c **** }
 486              		.loc 2 168 0
 487 003c 1846     		mov	r0, r3
 488 003e 1037     		adds	r7, r7, #16
 489              		.cfi_def_cfa_offset 8
 490 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 30


 491              		.cfi_def_cfa_register 13
 492              		@ sp needed
 493 0042 80BD     		pop	{r7, pc}
 494              	.L40:
 495              		.align	2
 496              	.L39:
 497 0044 40000000 		.word	.LC1
 498 0048 01008A00 		.word	9043969
 499              		.cfi_endproc
 500              	.LFE153:
 501              		.size	Cy_IPC_Drv_ReadMsgWord, .-Cy_IPC_Drv_ReadMsgWord
 502              		.text
 503              	.Letext0:
 504              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 505              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 506              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ipc.h"
 507              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 508              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 509              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 510              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 511              		.section	.debug_info,"",%progbits
 512              	.Ldebug_info0:
 513 0000 12080000 		.4byte	0x812
 514 0004 0400     		.2byte	0x4
 515 0006 00000000 		.4byte	.Ldebug_abbrev0
 516 000a 04       		.byte	0x4
 517 000b 01       		.uleb128 0x1
 518 000c 12000000 		.4byte	.LASF141
 519 0010 0C       		.byte	0xc
 520 0011 AD080000 		.4byte	.LASF142
 521 0015 E4060000 		.4byte	.LASF143
 522 0019 00000000 		.4byte	.Ldebug_ranges0+0
 523 001d 00000000 		.4byte	0
 524 0021 00000000 		.4byte	.Ldebug_line0
 525 0025 02       		.uleb128 0x2
 526 0026 01       		.byte	0x1
 527 0027 06       		.byte	0x6
 528 0028 27020000 		.4byte	.LASF0
 529 002c 03       		.uleb128 0x3
 530 002d 36010000 		.4byte	.LASF2
 531 0031 03       		.byte	0x3
 532 0032 1D       		.byte	0x1d
 533 0033 37000000 		.4byte	0x37
 534 0037 02       		.uleb128 0x2
 535 0038 01       		.byte	0x1
 536 0039 08       		.byte	0x8
 537 003a 45060000 		.4byte	.LASF1
 538 003e 03       		.uleb128 0x3
 539 003f 72030000 		.4byte	.LASF3
 540 0043 03       		.byte	0x3
 541 0044 29       		.byte	0x29
 542 0045 49000000 		.4byte	0x49
 543 0049 02       		.uleb128 0x2
 544 004a 02       		.byte	0x2
 545 004b 05       		.byte	0x5
 546 004c 67060000 		.4byte	.LASF4
 547 0050 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 31


 548 0051 CC070000 		.4byte	.LASF5
 549 0055 03       		.byte	0x3
 550 0056 2B       		.byte	0x2b
 551 0057 5B000000 		.4byte	0x5b
 552 005b 02       		.uleb128 0x2
 553 005c 02       		.byte	0x2
 554 005d 07       		.byte	0x7
 555 005e 2E080000 		.4byte	.LASF6
 556 0062 03       		.uleb128 0x3
 557 0063 EA070000 		.4byte	.LASF7
 558 0067 03       		.byte	0x3
 559 0068 3F       		.byte	0x3f
 560 0069 6D000000 		.4byte	0x6d
 561 006d 02       		.uleb128 0x2
 562 006e 04       		.byte	0x4
 563 006f 05       		.byte	0x5
 564 0070 A0020000 		.4byte	.LASF8
 565 0074 03       		.uleb128 0x3
 566 0075 4B030000 		.4byte	.LASF9
 567 0079 03       		.byte	0x3
 568 007a 41       		.byte	0x41
 569 007b 7F000000 		.4byte	0x7f
 570 007f 02       		.uleb128 0x2
 571 0080 04       		.byte	0x4
 572 0081 07       		.byte	0x7
 573 0082 F3030000 		.4byte	.LASF10
 574 0086 02       		.uleb128 0x2
 575 0087 08       		.byte	0x8
 576 0088 05       		.byte	0x5
 577 0089 19020000 		.4byte	.LASF11
 578 008d 02       		.uleb128 0x2
 579 008e 08       		.byte	0x8
 580 008f 07       		.byte	0x7
 581 0090 99010000 		.4byte	.LASF12
 582 0094 04       		.uleb128 0x4
 583 0095 04       		.byte	0x4
 584 0096 05       		.byte	0x5
 585 0097 696E7400 		.ascii	"int\000"
 586 009b 02       		.uleb128 0x2
 587 009c 04       		.byte	0x4
 588 009d 07       		.byte	0x7
 589 009e C4030000 		.4byte	.LASF13
 590 00a2 03       		.uleb128 0x3
 591 00a3 FC080000 		.4byte	.LASF14
 592 00a7 04       		.byte	0x4
 593 00a8 18       		.byte	0x18
 594 00a9 2C000000 		.4byte	0x2c
 595 00ad 03       		.uleb128 0x3
 596 00ae 11020000 		.4byte	.LASF15
 597 00b2 04       		.byte	0x4
 598 00b3 20       		.byte	0x20
 599 00b4 3E000000 		.4byte	0x3e
 600 00b8 03       		.uleb128 0x3
 601 00b9 D1030000 		.4byte	.LASF16
 602 00bd 04       		.byte	0x4
 603 00be 24       		.byte	0x24
 604 00bf 50000000 		.4byte	0x50
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 32


 605 00c3 03       		.uleb128 0x3
 606 00c4 3D060000 		.4byte	.LASF17
 607 00c8 04       		.byte	0x4
 608 00c9 2C       		.byte	0x2c
 609 00ca 62000000 		.4byte	0x62
 610 00ce 03       		.uleb128 0x3
 611 00cf 81070000 		.4byte	.LASF18
 612 00d3 04       		.byte	0x4
 613 00d4 30       		.byte	0x30
 614 00d5 74000000 		.4byte	0x74
 615 00d9 02       		.uleb128 0x2
 616 00da 08       		.byte	0x8
 617 00db 04       		.byte	0x4
 618 00dc 8A070000 		.4byte	.LASF19
 619 00e0 05       		.uleb128 0x5
 620 00e1 CE000000 		.4byte	0xce
 621 00e5 06       		.uleb128 0x6
 622 00e6 E0000000 		.4byte	0xe0
 623 00ea 07       		.uleb128 0x7
 624 00eb E5000000 		.4byte	0xe5
 625 00ef FA000000 		.4byte	0xfa
 626 00f3 08       		.uleb128 0x8
 627 00f4 FA000000 		.4byte	0xfa
 628 00f8 02       		.byte	0x2
 629 00f9 00       		.byte	0
 630 00fa 02       		.uleb128 0x2
 631 00fb 04       		.byte	0x4
 632 00fc 07       		.byte	0x7
 633 00fd 25050000 		.4byte	.LASF20
 634 0101 09       		.uleb128 0x9
 635 0102 20       		.byte	0x20
 636 0103 05       		.byte	0x5
 637 0104 23       		.byte	0x23
 638 0105 52010000 		.4byte	0x152
 639 0109 0A       		.uleb128 0xa
 640 010a 48020000 		.4byte	.LASF21
 641 010e 05       		.byte	0x5
 642 010f 24       		.byte	0x24
 643 0110 E5000000 		.4byte	0xe5
 644 0114 00       		.byte	0
 645 0115 0A       		.uleb128 0xa
 646 0116 6C010000 		.4byte	.LASF22
 647 011a 05       		.byte	0x5
 648 011b 25       		.byte	0x25
 649 011c E0000000 		.4byte	0xe0
 650 0120 04       		.byte	0x4
 651 0121 0A       		.uleb128 0xa
 652 0122 A8040000 		.4byte	.LASF23
 653 0126 05       		.byte	0x5
 654 0127 26       		.byte	0x26
 655 0128 E0000000 		.4byte	0xe0
 656 012c 08       		.byte	0x8
 657 012d 0A       		.uleb128 0xa
 658 012e 4D040000 		.4byte	.LASF24
 659 0132 05       		.byte	0x5
 660 0133 27       		.byte	0x27
 661 0134 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 33


 662 0138 0C       		.byte	0xc
 663 0139 0A       		.uleb128 0xa
 664 013a 66030000 		.4byte	.LASF25
 665 013e 05       		.byte	0x5
 666 013f 28       		.byte	0x28
 667 0140 E5000000 		.4byte	0xe5
 668 0144 10       		.byte	0x10
 669 0145 0A       		.uleb128 0xa
 670 0146 84060000 		.4byte	.LASF26
 671 014a 05       		.byte	0x5
 672 014b 29       		.byte	0x29
 673 014c 57010000 		.4byte	0x157
 674 0150 14       		.byte	0x14
 675 0151 00       		.byte	0
 676 0152 05       		.uleb128 0x5
 677 0153 EA000000 		.4byte	0xea
 678 0157 06       		.uleb128 0x6
 679 0158 52010000 		.4byte	0x152
 680 015c 03       		.uleb128 0x3
 681 015d 71060000 		.4byte	.LASF27
 682 0161 05       		.byte	0x5
 683 0162 2A       		.byte	0x2a
 684 0163 01010000 		.4byte	0x101
 685 0167 09       		.uleb128 0x9
 686 0168 B8       		.byte	0xb8
 687 0169 06       		.byte	0x6
 688 016a 34       		.byte	0x34
 689 016b 78050000 		.4byte	0x578
 690 016f 0A       		.uleb128 0xa
 691 0170 74010000 		.4byte	.LASF28
 692 0174 06       		.byte	0x6
 693 0175 37       		.byte	0x37
 694 0176 CE000000 		.4byte	0xce
 695 017a 00       		.byte	0
 696 017b 0A       		.uleb128 0xa
 697 017c 40030000 		.4byte	.LASF29
 698 0180 06       		.byte	0x6
 699 0181 38       		.byte	0x38
 700 0182 CE000000 		.4byte	0xce
 701 0186 04       		.byte	0x4
 702 0187 0A       		.uleb128 0xa
 703 0188 B7020000 		.4byte	.LASF30
 704 018c 06       		.byte	0x6
 705 018d 39       		.byte	0x39
 706 018e CE000000 		.4byte	0xce
 707 0192 08       		.byte	0x8
 708 0193 0A       		.uleb128 0xa
 709 0194 F5010000 		.4byte	.LASF31
 710 0198 06       		.byte	0x6
 711 0199 3A       		.byte	0x3a
 712 019a CE000000 		.4byte	0xce
 713 019e 0C       		.byte	0xc
 714 019f 0A       		.uleb128 0xa
 715 01a0 76080000 		.4byte	.LASF32
 716 01a4 06       		.byte	0x6
 717 01a5 3B       		.byte	0x3b
 718 01a6 CE000000 		.4byte	0xce
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 34


 719 01aa 10       		.byte	0x10
 720 01ab 0A       		.uleb128 0xa
 721 01ac 96020000 		.4byte	.LASF33
 722 01b0 06       		.byte	0x6
 723 01b1 3C       		.byte	0x3c
 724 01b2 CE000000 		.4byte	0xce
 725 01b6 14       		.byte	0x14
 726 01b7 0A       		.uleb128 0xa
 727 01b8 10040000 		.4byte	.LASF34
 728 01bc 06       		.byte	0x6
 729 01bd 3D       		.byte	0x3d
 730 01be CE000000 		.4byte	0xce
 731 01c2 18       		.byte	0x18
 732 01c3 0A       		.uleb128 0xa
 733 01c4 1F010000 		.4byte	.LASF35
 734 01c8 06       		.byte	0x6
 735 01c9 3E       		.byte	0x3e
 736 01ca CE000000 		.4byte	0xce
 737 01ce 1C       		.byte	0x1c
 738 01cf 0A       		.uleb128 0xa
 739 01d0 6D090000 		.4byte	.LASF36
 740 01d4 06       		.byte	0x6
 741 01d5 3F       		.byte	0x3f
 742 01d6 CE000000 		.4byte	0xce
 743 01da 20       		.byte	0x20
 744 01db 0A       		.uleb128 0xa
 745 01dc F4040000 		.4byte	.LASF37
 746 01e0 06       		.byte	0x6
 747 01e1 40       		.byte	0x40
 748 01e2 CE000000 		.4byte	0xce
 749 01e6 24       		.byte	0x24
 750 01e7 0A       		.uleb128 0xa
 751 01e8 D0040000 		.4byte	.LASF38
 752 01ec 06       		.byte	0x6
 753 01ed 43       		.byte	0x43
 754 01ee A2000000 		.4byte	0xa2
 755 01f2 28       		.byte	0x28
 756 01f3 0A       		.uleb128 0xa
 757 01f4 00010000 		.4byte	.LASF39
 758 01f8 06       		.byte	0x6
 759 01f9 44       		.byte	0x44
 760 01fa A2000000 		.4byte	0xa2
 761 01fe 29       		.byte	0x29
 762 01ff 0A       		.uleb128 0xa
 763 0200 63090000 		.4byte	.LASF40
 764 0204 06       		.byte	0x6
 765 0205 45       		.byte	0x45
 766 0206 A2000000 		.4byte	0xa2
 767 020a 2A       		.byte	0x2a
 768 020b 0A       		.uleb128 0xa
 769 020c B5050000 		.4byte	.LASF41
 770 0210 06       		.byte	0x6
 771 0211 46       		.byte	0x46
 772 0212 A2000000 		.4byte	0xa2
 773 0216 2B       		.byte	0x2b
 774 0217 0A       		.uleb128 0xa
 775 0218 75040000 		.4byte	.LASF42
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 35


 776 021c 06       		.byte	0x6
 777 021d 47       		.byte	0x47
 778 021e A2000000 		.4byte	0xa2
 779 0222 2C       		.byte	0x2c
 780 0223 0A       		.uleb128 0xa
 781 0224 F4070000 		.4byte	.LASF43
 782 0228 06       		.byte	0x6
 783 0229 48       		.byte	0x48
 784 022a A2000000 		.4byte	0xa2
 785 022e 2D       		.byte	0x2d
 786 022f 0A       		.uleb128 0xa
 787 0230 66020000 		.4byte	.LASF44
 788 0234 06       		.byte	0x6
 789 0235 49       		.byte	0x49
 790 0236 A2000000 		.4byte	0xa2
 791 023a 2E       		.byte	0x2e
 792 023b 0A       		.uleb128 0xa
 793 023c 04050000 		.4byte	.LASF45
 794 0240 06       		.byte	0x6
 795 0241 4A       		.byte	0x4a
 796 0242 A2000000 		.4byte	0xa2
 797 0246 2F       		.byte	0x2f
 798 0247 0A       		.uleb128 0xa
 799 0248 9B070000 		.4byte	.LASF46
 800 024c 06       		.byte	0x6
 801 024d 4B       		.byte	0x4b
 802 024e A2000000 		.4byte	0xa2
 803 0252 30       		.byte	0x30
 804 0253 0A       		.uleb128 0xa
 805 0254 05040000 		.4byte	.LASF47
 806 0258 06       		.byte	0x6
 807 0259 4E       		.byte	0x4e
 808 025a A2000000 		.4byte	0xa2
 809 025e 31       		.byte	0x31
 810 025f 0A       		.uleb128 0xa
 811 0260 28010000 		.4byte	.LASF48
 812 0264 06       		.byte	0x6
 813 0265 4F       		.byte	0x4f
 814 0266 A2000000 		.4byte	0xa2
 815 026a 32       		.byte	0x32
 816 026b 0A       		.uleb128 0xa
 817 026c B8030000 		.4byte	.LASF49
 818 0270 06       		.byte	0x6
 819 0271 50       		.byte	0x50
 820 0272 A2000000 		.4byte	0xa2
 821 0276 33       		.byte	0x33
 822 0277 0A       		.uleb128 0xa
 823 0278 A7090000 		.4byte	.LASF50
 824 027c 06       		.byte	0x6
 825 027d 51       		.byte	0x51
 826 027e A2000000 		.4byte	0xa2
 827 0282 34       		.byte	0x34
 828 0283 0A       		.uleb128 0xa
 829 0284 58080000 		.4byte	.LASF51
 830 0288 06       		.byte	0x6
 831 0289 52       		.byte	0x52
 832 028a AD000000 		.4byte	0xad
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 36


 833 028e 36       		.byte	0x36
 834 028f 0A       		.uleb128 0xa
 835 0290 D1020000 		.4byte	.LASF52
 836 0294 06       		.byte	0x6
 837 0295 53       		.byte	0x53
 838 0296 AD000000 		.4byte	0xad
 839 029a 38       		.byte	0x38
 840 029b 0A       		.uleb128 0xa
 841 029c 98080000 		.4byte	.LASF53
 842 02a0 06       		.byte	0x6
 843 02a1 54       		.byte	0x54
 844 02a2 AD000000 		.4byte	0xad
 845 02a6 3A       		.byte	0x3a
 846 02a7 0A       		.uleb128 0xa
 847 02a8 54090000 		.4byte	.LASF54
 848 02ac 06       		.byte	0x6
 849 02ad 55       		.byte	0x55
 850 02ae A2000000 		.4byte	0xa2
 851 02b2 3C       		.byte	0x3c
 852 02b3 0A       		.uleb128 0xa
 853 02b4 F8020000 		.4byte	.LASF55
 854 02b8 06       		.byte	0x6
 855 02b9 56       		.byte	0x56
 856 02ba A2000000 		.4byte	0xa2
 857 02be 3D       		.byte	0x3d
 858 02bf 0A       		.uleb128 0xa
 859 02c0 C6060000 		.4byte	.LASF56
 860 02c4 06       		.byte	0x6
 861 02c5 57       		.byte	0x57
 862 02c6 A2000000 		.4byte	0xa2
 863 02ca 3E       		.byte	0x3e
 864 02cb 0A       		.uleb128 0xa
 865 02cc 8D010000 		.4byte	.LASF57
 866 02d0 06       		.byte	0x6
 867 02d1 58       		.byte	0x58
 868 02d2 A2000000 		.4byte	0xa2
 869 02d6 3F       		.byte	0x3f
 870 02d7 0A       		.uleb128 0xa
 871 02d8 CD050000 		.4byte	.LASF58
 872 02dc 06       		.byte	0x6
 873 02dd 59       		.byte	0x59
 874 02de A2000000 		.4byte	0xa2
 875 02e2 40       		.byte	0x40
 876 02e3 0A       		.uleb128 0xa
 877 02e4 56030000 		.4byte	.LASF59
 878 02e8 06       		.byte	0x6
 879 02e9 5A       		.byte	0x5a
 880 02ea A2000000 		.4byte	0xa2
 881 02ee 41       		.byte	0x41
 882 02ef 0A       		.uleb128 0xa
 883 02f0 AF040000 		.4byte	.LASF60
 884 02f4 06       		.byte	0x6
 885 02f5 5B       		.byte	0x5b
 886 02f6 A2000000 		.4byte	0xa2
 887 02fa 42       		.byte	0x42
 888 02fb 0A       		.uleb128 0xa
 889 02fc A2050000 		.4byte	.LASF61
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 37


 890 0300 06       		.byte	0x6
 891 0301 5C       		.byte	0x5c
 892 0302 A2000000 		.4byte	0xa2
 893 0306 43       		.byte	0x43
 894 0307 0A       		.uleb128 0xa
 895 0308 C0020000 		.4byte	.LASF62
 896 030c 06       		.byte	0x6
 897 030d 5D       		.byte	0x5d
 898 030e A2000000 		.4byte	0xa2
 899 0312 44       		.byte	0x44
 900 0313 0A       		.uleb128 0xa
 901 0314 00000000 		.4byte	.LASF63
 902 0318 06       		.byte	0x6
 903 0319 5E       		.byte	0x5e
 904 031a CE000000 		.4byte	0xce
 905 031e 48       		.byte	0x48
 906 031f 0A       		.uleb128 0xa
 907 0320 A9020000 		.4byte	.LASF64
 908 0324 06       		.byte	0x6
 909 0325 5F       		.byte	0x5f
 910 0326 CE000000 		.4byte	0xce
 911 032a 4C       		.byte	0x4c
 912 032b 0A       		.uleb128 0xa
 913 032c B8090000 		.4byte	.LASF65
 914 0330 06       		.byte	0x6
 915 0331 60       		.byte	0x60
 916 0332 A2000000 		.4byte	0xa2
 917 0336 50       		.byte	0x50
 918 0337 0A       		.uleb128 0xa
 919 0338 E3010000 		.4byte	.LASF66
 920 033c 06       		.byte	0x6
 921 033d 61       		.byte	0x61
 922 033e A2000000 		.4byte	0xa2
 923 0342 51       		.byte	0x51
 924 0343 0A       		.uleb128 0xa
 925 0344 EC080000 		.4byte	.LASF67
 926 0348 06       		.byte	0x6
 927 0349 62       		.byte	0x62
 928 034a A2000000 		.4byte	0xa2
 929 034e 52       		.byte	0x52
 930 034f 0A       		.uleb128 0xa
 931 0350 8B090000 		.4byte	.LASF68
 932 0354 06       		.byte	0x6
 933 0355 63       		.byte	0x63
 934 0356 A2000000 		.4byte	0xa2
 935 035a 53       		.byte	0x53
 936 035b 0A       		.uleb128 0xa
 937 035c D4060000 		.4byte	.LASF69
 938 0360 06       		.byte	0x6
 939 0361 64       		.byte	0x64
 940 0362 A2000000 		.4byte	0xa2
 941 0366 54       		.byte	0x54
 942 0367 0A       		.uleb128 0xa
 943 0368 FD010000 		.4byte	.LASF70
 944 036c 06       		.byte	0x6
 945 036d 65       		.byte	0x65
 946 036e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 38


 947 0372 55       		.byte	0x55
 948 0373 0A       		.uleb128 0xa
 949 0374 1A080000 		.4byte	.LASF71
 950 0378 06       		.byte	0x6
 951 0379 66       		.byte	0x66
 952 037a A2000000 		.4byte	0xa2
 953 037e 56       		.byte	0x56
 954 037f 0A       		.uleb128 0xa
 955 0380 B2060000 		.4byte	.LASF72
 956 0384 06       		.byte	0x6
 957 0385 67       		.byte	0x67
 958 0386 A2000000 		.4byte	0xa2
 959 038a 57       		.byte	0x57
 960 038b 0A       		.uleb128 0xa
 961 038c C5000000 		.4byte	.LASF73
 962 0390 06       		.byte	0x6
 963 0391 68       		.byte	0x68
 964 0392 A2000000 		.4byte	0xa2
 965 0396 58       		.byte	0x58
 966 0397 0A       		.uleb128 0xa
 967 0398 53060000 		.4byte	.LASF74
 968 039c 06       		.byte	0x6
 969 039d 69       		.byte	0x69
 970 039e A2000000 		.4byte	0xa2
 971 03a2 59       		.byte	0x59
 972 03a3 0A       		.uleb128 0xa
 973 03a4 2E050000 		.4byte	.LASF75
 974 03a8 06       		.byte	0x6
 975 03a9 6E       		.byte	0x6e
 976 03aa B8000000 		.4byte	0xb8
 977 03ae 5A       		.byte	0x5a
 978 03af 0A       		.uleb128 0xa
 979 03b0 41080000 		.4byte	.LASF76
 980 03b4 06       		.byte	0x6
 981 03b5 6F       		.byte	0x6f
 982 03b6 B8000000 		.4byte	0xb8
 983 03ba 5C       		.byte	0x5c
 984 03bb 0A       		.uleb128 0xa
 985 03bc 7E010000 		.4byte	.LASF77
 986 03c0 06       		.byte	0x6
 987 03c1 70       		.byte	0x70
 988 03c2 A2000000 		.4byte	0xa2
 989 03c6 5E       		.byte	0x5e
 990 03c7 0A       		.uleb128 0xa
 991 03c8 07060000 		.4byte	.LASF78
 992 03cc 06       		.byte	0x6
 993 03cd 71       		.byte	0x71
 994 03ce A2000000 		.4byte	0xa2
 995 03d2 5F       		.byte	0x5f
 996 03d3 0A       		.uleb128 0xa
 997 03d4 91050000 		.4byte	.LASF79
 998 03d8 06       		.byte	0x6
 999 03d9 72       		.byte	0x72
 1000 03da A2000000 		.4byte	0xa2
 1001 03de 60       		.byte	0x60
 1002 03df 0A       		.uleb128 0xa
 1003 03e0 E0050000 		.4byte	.LASF80
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 39


 1004 03e4 06       		.byte	0x6
 1005 03e5 73       		.byte	0x73
 1006 03e6 CE000000 		.4byte	0xce
 1007 03ea 64       		.byte	0x64
 1008 03eb 0A       		.uleb128 0xa
 1009 03ec B0010000 		.4byte	.LASF81
 1010 03f0 06       		.byte	0x6
 1011 03f1 76       		.byte	0x76
 1012 03f2 B8000000 		.4byte	0xb8
 1013 03f6 68       		.byte	0x68
 1014 03f7 0A       		.uleb128 0xa
 1015 03f8 E1030000 		.4byte	.LASF82
 1016 03fc 06       		.byte	0x6
 1017 03fd 77       		.byte	0x77
 1018 03fe B8000000 		.4byte	0xb8
 1019 0402 6A       		.byte	0x6a
 1020 0403 0A       		.uleb128 0xa
 1021 0404 30040000 		.4byte	.LASF83
 1022 0408 06       		.byte	0x6
 1023 0409 78       		.byte	0x78
 1024 040a B8000000 		.4byte	0xb8
 1025 040e 6C       		.byte	0x6c
 1026 040f 0A       		.uleb128 0xa
 1027 0410 68040000 		.4byte	.LASF84
 1028 0414 06       		.byte	0x6
 1029 0415 79       		.byte	0x79
 1030 0416 B8000000 		.4byte	0xb8
 1031 041a 6E       		.byte	0x6e
 1032 041b 0A       		.uleb128 0xa
 1033 041c 9E060000 		.4byte	.LASF85
 1034 0420 06       		.byte	0x6
 1035 0421 7B       		.byte	0x7b
 1036 0422 A2000000 		.4byte	0xa2
 1037 0426 70       		.byte	0x70
 1038 0427 0A       		.uleb128 0xa
 1039 0428 33020000 		.4byte	.LASF86
 1040 042c 06       		.byte	0x6
 1041 042d 7C       		.byte	0x7c
 1042 042e A2000000 		.4byte	0xa2
 1043 0432 71       		.byte	0x71
 1044 0433 0A       		.uleb128 0xa
 1045 0434 75090000 		.4byte	.LASF87
 1046 0438 06       		.byte	0x6
 1047 0439 7D       		.byte	0x7d
 1048 043a A2000000 		.4byte	0xa2
 1049 043e 72       		.byte	0x72
 1050 043f 0A       		.uleb128 0xa
 1051 0440 52050000 		.4byte	.LASF88
 1052 0444 06       		.byte	0x6
 1053 0445 7E       		.byte	0x7e
 1054 0446 A2000000 		.4byte	0xa2
 1055 044a 73       		.byte	0x73
 1056 044b 0A       		.uleb128 0xa
 1057 044c 1A030000 		.4byte	.LASF89
 1058 0450 06       		.byte	0x6
 1059 0451 80       		.byte	0x80
 1060 0452 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 40


 1061 0456 74       		.byte	0x74
 1062 0457 0A       		.uleb128 0xa
 1063 0458 D7070000 		.4byte	.LASF90
 1064 045c 06       		.byte	0x6
 1065 045d 81       		.byte	0x81
 1066 045e B8000000 		.4byte	0xb8
 1067 0462 76       		.byte	0x76
 1068 0463 0A       		.uleb128 0xa
 1069 0464 E3020000 		.4byte	.LASF91
 1070 0468 06       		.byte	0x6
 1071 0469 82       		.byte	0x82
 1072 046a B8000000 		.4byte	0xb8
 1073 046e 78       		.byte	0x78
 1074 046f 0A       		.uleb128 0xa
 1075 0470 40010000 		.4byte	.LASF92
 1076 0474 06       		.byte	0x6
 1077 0475 83       		.byte	0x83
 1078 0476 B8000000 		.4byte	0xb8
 1079 047a 7A       		.byte	0x7a
 1080 047b 0A       		.uleb128 0xa
 1081 047c 19090000 		.4byte	.LASF93
 1082 0480 06       		.byte	0x6
 1083 0481 86       		.byte	0x86
 1084 0482 A2000000 		.4byte	0xa2
 1085 0486 7C       		.byte	0x7c
 1086 0487 0A       		.uleb128 0xa
 1087 0488 65080000 		.4byte	.LASF94
 1088 048c 06       		.byte	0x6
 1089 048d 87       		.byte	0x87
 1090 048e A2000000 		.4byte	0xa2
 1091 0492 7D       		.byte	0x7d
 1092 0493 0A       		.uleb128 0xa
 1093 0494 D9000000 		.4byte	.LASF95
 1094 0498 06       		.byte	0x6
 1095 0499 88       		.byte	0x88
 1096 049a A2000000 		.4byte	0xa2
 1097 049e 7E       		.byte	0x7e
 1098 049f 0A       		.uleb128 0xa
 1099 04a0 2C030000 		.4byte	.LASF96
 1100 04a4 06       		.byte	0x6
 1101 04a5 89       		.byte	0x89
 1102 04a6 A2000000 		.4byte	0xa2
 1103 04aa 7F       		.byte	0x7f
 1104 04ab 0A       		.uleb128 0xa
 1105 04ac A4030000 		.4byte	.LASF97
 1106 04b0 06       		.byte	0x6
 1107 04b1 8A       		.byte	0x8a
 1108 04b2 A2000000 		.4byte	0xa2
 1109 04b6 80       		.byte	0x80
 1110 04b7 0A       		.uleb128 0xa
 1111 04b8 DD040000 		.4byte	.LASF98
 1112 04bc 06       		.byte	0x6
 1113 04bd 8D       		.byte	0x8d
 1114 04be CE000000 		.4byte	0xce
 1115 04c2 84       		.byte	0x84
 1116 04c3 0A       		.uleb128 0xa
 1117 04c4 55010000 		.4byte	.LASF99
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 41


 1118 04c8 06       		.byte	0x6
 1119 04c9 8E       		.byte	0x8e
 1120 04ca CE000000 		.4byte	0xce
 1121 04ce 88       		.byte	0x88
 1122 04cf 0A       		.uleb128 0xa
 1123 04d0 04090000 		.4byte	.LASF100
 1124 04d4 06       		.byte	0x6
 1125 04d5 8F       		.byte	0x8f
 1126 04d6 CE000000 		.4byte	0xce
 1127 04da 8C       		.byte	0x8c
 1128 04db 0A       		.uleb128 0xa
 1129 04dc 10050000 		.4byte	.LASF101
 1130 04e0 06       		.byte	0x6
 1131 04e1 90       		.byte	0x90
 1132 04e2 CE000000 		.4byte	0xce
 1133 04e6 90       		.byte	0x90
 1134 04e7 0A       		.uleb128 0xa
 1135 04e8 8F030000 		.4byte	.LASF102
 1136 04ec 06       		.byte	0x6
 1137 04ed 91       		.byte	0x91
 1138 04ee CE000000 		.4byte	0xce
 1139 04f2 94       		.byte	0x94
 1140 04f3 0A       		.uleb128 0xa
 1141 04f4 50020000 		.4byte	.LASF103
 1142 04f8 06       		.byte	0x6
 1143 04f9 92       		.byte	0x92
 1144 04fa CE000000 		.4byte	0xce
 1145 04fe 98       		.byte	0x98
 1146 04ff 0A       		.uleb128 0xa
 1147 0500 2E090000 		.4byte	.LASF104
 1148 0504 06       		.byte	0x6
 1149 0505 93       		.byte	0x93
 1150 0506 CE000000 		.4byte	0xce
 1151 050a 9C       		.byte	0x9c
 1152 050b 0A       		.uleb128 0xa
 1153 050c C0010000 		.4byte	.LASF105
 1154 0510 06       		.byte	0x6
 1155 0511 94       		.byte	0x94
 1156 0512 CE000000 		.4byte	0xce
 1157 0516 A0       		.byte	0xa0
 1158 0517 0A       		.uleb128 0xa
 1159 0518 71020000 		.4byte	.LASF106
 1160 051c 06       		.byte	0x6
 1161 051d 95       		.byte	0x95
 1162 051e B8000000 		.4byte	0xb8
 1163 0522 A4       		.byte	0xa4
 1164 0523 0A       		.uleb128 0xa
 1165 0524 BB040000 		.4byte	.LASF107
 1166 0528 06       		.byte	0x6
 1167 0529 96       		.byte	0x96
 1168 052a B8000000 		.4byte	0xb8
 1169 052e A6       		.byte	0xa6
 1170 052f 0A       		.uleb128 0xa
 1171 0530 FB050000 		.4byte	.LASF108
 1172 0534 06       		.byte	0x6
 1173 0535 97       		.byte	0x97
 1174 0536 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 42


 1175 053a A8       		.byte	0xa8
 1176 053b 0A       		.uleb128 0xa
 1177 053c A7070000 		.4byte	.LASF109
 1178 0540 06       		.byte	0x6
 1179 0541 98       		.byte	0x98
 1180 0542 B8000000 		.4byte	0xb8
 1181 0546 AA       		.byte	0xaa
 1182 0547 0A       		.uleb128 0xa
 1183 0548 3F040000 		.4byte	.LASF110
 1184 054c 06       		.byte	0x6
 1185 054d 99       		.byte	0x99
 1186 054e B8000000 		.4byte	0xb8
 1187 0552 AC       		.byte	0xac
 1188 0553 0A       		.uleb128 0xa
 1189 0554 69050000 		.4byte	.LASF111
 1190 0558 06       		.byte	0x6
 1191 0559 9A       		.byte	0x9a
 1192 055a B8000000 		.4byte	0xb8
 1193 055e AE       		.byte	0xae
 1194 055f 0A       		.uleb128 0xa
 1195 0560 4A080000 		.4byte	.LASF112
 1196 0564 06       		.byte	0x6
 1197 0565 9D       		.byte	0x9d
 1198 0566 B8000000 		.4byte	0xb8
 1199 056a B0       		.byte	0xb0
 1200 056b 0A       		.uleb128 0xa
 1201 056c EC000000 		.4byte	.LASF113
 1202 0570 06       		.byte	0x6
 1203 0571 9E       		.byte	0x9e
 1204 0572 CE000000 		.4byte	0xce
 1205 0576 B4       		.byte	0xb4
 1206 0577 00       		.byte	0
 1207 0578 03       		.uleb128 0x3
 1208 0579 98040000 		.4byte	.LASF114
 1209 057d 06       		.byte	0x6
 1210 057e 9F       		.byte	0x9f
 1211 057f 67010000 		.4byte	0x167
 1212 0583 0B       		.uleb128 0xb
 1213 0584 44090000 		.4byte	.LASF115
 1214 0588 07       		.byte	0x7
 1215 0589 1D06     		.2byte	0x61d
 1216 058b 5C010000 		.4byte	0x15c
 1217 058f 0B       		.uleb128 0xb
 1218 0590 DA030000 		.4byte	.LASF116
 1219 0594 08       		.byte	0x8
 1220 0595 F601     		.2byte	0x1f6
 1221 0597 9B050000 		.4byte	0x59b
 1222 059b 02       		.uleb128 0x2
 1223 059c 01       		.byte	0x1
 1224 059d 08       		.byte	0x8
 1225 059e 96070000 		.4byte	.LASF117
 1226 05a2 02       		.uleb128 0x2
 1227 05a3 04       		.byte	0x4
 1228 05a4 04       		.byte	0x4
 1229 05a5 DA050000 		.4byte	.LASF118
 1230 05a9 02       		.uleb128 0x2
 1231 05aa 08       		.byte	0x8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 43


 1232 05ab 04       		.byte	0x4
 1233 05ac DC020000 		.4byte	.LASF119
 1234 05b0 0C       		.uleb128 0xc
 1235 05b1 04       		.byte	0x4
 1236 05b2 9B000000 		.4byte	0x9b
 1237 05b6 01       		.byte	0x1
 1238 05b7 7201     		.2byte	0x172
 1239 05b9 CD050000 		.4byte	0x5cd
 1240 05bd 0D       		.uleb128 0xd
 1241 05be 7C030000 		.4byte	.LASF120
 1242 05c2 00       		.byte	0
 1243 05c3 0E       		.uleb128 0xe
 1244 05c4 0E010000 		.4byte	.LASF121
 1245 05c8 01008A00 		.4byte	0x8a0001
 1246 05cc 00       		.byte	0
 1247 05cd 0B       		.uleb128 0xb
 1248 05ce 52040000 		.4byte	.LASF122
 1249 05d2 01       		.byte	0x1
 1250 05d3 7901     		.2byte	0x179
 1251 05d5 B0050000 		.4byte	0x5b0
 1252 05d9 0F       		.uleb128 0xf
 1253 05da 7F080000 		.4byte	.LASF125
 1254 05de 01       		.byte	0x1
 1255 05df B902     		.2byte	0x2b9
 1256 05e1 00000000 		.4byte	.LFB140
 1257 05e5 34000000 		.4byte	.LFE140-.LFB140
 1258 05e9 01       		.uleb128 0x1
 1259 05ea 9C       		.byte	0x9c
 1260 05eb 0E060000 		.4byte	0x60e
 1261 05ef 10       		.uleb128 0x10
 1262 05f0 FF040000 		.4byte	.LASF123
 1263 05f4 01       		.byte	0x1
 1264 05f5 B902     		.2byte	0x2b9
 1265 05f7 0E060000 		.4byte	0x60e
 1266 05fb 02       		.uleb128 0x2
 1267 05fc 91       		.byte	0x91
 1268 05fd 74       		.sleb128 -12
 1269 05fe 10       		.uleb128 0x10
 1270 05ff 86020000 		.4byte	.LASF124
 1271 0603 01       		.byte	0x1
 1272 0604 B902     		.2byte	0x2b9
 1273 0606 CE000000 		.4byte	0xce
 1274 060a 02       		.uleb128 0x2
 1275 060b 91       		.byte	0x91
 1276 060c 70       		.sleb128 -16
 1277 060d 00       		.byte	0
 1278 060e 11       		.uleb128 0x11
 1279 060f 04       		.byte	0x4
 1280 0610 83050000 		.4byte	0x583
 1281 0614 0F       		.uleb128 0xf
 1282 0615 39050000 		.4byte	.LASF126
 1283 0619 01       		.byte	0x1
 1284 061a D302     		.2byte	0x2d3
 1285 061c 00000000 		.4byte	.LFB141
 1286 0620 34000000 		.4byte	.LFE141-.LFB141
 1287 0624 01       		.uleb128 0x1
 1288 0625 9C       		.byte	0x9c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 44


 1289 0626 49060000 		.4byte	0x649
 1290 062a 10       		.uleb128 0x10
 1291 062b FF040000 		.4byte	.LASF123
 1292 062f 01       		.byte	0x1
 1293 0630 D302     		.2byte	0x2d3
 1294 0632 0E060000 		.4byte	0x60e
 1295 0636 02       		.uleb128 0x2
 1296 0637 91       		.byte	0x91
 1297 0638 74       		.sleb128 -12
 1298 0639 10       		.uleb128 0x10
 1299 063a 86020000 		.4byte	.LASF124
 1300 063e 01       		.byte	0x1
 1301 063f D302     		.2byte	0x2d3
 1302 0641 CE000000 		.4byte	0xce
 1303 0645 02       		.uleb128 0x2
 1304 0646 91       		.byte	0x91
 1305 0647 70       		.sleb128 -16
 1306 0648 00       		.byte	0
 1307 0649 12       		.uleb128 0x12
 1308 064a 77050000 		.4byte	.LASF127
 1309 064e 01       		.byte	0x1
 1310 064f ED02     		.2byte	0x2ed
 1311 0651 00000000 		.4byte	.LFB142
 1312 0655 1C000000 		.4byte	.LFE142-.LFB142
 1313 0659 01       		.uleb128 0x1
 1314 065a 9C       		.byte	0x9c
 1315 065b 7E060000 		.4byte	0x67e
 1316 065f 10       		.uleb128 0x10
 1317 0660 FF040000 		.4byte	.LASF123
 1318 0664 01       		.byte	0x1
 1319 0665 ED02     		.2byte	0x2ed
 1320 0667 0E060000 		.4byte	0x60e
 1321 066b 02       		.uleb128 0x2
 1322 066c 91       		.byte	0x91
 1323 066d 74       		.sleb128 -12
 1324 066e 10       		.uleb128 0x10
 1325 066f C3050000 		.4byte	.LASF128
 1326 0673 01       		.byte	0x1
 1327 0674 ED02     		.2byte	0x2ed
 1328 0676 CE000000 		.4byte	0xce
 1329 067a 02       		.uleb128 0x2
 1330 067b 91       		.byte	0x91
 1331 067c 70       		.sleb128 -16
 1332 067d 00       		.byte	0
 1333 067e 13       		.uleb128 0x13
 1334 067f 01080000 		.4byte	.LASF129
 1335 0683 01       		.byte	0x1
 1336 0684 0603     		.2byte	0x306
 1337 0686 CE000000 		.4byte	0xce
 1338 068a 00000000 		.4byte	.LFB143
 1339 068e 18000000 		.4byte	.LFE143-.LFB143
 1340 0692 01       		.uleb128 0x1
 1341 0693 9C       		.byte	0x9c
 1342 0694 A8060000 		.4byte	0x6a8
 1343 0698 10       		.uleb128 0x10
 1344 0699 FF040000 		.4byte	.LASF123
 1345 069d 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 45


 1346 069e 0603     		.2byte	0x306
 1347 06a0 A8060000 		.4byte	0x6a8
 1348 06a4 02       		.uleb128 0x2
 1349 06a5 91       		.byte	0x91
 1350 06a6 74       		.sleb128 -12
 1351 06a7 00       		.byte	0
 1352 06a8 11       		.uleb128 0x11
 1353 06a9 04       		.byte	0x4
 1354 06aa AE060000 		.4byte	0x6ae
 1355 06ae 06       		.uleb128 0x6
 1356 06af 83050000 		.4byte	0x583
 1357 06b3 13       		.uleb128 0x13
 1358 06b4 1D060000 		.4byte	.LASF130
 1359 06b8 01       		.byte	0x1
 1360 06b9 2203     		.2byte	0x322
 1361 06bb DD060000 		.4byte	0x6dd
 1362 06bf 00000000 		.4byte	.LFB144
 1363 06c3 30000000 		.4byte	.LFE144-.LFB144
 1364 06c7 01       		.uleb128 0x1
 1365 06c8 9C       		.byte	0x9c
 1366 06c9 DD060000 		.4byte	0x6dd
 1367 06cd 10       		.uleb128 0x10
 1368 06ce FF040000 		.4byte	.LASF123
 1369 06d2 01       		.byte	0x1
 1370 06d3 2203     		.2byte	0x322
 1371 06d5 A8060000 		.4byte	0x6a8
 1372 06d9 02       		.uleb128 0x2
 1373 06da 91       		.byte	0x91
 1374 06db 74       		.sleb128 -12
 1375 06dc 00       		.byte	0
 1376 06dd 02       		.uleb128 0x2
 1377 06de 01       		.byte	0x1
 1378 06df 02       		.byte	0x2
 1379 06e0 37060000 		.4byte	.LASF131
 1380 06e4 13       		.uleb128 0x13
 1381 06e5 81040000 		.4byte	.LASF132
 1382 06e9 01       		.byte	0x1
 1383 06ea D003     		.2byte	0x3d0
 1384 06ec CD050000 		.4byte	0x5cd
 1385 06f0 00000000 		.4byte	.LFB150
 1386 06f4 2C000000 		.4byte	.LFE150-.LFB150
 1387 06f8 01       		.uleb128 0x1
 1388 06f9 9C       		.byte	0x9c
 1389 06fa 0E070000 		.4byte	0x70e
 1390 06fe 10       		.uleb128 0x10
 1391 06ff FF040000 		.4byte	.LASF123
 1392 0703 01       		.byte	0x1
 1393 0704 D003     		.2byte	0x3d0
 1394 0706 A8060000 		.4byte	0x6a8
 1395 070a 02       		.uleb128 0x2
 1396 070b 91       		.byte	0x91
 1397 070c 74       		.sleb128 -12
 1398 070d 00       		.byte	0
 1399 070e 14       		.uleb128 0x14
 1400 070f 03030000 		.4byte	.LASF134
 1401 0713 02       		.byte	0x2
 1402 0714 2E       		.byte	0x2e
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 46


 1403 0715 CD050000 		.4byte	0x5cd
 1404 0719 00000000 		.4byte	.LFB151
 1405 071d 38000000 		.4byte	.LFE151-.LFB151
 1406 0721 01       		.uleb128 0x1
 1407 0722 9C       		.byte	0x9c
 1408 0723 52070000 		.4byte	0x752
 1409 0727 15       		.uleb128 0x15
 1410 0728 FF040000 		.4byte	.LASF123
 1411 072c 02       		.byte	0x2
 1412 072d 2E       		.byte	0x2e
 1413 072e 0E060000 		.4byte	0x60e
 1414 0732 02       		.uleb128 0x2
 1415 0733 91       		.byte	0x91
 1416 0734 6C       		.sleb128 -20
 1417 0735 15       		.uleb128 0x15
 1418 0736 8D060000 		.4byte	.LASF133
 1419 073a 02       		.byte	0x2
 1420 073b 2E       		.byte	0x2e
 1421 073c CE000000 		.4byte	0xce
 1422 0740 02       		.uleb128 0x2
 1423 0741 91       		.byte	0x91
 1424 0742 68       		.sleb128 -24
 1425 0743 16       		.uleb128 0x16
 1426 0744 9D090000 		.4byte	.LASF137
 1427 0748 02       		.byte	0x2
 1428 0749 30       		.byte	0x30
 1429 074a CD050000 		.4byte	0x5cd
 1430 074e 02       		.uleb128 0x2
 1431 074f 91       		.byte	0x91
 1432 0750 74       		.sleb128 -12
 1433 0751 00       		.byte	0
 1434 0752 14       		.uleb128 0x14
 1435 0753 B5070000 		.4byte	.LASF135
 1436 0757 02       		.byte	0x2
 1437 0758 61       		.byte	0x61
 1438 0759 CD050000 		.4byte	0x5cd
 1439 075d 00000000 		.4byte	.LFB152
 1440 0761 40000000 		.4byte	.LFE152-.LFB152
 1441 0765 01       		.uleb128 0x1
 1442 0766 9C       		.byte	0x9c
 1443 0767 A4070000 		.4byte	0x7a4
 1444 076b 15       		.uleb128 0x15
 1445 076c FF040000 		.4byte	.LASF123
 1446 0770 02       		.byte	0x2
 1447 0771 61       		.byte	0x61
 1448 0772 0E060000 		.4byte	0x60e
 1449 0776 02       		.uleb128 0x2
 1450 0777 91       		.byte	0x91
 1451 0778 6C       		.sleb128 -20
 1452 0779 15       		.uleb128 0x15
 1453 077a 86020000 		.4byte	.LASF124
 1454 077e 02       		.byte	0x2
 1455 077f 61       		.byte	0x61
 1456 0780 CE000000 		.4byte	0xce
 1457 0784 02       		.uleb128 0x2
 1458 0785 91       		.byte	0x91
 1459 0786 68       		.sleb128 -24
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 47


 1460 0787 15       		.uleb128 0x15
 1461 0788 AD050000 		.4byte	.LASF136
 1462 078c 02       		.byte	0x2
 1463 078d 61       		.byte	0x61
 1464 078e CE000000 		.4byte	0xce
 1465 0792 02       		.uleb128 0x2
 1466 0793 91       		.byte	0x91
 1467 0794 64       		.sleb128 -28
 1468 0795 16       		.uleb128 0x16
 1469 0796 9D090000 		.4byte	.LASF137
 1470 079a 02       		.byte	0x2
 1471 079b 63       		.byte	0x63
 1472 079c CD050000 		.4byte	0x5cd
 1473 07a0 02       		.uleb128 0x2
 1474 07a1 91       		.byte	0x91
 1475 07a2 74       		.sleb128 -12
 1476 07a3 00       		.byte	0
 1477 07a4 14       		.uleb128 0x14
 1478 07a5 19040000 		.4byte	.LASF138
 1479 07a9 02       		.byte	0x2
 1480 07aa 95       		.byte	0x95
 1481 07ab CD050000 		.4byte	0x5cd
 1482 07af 00000000 		.4byte	.LFB153
 1483 07b3 4C000000 		.4byte	.LFE153-.LFB153
 1484 07b7 01       		.uleb128 0x1
 1485 07b8 9C       		.byte	0x9c
 1486 07b9 E8070000 		.4byte	0x7e8
 1487 07bd 15       		.uleb128 0x15
 1488 07be FF040000 		.4byte	.LASF123
 1489 07c2 02       		.byte	0x2
 1490 07c3 95       		.byte	0x95
 1491 07c4 A8060000 		.4byte	0x6a8
 1492 07c8 02       		.uleb128 0x2
 1493 07c9 91       		.byte	0x91
 1494 07ca 6C       		.sleb128 -20
 1495 07cb 15       		.uleb128 0x15
 1496 07cc AD050000 		.4byte	.LASF136
 1497 07d0 02       		.byte	0x2
 1498 07d1 95       		.byte	0x95
 1499 07d2 E8070000 		.4byte	0x7e8
 1500 07d6 02       		.uleb128 0x2
 1501 07d7 91       		.byte	0x91
 1502 07d8 68       		.sleb128 -24
 1503 07d9 16       		.uleb128 0x16
 1504 07da 9D090000 		.4byte	.LASF137
 1505 07de 02       		.byte	0x2
 1506 07df 97       		.byte	0x97
 1507 07e0 CD050000 		.4byte	0x5cd
 1508 07e4 02       		.uleb128 0x2
 1509 07e5 91       		.byte	0x91
 1510 07e6 74       		.sleb128 -12
 1511 07e7 00       		.byte	0
 1512 07e8 11       		.uleb128 0x11
 1513 07e9 04       		.byte	0x4
 1514 07ea CE000000 		.4byte	0xce
 1515 07ee 17       		.uleb128 0x17
 1516 07ef F1050000 		.4byte	.LASF139
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 48


 1517 07f3 06       		.byte	0x6
 1518 07f4 A7       		.byte	0xa7
 1519 07f5 F9070000 		.4byte	0x7f9
 1520 07f9 11       		.uleb128 0x11
 1521 07fa 04       		.byte	0x4
 1522 07fb FF070000 		.4byte	0x7ff
 1523 07ff 06       		.uleb128 0x6
 1524 0800 78050000 		.4byte	0x578
 1525 0804 18       		.uleb128 0x18
 1526 0805 D6010000 		.4byte	.LASF140
 1527 0809 09       		.byte	0x9
 1528 080a F907     		.2byte	0x7f9
 1529 080c 10080000 		.4byte	0x810
 1530 0810 05       		.uleb128 0x5
 1531 0811 C3000000 		.4byte	0xc3
 1532 0815 00       		.byte	0
 1533              		.section	.debug_abbrev,"",%progbits
 1534              	.Ldebug_abbrev0:
 1535 0000 01       		.uleb128 0x1
 1536 0001 11       		.uleb128 0x11
 1537 0002 01       		.byte	0x1
 1538 0003 25       		.uleb128 0x25
 1539 0004 0E       		.uleb128 0xe
 1540 0005 13       		.uleb128 0x13
 1541 0006 0B       		.uleb128 0xb
 1542 0007 03       		.uleb128 0x3
 1543 0008 0E       		.uleb128 0xe
 1544 0009 1B       		.uleb128 0x1b
 1545 000a 0E       		.uleb128 0xe
 1546 000b 55       		.uleb128 0x55
 1547 000c 17       		.uleb128 0x17
 1548 000d 11       		.uleb128 0x11
 1549 000e 01       		.uleb128 0x1
 1550 000f 10       		.uleb128 0x10
 1551 0010 17       		.uleb128 0x17
 1552 0011 00       		.byte	0
 1553 0012 00       		.byte	0
 1554 0013 02       		.uleb128 0x2
 1555 0014 24       		.uleb128 0x24
 1556 0015 00       		.byte	0
 1557 0016 0B       		.uleb128 0xb
 1558 0017 0B       		.uleb128 0xb
 1559 0018 3E       		.uleb128 0x3e
 1560 0019 0B       		.uleb128 0xb
 1561 001a 03       		.uleb128 0x3
 1562 001b 0E       		.uleb128 0xe
 1563 001c 00       		.byte	0
 1564 001d 00       		.byte	0
 1565 001e 03       		.uleb128 0x3
 1566 001f 16       		.uleb128 0x16
 1567 0020 00       		.byte	0
 1568 0021 03       		.uleb128 0x3
 1569 0022 0E       		.uleb128 0xe
 1570 0023 3A       		.uleb128 0x3a
 1571 0024 0B       		.uleb128 0xb
 1572 0025 3B       		.uleb128 0x3b
 1573 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 49


 1574 0027 49       		.uleb128 0x49
 1575 0028 13       		.uleb128 0x13
 1576 0029 00       		.byte	0
 1577 002a 00       		.byte	0
 1578 002b 04       		.uleb128 0x4
 1579 002c 24       		.uleb128 0x24
 1580 002d 00       		.byte	0
 1581 002e 0B       		.uleb128 0xb
 1582 002f 0B       		.uleb128 0xb
 1583 0030 3E       		.uleb128 0x3e
 1584 0031 0B       		.uleb128 0xb
 1585 0032 03       		.uleb128 0x3
 1586 0033 08       		.uleb128 0x8
 1587 0034 00       		.byte	0
 1588 0035 00       		.byte	0
 1589 0036 05       		.uleb128 0x5
 1590 0037 35       		.uleb128 0x35
 1591 0038 00       		.byte	0
 1592 0039 49       		.uleb128 0x49
 1593 003a 13       		.uleb128 0x13
 1594 003b 00       		.byte	0
 1595 003c 00       		.byte	0
 1596 003d 06       		.uleb128 0x6
 1597 003e 26       		.uleb128 0x26
 1598 003f 00       		.byte	0
 1599 0040 49       		.uleb128 0x49
 1600 0041 13       		.uleb128 0x13
 1601 0042 00       		.byte	0
 1602 0043 00       		.byte	0
 1603 0044 07       		.uleb128 0x7
 1604 0045 01       		.uleb128 0x1
 1605 0046 01       		.byte	0x1
 1606 0047 49       		.uleb128 0x49
 1607 0048 13       		.uleb128 0x13
 1608 0049 01       		.uleb128 0x1
 1609 004a 13       		.uleb128 0x13
 1610 004b 00       		.byte	0
 1611 004c 00       		.byte	0
 1612 004d 08       		.uleb128 0x8
 1613 004e 21       		.uleb128 0x21
 1614 004f 00       		.byte	0
 1615 0050 49       		.uleb128 0x49
 1616 0051 13       		.uleb128 0x13
 1617 0052 2F       		.uleb128 0x2f
 1618 0053 0B       		.uleb128 0xb
 1619 0054 00       		.byte	0
 1620 0055 00       		.byte	0
 1621 0056 09       		.uleb128 0x9
 1622 0057 13       		.uleb128 0x13
 1623 0058 01       		.byte	0x1
 1624 0059 0B       		.uleb128 0xb
 1625 005a 0B       		.uleb128 0xb
 1626 005b 3A       		.uleb128 0x3a
 1627 005c 0B       		.uleb128 0xb
 1628 005d 3B       		.uleb128 0x3b
 1629 005e 0B       		.uleb128 0xb
 1630 005f 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 50


 1631 0060 13       		.uleb128 0x13
 1632 0061 00       		.byte	0
 1633 0062 00       		.byte	0
 1634 0063 0A       		.uleb128 0xa
 1635 0064 0D       		.uleb128 0xd
 1636 0065 00       		.byte	0
 1637 0066 03       		.uleb128 0x3
 1638 0067 0E       		.uleb128 0xe
 1639 0068 3A       		.uleb128 0x3a
 1640 0069 0B       		.uleb128 0xb
 1641 006a 3B       		.uleb128 0x3b
 1642 006b 0B       		.uleb128 0xb
 1643 006c 49       		.uleb128 0x49
 1644 006d 13       		.uleb128 0x13
 1645 006e 38       		.uleb128 0x38
 1646 006f 0B       		.uleb128 0xb
 1647 0070 00       		.byte	0
 1648 0071 00       		.byte	0
 1649 0072 0B       		.uleb128 0xb
 1650 0073 16       		.uleb128 0x16
 1651 0074 00       		.byte	0
 1652 0075 03       		.uleb128 0x3
 1653 0076 0E       		.uleb128 0xe
 1654 0077 3A       		.uleb128 0x3a
 1655 0078 0B       		.uleb128 0xb
 1656 0079 3B       		.uleb128 0x3b
 1657 007a 05       		.uleb128 0x5
 1658 007b 49       		.uleb128 0x49
 1659 007c 13       		.uleb128 0x13
 1660 007d 00       		.byte	0
 1661 007e 00       		.byte	0
 1662 007f 0C       		.uleb128 0xc
 1663 0080 04       		.uleb128 0x4
 1664 0081 01       		.byte	0x1
 1665 0082 0B       		.uleb128 0xb
 1666 0083 0B       		.uleb128 0xb
 1667 0084 49       		.uleb128 0x49
 1668 0085 13       		.uleb128 0x13
 1669 0086 3A       		.uleb128 0x3a
 1670 0087 0B       		.uleb128 0xb
 1671 0088 3B       		.uleb128 0x3b
 1672 0089 05       		.uleb128 0x5
 1673 008a 01       		.uleb128 0x1
 1674 008b 13       		.uleb128 0x13
 1675 008c 00       		.byte	0
 1676 008d 00       		.byte	0
 1677 008e 0D       		.uleb128 0xd
 1678 008f 28       		.uleb128 0x28
 1679 0090 00       		.byte	0
 1680 0091 03       		.uleb128 0x3
 1681 0092 0E       		.uleb128 0xe
 1682 0093 1C       		.uleb128 0x1c
 1683 0094 0B       		.uleb128 0xb
 1684 0095 00       		.byte	0
 1685 0096 00       		.byte	0
 1686 0097 0E       		.uleb128 0xe
 1687 0098 28       		.uleb128 0x28
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 51


 1688 0099 00       		.byte	0
 1689 009a 03       		.uleb128 0x3
 1690 009b 0E       		.uleb128 0xe
 1691 009c 1C       		.uleb128 0x1c
 1692 009d 06       		.uleb128 0x6
 1693 009e 00       		.byte	0
 1694 009f 00       		.byte	0
 1695 00a0 0F       		.uleb128 0xf
 1696 00a1 2E       		.uleb128 0x2e
 1697 00a2 01       		.byte	0x1
 1698 00a3 03       		.uleb128 0x3
 1699 00a4 0E       		.uleb128 0xe
 1700 00a5 3A       		.uleb128 0x3a
 1701 00a6 0B       		.uleb128 0xb
 1702 00a7 3B       		.uleb128 0x3b
 1703 00a8 05       		.uleb128 0x5
 1704 00a9 27       		.uleb128 0x27
 1705 00aa 19       		.uleb128 0x19
 1706 00ab 11       		.uleb128 0x11
 1707 00ac 01       		.uleb128 0x1
 1708 00ad 12       		.uleb128 0x12
 1709 00ae 06       		.uleb128 0x6
 1710 00af 40       		.uleb128 0x40
 1711 00b0 18       		.uleb128 0x18
 1712 00b1 9642     		.uleb128 0x2116
 1713 00b3 19       		.uleb128 0x19
 1714 00b4 01       		.uleb128 0x1
 1715 00b5 13       		.uleb128 0x13
 1716 00b6 00       		.byte	0
 1717 00b7 00       		.byte	0
 1718 00b8 10       		.uleb128 0x10
 1719 00b9 05       		.uleb128 0x5
 1720 00ba 00       		.byte	0
 1721 00bb 03       		.uleb128 0x3
 1722 00bc 0E       		.uleb128 0xe
 1723 00bd 3A       		.uleb128 0x3a
 1724 00be 0B       		.uleb128 0xb
 1725 00bf 3B       		.uleb128 0x3b
 1726 00c0 05       		.uleb128 0x5
 1727 00c1 49       		.uleb128 0x49
 1728 00c2 13       		.uleb128 0x13
 1729 00c3 02       		.uleb128 0x2
 1730 00c4 18       		.uleb128 0x18
 1731 00c5 00       		.byte	0
 1732 00c6 00       		.byte	0
 1733 00c7 11       		.uleb128 0x11
 1734 00c8 0F       		.uleb128 0xf
 1735 00c9 00       		.byte	0
 1736 00ca 0B       		.uleb128 0xb
 1737 00cb 0B       		.uleb128 0xb
 1738 00cc 49       		.uleb128 0x49
 1739 00cd 13       		.uleb128 0x13
 1740 00ce 00       		.byte	0
 1741 00cf 00       		.byte	0
 1742 00d0 12       		.uleb128 0x12
 1743 00d1 2E       		.uleb128 0x2e
 1744 00d2 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 52


 1745 00d3 03       		.uleb128 0x3
 1746 00d4 0E       		.uleb128 0xe
 1747 00d5 3A       		.uleb128 0x3a
 1748 00d6 0B       		.uleb128 0xb
 1749 00d7 3B       		.uleb128 0x3b
 1750 00d8 05       		.uleb128 0x5
 1751 00d9 27       		.uleb128 0x27
 1752 00da 19       		.uleb128 0x19
 1753 00db 11       		.uleb128 0x11
 1754 00dc 01       		.uleb128 0x1
 1755 00dd 12       		.uleb128 0x12
 1756 00de 06       		.uleb128 0x6
 1757 00df 40       		.uleb128 0x40
 1758 00e0 18       		.uleb128 0x18
 1759 00e1 9742     		.uleb128 0x2117
 1760 00e3 19       		.uleb128 0x19
 1761 00e4 01       		.uleb128 0x1
 1762 00e5 13       		.uleb128 0x13
 1763 00e6 00       		.byte	0
 1764 00e7 00       		.byte	0
 1765 00e8 13       		.uleb128 0x13
 1766 00e9 2E       		.uleb128 0x2e
 1767 00ea 01       		.byte	0x1
 1768 00eb 03       		.uleb128 0x3
 1769 00ec 0E       		.uleb128 0xe
 1770 00ed 3A       		.uleb128 0x3a
 1771 00ee 0B       		.uleb128 0xb
 1772 00ef 3B       		.uleb128 0x3b
 1773 00f0 05       		.uleb128 0x5
 1774 00f1 27       		.uleb128 0x27
 1775 00f2 19       		.uleb128 0x19
 1776 00f3 49       		.uleb128 0x49
 1777 00f4 13       		.uleb128 0x13
 1778 00f5 11       		.uleb128 0x11
 1779 00f6 01       		.uleb128 0x1
 1780 00f7 12       		.uleb128 0x12
 1781 00f8 06       		.uleb128 0x6
 1782 00f9 40       		.uleb128 0x40
 1783 00fa 18       		.uleb128 0x18
 1784 00fb 9742     		.uleb128 0x2117
 1785 00fd 19       		.uleb128 0x19
 1786 00fe 01       		.uleb128 0x1
 1787 00ff 13       		.uleb128 0x13
 1788 0100 00       		.byte	0
 1789 0101 00       		.byte	0
 1790 0102 14       		.uleb128 0x14
 1791 0103 2E       		.uleb128 0x2e
 1792 0104 01       		.byte	0x1
 1793 0105 3F       		.uleb128 0x3f
 1794 0106 19       		.uleb128 0x19
 1795 0107 03       		.uleb128 0x3
 1796 0108 0E       		.uleb128 0xe
 1797 0109 3A       		.uleb128 0x3a
 1798 010a 0B       		.uleb128 0xb
 1799 010b 3B       		.uleb128 0x3b
 1800 010c 0B       		.uleb128 0xb
 1801 010d 27       		.uleb128 0x27
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 53


 1802 010e 19       		.uleb128 0x19
 1803 010f 49       		.uleb128 0x49
 1804 0110 13       		.uleb128 0x13
 1805 0111 11       		.uleb128 0x11
 1806 0112 01       		.uleb128 0x1
 1807 0113 12       		.uleb128 0x12
 1808 0114 06       		.uleb128 0x6
 1809 0115 40       		.uleb128 0x40
 1810 0116 18       		.uleb128 0x18
 1811 0117 9642     		.uleb128 0x2116
 1812 0119 19       		.uleb128 0x19
 1813 011a 01       		.uleb128 0x1
 1814 011b 13       		.uleb128 0x13
 1815 011c 00       		.byte	0
 1816 011d 00       		.byte	0
 1817 011e 15       		.uleb128 0x15
 1818 011f 05       		.uleb128 0x5
 1819 0120 00       		.byte	0
 1820 0121 03       		.uleb128 0x3
 1821 0122 0E       		.uleb128 0xe
 1822 0123 3A       		.uleb128 0x3a
 1823 0124 0B       		.uleb128 0xb
 1824 0125 3B       		.uleb128 0x3b
 1825 0126 0B       		.uleb128 0xb
 1826 0127 49       		.uleb128 0x49
 1827 0128 13       		.uleb128 0x13
 1828 0129 02       		.uleb128 0x2
 1829 012a 18       		.uleb128 0x18
 1830 012b 00       		.byte	0
 1831 012c 00       		.byte	0
 1832 012d 16       		.uleb128 0x16
 1833 012e 34       		.uleb128 0x34
 1834 012f 00       		.byte	0
 1835 0130 03       		.uleb128 0x3
 1836 0131 0E       		.uleb128 0xe
 1837 0132 3A       		.uleb128 0x3a
 1838 0133 0B       		.uleb128 0xb
 1839 0134 3B       		.uleb128 0x3b
 1840 0135 0B       		.uleb128 0xb
 1841 0136 49       		.uleb128 0x49
 1842 0137 13       		.uleb128 0x13
 1843 0138 02       		.uleb128 0x2
 1844 0139 18       		.uleb128 0x18
 1845 013a 00       		.byte	0
 1846 013b 00       		.byte	0
 1847 013c 17       		.uleb128 0x17
 1848 013d 34       		.uleb128 0x34
 1849 013e 00       		.byte	0
 1850 013f 03       		.uleb128 0x3
 1851 0140 0E       		.uleb128 0xe
 1852 0141 3A       		.uleb128 0x3a
 1853 0142 0B       		.uleb128 0xb
 1854 0143 3B       		.uleb128 0x3b
 1855 0144 0B       		.uleb128 0xb
 1856 0145 49       		.uleb128 0x49
 1857 0146 13       		.uleb128 0x13
 1858 0147 3F       		.uleb128 0x3f
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 54


 1859 0148 19       		.uleb128 0x19
 1860 0149 3C       		.uleb128 0x3c
 1861 014a 19       		.uleb128 0x19
 1862 014b 00       		.byte	0
 1863 014c 00       		.byte	0
 1864 014d 18       		.uleb128 0x18
 1865 014e 34       		.uleb128 0x34
 1866 014f 00       		.byte	0
 1867 0150 03       		.uleb128 0x3
 1868 0151 0E       		.uleb128 0xe
 1869 0152 3A       		.uleb128 0x3a
 1870 0153 0B       		.uleb128 0xb
 1871 0154 3B       		.uleb128 0x3b
 1872 0155 05       		.uleb128 0x5
 1873 0156 49       		.uleb128 0x49
 1874 0157 13       		.uleb128 0x13
 1875 0158 3F       		.uleb128 0x3f
 1876 0159 19       		.uleb128 0x19
 1877 015a 3C       		.uleb128 0x3c
 1878 015b 19       		.uleb128 0x19
 1879 015c 00       		.byte	0
 1880 015d 00       		.byte	0
 1881 015e 00       		.byte	0
 1882              		.section	.debug_aranges,"",%progbits
 1883 0000 5C000000 		.4byte	0x5c
 1884 0004 0200     		.2byte	0x2
 1885 0006 00000000 		.4byte	.Ldebug_info0
 1886 000a 04       		.byte	0x4
 1887 000b 00       		.byte	0
 1888 000c 0000     		.2byte	0
 1889 000e 0000     		.2byte	0
 1890 0010 00000000 		.4byte	.LFB140
 1891 0014 34000000 		.4byte	.LFE140-.LFB140
 1892 0018 00000000 		.4byte	.LFB141
 1893 001c 34000000 		.4byte	.LFE141-.LFB141
 1894 0020 00000000 		.4byte	.LFB142
 1895 0024 1C000000 		.4byte	.LFE142-.LFB142
 1896 0028 00000000 		.4byte	.LFB143
 1897 002c 18000000 		.4byte	.LFE143-.LFB143
 1898 0030 00000000 		.4byte	.LFB144
 1899 0034 30000000 		.4byte	.LFE144-.LFB144
 1900 0038 00000000 		.4byte	.LFB150
 1901 003c 2C000000 		.4byte	.LFE150-.LFB150
 1902 0040 00000000 		.4byte	.LFB151
 1903 0044 38000000 		.4byte	.LFE151-.LFB151
 1904 0048 00000000 		.4byte	.LFB152
 1905 004c 40000000 		.4byte	.LFE152-.LFB152
 1906 0050 00000000 		.4byte	.LFB153
 1907 0054 4C000000 		.4byte	.LFE153-.LFB153
 1908 0058 00000000 		.4byte	0
 1909 005c 00000000 		.4byte	0
 1910              		.section	.debug_ranges,"",%progbits
 1911              	.Ldebug_ranges0:
 1912 0000 00000000 		.4byte	.LFB140
 1913 0004 34000000 		.4byte	.LFE140
 1914 0008 00000000 		.4byte	.LFB141
 1915 000c 34000000 		.4byte	.LFE141
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 55


 1916 0010 00000000 		.4byte	.LFB142
 1917 0014 1C000000 		.4byte	.LFE142
 1918 0018 00000000 		.4byte	.LFB143
 1919 001c 18000000 		.4byte	.LFE143
 1920 0020 00000000 		.4byte	.LFB144
 1921 0024 30000000 		.4byte	.LFE144
 1922 0028 00000000 		.4byte	.LFB150
 1923 002c 2C000000 		.4byte	.LFE150
 1924 0030 00000000 		.4byte	.LFB151
 1925 0034 38000000 		.4byte	.LFE151
 1926 0038 00000000 		.4byte	.LFB152
 1927 003c 40000000 		.4byte	.LFE152
 1928 0040 00000000 		.4byte	.LFB153
 1929 0044 4C000000 		.4byte	.LFE153
 1930 0048 00000000 		.4byte	0
 1931 004c 00000000 		.4byte	0
 1932              		.section	.debug_line,"",%progbits
 1933              	.Ldebug_line0:
 1934 0000 8B030000 		.section	.debug_str,"MS",%progbits,1
 1934      0200A902 
 1934      00000201 
 1934      FB0E0D00 
 1934      01010101 
 1935              	.LASF63:
 1936 0000 70726F74 		.ascii	"protBusMasterMask\000"
 1936      4275734D 
 1936      61737465 
 1936      724D6173 
 1936      6B00
 1937              	.LASF141:
 1938 0012 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1938      43313120 
 1938      352E342E 
 1938      31203230 
 1938      31363036 
 1939 0045 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1939      20726576 
 1939      6973696F 
 1939      6E203233 
 1939      37373135 
 1940 0078 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 1940      70202D6D 
 1940      6670753D 
 1940      66707634 
 1940      2D73702D 
 1941 00ab 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1941      6F6E7320 
 1941      2D666661 
 1941      742D6C74 
 1941      6F2D6F62 
 1942              	.LASF73:
 1943 00c5 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1943      6843746C 
 1943      4D61696E 
 1943      57733346 
 1943      72657100 
 1944              	.LASF95:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 56


 1945 00d9 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1945      50727443 
 1945      6667496E 
 1945      4F666673 
 1945      657400
 1946              	.LASF113:
 1947 00ec 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1947      6F636B53 
 1947      74617475 
 1947      734F6666 
 1947      73657400 
 1948              	.LASF39:
 1949 0100 63727970 		.ascii	"cryptoVersion\000"
 1949      746F5665 
 1949      7273696F 
 1949      6E00
 1950              	.LASF121:
 1951 010e 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 1951      50435F44 
 1951      52565F45 
 1951      52524F52 
 1951      00
 1952              	.LASF35:
 1953 011f 70617373 		.ascii	"passBase\000"
 1953      42617365 
 1953      00
 1954              	.LASF48:
 1955 0128 63707573 		.ascii	"cpussIpcIrqNr\000"
 1955      73497063 
 1955      4972714E 
 1955      7200
 1956              	.LASF2:
 1957 0136 5F5F7569 		.ascii	"__uint8_t\000"
 1957      6E74385F 
 1957      7400
 1958              	.LASF92:
 1959 0140 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1959      44697632 
 1959      345F3543 
 1959      746C4F66 
 1959      66736574 
 1960              	.LASF99:
 1961 0155 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 1961      73436D34 
 1961      436C6F63 
 1961      6B43746C 
 1961      4F666673 
 1962              	.LASF22:
 1963 016c 52454C45 		.ascii	"RELEASE\000"
 1963      41534500 
 1964              	.LASF28:
 1965 0174 63707573 		.ascii	"cpussBase\000"
 1965      73426173 
 1965      6500
 1966              	.LASF77:
 1967 017e 64774368 		.ascii	"dwChCtlPrioPos\000"
 1967      43746C50 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 57


 1967      72696F50 
 1967      6F7300
 1968              	.LASF57:
 1969 018d 70657269 		.ascii	"periClockNr\000"
 1969      436C6F63 
 1969      6B4E7200 
 1970              	.LASF12:
 1971 0199 6C6F6E67 		.ascii	"long long unsigned int\000"
 1971      206C6F6E 
 1971      6720756E 
 1971      7369676E 
 1971      65642069 
 1972              	.LASF81:
 1973 01b0 70657269 		.ascii	"periTrCmdOffset\000"
 1973      5472436D 
 1973      644F6666 
 1973      73657400 
 1974              	.LASF105:
 1975 01c0 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 1975      73537973 
 1975      5469636B 
 1975      43746C4F 
 1975      66667365 
 1976              	.LASF140:
 1977 01d6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1977      52784275 
 1977      66666572 
 1977      00
 1978              	.LASF66:
 1979 01e3 666C6173 		.ascii	"flashPipeRequired\000"
 1979      68506970 
 1979      65526571 
 1979      75697265 
 1979      6400
 1980              	.LASF31:
 1981 01f5 75646242 		.ascii	"udbBase\000"
 1981      61736500 
 1982              	.LASF70:
 1983 01fd 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 1983      6843746C 
 1983      4D61696E 
 1983      57733046 
 1983      72657100 
 1984              	.LASF15:
 1985 0211 696E7431 		.ascii	"int16_t\000"
 1985      365F7400 
 1986              	.LASF11:
 1987 0219 6C6F6E67 		.ascii	"long long int\000"
 1987      206C6F6E 
 1987      6720696E 
 1987      7400
 1988              	.LASF0:
 1989 0227 7369676E 		.ascii	"signed char\000"
 1989      65642063 
 1989      68617200 
 1990              	.LASF86:
 1991 0233 70657269 		.ascii	"periDivCmdTypeSelPos\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 58


 1991      44697643 
 1991      6D645479 
 1991      70655365 
 1991      6C506F73 
 1992              	.LASF21:
 1993 0248 41435155 		.ascii	"ACQUIRE\000"
 1993      49524500 
 1994              	.LASF103:
 1995 0250 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 1995      73547269 
 1995      6D52616D 
 1995      43746C4F 
 1995      66667365 
 1996              	.LASF44:
 1997 0266 69706356 		.ascii	"ipcVersion\000"
 1997      65727369 
 1997      6F6E00
 1998              	.LASF106:
 1999 0271 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 1999      73436D30 
 1999      4E6D6943 
 1999      746C4F66 
 1999      66736574 
 2000              	.LASF124:
 2001 0286 6E6F7469 		.ascii	"notifyEventIntr\000"
 2001      66794576 
 2001      656E7449 
 2001      6E747200 
 2002              	.LASF33:
 2003 0296 6873696F 		.ascii	"hsiomBase\000"
 2003      6D426173 
 2003      6500
 2004              	.LASF8:
 2005 02a0 6C6F6E67 		.ascii	"long int\000"
 2005      20696E74 
 2005      00
 2006              	.LASF64:
 2007 02a9 63727970 		.ascii	"cryptoMemSize\000"
 2007      746F4D65 
 2007      6D53697A 
 2007      6500
 2008              	.LASF30:
 2009 02b7 70657269 		.ascii	"periBase\000"
 2009      42617365 
 2009      00
 2010              	.LASF62:
 2011 02c0 73797350 		.ascii	"sysPmSimoPresent\000"
 2011      6D53696D 
 2011      6F507265 
 2011      73656E74 
 2011      00
 2012              	.LASF52:
 2013 02d1 63707573 		.ascii	"cpussFmIrq\000"
 2013      73466D49 
 2013      727100
 2014              	.LASF119:
 2015 02dc 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 59


 2015      6C6500
 2016              	.LASF91:
 2017 02e3 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2017      44697631 
 2017      365F3543 
 2017      746C4F66 
 2017      66736574 
 2018              	.LASF55:
 2019 02f8 73727373 		.ascii	"srssNumPll\000"
 2019      4E756D50 
 2019      6C6C00
 2020              	.LASF134:
 2021 0303 43795F49 		.ascii	"Cy_IPC_Drv_LockRelease\000"
 2021      50435F44 
 2021      72765F4C 
 2021      6F636B52 
 2021      656C6561 
 2022              	.LASF89:
 2023 031a 70657269 		.ascii	"periDiv8CtlOffset\000"
 2023      44697638 
 2023      43746C4F 
 2023      66667365 
 2023      7400
 2024              	.LASF96:
 2025 032c 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2025      50727443 
 2025      66674F75 
 2025      744F6666 
 2025      73657400 
 2026              	.LASF29:
 2027 0340 666C6173 		.ascii	"flashcBase\000"
 2027      68634261 
 2027      736500
 2028              	.LASF9:
 2029 034b 5F5F7569 		.ascii	"__uint32_t\000"
 2029      6E743332 
 2029      5F7400
 2030              	.LASF59:
 2031 0356 70617373 		.ascii	"passSarChannels\000"
 2031      53617243 
 2031      68616E6E 
 2031      656C7300 
 2032              	.LASF25:
 2033 0366 4C4F434B 		.ascii	"LOCK_STATUS\000"
 2033      5F535441 
 2033      54555300 
 2034              	.LASF3:
 2035 0372 5F5F696E 		.ascii	"__int16_t\000"
 2035      7431365F 
 2035      7400
 2036              	.LASF120:
 2037 037c 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 2037      50435F44 
 2037      52565F53 
 2037      55434345 
 2037      535300
 2038              	.LASF102:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 60


 2039 038f 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2039      73436D34 
 2039      50777243 
 2039      746C4F66 
 2039      66736574 
 2040              	.LASF97:
 2041 03a4 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2041      50727443 
 2041      66675369 
 2041      6F4F6666 
 2041      73657400 
 2042              	.LASF49:
 2043 03b8 63707573 		.ascii	"cpussDwChNr\000"
 2043      73447743 
 2043      684E7200 
 2044              	.LASF13:
 2045 03c4 756E7369 		.ascii	"unsigned int\000"
 2045      676E6564 
 2045      20696E74 
 2045      00
 2046              	.LASF16:
 2047 03d1 75696E74 		.ascii	"uint16_t\000"
 2047      31365F74 
 2047      00
 2048              	.LASF116:
 2049 03da 63686172 		.ascii	"char_t\000"
 2049      5F7400
 2050              	.LASF82:
 2051 03e1 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2051      5472436D 
 2051      64477253 
 2051      656C4D73 
 2051      6B00
 2052              	.LASF10:
 2053 03f3 6C6F6E67 		.ascii	"long unsigned int\000"
 2053      20756E73 
 2053      69676E65 
 2053      6420696E 
 2053      7400
 2054              	.LASF47:
 2055 0405 63707573 		.ascii	"cpussIpcNr\000"
 2055      73497063 
 2055      4E7200
 2056              	.LASF34:
 2057 0410 6770696F 		.ascii	"gpioBase\000"
 2057      42617365 
 2057      00
 2058              	.LASF138:
 2059 0419 43795F49 		.ascii	"Cy_IPC_Drv_ReadMsgWord\000"
 2059      50435F44 
 2059      72765F52 
 2059      6561644D 
 2059      7367576F 
 2060              	.LASF83:
 2061 0430 70657269 		.ascii	"periTrGrOffset\000"
 2061      54724772 
 2061      4F666673 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 61


 2061      657400
 2062              	.LASF110:
 2063 043f 63707573 		.ascii	"cpussRam1Ctl0\000"
 2063      7352616D 
 2063      3143746C 
 2063      3000
 2064              	.LASF24:
 2065 044d 44415441 		.ascii	"DATA\000"
 2065      00
 2066              	.LASF122:
 2067 0452 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 2067      6E5F6970 
 2067      63647276 
 2067      5F737461 
 2067      7475735F 
 2068              	.LASF84:
 2069 0468 70657269 		.ascii	"periTrGrSize\000"
 2069      54724772 
 2069      53697A65 
 2069      00
 2070              	.LASF42:
 2071 0475 6770696F 		.ascii	"gpioVersion\000"
 2071      56657273 
 2071      696F6E00 
 2072              	.LASF132:
 2073 0481 43795F49 		.ascii	"Cy_IPC_Drv_LockAcquire\000"
 2073      50435F44 
 2073      72765F4C 
 2073      6F636B41 
 2073      63717569 
 2074              	.LASF114:
 2075 0498 63795F73 		.ascii	"cy_stc_device_t\000"
 2075      74635F64 
 2075      65766963 
 2075      655F7400 
 2076              	.LASF23:
 2077 04a8 4E4F5449 		.ascii	"NOTIFY\000"
 2077      465900
 2078              	.LASF60:
 2079 04af 65704D6F 		.ascii	"epMonitorNr\000"
 2079      6E69746F 
 2079      724E7200 
 2080              	.LASF107:
 2081 04bb 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2081      73436D34 
 2081      4E6D6943 
 2081      746C4F66 
 2081      66736574 
 2082              	.LASF38:
 2083 04d0 63707573 		.ascii	"cpussVersion\000"
 2083      73566572 
 2083      73696F6E 
 2083      00
 2084              	.LASF98:
 2085 04dd 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2085      73436D30 
 2085      436C6F63 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 62


 2085      6B43746C 
 2085      4F666673 
 2086              	.LASF37:
 2087 04f4 63727970 		.ascii	"cryptoBase\000"
 2087      746F4261 
 2087      736500
 2088              	.LASF123:
 2089 04ff 62617365 		.ascii	"base\000"
 2089      00
 2090              	.LASF45:
 2091 0504 70657269 		.ascii	"periVersion\000"
 2091      56657273 
 2091      696F6E00 
 2092              	.LASF101:
 2093 0510 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2093      73436D30 
 2093      53746174 
 2093      75734F66 
 2093      66736574 
 2094              	.LASF20:
 2095 0525 73697A65 		.ascii	"sizetype\000"
 2095      74797065 
 2095      00
 2096              	.LASF75:
 2097 052e 64774368 		.ascii	"dwChOffset\000"
 2097      4F666673 
 2097      657400
 2098              	.LASF126:
 2099 0539 43795F49 		.ascii	"Cy_IPC_Drv_ReleaseNotify\000"
 2099      50435F44 
 2099      72765F52 
 2099      656C6561 
 2099      73654E6F 
 2100              	.LASF88:
 2101 0552 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2101      44697643 
 2101      6D645061 
 2101      54797065 
 2101      53656C50 
 2102              	.LASF111:
 2103 0569 63707573 		.ascii	"cpussRam2Ctl0\000"
 2103      7352616D 
 2103      3243746C 
 2103      3000
 2104              	.LASF127:
 2105 0577 43795F49 		.ascii	"Cy_IPC_Drv_WriteDataValue\000"
 2105      50435F44 
 2105      72765F57 
 2105      72697465 
 2105      44617461 
 2106              	.LASF79:
 2107 0591 64775374 		.ascii	"dwStatusChIdxPos\000"
 2107      61747573 
 2107      43684964 
 2107      78506F73 
 2107      00
 2108              	.LASF61:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 63


 2109 05a2 75646250 		.ascii	"udbPresent\000"
 2109      72657365 
 2109      6E7400
 2110              	.LASF136:
 2111 05ad 6D657373 		.ascii	"message\000"
 2111      61676500 
 2112              	.LASF41:
 2113 05b5 666C6173 		.ascii	"flashcVersion\000"
 2113      68635665 
 2113      7273696F 
 2113      6E00
 2114              	.LASF128:
 2115 05c3 64617461 		.ascii	"dataValue\000"
 2115      56616C75 
 2115      6500
 2116              	.LASF58:
 2117 05cd 736D6966 		.ascii	"smifDeviceNr\000"
 2117      44657669 
 2117      63654E72 
 2117      00
 2118              	.LASF118:
 2119 05da 666C6F61 		.ascii	"float\000"
 2119      7400
 2120              	.LASF80:
 2121 05e0 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2121      61747573 
 2121      43684964 
 2121      784D736B 
 2121      00
 2122              	.LASF139:
 2123 05f1 63795F64 		.ascii	"cy_device\000"
 2123      65766963 
 2123      6500
 2124              	.LASF108:
 2125 05fb 63707573 		.ascii	"cpussRomCtl\000"
 2125      73526F6D 
 2125      43746C00 
 2126              	.LASF78:
 2127 0607 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2127      43746C50 
 2127      7265656D 
 2127      70746162 
 2127      6C65506F 
 2128              	.LASF130:
 2129 061d 43795F49 		.ascii	"Cy_IPC_Drv_IsLockAcquired\000"
 2129      50435F44 
 2129      72765F49 
 2129      734C6F63 
 2129      6B416371 
 2130              	.LASF131:
 2131 0637 5F426F6F 		.ascii	"_Bool\000"
 2131      6C00
 2132              	.LASF17:
 2133 063d 696E7433 		.ascii	"int32_t\000"
 2133      325F7400 
 2134              	.LASF1:
 2135 0645 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 64


 2135      676E6564 
 2135      20636861 
 2135      7200
 2136              	.LASF74:
 2137 0653 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2137      6843746C 
 2137      4D61696E 
 2137      57733446 
 2137      72657100 
 2138              	.LASF4:
 2139 0667 73686F72 		.ascii	"short int\000"
 2139      7420696E 
 2139      7400
 2140              	.LASF27:
 2141 0671 4950435F 		.ascii	"IPC_STRUCT_V1_Type\000"
 2141      53545255 
 2141      43545F56 
 2141      315F5479 
 2141      706500
 2142              	.LASF26:
 2143 0684 52455345 		.ascii	"RESERVED\000"
 2143      52564544 
 2143      00
 2144              	.LASF133:
 2145 068d 72656C65 		.ascii	"releaseEventIntr\000"
 2145      61736545 
 2145      76656E74 
 2145      496E7472 
 2145      00
 2146              	.LASF85:
 2147 069e 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2147      44697643 
 2147      6D644469 
 2147      7653656C 
 2147      4D736B00 
 2148              	.LASF72:
 2149 06b2 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2149      6843746C 
 2149      4D61696E 
 2149      57733246 
 2149      72657100 
 2150              	.LASF56:
 2151 06c6 73727373 		.ascii	"srssNumHfroot\000"
 2151      4E756D48 
 2151      66726F6F 
 2151      7400
 2152              	.LASF69:
 2153 06d4 666C6173 		.ascii	"flashEraseDelay\000"
 2153      68457261 
 2153      73654465 
 2153      6C617900 
 2154              	.LASF143:
 2155 06e4 433A5C55 		.ascii	"C:\\Users\\tmj32\\Documents\\TCNJ\\Senior_Project\\"
 2155      73657273 
 2155      5C746D6A 
 2155      33325C44 
 2155      6F63756D 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 65


 2156 0711 4F736369 		.ascii	"Oscilloscope_Senior_Project\\tcom_engineering\\embe"
 2156      6C6C6F73 
 2156      636F7065 
 2156      5F53656E 
 2156      696F725F 
 2157 0742 645F7377 		.ascii	"d_sw\\tcom_app\\tcom_app_psoc6_lvgl6\\tcom_displ_te"
 2157      5C74636F 
 2157      6D5F6170 
 2157      705C7463 
 2157      6F6D5F61 
 2158 0772 73745F70 		.ascii	"st_psoc6.cydsn\000"
 2158      736F6336 
 2158      2E637964 
 2158      736E00
 2159              	.LASF18:
 2160 0781 75696E74 		.ascii	"uint32_t\000"
 2160      33325F74 
 2160      00
 2161              	.LASF19:
 2162 078a 6C6F6E67 		.ascii	"long double\000"
 2162      20646F75 
 2162      626C6500 
 2163              	.LASF117:
 2164 0796 63686172 		.ascii	"char\000"
 2164      00
 2165              	.LASF46:
 2166 079b 70726F74 		.ascii	"protVersion\000"
 2166      56657273 
 2166      696F6E00 
 2167              	.LASF109:
 2168 07a7 63707573 		.ascii	"cpussRam0Ctl0\000"
 2168      7352616D 
 2168      3043746C 
 2168      3000
 2169              	.LASF135:
 2170 07b5 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgWord\000"
 2170      50435F44 
 2170      72765F53 
 2170      656E644D 
 2170      7367576F 
 2171              	.LASF5:
 2172 07cc 5F5F7569 		.ascii	"__uint16_t\000"
 2172      6E743136 
 2172      5F7400
 2173              	.LASF90:
 2174 07d7 70657269 		.ascii	"periDiv16CtlOffset\000"
 2174      44697631 
 2174      3643746C 
 2174      4F666673 
 2174      657400
 2175              	.LASF7:
 2176 07ea 5F5F696E 		.ascii	"__int32_t\000"
 2176      7433325F 
 2176      7400
 2177              	.LASF43:
 2178 07f4 6873696F 		.ascii	"hsiomVersion\000"
 2178      6D566572 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 66


 2178      73696F6E 
 2178      00
 2179              	.LASF129:
 2180 0801 43795F49 		.ascii	"Cy_IPC_Drv_ReadDataValue\000"
 2180      50435F44 
 2180      72765F52 
 2180      65616444 
 2180      61746156 
 2181              	.LASF71:
 2182 081a 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2182      6843746C 
 2182      4D61696E 
 2182      57733146 
 2182      72657100 
 2183              	.LASF6:
 2184 082e 73686F72 		.ascii	"short unsigned int\000"
 2184      7420756E 
 2184      7369676E 
 2184      65642069 
 2184      6E7400
 2185              	.LASF76:
 2186 0841 64774368 		.ascii	"dwChSize\000"
 2186      53697A65 
 2186      00
 2187              	.LASF112:
 2188 084a 69706353 		.ascii	"ipcStructSize\000"
 2188      74727563 
 2188      7453697A 
 2188      6500
 2189              	.LASF51:
 2190 0858 63707573 		.ascii	"cpussIpc0Irq\000"
 2190      73497063 
 2190      30497271 
 2190      00
 2191              	.LASF94:
 2192 0865 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2192      50727443 
 2192      66674F66 
 2192      66736574 
 2192      00
 2193              	.LASF32:
 2194 0876 70726F74 		.ascii	"protBase\000"
 2194      42617365 
 2194      00
 2195              	.LASF125:
 2196 087f 43795F49 		.ascii	"Cy_IPC_Drv_AcquireNotify\000"
 2196      50435F44 
 2196      72765F41 
 2196      63717569 
 2196      72654E6F 
 2197              	.LASF53:
 2198 0898 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2198      734E6F74 
 2198      436F6E6E 
 2198      65637465 
 2198      64497271 
 2199              	.LASF142:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 67


 2200 08ad 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2200      72617465 
 2200      645F536F 
 2200      75726365 
 2200      5C50536F 
 2201 08db 6970635C 		.ascii	"ipc\\cy_ipc_drv.c\000"
 2201      63795F69 
 2201      70635F64 
 2201      72762E63 
 2201      00
 2202              	.LASF67:
 2203 08ec 666C6173 		.ascii	"flashWriteDelay\000"
 2203      68577269 
 2203      74654465 
 2203      6C617900 
 2204              	.LASF14:
 2205 08fc 75696E74 		.ascii	"uint8_t\000"
 2205      385F7400 
 2206              	.LASF100:
 2207 0904 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2207      73436D34 
 2207      53746174 
 2207      75734F66 
 2207      66736574 
 2208              	.LASF93:
 2209 0919 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2209      50727449 
 2209      6E747243 
 2209      66674F66 
 2209      66736574 
 2210              	.LASF104:
 2211 092e 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2211      73547269 
 2211      6D526F6D 
 2211      43746C4F 
 2211      66667365 
 2212              	.LASF115:
 2213 0944 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 2213      53545255 
 2213      43545F54 
 2213      79706500 
 2214              	.LASF54:
 2215 0954 73727373 		.ascii	"srssNumClkpath\000"
 2215      4E756D43 
 2215      6C6B7061 
 2215      746800
 2216              	.LASF40:
 2217 0963 64775665 		.ascii	"dwVersion\000"
 2217      7273696F 
 2217      6E00
 2218              	.LASF36:
 2219 096d 69706342 		.ascii	"ipcBase\000"
 2219      61736500 
 2220              	.LASF87:
 2221 0975 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2221      44697643 
 2221      6D645061 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccLNKzbe.s 			page 68


 2221      44697653 
 2221      656C506F 
 2222              	.LASF68:
 2223 098b 666C6173 		.ascii	"flashProgramDelay\000"
 2223      6850726F 
 2223      6772616D 
 2223      44656C61 
 2223      7900
 2224              	.LASF137:
 2225 099d 72657453 		.ascii	"retStatus\000"
 2225      74617475 
 2225      7300
 2226              	.LASF50:
 2227 09a7 63707573 		.ascii	"cpussFlashPaSize\000"
 2227      73466C61 
 2227      73685061 
 2227      53697A65 
 2227      00
 2228              	.LASF65:
 2229 09b8 666C6173 		.ascii	"flashRwwRequired\000"
 2229      68527777 
 2229      52657175 
 2229      69726564 
 2229      00
 2230              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
