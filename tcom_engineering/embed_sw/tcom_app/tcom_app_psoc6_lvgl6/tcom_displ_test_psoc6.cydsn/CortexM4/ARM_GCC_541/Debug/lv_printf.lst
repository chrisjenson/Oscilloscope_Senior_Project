ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"lv_printf.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	_out_buffer, %function
  25              	_out_buffer:
  26              	.LFB0:
  27              		.file 1 "..\\..\\..\\lvgl\\version_6.1.2\\lvgl\\src\\lv_misc\\lv_printf.c"
   1:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
   5:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // \license The MIT License (MIT)
   6:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
   7:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // in the Software without restriction, including without limitation the rights
  10:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // furnished to do so, subject to the following conditions:
  13:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
  14:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // The above copyright notice and this permission notice shall be included in
  15:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // all copies or substantial portions of the Software.
  16:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
  17:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // THE SOFTWARE.
  24:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
  25:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //        safe and reentrant!
  28:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //        malloc for printf (and may not be thread safe).
  30:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** //
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 2


  31:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  33:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #include "lv_printf.h"
  34:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  35:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if LV_SPRINTF_CUSTOM == 0
  36:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  37:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #include <stdbool.h>
  38:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #include <stdint.h>
  39:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  40:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  41:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  42:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // numeric number including padded zeros (dynamically created on stack)
  43:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: 32 byte
  44:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  45:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_NTOA_BUFFER_SIZE    32U
  46:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  47:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  48:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  49:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // float number including padded zeros (dynamically created on stack)
  50:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: 32 byte
  51:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  52:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_FTOA_BUFFER_SIZE    32U
  53:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  54:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  55:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // support for the floating point type (%f)
  56:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: activated
  57:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_FLOAT
  58:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_SUPPORT_FLOAT
  59:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  60:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  61:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // support for exponential floating point notation (%e/%g)
  62:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: activated
  63:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  64:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_SUPPORT_EXPONENTIAL
  65:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  66:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  67:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // define the default floating point precision
  68:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: 6 digits
  69:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  70:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_DEFAULT_FLOAT_PRECISION  6U
  71:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  72:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  73:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // define the largest float suitable to print with %f
  74:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: 1e9
  75:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_MAX_FLOAT
  76:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_MAX_FLOAT  1e9
  77:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  78:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  79:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // support for the long long types (%llu or %p)
  80:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: activated
  81:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  82:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_SUPPORT_LONG_LONG
  83:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  84:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  85:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // support for the ptrdiff_t type (%t)
  86:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  87:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // default: activated
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 3


  88:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  89:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define PRINTF_SUPPORT_PTRDIFF_T
  90:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
  91:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  92:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  93:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
  94:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal flag definitions
  95:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
  96:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_LEFT      (1U <<  1U)
  97:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_PLUS      (1U <<  2U)
  98:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_SPACE     (1U <<  3U)
  99:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_HASH      (1U <<  4U)
 100:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 101:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 102:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 103:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_LONG      (1U <<  8U)
 104:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 105:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_PRECISION (1U << 10U)
 106:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 107:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 108:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 109:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // import float.h for DBL_MAX
 110:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 111:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #include <float.h>
 112:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 113:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 114:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 115:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // output function type
 116:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** typedef void (*out_fct_type)(char character, void* buffer, size_t idx, size_t maxlen);
 117:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 118:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 119:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // wrapper (used as buffer) for output function type
 120:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** typedef struct {
 121:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   void  (*fct)(char character, void* arg);
 122:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   void* arg;
 123:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** } out_fct_wrap_type;
 124:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 125:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 126:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal buffer output
 127:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static inline void _out_buffer(char character, void* buffer, size_t idx, size_t maxlen)
 128:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
  28              		.loc 1 128 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 B960     		str	r1, [r7, #8]
  41 0008 7A60     		str	r2, [r7, #4]
  42 000a 3B60     		str	r3, [r7]
  43 000c 0346     		mov	r3, r0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 4


  44 000e FB73     		strb	r3, [r7, #15]
 129:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (idx < maxlen) {
  45              		.loc 1 129 0
  46 0010 7A68     		ldr	r2, [r7, #4]
  47 0012 3B68     		ldr	r3, [r7]
  48 0014 9A42     		cmp	r2, r3
  49 0016 04D2     		bcs	.L3
 130:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     ((char*)buffer)[idx] = character;
  50              		.loc 1 130 0
  51 0018 BA68     		ldr	r2, [r7, #8]
  52 001a 7B68     		ldr	r3, [r7, #4]
  53 001c 1344     		add	r3, r3, r2
  54 001e FA7B     		ldrb	r2, [r7, #15]
  55 0020 1A70     		strb	r2, [r3]
  56              	.L3:
 131:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 132:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
  57              		.loc 1 132 0
  58 0022 00BF     		nop
  59 0024 1437     		adds	r7, r7, #20
  60              		.cfi_def_cfa_offset 4
  61 0026 BD46     		mov	sp, r7
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 0028 5DF8047B 		ldr	r7, [sp], #4
  65              		.cfi_restore 7
  66              		.cfi_def_cfa_offset 0
  67 002c 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	_out_buffer, .-_out_buffer
  71 002e 00BF     		.section	.text._out_null,"ax",%progbits
  72              		.align	2
  73              		.thumb
  74              		.thumb_func
  75              		.type	_out_null, %function
  76              	_out_null:
  77              	.LFB1:
 133:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 134:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 135:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal null output
 136:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
 137:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
  78              		.loc 1 137 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 16
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 85B0     		sub	sp, sp, #20
  87              		.cfi_def_cfa_offset 24
  88 0004 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  90 0006 B960     		str	r1, [r7, #8]
  91 0008 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 5


  92 000a 3B60     		str	r3, [r7]
  93 000c 0346     		mov	r3, r0
  94 000e FB73     		strb	r3, [r7, #15]
 138:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   (void)character; (void)buffer; (void)idx; (void)maxlen;
 139:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
  95              		.loc 1 139 0
  96 0010 00BF     		nop
  97 0012 1437     		adds	r7, r7, #20
  98              		.cfi_def_cfa_offset 4
  99 0014 BD46     		mov	sp, r7
 100              		.cfi_def_cfa_register 13
 101              		@ sp needed
 102 0016 5DF8047B 		ldr	r7, [sp], #4
 103              		.cfi_restore 7
 104              		.cfi_def_cfa_offset 0
 105 001a 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	_out_null, .-_out_null
 109              		.section	.text._strnlen_s,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	_strnlen_s, %function
 114              	_strnlen_s:
 115              	.LFB2:
 140:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 141:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 142:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 143:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal secure strlen
 144:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 145:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
 146:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 116              		.loc 1 146 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 16
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 85B0     		sub	sp, sp, #20
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
 129 0008 3960     		str	r1, [r7]
 147:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const char* s;
 148:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   for (s = str; *s && maxsize--; ++s);
 130              		.loc 1 148 0
 131 000a 7B68     		ldr	r3, [r7, #4]
 132 000c FB60     		str	r3, [r7, #12]
 133 000e 02E0     		b	.L6
 134              	.L8:
 135              		.loc 1 148 0 is_stmt 0 discriminator 4
 136 0010 FB68     		ldr	r3, [r7, #12]
 137 0012 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 6


 138 0014 FB60     		str	r3, [r7, #12]
 139              	.L6:
 140              		.loc 1 148 0 discriminator 1
 141 0016 FB68     		ldr	r3, [r7, #12]
 142 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 143 001a 002B     		cmp	r3, #0
 144 001c 04D0     		beq	.L7
 145              		.loc 1 148 0 discriminator 3
 146 001e 3B68     		ldr	r3, [r7]
 147 0020 5A1E     		subs	r2, r3, #1
 148 0022 3A60     		str	r2, [r7]
 149 0024 002B     		cmp	r3, #0
 150 0026 F3D1     		bne	.L8
 151              	.L7:
 149:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return (unsigned int)(s - str);
 152              		.loc 1 149 0 is_stmt 1
 153 0028 FA68     		ldr	r2, [r7, #12]
 154 002a 7B68     		ldr	r3, [r7, #4]
 155 002c D31A     		subs	r3, r2, r3
 150:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 156              		.loc 1 150 0
 157 002e 1846     		mov	r0, r3
 158 0030 1437     		adds	r7, r7, #20
 159              		.cfi_def_cfa_offset 4
 160 0032 BD46     		mov	sp, r7
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 0034 5DF8047B 		ldr	r7, [sp], #4
 164              		.cfi_restore 7
 165              		.cfi_def_cfa_offset 0
 166 0038 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	_strnlen_s, .-_strnlen_s
 170 003a 00BF     		.section	.text._is_digit,"ax",%progbits
 171              		.align	2
 172              		.thumb
 173              		.thumb_func
 174              		.type	_is_digit, %function
 175              	_is_digit:
 176              	.LFB3:
 151:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 152:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 153:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal test if char is a digit (0-9)
 154:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // \return true if char is a digit
 155:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static inline bool _is_digit(char ch)
 156:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 177              		.loc 1 156 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 83B0     		sub	sp, sp, #12
 186              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 7


 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 0346     		mov	r3, r0
 190 0008 FB71     		strb	r3, [r7, #7]
 157:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return (ch >= '0') && (ch <= '9');
 191              		.loc 1 157 0
 192 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 193 000c 2F2B     		cmp	r3, #47
 194 000e 04D9     		bls	.L11
 195              		.loc 1 157 0 is_stmt 0 discriminator 1
 196 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 197 0012 392B     		cmp	r3, #57
 198 0014 01D8     		bhi	.L11
 199              		.loc 1 157 0 discriminator 3
 200 0016 0123     		movs	r3, #1
 201 0018 00E0     		b	.L12
 202              	.L11:
 203              		.loc 1 157 0 discriminator 4
 204 001a 0023     		movs	r3, #0
 205              	.L12:
 206              		.loc 1 157 0 discriminator 6
 207 001c 03F00103 		and	r3, r3, #1
 208 0020 DBB2     		uxtb	r3, r3
 158:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 209              		.loc 1 158 0 is_stmt 1 discriminator 6
 210 0022 1846     		mov	r0, r3
 211 0024 0C37     		adds	r7, r7, #12
 212              		.cfi_def_cfa_offset 4
 213 0026 BD46     		mov	sp, r7
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0028 5DF8047B 		ldr	r7, [sp], #4
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 002c 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	_is_digit, .-_is_digit
 223 002e 00BF     		.section	.text._atoi,"ax",%progbits
 224              		.align	2
 225              		.thumb
 226              		.thumb_func
 227              		.type	_atoi, %function
 228              	_atoi:
 229              	.LFB4:
 159:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 160:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 161:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal ASCII string to unsigned int conversion
 162:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static unsigned int _atoi(const char** str)
 163:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 230              		.loc 1 163 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 16
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 7, -8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 8


 237              		.cfi_offset 14, -4
 238 0002 84B0     		sub	sp, sp, #16
 239              		.cfi_def_cfa_offset 24
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 164:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   unsigned int i = 0U;
 243              		.loc 1 164 0
 244 0008 0023     		movs	r3, #0
 245 000a FB60     		str	r3, [r7, #12]
 165:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while (_is_digit(**str)) {
 246              		.loc 1 165 0
 247 000c 0EE0     		b	.L15
 248              	.L16:
 166:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     i = i * 10U + (unsigned int)(*((*str)++) - '0');
 249              		.loc 1 166 0
 250 000e FA68     		ldr	r2, [r7, #12]
 251 0010 1346     		mov	r3, r2
 252 0012 9B00     		lsls	r3, r3, #2
 253 0014 1344     		add	r3, r3, r2
 254 0016 5B00     		lsls	r3, r3, #1
 255 0018 1846     		mov	r0, r3
 256 001a 7B68     		ldr	r3, [r7, #4]
 257 001c 1B68     		ldr	r3, [r3]
 258 001e 591C     		adds	r1, r3, #1
 259 0020 7A68     		ldr	r2, [r7, #4]
 260 0022 1160     		str	r1, [r2]
 261 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 0026 0344     		add	r3, r3, r0
 263 0028 303B     		subs	r3, r3, #48
 264 002a FB60     		str	r3, [r7, #12]
 265              	.L15:
 165:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while (_is_digit(**str)) {
 266              		.loc 1 165 0
 267 002c 7B68     		ldr	r3, [r7, #4]
 268 002e 1B68     		ldr	r3, [r3]
 269 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 0032 1846     		mov	r0, r3
 271 0034 FFF7FEFF 		bl	_is_digit
 272 0038 0346     		mov	r3, r0
 273 003a 002B     		cmp	r3, #0
 274 003c E7D1     		bne	.L16
 167:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 168:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return i;
 275              		.loc 1 168 0
 276 003e FB68     		ldr	r3, [r7, #12]
 169:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 277              		.loc 1 169 0
 278 0040 1846     		mov	r0, r3
 279 0042 1037     		adds	r7, r7, #16
 280              		.cfi_def_cfa_offset 8
 281 0044 BD46     		mov	sp, r7
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 0046 80BD     		pop	{r7, pc}
 285              		.cfi_endproc
 286              	.LFE4:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 9


 287              		.size	_atoi, .-_atoi
 288              		.section	.text._out_rev,"ax",%progbits
 289              		.align	2
 290              		.thumb
 291              		.thumb_func
 292              		.type	_out_rev, %function
 293              	_out_rev:
 294              	.LFB5:
 170:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 171:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 172:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // output the specified string in reverse, taking care of any zero-padding
 173:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, 
 174:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 295              		.loc 1 174 0
 296              		.cfi_startproc
 297              		@ args = 16, pretend = 0, frame = 24
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299 0000 90B5     		push	{r4, r7, lr}
 300              		.cfi_def_cfa_offset 12
 301              		.cfi_offset 4, -12
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 87B0     		sub	sp, sp, #28
 305              		.cfi_def_cfa_offset 40
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 F860     		str	r0, [r7, #12]
 309 0008 B960     		str	r1, [r7, #8]
 310 000a 7A60     		str	r2, [r7, #4]
 311 000c 3B60     		str	r3, [r7]
 175:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const size_t start_idx = idx;
 312              		.loc 1 175 0
 313 000e 7B68     		ldr	r3, [r7, #4]
 314 0010 3B61     		str	r3, [r7, #16]
 176:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 177:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // pad spaces up to given width
 178:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 315              		.loc 1 178 0
 316 0012 7B6B     		ldr	r3, [r7, #52]
 317 0014 03F00203 		and	r3, r3, #2
 318 0018 002B     		cmp	r3, #0
 319 001a 25D1     		bne	.L22
 320              		.loc 1 178 0 is_stmt 0 discriminator 1
 321 001c 7B6B     		ldr	r3, [r7, #52]
 322 001e 03F00103 		and	r3, r3, #1
 323 0022 002B     		cmp	r3, #0
 324 0024 20D1     		bne	.L22
 325              	.LBB2:
 179:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       size_t i;
 180:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       for (i = len; i < width; i++) {
 326              		.loc 1 180 0 is_stmt 1
 327 0026 FB6A     		ldr	r3, [r7, #44]
 328 0028 7B61     		str	r3, [r7, #20]
 329 002a 0AE0     		b	.L20
 330              	.L21:
 181:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       out(' ', buffer, idx++, maxlen);
 331              		.loc 1 181 0 discriminator 3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 10


 332 002c 7A68     		ldr	r2, [r7, #4]
 333 002e 531C     		adds	r3, r2, #1
 334 0030 7B60     		str	r3, [r7, #4]
 335 0032 FC68     		ldr	r4, [r7, #12]
 336 0034 3B68     		ldr	r3, [r7]
 337 0036 B968     		ldr	r1, [r7, #8]
 338 0038 2020     		movs	r0, #32
 339 003a A047     		blx	r4
 180:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       out(' ', buffer, idx++, maxlen);
 340              		.loc 1 180 0 discriminator 3
 341 003c 7B69     		ldr	r3, [r7, #20]
 342 003e 0133     		adds	r3, r3, #1
 343 0040 7B61     		str	r3, [r7, #20]
 344              	.L20:
 180:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       out(' ', buffer, idx++, maxlen);
 345              		.loc 1 180 0 is_stmt 0 discriminator 1
 346 0042 7A69     		ldr	r2, [r7, #20]
 347 0044 3B6B     		ldr	r3, [r7, #48]
 348 0046 9A42     		cmp	r2, r3
 349 0048 F0D3     		bcc	.L21
 350              	.LBE2:
 182:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 183:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 184:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 185:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // reverse string
 186:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while (len) {
 351              		.loc 1 186 0 is_stmt 1
 352 004a 0DE0     		b	.L22
 353              	.L23:
 187:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 354              		.loc 1 187 0
 355 004c FB6A     		ldr	r3, [r7, #44]
 356 004e 013B     		subs	r3, r3, #1
 357 0050 FB62     		str	r3, [r7, #44]
 358 0052 BA6A     		ldr	r2, [r7, #40]
 359 0054 FB6A     		ldr	r3, [r7, #44]
 360 0056 1344     		add	r3, r3, r2
 361 0058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 362 005a 7A68     		ldr	r2, [r7, #4]
 363 005c 531C     		adds	r3, r2, #1
 364 005e 7B60     		str	r3, [r7, #4]
 365 0060 FC68     		ldr	r4, [r7, #12]
 366 0062 3B68     		ldr	r3, [r7]
 367 0064 B968     		ldr	r1, [r7, #8]
 368 0066 A047     		blx	r4
 369              	.L22:
 186:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     out(buf[--len], buffer, idx++, maxlen);
 370              		.loc 1 186 0
 371 0068 FB6A     		ldr	r3, [r7, #44]
 372 006a 002B     		cmp	r3, #0
 373 006c EED1     		bne	.L23
 188:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 189:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 190:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // append pad spaces up to given width
 191:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (flags & FLAGS_LEFT) {
 374              		.loc 1 191 0
 375 006e 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 11


 376 0070 03F00203 		and	r3, r3, #2
 377 0074 002B     		cmp	r3, #0
 378 0076 0ED0     		beq	.L24
 192:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while (idx - start_idx < width) {
 379              		.loc 1 192 0
 380 0078 07E0     		b	.L25
 381              	.L26:
 193:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       out(' ', buffer, idx++, maxlen);
 382              		.loc 1 193 0
 383 007a 7A68     		ldr	r2, [r7, #4]
 384 007c 531C     		adds	r3, r2, #1
 385 007e 7B60     		str	r3, [r7, #4]
 386 0080 FC68     		ldr	r4, [r7, #12]
 387 0082 3B68     		ldr	r3, [r7]
 388 0084 B968     		ldr	r1, [r7, #8]
 389 0086 2020     		movs	r0, #32
 390 0088 A047     		blx	r4
 391              	.L25:
 192:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while (idx - start_idx < width) {
 392              		.loc 1 192 0
 393 008a 7A68     		ldr	r2, [r7, #4]
 394 008c 3B69     		ldr	r3, [r7, #16]
 395 008e D21A     		subs	r2, r2, r3
 396 0090 3B6B     		ldr	r3, [r7, #48]
 397 0092 9A42     		cmp	r2, r3
 398 0094 F1D3     		bcc	.L26
 399              	.L24:
 194:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 195:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 196:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 197:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return idx;
 400              		.loc 1 197 0
 401 0096 7B68     		ldr	r3, [r7, #4]
 198:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 402              		.loc 1 198 0
 403 0098 1846     		mov	r0, r3
 404 009a 1C37     		adds	r7, r7, #28
 405              		.cfi_def_cfa_offset 12
 406 009c BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 009e 90BD     		pop	{r4, r7, pc}
 410              		.cfi_endproc
 411              	.LFE5:
 412              		.size	_out_rev, .-_out_rev
 413              		.section	.text._ntoa_format,"ax",%progbits
 414              		.align	2
 415              		.thumb
 416              		.thumb_func
 417              		.type	_ntoa_format, %function
 418              	_ntoa_format:
 419              	.LFB6:
 199:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 200:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 201:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal itoa format
 202:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, si
 203:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 12


 420              		.loc 1 203 0
 421              		.cfi_startproc
 422              		@ args = 28, pretend = 0, frame = 16
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 88B0     		sub	sp, sp, #32
 429              		.cfi_def_cfa_offset 40
 430 0004 04AF     		add	r7, sp, #16
 431              		.cfi_def_cfa 7, 24
 432 0006 F860     		str	r0, [r7, #12]
 433 0008 B960     		str	r1, [r7, #8]
 434 000a 7A60     		str	r2, [r7, #4]
 435 000c 3B60     		str	r3, [r7]
 204:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // pad leading zeros
 205:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_LEFT)) {
 436              		.loc 1 205 0
 437 000e 3B6B     		ldr	r3, [r7, #48]
 438 0010 03F00203 		and	r3, r3, #2
 439 0014 002B     		cmp	r3, #0
 440 0016 36D1     		bne	.L29
 206:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 441              		.loc 1 206 0
 442 0018 FB6A     		ldr	r3, [r7, #44]
 443 001a 002B     		cmp	r3, #0
 444 001c 18D0     		beq	.L32
 445              		.loc 1 206 0 is_stmt 0 discriminator 1
 446 001e 3B6B     		ldr	r3, [r7, #48]
 447 0020 03F00103 		and	r3, r3, #1
 448 0024 002B     		cmp	r3, #0
 449 0026 13D0     		beq	.L32
 450              		.loc 1 206 0 discriminator 2
 451 0028 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 452 002c 002B     		cmp	r3, #0
 453 002e 04D1     		bne	.L31
 454              		.loc 1 206 0 discriminator 3
 455 0030 3B6B     		ldr	r3, [r7, #48]
 456 0032 03F00C03 		and	r3, r3, #12
 457 0036 002B     		cmp	r3, #0
 458 0038 0AD0     		beq	.L32
 459              	.L31:
 207:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       width--;
 460              		.loc 1 207 0 is_stmt 1
 461 003a FB6A     		ldr	r3, [r7, #44]
 462 003c 013B     		subs	r3, r3, #1
 463 003e FB62     		str	r3, [r7, #44]
 208:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 209:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 464              		.loc 1 209 0
 465 0040 06E0     		b	.L32
 466              	.L34:
 210:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 467              		.loc 1 210 0
 468 0042 FB69     		ldr	r3, [r7, #28]
 469 0044 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 13


 470 0046 FA61     		str	r2, [r7, #28]
 471 0048 BA69     		ldr	r2, [r7, #24]
 472 004a 1344     		add	r3, r3, r2
 473 004c 3022     		movs	r2, #48
 474 004e 1A70     		strb	r2, [r3]
 475              	.L32:
 209:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 476              		.loc 1 209 0
 477 0050 FA69     		ldr	r2, [r7, #28]
 478 0052 BB6A     		ldr	r3, [r7, #40]
 479 0054 9A42     		cmp	r2, r3
 480 0056 0AD2     		bcs	.L35
 209:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 481              		.loc 1 209 0 is_stmt 0 discriminator 1
 482 0058 FB69     		ldr	r3, [r7, #28]
 483 005a 1F2B     		cmp	r3, #31
 484 005c F1D9     		bls	.L34
 211:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 212:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 485              		.loc 1 212 0 is_stmt 1
 486 005e 06E0     		b	.L35
 487              	.L36:
 213:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 488              		.loc 1 213 0
 489 0060 FB69     		ldr	r3, [r7, #28]
 490 0062 5A1C     		adds	r2, r3, #1
 491 0064 FA61     		str	r2, [r7, #28]
 492 0066 BA69     		ldr	r2, [r7, #24]
 493 0068 1344     		add	r3, r3, r2
 494 006a 3022     		movs	r2, #48
 495 006c 1A70     		strb	r2, [r3]
 496              	.L35:
 212:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 497              		.loc 1 212 0
 498 006e 3B6B     		ldr	r3, [r7, #48]
 499 0070 03F00103 		and	r3, r3, #1
 500 0074 002B     		cmp	r3, #0
 501 0076 06D0     		beq	.L29
 212:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 502              		.loc 1 212 0 is_stmt 0 discriminator 1
 503 0078 FA69     		ldr	r2, [r7, #28]
 504 007a FB6A     		ldr	r3, [r7, #44]
 505 007c 9A42     		cmp	r2, r3
 506 007e 02D2     		bcs	.L29
 212:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 507              		.loc 1 212 0 discriminator 2
 508 0080 FB69     		ldr	r3, [r7, #28]
 509 0082 1F2B     		cmp	r3, #31
 510 0084 ECD9     		bls	.L36
 511              	.L29:
 214:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 215:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 216:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 217:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // handle hash
 218:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (flags & FLAGS_HASH) {
 512              		.loc 1 218 0 is_stmt 1
 513 0086 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 14


 514 0088 03F01003 		and	r3, r3, #16
 515 008c 002B     		cmp	r3, #0
 516 008e 58D0     		beq	.L37
 219:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 517              		.loc 1 219 0
 518 0090 3B6B     		ldr	r3, [r7, #48]
 519 0092 03F48063 		and	r3, r3, #1024
 520 0096 002B     		cmp	r3, #0
 521 0098 16D1     		bne	.L38
 522              		.loc 1 219 0 is_stmt 0 discriminator 1
 523 009a FB69     		ldr	r3, [r7, #28]
 524 009c 002B     		cmp	r3, #0
 525 009e 13D0     		beq	.L38
 526              		.loc 1 219 0 discriminator 2
 527 00a0 FA69     		ldr	r2, [r7, #28]
 528 00a2 BB6A     		ldr	r3, [r7, #40]
 529 00a4 9A42     		cmp	r2, r3
 530 00a6 03D0     		beq	.L39
 531              		.loc 1 219 0 discriminator 3
 532 00a8 FA69     		ldr	r2, [r7, #28]
 533 00aa FB6A     		ldr	r3, [r7, #44]
 534 00ac 9A42     		cmp	r2, r3
 535 00ae 0BD1     		bne	.L38
 536              	.L39:
 220:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       len--;
 537              		.loc 1 220 0 is_stmt 1
 538 00b0 FB69     		ldr	r3, [r7, #28]
 539 00b2 013B     		subs	r3, r3, #1
 540 00b4 FB61     		str	r3, [r7, #28]
 221:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if (len && (base == 16U)) {
 541              		.loc 1 221 0
 542 00b6 FB69     		ldr	r3, [r7, #28]
 543 00b8 002B     		cmp	r3, #0
 544 00ba 05D0     		beq	.L38
 545              		.loc 1 221 0 is_stmt 0 discriminator 1
 546 00bc 7B6A     		ldr	r3, [r7, #36]
 547 00be 102B     		cmp	r3, #16
 548 00c0 02D1     		bne	.L38
 222:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         len--;
 549              		.loc 1 222 0 is_stmt 1
 550 00c2 FB69     		ldr	r3, [r7, #28]
 551 00c4 013B     		subs	r3, r3, #1
 552 00c6 FB61     		str	r3, [r7, #28]
 553              	.L38:
 223:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 224:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 225:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 554              		.loc 1 225 0
 555 00c8 7B6A     		ldr	r3, [r7, #36]
 556 00ca 102B     		cmp	r3, #16
 557 00cc 0FD1     		bne	.L40
 558              		.loc 1 225 0 is_stmt 0 discriminator 1
 559 00ce 3B6B     		ldr	r3, [r7, #48]
 560 00d0 03F02003 		and	r3, r3, #32
 561 00d4 002B     		cmp	r3, #0
 562 00d6 0AD1     		bne	.L40
 563              		.loc 1 225 0 discriminator 2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 15


 564 00d8 FB69     		ldr	r3, [r7, #28]
 565 00da 1F2B     		cmp	r3, #31
 566 00dc 07D8     		bhi	.L40
 226:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = 'x';
 567              		.loc 1 226 0 is_stmt 1
 568 00de FB69     		ldr	r3, [r7, #28]
 569 00e0 5A1C     		adds	r2, r3, #1
 570 00e2 FA61     		str	r2, [r7, #28]
 571 00e4 BA69     		ldr	r2, [r7, #24]
 572 00e6 1344     		add	r3, r3, r2
 573 00e8 7822     		movs	r2, #120
 574 00ea 1A70     		strb	r2, [r3]
 575 00ec 1FE0     		b	.L41
 576              	.L40:
 227:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 228:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 577              		.loc 1 228 0
 578 00ee 7B6A     		ldr	r3, [r7, #36]
 579 00f0 102B     		cmp	r3, #16
 580 00f2 0FD1     		bne	.L42
 581              		.loc 1 228 0 is_stmt 0 discriminator 1
 582 00f4 3B6B     		ldr	r3, [r7, #48]
 583 00f6 03F02003 		and	r3, r3, #32
 584 00fa 002B     		cmp	r3, #0
 585 00fc 0AD0     		beq	.L42
 586              		.loc 1 228 0 discriminator 2
 587 00fe FB69     		ldr	r3, [r7, #28]
 588 0100 1F2B     		cmp	r3, #31
 589 0102 07D8     		bhi	.L42
 229:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = 'X';
 590              		.loc 1 229 0 is_stmt 1
 591 0104 FB69     		ldr	r3, [r7, #28]
 592 0106 5A1C     		adds	r2, r3, #1
 593 0108 FA61     		str	r2, [r7, #28]
 594 010a BA69     		ldr	r2, [r7, #24]
 595 010c 1344     		add	r3, r3, r2
 596 010e 5822     		movs	r2, #88
 597 0110 1A70     		strb	r2, [r3]
 598 0112 0CE0     		b	.L41
 599              	.L42:
 230:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 231:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 600              		.loc 1 231 0
 601 0114 7B6A     		ldr	r3, [r7, #36]
 602 0116 022B     		cmp	r3, #2
 603 0118 09D1     		bne	.L41
 604              		.loc 1 231 0 is_stmt 0 discriminator 1
 605 011a FB69     		ldr	r3, [r7, #28]
 606 011c 1F2B     		cmp	r3, #31
 607 011e 06D8     		bhi	.L41
 232:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = 'b';
 608              		.loc 1 232 0 is_stmt 1
 609 0120 FB69     		ldr	r3, [r7, #28]
 610 0122 5A1C     		adds	r2, r3, #1
 611 0124 FA61     		str	r2, [r7, #28]
 612 0126 BA69     		ldr	r2, [r7, #24]
 613 0128 1344     		add	r3, r3, r2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 16


 614 012a 6222     		movs	r2, #98
 615 012c 1A70     		strb	r2, [r3]
 616              	.L41:
 233:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 234:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (len < PRINTF_NTOA_BUFFER_SIZE) {
 617              		.loc 1 234 0
 618 012e FB69     		ldr	r3, [r7, #28]
 619 0130 1F2B     		cmp	r3, #31
 620 0132 06D8     		bhi	.L37
 235:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 621              		.loc 1 235 0
 622 0134 FB69     		ldr	r3, [r7, #28]
 623 0136 5A1C     		adds	r2, r3, #1
 624 0138 FA61     		str	r2, [r7, #28]
 625 013a BA69     		ldr	r2, [r7, #24]
 626 013c 1344     		add	r3, r3, r2
 627 013e 3022     		movs	r2, #48
 628 0140 1A70     		strb	r2, [r3]
 629              	.L37:
 236:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 237:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 238:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 239:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (len < PRINTF_NTOA_BUFFER_SIZE) {
 630              		.loc 1 239 0
 631 0142 FB69     		ldr	r3, [r7, #28]
 632 0144 1F2B     		cmp	r3, #31
 633 0146 24D8     		bhi	.L43
 240:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (negative) {
 634              		.loc 1 240 0
 635 0148 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 636 014c 002B     		cmp	r3, #0
 637 014e 07D0     		beq	.L44
 241:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '-';
 638              		.loc 1 241 0
 639 0150 FB69     		ldr	r3, [r7, #28]
 640 0152 5A1C     		adds	r2, r3, #1
 641 0154 FA61     		str	r2, [r7, #28]
 642 0156 BA69     		ldr	r2, [r7, #24]
 643 0158 1344     		add	r3, r3, r2
 644 015a 2D22     		movs	r2, #45
 645 015c 1A70     		strb	r2, [r3]
 646 015e 18E0     		b	.L43
 647              	.L44:
 242:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 243:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if (flags & FLAGS_PLUS) {
 648              		.loc 1 243 0
 649 0160 3B6B     		ldr	r3, [r7, #48]
 650 0162 03F00403 		and	r3, r3, #4
 651 0166 002B     		cmp	r3, #0
 652 0168 07D0     		beq	.L45
 244:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 653              		.loc 1 244 0
 654 016a FB69     		ldr	r3, [r7, #28]
 655 016c 5A1C     		adds	r2, r3, #1
 656 016e FA61     		str	r2, [r7, #28]
 657 0170 BA69     		ldr	r2, [r7, #24]
 658 0172 1344     		add	r3, r3, r2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 17


 659 0174 2B22     		movs	r2, #43
 660 0176 1A70     		strb	r2, [r3]
 661 0178 0BE0     		b	.L43
 662              	.L45:
 245:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 246:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if (flags & FLAGS_SPACE) {
 663              		.loc 1 246 0
 664 017a 3B6B     		ldr	r3, [r7, #48]
 665 017c 03F00803 		and	r3, r3, #8
 666 0180 002B     		cmp	r3, #0
 667 0182 06D0     		beq	.L43
 247:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = ' ';
 668              		.loc 1 247 0
 669 0184 FB69     		ldr	r3, [r7, #28]
 670 0186 5A1C     		adds	r2, r3, #1
 671 0188 FA61     		str	r2, [r7, #28]
 672 018a BA69     		ldr	r2, [r7, #24]
 673 018c 1344     		add	r3, r3, r2
 674 018e 2022     		movs	r2, #32
 675 0190 1A70     		strb	r2, [r3]
 676              	.L43:
 248:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 249:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 250:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 251:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 677              		.loc 1 251 0
 678 0192 3B6B     		ldr	r3, [r7, #48]
 679 0194 0393     		str	r3, [sp, #12]
 680 0196 FB6A     		ldr	r3, [r7, #44]
 681 0198 0293     		str	r3, [sp, #8]
 682 019a FB69     		ldr	r3, [r7, #28]
 683 019c 0193     		str	r3, [sp, #4]
 684 019e BB69     		ldr	r3, [r7, #24]
 685 01a0 0093     		str	r3, [sp]
 686 01a2 3B68     		ldr	r3, [r7]
 687 01a4 7A68     		ldr	r2, [r7, #4]
 688 01a6 B968     		ldr	r1, [r7, #8]
 689 01a8 F868     		ldr	r0, [r7, #12]
 690 01aa FFF7FEFF 		bl	_out_rev
 691 01ae 0346     		mov	r3, r0
 252:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 692              		.loc 1 252 0
 693 01b0 1846     		mov	r0, r3
 694 01b2 1037     		adds	r7, r7, #16
 695              		.cfi_def_cfa_offset 8
 696 01b4 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 01b6 80BD     		pop	{r7, pc}
 700              		.cfi_endproc
 701              	.LFE6:
 702              		.size	_ntoa_format, .-_ntoa_format
 703              		.section	.text._ntoa_long,"ax",%progbits
 704              		.align	2
 705              		.thumb
 706              		.thumb_func
 707              		.type	_ntoa_long, %function
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 18


 708              	_ntoa_long:
 709              	.LFB7:
 253:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 254:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 255:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal itoa for 'long' type
 256:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long v
 257:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 710              		.loc 1 257 0
 711              		.cfi_startproc
 712              		@ args = 24, pretend = 0, frame = 56
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 96B0     		sub	sp, sp, #88
 719              		.cfi_def_cfa_offset 96
 720 0004 08AF     		add	r7, sp, #32
 721              		.cfi_def_cfa 7, 64
 722 0006 F860     		str	r0, [r7, #12]
 723 0008 B960     		str	r1, [r7, #8]
 724 000a 7A60     		str	r2, [r7, #4]
 725 000c 3B60     		str	r3, [r7]
 258:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 259:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   size_t len = 0U;
 726              		.loc 1 259 0
 727 000e 0023     		movs	r3, #0
 728 0010 7B63     		str	r3, [r7, #52]
 260:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 261:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // no hash for 0 values
 262:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!value) {
 729              		.loc 1 262 0
 730 0012 3B6C     		ldr	r3, [r7, #64]
 731 0014 002B     		cmp	r3, #0
 732 0016 03D1     		bne	.L48
 263:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     flags &= ~FLAGS_HASH;
 733              		.loc 1 263 0
 734 0018 7B6D     		ldr	r3, [r7, #84]
 735 001a 23F01003 		bic	r3, r3, #16
 736 001e 7B65     		str	r3, [r7, #84]
 737              	.L48:
 264:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 265:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 266:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // write if precision != 0 and value is != 0
 267:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 738              		.loc 1 267 0
 739 0020 7B6D     		ldr	r3, [r7, #84]
 740 0022 03F48063 		and	r3, r3, #1024
 741 0026 002B     		cmp	r3, #0
 742 0028 02D0     		beq	.L49
 743              		.loc 1 267 0 is_stmt 0 discriminator 1
 744 002a 3B6C     		ldr	r3, [r7, #64]
 745 002c 002B     		cmp	r3, #0
 746 002e 33D0     		beq	.L50
 747              	.L49:
 748              	.LBB3:
 268:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     do {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 19


 269:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       const char digit = (char)(value % base);
 749              		.loc 1 269 0 is_stmt 1
 750 0030 3B6C     		ldr	r3, [r7, #64]
 751 0032 BA6C     		ldr	r2, [r7, #72]
 752 0034 B3FBF2F2 		udiv	r2, r3, r2
 753 0038 B96C     		ldr	r1, [r7, #72]
 754 003a 01FB02F2 		mul	r2, r1, r2
 755 003e 9B1A     		subs	r3, r3, r2
 756 0040 87F83330 		strb	r3, [r7, #51]
 270:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 757              		.loc 1 270 0
 758 0044 7B6B     		ldr	r3, [r7, #52]
 759 0046 5A1C     		adds	r2, r3, #1
 760 0048 7A63     		str	r2, [r7, #52]
 761 004a 97F83320 		ldrb	r2, [r7, #51]	@ zero_extendqisi2
 762 004e 092A     		cmp	r2, #9
 763 0050 04D8     		bhi	.L51
 764              		.loc 1 270 0 is_stmt 0 discriminator 1
 765 0052 97F83320 		ldrb	r2, [r7, #51]
 766 0056 3032     		adds	r2, r2, #48
 767 0058 D2B2     		uxtb	r2, r2
 768 005a 0DE0     		b	.L52
 769              	.L51:
 770              		.loc 1 270 0 discriminator 2
 771 005c 7A6D     		ldr	r2, [r7, #84]
 772 005e 02F02002 		and	r2, r2, #32
 773 0062 002A     		cmp	r2, #0
 774 0064 01D0     		beq	.L53
 775              		.loc 1 270 0 discriminator 4
 776 0066 4121     		movs	r1, #65
 777 0068 00E0     		b	.L54
 778              	.L53:
 779              		.loc 1 270 0 discriminator 5
 780 006a 6121     		movs	r1, #97
 781              	.L54:
 782              		.loc 1 270 0 discriminator 7
 783 006c 97F83320 		ldrb	r2, [r7, #51]
 784 0070 0A44     		add	r2, r2, r1
 785 0072 D2B2     		uxtb	r2, r2
 786 0074 0A3A     		subs	r2, r2, #10
 787 0076 D2B2     		uxtb	r2, r2
 788              	.L52:
 789              		.loc 1 270 0 discriminator 8
 790 0078 07F13801 		add	r1, r7, #56
 791 007c 0B44     		add	r3, r3, r1
 792 007e 03F8282C 		strb	r2, [r3, #-40]
 271:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       value /= base;
 793              		.loc 1 271 0 is_stmt 1 discriminator 8
 794 0082 3A6C     		ldr	r2, [r7, #64]
 795 0084 BB6C     		ldr	r3, [r7, #72]
 796 0086 B2FBF3F3 		udiv	r3, r2, r3
 797 008a 3B64     		str	r3, [r7, #64]
 798              	.LBE3:
 272:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 799              		.loc 1 272 0 discriminator 8
 800 008c 3B6C     		ldr	r3, [r7, #64]
 801 008e 002B     		cmp	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 20


 802 0090 02D0     		beq	.L50
 803              		.loc 1 272 0 is_stmt 0 discriminator 1
 804 0092 7B6B     		ldr	r3, [r7, #52]
 805 0094 1F2B     		cmp	r3, #31
 806 0096 CBD9     		bls	.L49
 807              	.L50:
 273:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 274:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 275:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 808              		.loc 1 275 0 is_stmt 1
 809 0098 7B6D     		ldr	r3, [r7, #84]
 810 009a 0693     		str	r3, [sp, #24]
 811 009c 3B6D     		ldr	r3, [r7, #80]
 812 009e 0593     		str	r3, [sp, #20]
 813 00a0 FB6C     		ldr	r3, [r7, #76]
 814 00a2 0493     		str	r3, [sp, #16]
 815 00a4 BB6C     		ldr	r3, [r7, #72]
 816 00a6 0393     		str	r3, [sp, #12]
 817 00a8 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 818 00ac 0293     		str	r3, [sp, #8]
 819 00ae 7B6B     		ldr	r3, [r7, #52]
 820 00b0 0193     		str	r3, [sp, #4]
 821 00b2 07F11003 		add	r3, r7, #16
 822 00b6 0093     		str	r3, [sp]
 823 00b8 3B68     		ldr	r3, [r7]
 824 00ba 7A68     		ldr	r2, [r7, #4]
 825 00bc B968     		ldr	r1, [r7, #8]
 826 00be F868     		ldr	r0, [r7, #12]
 827 00c0 FFF7FEFF 		bl	_ntoa_format
 828 00c4 0346     		mov	r3, r0
 276:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 829              		.loc 1 276 0
 830 00c6 1846     		mov	r0, r3
 831 00c8 3837     		adds	r7, r7, #56
 832              		.cfi_def_cfa_offset 8
 833 00ca BD46     		mov	sp, r7
 834              		.cfi_def_cfa_register 13
 835              		@ sp needed
 836 00cc 80BD     		pop	{r7, pc}
 837              		.cfi_endproc
 838              	.LFE7:
 839              		.size	_ntoa_long, .-_ntoa_long
 840              		.global	__aeabi_uldivmod
 841 00ce 00BF     		.section	.text._ntoa_long_long,"ax",%progbits
 842              		.align	2
 843              		.thumb
 844              		.thumb_func
 845              		.type	_ntoa_long_long, %function
 846              	_ntoa_long_long:
 847              	.LFB8:
 277:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 278:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 279:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal itoa for 'long long' type
 280:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 281:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned l
 282:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 848              		.loc 1 282 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 21


 849              		.cfi_startproc
 850              		@ args = 36, pretend = 0, frame = 56
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 90B5     		push	{r4, r7, lr}
 853              		.cfi_def_cfa_offset 12
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 97B0     		sub	sp, sp, #92
 858              		.cfi_def_cfa_offset 104
 859 0004 08AF     		add	r7, sp, #32
 860              		.cfi_def_cfa 7, 72
 861 0006 F860     		str	r0, [r7, #12]
 862 0008 B960     		str	r1, [r7, #8]
 863 000a 7A60     		str	r2, [r7, #4]
 864 000c 3B60     		str	r3, [r7]
 283:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   char buf[PRINTF_NTOA_BUFFER_SIZE];
 284:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   size_t len = 0U;
 865              		.loc 1 284 0
 866 000e 0023     		movs	r3, #0
 867 0010 7B63     		str	r3, [r7, #52]
 285:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 286:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // no hash for 0 values
 287:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!value) {
 868              		.loc 1 287 0
 869 0012 D7E91234 		ldrd	r3, [r7, #72]
 870 0016 2343     		orrs	r3, r3, r4
 871 0018 03D1     		bne	.L57
 288:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     flags &= ~FLAGS_HASH;
 872              		.loc 1 288 0
 873 001a BB6E     		ldr	r3, [r7, #104]
 874 001c 23F01003 		bic	r3, r3, #16
 875 0020 BB66     		str	r3, [r7, #104]
 876              	.L57:
 289:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 290:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 291:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // write if precision != 0 and value is != 0
 292:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_PRECISION) || value) {
 877              		.loc 1 292 0
 878 0022 BB6E     		ldr	r3, [r7, #104]
 879 0024 03F48063 		and	r3, r3, #1024
 880 0028 002B     		cmp	r3, #0
 881 002a 03D0     		beq	.L58
 882              		.loc 1 292 0 is_stmt 0 discriminator 1
 883 002c D7E91234 		ldrd	r3, [r7, #72]
 884 0030 2343     		orrs	r3, r3, r4
 885 0032 39D0     		beq	.L59
 886              	.L58:
 887              	.LBB4:
 293:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     do {
 294:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       const char digit = (char)(value % base);
 888              		.loc 1 294 0 is_stmt 1
 889 0034 D7E91201 		ldrd	r0, [r7, #72]
 890 0038 D7E91623 		ldrd	r2, [r7, #88]
 891 003c FFF7FEFF 		bl	__aeabi_uldivmod
 892 0040 1C46     		mov	r4, r3
 893 0042 1346     		mov	r3, r2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 22


 894 0044 87F83330 		strb	r3, [r7, #51]
 295:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 895              		.loc 1 295 0
 896 0048 7B6B     		ldr	r3, [r7, #52]
 897 004a 5A1C     		adds	r2, r3, #1
 898 004c 7A63     		str	r2, [r7, #52]
 899 004e 97F83320 		ldrb	r2, [r7, #51]	@ zero_extendqisi2
 900 0052 092A     		cmp	r2, #9
 901 0054 04D8     		bhi	.L60
 902              		.loc 1 295 0 is_stmt 0 discriminator 1
 903 0056 97F83320 		ldrb	r2, [r7, #51]
 904 005a 3032     		adds	r2, r2, #48
 905 005c D2B2     		uxtb	r2, r2
 906 005e 0DE0     		b	.L61
 907              	.L60:
 908              		.loc 1 295 0 discriminator 2
 909 0060 BA6E     		ldr	r2, [r7, #104]
 910 0062 02F02002 		and	r2, r2, #32
 911 0066 002A     		cmp	r2, #0
 912 0068 01D0     		beq	.L62
 913              		.loc 1 295 0 discriminator 4
 914 006a 4121     		movs	r1, #65
 915 006c 00E0     		b	.L63
 916              	.L62:
 917              		.loc 1 295 0 discriminator 5
 918 006e 6121     		movs	r1, #97
 919              	.L63:
 920              		.loc 1 295 0 discriminator 7
 921 0070 97F83320 		ldrb	r2, [r7, #51]
 922 0074 0A44     		add	r2, r2, r1
 923 0076 D2B2     		uxtb	r2, r2
 924 0078 0A3A     		subs	r2, r2, #10
 925 007a D2B2     		uxtb	r2, r2
 926              	.L61:
 927              		.loc 1 295 0 discriminator 8
 928 007c 07F13801 		add	r1, r7, #56
 929 0080 0B44     		add	r3, r3, r1
 930 0082 03F8282C 		strb	r2, [r3, #-40]
 296:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       value /= base;
 931              		.loc 1 296 0 is_stmt 1 discriminator 8
 932 0086 D7E91623 		ldrd	r2, [r7, #88]
 933 008a D7E91201 		ldrd	r0, [r7, #72]
 934 008e FFF7FEFF 		bl	__aeabi_uldivmod
 935 0092 0346     		mov	r3, r0
 936 0094 0C46     		mov	r4, r1
 937 0096 C7E91234 		strd	r3, [r7, #72]
 938              	.LBE4:
 297:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 939              		.loc 1 297 0 discriminator 8
 940 009a D7E91234 		ldrd	r3, [r7, #72]
 941 009e 2343     		orrs	r3, r3, r4
 942 00a0 02D0     		beq	.L59
 943              		.loc 1 297 0 is_stmt 0 discriminator 1
 944 00a2 7B6B     		ldr	r3, [r7, #52]
 945 00a4 1F2B     		cmp	r3, #31
 946 00a6 C5D9     		bls	.L58
 947              	.L59:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 23


 298:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 299:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 300:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width
 948              		.loc 1 300 0 is_stmt 1
 949 00a8 BB6D     		ldr	r3, [r7, #88]
 950 00aa BA6E     		ldr	r2, [r7, #104]
 951 00ac 0692     		str	r2, [sp, #24]
 952 00ae 7A6E     		ldr	r2, [r7, #100]
 953 00b0 0592     		str	r2, [sp, #20]
 954 00b2 3A6E     		ldr	r2, [r7, #96]
 955 00b4 0492     		str	r2, [sp, #16]
 956 00b6 0393     		str	r3, [sp, #12]
 957 00b8 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 958 00bc 0293     		str	r3, [sp, #8]
 959 00be 7B6B     		ldr	r3, [r7, #52]
 960 00c0 0193     		str	r3, [sp, #4]
 961 00c2 07F11003 		add	r3, r7, #16
 962 00c6 0093     		str	r3, [sp]
 963 00c8 3B68     		ldr	r3, [r7]
 964 00ca 7A68     		ldr	r2, [r7, #4]
 965 00cc B968     		ldr	r1, [r7, #8]
 966 00ce F868     		ldr	r0, [r7, #12]
 967 00d0 FFF7FEFF 		bl	_ntoa_format
 968 00d4 0346     		mov	r3, r0
 301:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 969              		.loc 1 301 0
 970 00d6 1846     		mov	r0, r3
 971 00d8 3C37     		adds	r7, r7, #60
 972              		.cfi_def_cfa_offset 12
 973 00da BD46     		mov	sp, r7
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 00dc 90BD     		pop	{r4, r7, pc}
 977              		.cfi_endproc
 978              	.LFE8:
 979              		.size	_ntoa_long_long, .-_ntoa_long_long
 980              		.global	__aeabi_dcmpeq
 981 00de 00BF     		.section	.rodata
 982              		.align	2
 983              	.LC0:
 984 0000 6E616E00 		.ascii	"nan\000"
 985              		.global	__aeabi_dcmplt
 986              		.align	2
 987              	.LC1:
 988 0004 666E692D 		.ascii	"fni-\000"
 988      00
 989              		.global	__aeabi_dcmpgt
 990 0009 000000   		.align	2
 991              	.LC2:
 992 000c 666E692B 		.ascii	"fni+\000"
 992      00
 993 0011 000000   		.align	2
 994              	.LC3:
 995 0014 666E6900 		.ascii	"fni\000"
 996              		.global	__aeabi_dsub
 997              		.global	__aeabi_d2iz
 998              		.global	__aeabi_i2d
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 24


 999              		.global	__aeabi_dmul
 1000              		.global	__aeabi_d2uiz
 1001              		.global	__aeabi_ui2d
 1002              		.global	__aeabi_dcmpge
 1003              		.section	.text._ftoa,"ax",%progbits
 1004              		.align	2
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	_ftoa, %function
 1008              	_ftoa:
 1009              	.LFB9:
 302:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 303:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 304:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 305:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 306:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 307:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 308:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 309:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 310:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 311:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 312:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 313:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal ftoa for fixed decimal floating point
 314:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 315:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 1010              		.loc 1 315 0
 1011              		.cfi_startproc
 1012              		@ args = 20, pretend = 0, frame = 88
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 90B5     		push	{r4, r7, lr}
 1015              		.cfi_def_cfa_offset 12
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 9DB0     		sub	sp, sp, #116
 1020              		.cfi_def_cfa_offset 128
 1021 0004 06AF     		add	r7, sp, #24
 1022              		.cfi_def_cfa 7, 104
 1023 0006 F860     		str	r0, [r7, #12]
 1024 0008 B960     		str	r1, [r7, #8]
 1025 000a 7A60     		str	r2, [r7, #4]
 1026 000c 3B60     		str	r3, [r7]
 316:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   char buf[PRINTF_FTOA_BUFFER_SIZE];
 317:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   size_t len  = 0U;
 1027              		.loc 1 317 0
 1028 000e 0023     		movs	r3, #0
 1029 0010 7B65     		str	r3, [r7, #84]
 318:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   double diff = 0.0;
 1030              		.loc 1 318 0
 1031 0012 4FF00003 		mov	r3, #0
 1032 0016 4FF00004 		mov	r4, #0
 1033 001a C7E90E34 		strd	r3, [r7, #56]
 319:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 320:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // powers of 10
 321:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 10
 322:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 323:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // test for special values
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 25


 324:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (value != value)
 1034              		.loc 1 324 0
 1035 001e D7E91A23 		ldrd	r2, [r7, #104]
 1036 0022 D7E91A01 		ldrd	r0, [r7, #104]
 1037 0026 FFF7FEFF 		bl	__aeabi_dcmpeq
 1038 002a 0346     		mov	r3, r0
 1039 002c 002B     		cmp	r3, #0
 1040 002e 0FD1     		bne	.L122
 325:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 1041              		.loc 1 325 0
 1042 0030 BB6F     		ldr	r3, [r7, #120]
 1043 0032 0393     		str	r3, [sp, #12]
 1044 0034 7B6F     		ldr	r3, [r7, #116]
 1045 0036 0293     		str	r3, [sp, #8]
 1046 0038 0323     		movs	r3, #3
 1047 003a 0193     		str	r3, [sp, #4]
 1048 003c AE4B     		ldr	r3, .L129+16
 1049 003e 0093     		str	r3, [sp]
 1050 0040 3B68     		ldr	r3, [r7]
 1051 0042 7A68     		ldr	r2, [r7, #4]
 1052 0044 B968     		ldr	r1, [r7, #8]
 1053 0046 F868     		ldr	r0, [r7, #12]
 1054 0048 FFF7FEFF 		bl	_out_rev
 1055 004c 0346     		mov	r3, r0
 1056 004e 38E2     		b	.L115
 1057              	.L122:
 326:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (value < -DBL_MAX)
 1058              		.loc 1 326 0
 1059 0050 4FF0FF32 		mov	r2, #-1
 1060 0054 6FF48013 		mvn	r3, #1048576
 1061 0058 D7E91A01 		ldrd	r0, [r7, #104]
 1062 005c FFF7FEFF 		bl	__aeabi_dcmplt
 1063 0060 0346     		mov	r3, r0
 1064 0062 002B     		cmp	r3, #0
 1065 0064 0FD0     		beq	.L123
 327:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 1066              		.loc 1 327 0
 1067 0066 BB6F     		ldr	r3, [r7, #120]
 1068 0068 0393     		str	r3, [sp, #12]
 1069 006a 7B6F     		ldr	r3, [r7, #116]
 1070 006c 0293     		str	r3, [sp, #8]
 1071 006e 0423     		movs	r3, #4
 1072 0070 0193     		str	r3, [sp, #4]
 1073 0072 A24B     		ldr	r3, .L129+20
 1074 0074 0093     		str	r3, [sp]
 1075 0076 3B68     		ldr	r3, [r7]
 1076 0078 7A68     		ldr	r2, [r7, #4]
 1077 007a B968     		ldr	r1, [r7, #8]
 1078 007c F868     		ldr	r0, [r7, #12]
 1079 007e FFF7FEFF 		bl	_out_rev
 1080 0082 0346     		mov	r3, r0
 1081 0084 1DE2     		b	.L115
 1082              	.L123:
 328:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (value > DBL_MAX)
 1083              		.loc 1 328 0
 1084 0086 4FF0FF32 		mov	r2, #-1
 1085 008a 9D4B     		ldr	r3, .L129+24
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 26


 1086 008c D7E91A01 		ldrd	r0, [r7, #104]
 1087 0090 FFF7FEFF 		bl	__aeabi_dcmpgt
 1088 0094 0346     		mov	r3, r0
 1089 0096 002B     		cmp	r3, #0
 1090 0098 1DD0     		beq	.L124
 329:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS
 1091              		.loc 1 329 0
 1092 009a BB6F     		ldr	r3, [r7, #120]
 1093 009c 03F00403 		and	r3, r3, #4
 1094 00a0 002B     		cmp	r3, #0
 1095 00a2 01D0     		beq	.L73
 1096              		.loc 1 329 0 is_stmt 0 discriminator 1
 1097 00a4 974B     		ldr	r3, .L129+28
 1098 00a6 00E0     		b	.L74
 1099              	.L73:
 1100              		.loc 1 329 0 discriminator 2
 1101 00a8 974B     		ldr	r3, .L129+32
 1102              	.L74:
 1103              		.loc 1 329 0 discriminator 4
 1104 00aa BA6F     		ldr	r2, [r7, #120]
 1105 00ac 02F00402 		and	r2, r2, #4
 1106 00b0 002A     		cmp	r2, #0
 1107 00b2 01D0     		beq	.L75
 1108              		.loc 1 329 0 discriminator 5
 1109 00b4 0422     		movs	r2, #4
 1110 00b6 00E0     		b	.L76
 1111              	.L75:
 1112              		.loc 1 329 0 discriminator 6
 1113 00b8 0322     		movs	r2, #3
 1114              	.L76:
 1115              		.loc 1 329 0 discriminator 8
 1116 00ba B96F     		ldr	r1, [r7, #120]
 1117 00bc 0391     		str	r1, [sp, #12]
 1118 00be 796F     		ldr	r1, [r7, #116]
 1119 00c0 0291     		str	r1, [sp, #8]
 1120 00c2 0192     		str	r2, [sp, #4]
 1121 00c4 0093     		str	r3, [sp]
 1122 00c6 3B68     		ldr	r3, [r7]
 1123 00c8 7A68     		ldr	r2, [r7, #4]
 1124 00ca B968     		ldr	r1, [r7, #8]
 1125 00cc F868     		ldr	r0, [r7, #12]
 1126 00ce FFF7FEFF 		bl	_out_rev
 1127 00d2 0346     		mov	r3, r0
 1128 00d4 F5E1     		b	.L115
 1129              	.L124:
 330:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 331:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // test for very large values
 332:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // standard printf behavior is to print EVERY whole number digit -- which could be 100s of charac
 333:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 1130              		.loc 1 333 0 is_stmt 1
 1131 00d6 84A3     		adr	r3, .L129
 1132 00d8 D3E90023 		ldrd	r2, [r3]
 1133 00dc D7E91A01 		ldrd	r0, [r7, #104]
 1134 00e0 FFF7FEFF 		bl	__aeabi_dcmpgt
 1135 00e4 0346     		mov	r3, r0
 1136 00e6 002B     		cmp	r3, #0
 1137 00e8 09D1     		bne	.L77
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 27


 1138              		.loc 1 333 0 is_stmt 0 discriminator 1
 1139 00ea 81A3     		adr	r3, .L129+8
 1140 00ec D3E90023 		ldrd	r2, [r3]
 1141 00f0 D7E91A01 		ldrd	r0, [r7, #104]
 1142 00f4 FFF7FEFF 		bl	__aeabi_dcmplt
 1143 00f8 0346     		mov	r3, r0
 1144 00fa 002B     		cmp	r3, #0
 1145 00fc 11D0     		beq	.L125
 1146              	.L77:
 334:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 335:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 1147              		.loc 1 335 0 is_stmt 1
 1148 00fe BB6F     		ldr	r3, [r7, #120]
 1149 0100 0493     		str	r3, [sp, #16]
 1150 0102 7B6F     		ldr	r3, [r7, #116]
 1151 0104 0393     		str	r3, [sp, #12]
 1152 0106 3B6F     		ldr	r3, [r7, #112]
 1153 0108 0293     		str	r3, [sp, #8]
 1154 010a D7E91A34 		ldrd	r3, [r7, #104]
 1155 010e CDE90034 		strd	r3, [sp]
 1156 0112 3B68     		ldr	r3, [r7]
 1157 0114 7A68     		ldr	r2, [r7, #4]
 1158 0116 B968     		ldr	r1, [r7, #8]
 1159 0118 F868     		ldr	r0, [r7, #12]
 1160 011a FFF7FEFF 		bl	_etoa
 1161 011e 0346     		mov	r3, r0
 1162 0120 CFE1     		b	.L115
 1163              	.L125:
 336:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #else
 337:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return 0U;
 338:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 339:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 340:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 341:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // test for negative
 342:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   bool negative = false;
 1164              		.loc 1 342 0
 1165 0122 0023     		movs	r3, #0
 1166 0124 87F85330 		strb	r3, [r7, #83]
 343:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (value < 0) {
 1167              		.loc 1 343 0
 1168 0128 4FF00002 		mov	r2, #0
 1169 012c 4FF00003 		mov	r3, #0
 1170 0130 D7E91A01 		ldrd	r0, [r7, #104]
 1171 0134 FFF7FEFF 		bl	__aeabi_dcmplt
 1172 0138 0346     		mov	r3, r0
 1173 013a 002B     		cmp	r3, #0
 1174 013c 0ED0     		beq	.L80
 344:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     negative = true;
 1175              		.loc 1 344 0
 1176 013e 0123     		movs	r3, #1
 1177 0140 87F85330 		strb	r3, [r7, #83]
 345:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     value = 0 - value;
 1178              		.loc 1 345 0
 1179 0144 D7E91A23 		ldrd	r2, [r7, #104]
 1180 0148 4FF00000 		mov	r0, #0
 1181 014c 4FF00001 		mov	r1, #0
 1182 0150 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 28


 1183 0154 0346     		mov	r3, r0
 1184 0156 0C46     		mov	r4, r1
 1185 0158 C7E91A34 		strd	r3, [r7, #104]
 1186              	.L80:
 346:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 347:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 348:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // set default precision, if not set explicitly
 349:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1187              		.loc 1 349 0
 1188 015c BB6F     		ldr	r3, [r7, #120]
 1189 015e 03F48063 		and	r3, r3, #1024
 1190 0162 002B     		cmp	r3, #0
 1191 0164 0ED1     		bne	.L83
 350:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1192              		.loc 1 350 0
 1193 0166 0623     		movs	r3, #6
 1194 0168 3B67     		str	r3, [r7, #112]
 351:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 352:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 353:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 1195              		.loc 1 353 0
 1196 016a 0BE0     		b	.L83
 1197              	.L85:
 354:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     buf[len++] = '0';
 1198              		.loc 1 354 0
 1199 016c 7B6D     		ldr	r3, [r7, #84]
 1200 016e 5A1C     		adds	r2, r3, #1
 1201 0170 7A65     		str	r2, [r7, #84]
 1202 0172 07F15802 		add	r2, r7, #88
 1203 0176 1344     		add	r3, r3, r2
 1204 0178 3022     		movs	r2, #48
 1205 017a 03F8482C 		strb	r2, [r3, #-72]
 355:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     prec--;
 1206              		.loc 1 355 0
 1207 017e 3B6F     		ldr	r3, [r7, #112]
 1208 0180 013B     		subs	r3, r3, #1
 1209 0182 3B67     		str	r3, [r7, #112]
 1210              	.L83:
 353:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     buf[len++] = '0';
 1211              		.loc 1 353 0
 1212 0184 7B6D     		ldr	r3, [r7, #84]
 1213 0186 1F2B     		cmp	r3, #31
 1214 0188 02D8     		bhi	.L84
 353:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     buf[len++] = '0';
 1215              		.loc 1 353 0 is_stmt 0 discriminator 1
 1216 018a 3B6F     		ldr	r3, [r7, #112]
 1217 018c 092B     		cmp	r3, #9
 1218 018e EDD8     		bhi	.L85
 1219              	.L84:
 356:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 357:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 358:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   int whole = (int)value;
 1220              		.loc 1 358 0 is_stmt 1
 1221 0190 D7E91A01 		ldrd	r0, [r7, #104]
 1222 0194 FFF7FEFF 		bl	__aeabi_d2iz
 1223 0198 0346     		mov	r3, r0
 1224 019a FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 29


 359:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   double tmp = (value - whole) * pow10[prec];
 1225              		.loc 1 359 0
 1226 019c F86C     		ldr	r0, [r7, #76]
 1227 019e FFF7FEFF 		bl	__aeabi_i2d
 1228 01a2 0346     		mov	r3, r0
 1229 01a4 0C46     		mov	r4, r1
 1230 01a6 1A46     		mov	r2, r3
 1231 01a8 2346     		mov	r3, r4
 1232 01aa D7E91A01 		ldrd	r0, [r7, #104]
 1233 01ae FFF7FEFF 		bl	__aeabi_dsub
 1234 01b2 0346     		mov	r3, r0
 1235 01b4 0C46     		mov	r4, r1
 1236 01b6 1846     		mov	r0, r3
 1237 01b8 2146     		mov	r1, r4
 1238 01ba 544A     		ldr	r2, .L129+36
 1239 01bc 3B6F     		ldr	r3, [r7, #112]
 1240 01be DB00     		lsls	r3, r3, #3
 1241 01c0 1344     		add	r3, r3, r2
 1242 01c2 D3E90034 		ldrd	r3, [r3]
 1243 01c6 1A46     		mov	r2, r3
 1244 01c8 2346     		mov	r3, r4
 1245 01ca FFF7FEFF 		bl	__aeabi_dmul
 1246 01ce 0346     		mov	r3, r0
 1247 01d0 0C46     		mov	r4, r1
 1248 01d2 C7E90C34 		strd	r3, [r7, #48]
 360:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   unsigned long frac = (unsigned long)tmp;
 1249              		.loc 1 360 0
 1250 01d6 D7E90C01 		ldrd	r0, [r7, #48]
 1251 01da FFF7FEFF 		bl	__aeabi_d2uiz
 1252 01de 0346     		mov	r3, r0
 1253 01e0 BB64     		str	r3, [r7, #72]
 361:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   diff = tmp - frac;
 1254              		.loc 1 361 0
 1255 01e2 B86C     		ldr	r0, [r7, #72]
 1256 01e4 FFF7FEFF 		bl	__aeabi_ui2d
 1257 01e8 0346     		mov	r3, r0
 1258 01ea 0C46     		mov	r4, r1
 1259 01ec 1A46     		mov	r2, r3
 1260 01ee 2346     		mov	r3, r4
 1261 01f0 D7E90C01 		ldrd	r0, [r7, #48]
 1262 01f4 FFF7FEFF 		bl	__aeabi_dsub
 1263 01f8 0346     		mov	r3, r0
 1264 01fa 0C46     		mov	r4, r1
 1265 01fc C7E90E34 		strd	r3, [r7, #56]
 362:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 363:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (diff > 0.5) {
 1266              		.loc 1 363 0
 1267 0200 4FF00002 		mov	r2, #0
 1268 0204 424B     		ldr	r3, .L129+40
 1269 0206 D7E90E01 		ldrd	r0, [r7, #56]
 1270 020a FFF7FEFF 		bl	__aeabi_dcmpgt
 1271 020e 0346     		mov	r3, r0
 1272 0210 002B     		cmp	r3, #0
 1273 0212 18D0     		beq	.L126
 364:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     ++frac;
 1274              		.loc 1 364 0
 1275 0214 BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 30


 1276 0216 0133     		adds	r3, r3, #1
 1277 0218 BB64     		str	r3, [r7, #72]
 365:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 366:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (frac >= pow10[prec]) {
 1278              		.loc 1 366 0
 1279 021a B86C     		ldr	r0, [r7, #72]
 1280 021c FFF7FEFF 		bl	__aeabi_ui2d
 1281 0220 3A4A     		ldr	r2, .L129+36
 1282 0222 3B6F     		ldr	r3, [r7, #112]
 1283 0224 DB00     		lsls	r3, r3, #3
 1284 0226 1344     		add	r3, r3, r2
 1285 0228 D3E90034 		ldrd	r3, [r3]
 1286 022c 1A46     		mov	r2, r3
 1287 022e 2346     		mov	r3, r4
 1288 0230 FFF7FEFF 		bl	__aeabi_dcmpge
 1289 0234 0346     		mov	r3, r0
 1290 0236 002B     		cmp	r3, #0
 1291 0238 1AD0     		beq	.L90
 367:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       frac = 0;
 1292              		.loc 1 367 0
 1293 023a 0023     		movs	r3, #0
 1294 023c BB64     		str	r3, [r7, #72]
 368:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       ++whole;
 1295              		.loc 1 368 0
 1296 023e FB6C     		ldr	r3, [r7, #76]
 1297 0240 0133     		adds	r3, r3, #1
 1298 0242 FB64     		str	r3, [r7, #76]
 1299 0244 14E0     		b	.L90
 1300              	.L126:
 369:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 370:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 371:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   else if (diff < 0.5) {
 1301              		.loc 1 371 0
 1302 0246 4FF00002 		mov	r2, #0
 1303 024a 314B     		ldr	r3, .L129+40
 1304 024c D7E90E01 		ldrd	r0, [r7, #56]
 1305 0250 FFF7FEFF 		bl	__aeabi_dcmplt
 1306 0254 0346     		mov	r3, r0
 1307 0256 002B     		cmp	r3, #0
 1308 0258 0AD1     		bne	.L90
 372:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 373:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   else if ((frac == 0U) || (frac & 1U)) {
 1309              		.loc 1 373 0
 1310 025a BB6C     		ldr	r3, [r7, #72]
 1311 025c 002B     		cmp	r3, #0
 1312 025e 04D0     		beq	.L91
 1313              		.loc 1 373 0 is_stmt 0 discriminator 1
 1314 0260 BB6C     		ldr	r3, [r7, #72]
 1315 0262 03F00103 		and	r3, r3, #1
 1316 0266 002B     		cmp	r3, #0
 1317 0268 02D0     		beq	.L90
 1318              	.L91:
 374:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // if halfway, round up if odd OR if last digit is 0
 375:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     ++frac;
 1319              		.loc 1 375 0 is_stmt 1
 1320 026a BB6C     		ldr	r3, [r7, #72]
 1321 026c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 31


 1322 026e BB64     		str	r3, [r7, #72]
 1323              	.L90:
 376:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 377:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 378:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (prec == 0U) {
 1324              		.loc 1 378 0
 1325 0270 3B6F     		ldr	r3, [r7, #112]
 1326 0272 002B     		cmp	r3, #0
 1327 0274 4ED1     		bne	.L92
 379:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     diff = value - (double)whole;
 1328              		.loc 1 379 0
 1329 0276 F86C     		ldr	r0, [r7, #76]
 1330 0278 FFF7FEFF 		bl	__aeabi_i2d
 1331 027c 0346     		mov	r3, r0
 1332 027e 0C46     		mov	r4, r1
 1333 0280 1A46     		mov	r2, r3
 1334 0282 2346     		mov	r3, r4
 1335 0284 D7E91A01 		ldrd	r0, [r7, #104]
 1336 0288 FFF7FEFF 		bl	__aeabi_dsub
 1337 028c 0346     		mov	r3, r0
 1338 028e 0C46     		mov	r4, r1
 1339 0290 C7E90E34 		strd	r3, [r7, #56]
 380:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 1340              		.loc 1 380 0
 1341 0294 0123     		movs	r3, #1
 1342 0296 1C46     		mov	r4, r3
 1343 0298 4FF00002 		mov	r2, #0
 1344 029c 1C4B     		ldr	r3, .L129+40
 1345 029e D7E90E01 		ldrd	r0, [r7, #56]
 1346 02a2 FFF7FEFF 		bl	__aeabi_dcmplt
 1347 02a6 0346     		mov	r3, r0
 1348 02a8 002B     		cmp	r3, #0
 1349 02aa 01D1     		bne	.L93
 1350 02ac 0023     		movs	r3, #0
 1351 02ae 1C46     		mov	r4, r3
 1352              	.L93:
 1353 02b0 E3B2     		uxtb	r3, r4
 1354 02b2 83F00103 		eor	r3, r3, #1
 1355 02b6 DBB2     		uxtb	r3, r3
 1356 02b8 002B     		cmp	r3, #0
 1357 02ba 09D1     		bne	.L94
 1358              		.loc 1 380 0 is_stmt 0 discriminator 2
 1359 02bc 4FF00002 		mov	r2, #0
 1360 02c0 134B     		ldr	r3, .L129+40
 1361 02c2 D7E90E01 		ldrd	r0, [r7, #56]
 1362 02c6 FFF7FEFF 		bl	__aeabi_dcmpgt
 1363 02ca 0346     		mov	r3, r0
 1364 02cc 002B     		cmp	r3, #0
 1365 02ce 68D0     		beq	.L97
 1366              	.L94:
 1367              		.loc 1 380 0 discriminator 3
 1368 02d0 FB6C     		ldr	r3, [r7, #76]
 1369 02d2 03F00103 		and	r3, r3, #1
 1370 02d6 002B     		cmp	r3, #0
 1371 02d8 00F08680 		beq	.L104
 381:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // exactly 0.5 and ODD, then round up
 382:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // 1.5 -> 2, but 2.5 -> 2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 32


 383:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       ++whole;
 1372              		.loc 1 383 0 is_stmt 1
 1373 02dc FB6C     		ldr	r3, [r7, #76]
 1374 02de 0133     		adds	r3, r3, #1
 1375 02e0 FB64     		str	r3, [r7, #76]
 1376 02e2 81E0     		b	.L104
 1377              	.L130:
 1378 02e4 AFF30080 		.align	3
 1379              	.L129:
 1380 02e8 00000000 		.word	0
 1381 02ec 65CDCD41 		.word	1104006501
 1382 02f0 00000000 		.word	0
 1383 02f4 65CDCDC1 		.word	-1043477147
 1384 02f8 00000000 		.word	.LC0
 1385 02fc 04000000 		.word	.LC1
 1386 0300 FFFFEF7F 		.word	2146435071
 1387 0304 0C000000 		.word	.LC2
 1388 0308 14000000 		.word	.LC3
 1389 030c 18000000 		.word	pow10.4373
 1390 0310 0000E03F 		.word	1071644672
 1391              	.L92:
 1392              	.LBB5:
 384:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 385:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 386:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   else {
 387:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     unsigned int count = prec;
 1393              		.loc 1 387 0
 1394 0314 3B6F     		ldr	r3, [r7, #112]
 1395 0316 7B64     		str	r3, [r7, #68]
 388:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // now do fractional part, as an unsigned number
 389:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while (len < PRINTF_FTOA_BUFFER_SIZE) {
 1396              		.loc 1 389 0
 1397 0318 20E0     		b	.L98
 1398              	.L100:
 390:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       --count;
 1399              		.loc 1 390 0
 1400 031a 7B6C     		ldr	r3, [r7, #68]
 1401 031c 013B     		subs	r3, r3, #1
 1402 031e 7B64     		str	r3, [r7, #68]
 391:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = (char)(48U + (frac % 10U));
 1403              		.loc 1 391 0
 1404 0320 796D     		ldr	r1, [r7, #84]
 1405 0322 4B1C     		adds	r3, r1, #1
 1406 0324 7B65     		str	r3, [r7, #84]
 1407 0326 B86C     		ldr	r0, [r7, #72]
 1408 0328 684B     		ldr	r3, .L131
 1409 032a A3FB0023 		umull	r2, r3, r3, r0
 1410 032e DA08     		lsrs	r2, r3, #3
 1411 0330 1346     		mov	r3, r2
 1412 0332 9B00     		lsls	r3, r3, #2
 1413 0334 1344     		add	r3, r3, r2
 1414 0336 5B00     		lsls	r3, r3, #1
 1415 0338 C21A     		subs	r2, r0, r3
 1416 033a D3B2     		uxtb	r3, r2
 1417 033c 3033     		adds	r3, r3, #48
 1418 033e DAB2     		uxtb	r2, r3
 1419 0340 07F15803 		add	r3, r7, #88
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 33


 1420 0344 0B44     		add	r3, r3, r1
 1421 0346 03F8482C 		strb	r2, [r3, #-72]
 392:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if (!(frac /= 10U)) {
 1422              		.loc 1 392 0
 1423 034a BB6C     		ldr	r3, [r7, #72]
 1424 034c 5F4A     		ldr	r2, .L131
 1425 034e A2FB0323 		umull	r2, r3, r2, r3
 1426 0352 DB08     		lsrs	r3, r3, #3
 1427 0354 BB64     		str	r3, [r7, #72]
 1428 0356 BB6C     		ldr	r3, [r7, #72]
 1429 0358 002B     		cmp	r3, #0
 1430 035a 03D0     		beq	.L127
 1431              	.L98:
 389:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       --count;
 1432              		.loc 1 389 0
 1433 035c 7B6D     		ldr	r3, [r7, #84]
 1434 035e 1F2B     		cmp	r3, #31
 1435 0360 DBD9     		bls	.L100
 1436 0362 0AE0     		b	.L101
 1437              	.L127:
 393:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 1438              		.loc 1 393 0
 1439 0364 00BF     		nop
 394:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 395:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 396:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // add extra 0s
 397:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 1440              		.loc 1 397 0
 1441 0366 08E0     		b	.L101
 1442              	.L103:
 398:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1443              		.loc 1 398 0
 1444 0368 7B6D     		ldr	r3, [r7, #84]
 1445 036a 5A1C     		adds	r2, r3, #1
 1446 036c 7A65     		str	r2, [r7, #84]
 1447 036e 07F15802 		add	r2, r7, #88
 1448 0372 1344     		add	r3, r3, r2
 1449 0374 3022     		movs	r2, #48
 1450 0376 03F8482C 		strb	r2, [r3, #-72]
 1451              	.L101:
 397:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1452              		.loc 1 397 0
 1453 037a 7B6D     		ldr	r3, [r7, #84]
 1454 037c 1F2B     		cmp	r3, #31
 1455 037e 04D8     		bhi	.L102
 397:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1456              		.loc 1 397 0 is_stmt 0 discriminator 1
 1457 0380 7B6C     		ldr	r3, [r7, #68]
 1458 0382 5A1E     		subs	r2, r3, #1
 1459 0384 7A64     		str	r2, [r7, #68]
 1460 0386 002B     		cmp	r3, #0
 1461 0388 EED1     		bne	.L103
 1462              	.L102:
 399:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 400:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (len < PRINTF_FTOA_BUFFER_SIZE) {
 1463              		.loc 1 400 0 is_stmt 1
 1464 038a 7B6D     		ldr	r3, [r7, #84]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 34


 1465 038c 1F2B     		cmp	r3, #31
 1466 038e 2BD8     		bhi	.L104
 401:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // add decimal
 402:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '.';
 1467              		.loc 1 402 0
 1468 0390 7B6D     		ldr	r3, [r7, #84]
 1469 0392 5A1C     		adds	r2, r3, #1
 1470 0394 7A65     		str	r2, [r7, #84]
 1471 0396 07F15802 		add	r2, r7, #88
 1472 039a 1344     		add	r3, r3, r2
 1473 039c 2E22     		movs	r2, #46
 1474 039e 03F8482C 		strb	r2, [r3, #-72]
 1475              	.L97:
 1476              	.LBE5:
 403:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 404:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 405:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 406:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // do whole part, number is reversed
 407:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while (len < PRINTF_FTOA_BUFFER_SIZE) {
 1477              		.loc 1 407 0 discriminator 1
 1478 03a2 21E0     		b	.L104
 1479              	.L106:
 408:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 1480              		.loc 1 408 0
 1481 03a4 786D     		ldr	r0, [r7, #84]
 1482 03a6 431C     		adds	r3, r0, #1
 1483 03a8 7B65     		str	r3, [r7, #84]
 1484 03aa FA6C     		ldr	r2, [r7, #76]
 1485 03ac 484B     		ldr	r3, .L131+4
 1486 03ae 83FB0213 		smull	r1, r3, r3, r2
 1487 03b2 9910     		asrs	r1, r3, #2
 1488 03b4 D317     		asrs	r3, r2, #31
 1489 03b6 C91A     		subs	r1, r1, r3
 1490 03b8 0B46     		mov	r3, r1
 1491 03ba 9B00     		lsls	r3, r3, #2
 1492 03bc 0B44     		add	r3, r3, r1
 1493 03be 5B00     		lsls	r3, r3, #1
 1494 03c0 D11A     		subs	r1, r2, r3
 1495 03c2 CBB2     		uxtb	r3, r1
 1496 03c4 3033     		adds	r3, r3, #48
 1497 03c6 DAB2     		uxtb	r2, r3
 1498 03c8 07F15803 		add	r3, r7, #88
 1499 03cc 0344     		add	r3, r3, r0
 1500 03ce 03F8482C 		strb	r2, [r3, #-72]
 409:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (!(whole /= 10)) {
 1501              		.loc 1 409 0
 1502 03d2 FB6C     		ldr	r3, [r7, #76]
 1503 03d4 3E4A     		ldr	r2, .L131+4
 1504 03d6 82FB0312 		smull	r1, r2, r2, r3
 1505 03da 9210     		asrs	r2, r2, #2
 1506 03dc DB17     		asrs	r3, r3, #31
 1507 03de D31A     		subs	r3, r2, r3
 1508 03e0 FB64     		str	r3, [r7, #76]
 1509 03e2 FB6C     		ldr	r3, [r7, #76]
 1510 03e4 002B     		cmp	r3, #0
 1511 03e6 03D0     		beq	.L128
 1512              	.L104:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 35


 407:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     buf[len++] = (char)(48 + (whole % 10));
 1513              		.loc 1 407 0
 1514 03e8 7B6D     		ldr	r3, [r7, #84]
 1515 03ea 1F2B     		cmp	r3, #31
 1516 03ec DAD9     		bls	.L106
 1517 03ee 00E0     		b	.L105
 1518              	.L128:
 410:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       break;
 1519              		.loc 1 410 0
 1520 03f0 00BF     		nop
 1521              	.L105:
 411:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 412:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 413:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 414:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // pad leading zeros
 415:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 1522              		.loc 1 415 0
 1523 03f2 BB6F     		ldr	r3, [r7, #120]
 1524 03f4 03F00203 		and	r3, r3, #2
 1525 03f8 002B     		cmp	r3, #0
 1526 03fa 24D1     		bne	.L107
 1527              		.loc 1 415 0 is_stmt 0 discriminator 1
 1528 03fc BB6F     		ldr	r3, [r7, #120]
 1529 03fe 03F00103 		and	r3, r3, #1
 1530 0402 002B     		cmp	r3, #0
 1531 0404 1FD0     		beq	.L107
 416:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 1532              		.loc 1 416 0 is_stmt 1
 1533 0406 7B6F     		ldr	r3, [r7, #116]
 1534 0408 002B     		cmp	r3, #0
 1535 040a 15D0     		beq	.L110
 1536              		.loc 1 416 0 is_stmt 0 discriminator 1
 1537 040c 97F85330 		ldrb	r3, [r7, #83]	@ zero_extendqisi2
 1538 0410 002B     		cmp	r3, #0
 1539 0412 04D1     		bne	.L109
 1540              		.loc 1 416 0 discriminator 2
 1541 0414 BB6F     		ldr	r3, [r7, #120]
 1542 0416 03F00C03 		and	r3, r3, #12
 1543 041a 002B     		cmp	r3, #0
 1544 041c 0CD0     		beq	.L110
 1545              	.L109:
 417:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       width--;
 1546              		.loc 1 417 0 is_stmt 1
 1547 041e 7B6F     		ldr	r3, [r7, #116]
 1548 0420 013B     		subs	r3, r3, #1
 1549 0422 7B67     		str	r3, [r7, #116]
 418:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 419:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 1550              		.loc 1 419 0
 1551 0424 08E0     		b	.L110
 1552              	.L111:
 420:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1553              		.loc 1 420 0
 1554 0426 7B6D     		ldr	r3, [r7, #84]
 1555 0428 5A1C     		adds	r2, r3, #1
 1556 042a 7A65     		str	r2, [r7, #84]
 1557 042c 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 36


 1558 0430 1344     		add	r3, r3, r2
 1559 0432 3022     		movs	r2, #48
 1560 0434 03F8482C 		strb	r2, [r3, #-72]
 1561              	.L110:
 419:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1562              		.loc 1 419 0
 1563 0438 7A6D     		ldr	r2, [r7, #84]
 1564 043a 7B6F     		ldr	r3, [r7, #116]
 1565 043c 9A42     		cmp	r2, r3
 1566 043e 02D2     		bcs	.L107
 419:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '0';
 1567              		.loc 1 419 0 is_stmt 0 discriminator 1
 1568 0440 7B6D     		ldr	r3, [r7, #84]
 1569 0442 1F2B     		cmp	r3, #31
 1570 0444 EFD9     		bls	.L111
 1571              	.L107:
 421:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 422:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 423:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 424:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (len < PRINTF_FTOA_BUFFER_SIZE) {
 1572              		.loc 1 424 0 is_stmt 1
 1573 0446 7B6D     		ldr	r3, [r7, #84]
 1574 0448 1F2B     		cmp	r3, #31
 1575 044a 2AD8     		bhi	.L112
 425:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (negative) {
 1576              		.loc 1 425 0
 1577 044c 97F85330 		ldrb	r3, [r7, #83]	@ zero_extendqisi2
 1578 0450 002B     		cmp	r3, #0
 1579 0452 09D0     		beq	.L113
 426:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '-';
 1580              		.loc 1 426 0
 1581 0454 7B6D     		ldr	r3, [r7, #84]
 1582 0456 5A1C     		adds	r2, r3, #1
 1583 0458 7A65     		str	r2, [r7, #84]
 1584 045a 07F15802 		add	r2, r7, #88
 1585 045e 1344     		add	r3, r3, r2
 1586 0460 2D22     		movs	r2, #45
 1587 0462 03F8482C 		strb	r2, [r3, #-72]
 1588 0466 1CE0     		b	.L112
 1589              	.L113:
 427:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 428:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if (flags & FLAGS_PLUS) {
 1590              		.loc 1 428 0
 1591 0468 BB6F     		ldr	r3, [r7, #120]
 1592 046a 03F00403 		and	r3, r3, #4
 1593 046e 002B     		cmp	r3, #0
 1594 0470 09D0     		beq	.L114
 429:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = '+';  // ignore the space if the '+' exists
 1595              		.loc 1 429 0
 1596 0472 7B6D     		ldr	r3, [r7, #84]
 1597 0474 5A1C     		adds	r2, r3, #1
 1598 0476 7A65     		str	r2, [r7, #84]
 1599 0478 07F15802 		add	r2, r7, #88
 1600 047c 1344     		add	r3, r3, r2
 1601 047e 2B22     		movs	r2, #43
 1602 0480 03F8482C 		strb	r2, [r3, #-72]
 1603 0484 0DE0     		b	.L112
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 37


 1604              	.L114:
 430:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 431:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if (flags & FLAGS_SPACE) {
 1605              		.loc 1 431 0
 1606 0486 BB6F     		ldr	r3, [r7, #120]
 1607 0488 03F00803 		and	r3, r3, #8
 1608 048c 002B     		cmp	r3, #0
 1609 048e 08D0     		beq	.L112
 432:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       buf[len++] = ' ';
 1610              		.loc 1 432 0
 1611 0490 7B6D     		ldr	r3, [r7, #84]
 1612 0492 5A1C     		adds	r2, r3, #1
 1613 0494 7A65     		str	r2, [r7, #84]
 1614 0496 07F15802 		add	r2, r7, #88
 1615 049a 1344     		add	r3, r3, r2
 1616 049c 2022     		movs	r2, #32
 1617 049e 03F8482C 		strb	r2, [r3, #-72]
 1618              	.L112:
 433:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 434:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 435:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 436:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 1619              		.loc 1 436 0
 1620 04a2 BB6F     		ldr	r3, [r7, #120]
 1621 04a4 0393     		str	r3, [sp, #12]
 1622 04a6 7B6F     		ldr	r3, [r7, #116]
 1623 04a8 0293     		str	r3, [sp, #8]
 1624 04aa 7B6D     		ldr	r3, [r7, #84]
 1625 04ac 0193     		str	r3, [sp, #4]
 1626 04ae 07F11003 		add	r3, r7, #16
 1627 04b2 0093     		str	r3, [sp]
 1628 04b4 3B68     		ldr	r3, [r7]
 1629 04b6 7A68     		ldr	r2, [r7, #4]
 1630 04b8 B968     		ldr	r1, [r7, #8]
 1631 04ba F868     		ldr	r0, [r7, #12]
 1632 04bc FFF7FEFF 		bl	_out_rev
 1633 04c0 0346     		mov	r3, r0
 1634              	.L115:
 437:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 1635              		.loc 1 437 0 discriminator 3
 1636 04c2 1846     		mov	r0, r3
 1637 04c4 5C37     		adds	r7, r7, #92
 1638              		.cfi_def_cfa_offset 12
 1639 04c6 BD46     		mov	sp, r7
 1640              		.cfi_def_cfa_register 13
 1641              		@ sp needed
 1642 04c8 90BD     		pop	{r4, r7, pc}
 1643              	.L132:
 1644 04ca 00BF     		.align	2
 1645              	.L131:
 1646 04cc CDCCCCCC 		.word	-858993459
 1647 04d0 67666666 		.word	1717986919
 1648              		.cfi_endproc
 1649              	.LFE9:
 1650              		.size	_ftoa, .-_ftoa
 1651              		.global	__aeabi_dadd
 1652              		.global	__aeabi_ddiv
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 38


 1653              		.section	.text._etoa,"ax",%progbits
 1654              		.align	2
 1655              		.thumb
 1656              		.thumb_func
 1657              		.type	_etoa, %function
 1658              	_etoa:
 1659              	.LFB10:
 438:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 439:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 440:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 441:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 442:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsign
 443:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 1660              		.loc 1 443 0
 1661              		.cfi_startproc
 1662              		@ args = 20, pretend = 0, frame = 80
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1665              		.cfi_def_cfa_offset 36
 1666              		.cfi_offset 4, -36
 1667              		.cfi_offset 5, -32
 1668              		.cfi_offset 6, -28
 1669              		.cfi_offset 7, -24
 1670              		.cfi_offset 8, -20
 1671              		.cfi_offset 9, -16
 1672              		.cfi_offset 10, -12
 1673              		.cfi_offset 11, -8
 1674              		.cfi_offset 14, -4
 1675 0004 9BB0     		sub	sp, sp, #108
 1676              		.cfi_def_cfa_offset 144
 1677 0006 06AF     		add	r7, sp, #24
 1678              		.cfi_def_cfa 7, 120
 1679 0008 7861     		str	r0, [r7, #20]
 1680 000a 3961     		str	r1, [r7, #16]
 1681 000c FA60     		str	r2, [r7, #12]
 1682 000e BB60     		str	r3, [r7, #8]
 444:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // check for NaN and special values
 445:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 1683              		.loc 1 445 0
 1684 0010 D7E91E23 		ldrd	r2, [r7, #120]
 1685 0014 D7E91E01 		ldrd	r0, [r7, #120]
 1686 0018 FFF7FEFF 		bl	__aeabi_dcmpeq
 1687 001c 0346     		mov	r3, r0
 1688 001e 002B     		cmp	r3, #0
 1689 0020 14D0     		beq	.L134
 1690              		.loc 1 445 0 is_stmt 0 discriminator 1
 1691 0022 4FF0FF32 		mov	r2, #-1
 1692 0026 C04B     		ldr	r3, .L167+48
 1693 0028 D7E91E01 		ldrd	r0, [r7, #120]
 1694 002c FFF7FEFF 		bl	__aeabi_dcmpgt
 1695 0030 0346     		mov	r3, r0
 1696 0032 002B     		cmp	r3, #0
 1697 0034 0AD1     		bne	.L134
 1698              		.loc 1 445 0 discriminator 2
 1699 0036 4FF0FF32 		mov	r2, #-1
 1700 003a 6FF48013 		mvn	r3, #1048576
 1701 003e D7E91E01 		ldrd	r0, [r7, #120]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 39


 1702 0042 FFF7FEFF 		bl	__aeabi_dcmplt
 1703 0046 0346     		mov	r3, r0
 1704 0048 002B     		cmp	r3, #0
 1705 004a 14D0     		beq	.L166
 1706              	.L134:
 446:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 1707              		.loc 1 446 0 is_stmt 1
 1708 004c D7F88830 		ldr	r3, [r7, #136]
 1709 0050 0493     		str	r3, [sp, #16]
 1710 0052 D7F88430 		ldr	r3, [r7, #132]
 1711 0056 0393     		str	r3, [sp, #12]
 1712 0058 D7F88030 		ldr	r3, [r7, #128]
 1713 005c 0293     		str	r3, [sp, #8]
 1714 005e D7E91E34 		ldrd	r3, [r7, #120]
 1715 0062 CDE90034 		strd	r3, [sp]
 1716 0066 BB68     		ldr	r3, [r7, #8]
 1717 0068 FA68     		ldr	r2, [r7, #12]
 1718 006a 3969     		ldr	r1, [r7, #16]
 1719 006c 7869     		ldr	r0, [r7, #20]
 1720 006e FFF7FEFF 		bl	_ftoa
 1721 0072 0346     		mov	r3, r0
 1722 0074 41E2     		b	.L162
 1723              	.L166:
 447:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 448:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 449:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // determine the sign
 450:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const bool negative = value < 0;
 1724              		.loc 1 450 0
 1725 0076 0123     		movs	r3, #1
 1726 0078 1E46     		mov	r6, r3
 1727 007a 4FF00002 		mov	r2, #0
 1728 007e 4FF00003 		mov	r3, #0
 1729 0082 D7E91E01 		ldrd	r0, [r7, #120]
 1730 0086 FFF7FEFF 		bl	__aeabi_dcmplt
 1731 008a 0346     		mov	r3, r0
 1732 008c 002B     		cmp	r3, #0
 1733 008e 01D1     		bne	.L138
 1734 0090 0023     		movs	r3, #0
 1735 0092 1E46     		mov	r6, r3
 1736              	.L138:
 1737 0094 87F84360 		strb	r6, [r7, #67]
 451:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (negative) {
 1738              		.loc 1 451 0
 1739 0098 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 1740 009c 002B     		cmp	r3, #0
 1741 009e 05D0     		beq	.L139
 452:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     value = -value;
 1742              		.loc 1 452 0
 1743 00a0 BB6F     		ldr	r3, [r7, #120]
 1744 00a2 BB67     		str	r3, [r7, #120]
 1745 00a4 FB6F     		ldr	r3, [r7, #124]
 1746 00a6 83F00043 		eor	r3, r3, #-2147483648
 1747 00aa FB67     		str	r3, [r7, #124]
 1748              	.L139:
 453:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 454:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 455:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // default precision
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 40


 456:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!(flags & FLAGS_PRECISION)) {
 1749              		.loc 1 456 0
 1750 00ac D7F88830 		ldr	r3, [r7, #136]
 1751 00b0 03F48063 		and	r3, r3, #1024
 1752 00b4 002B     		cmp	r3, #0
 1753 00b6 02D1     		bne	.L140
 457:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 1754              		.loc 1 457 0
 1755 00b8 0623     		movs	r3, #6
 1756 00ba C7F88030 		str	r3, [r7, #128]
 1757              	.L140:
 458:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 459:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 460:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // determine the decimal exponent
 461:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 462:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   union {
 463:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     uint64_t U;
 464:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     double   F;
 465:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   } conv;
 466:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 467:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   conv.F = value;
 1758              		.loc 1 467 0
 1759 00be D7E91E23 		ldrd	r2, [r7, #120]
 1760 00c2 C7E90623 		strd	r2, [r7, #24]
 468:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 1761              		.loc 1 468 0
 1762 00c6 D7E90623 		ldrd	r2, [r7, #24]
 1763 00ca 4FEA1358 		lsr	r8, r3, #20
 1764 00ce 4FF00009 		mov	r9, #0
 1765 00d2 4346     		mov	r3, r8
 1766 00d4 C3F30A03 		ubfx	r3, r3, #0, #11
 1767 00d8 A3F2FF33 		subw	r3, r3, #1023
 1768 00dc FB63     		str	r3, [r7, #60]
 469:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is n
 1769              		.loc 1 469 0
 1770 00de D7E90623 		ldrd	r2, [r7, #24]
 1771 00e2 4FF0FF30 		mov	r0, #-1
 1772 00e6 9149     		ldr	r1, .L167+52
 1773 00e8 02EA0002 		and	r2, r2, r0
 1774 00ec 03EA0103 		and	r3, r3, r1
 1775 00f0 4FF00000 		mov	r0, #0
 1776 00f4 8E49     		ldr	r1, .L167+56
 1777 00f6 42EA0002 		orr	r2, r2, r0
 1778 00fa 43EA0103 		orr	r3, r3, r1
 1779 00fe C7E90623 		strd	r2, [r7, #24]
 470:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 471:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.28952965460216
 1780              		.loc 1 471 0
 1781 0102 F86B     		ldr	r0, [r7, #60]
 1782 0104 FFF7FEFF 		bl	__aeabi_i2d
 1783 0108 7BA3     		adr	r3, .L167
 1784 010a D3E90023 		ldrd	r2, [r3]
 1785 010e FFF7FEFF 		bl	__aeabi_dmul
 1786 0112 0246     		mov	r2, r0
 1787 0114 0B46     		mov	r3, r1
 1788 0116 1046     		mov	r0, r2
 1789 0118 1946     		mov	r1, r3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 41


 1790 011a 79A3     		adr	r3, .L167+8
 1791 011c D3E90023 		ldrd	r2, [r3]
 1792 0120 FFF7FEFF 		bl	__aeabi_dadd
 1793 0124 0246     		mov	r2, r0
 1794 0126 0B46     		mov	r3, r1
 1795 0128 9046     		mov	r8, r2
 1796 012a 9946     		mov	r9, r3
 1797 012c D7E90601 		ldrd	r0, [r7, #24]
 1798 0130 4FF00002 		mov	r2, #0
 1799 0134 7F4B     		ldr	r3, .L167+60
 1800 0136 FFF7FEFF 		bl	__aeabi_dsub
 1801 013a 0246     		mov	r2, r0
 1802 013c 0B46     		mov	r3, r1
 1803 013e 1046     		mov	r0, r2
 1804 0140 1946     		mov	r1, r3
 1805 0142 71A3     		adr	r3, .L167+16
 1806 0144 D3E90023 		ldrd	r2, [r3]
 1807 0148 FFF7FEFF 		bl	__aeabi_dmul
 1808 014c 0246     		mov	r2, r0
 1809 014e 0B46     		mov	r3, r1
 1810 0150 4046     		mov	r0, r8
 1811 0152 4946     		mov	r1, r9
 1812 0154 FFF7FEFF 		bl	__aeabi_dadd
 1813 0158 0246     		mov	r2, r0
 1814 015a 0B46     		mov	r3, r1
 1815 015c 1046     		mov	r0, r2
 1816 015e 1946     		mov	r1, r3
 1817 0160 FFF7FEFF 		bl	__aeabi_d2iz
 1818 0164 0346     		mov	r3, r0
 1819 0166 FB64     		str	r3, [r7, #76]
 472:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // now we want to compute 10^expval but we want to be sure it won't overflow
 473:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   exp2 = (int)(expval * 3.321928094887362 + 0.5);
 1820              		.loc 1 473 0
 1821 0168 F86C     		ldr	r0, [r7, #76]
 1822 016a FFF7FEFF 		bl	__aeabi_i2d
 1823 016e 68A3     		adr	r3, .L167+24
 1824 0170 D3E90023 		ldrd	r2, [r3]
 1825 0174 FFF7FEFF 		bl	__aeabi_dmul
 1826 0178 0246     		mov	r2, r0
 1827 017a 0B46     		mov	r3, r1
 1828 017c 1046     		mov	r0, r2
 1829 017e 1946     		mov	r1, r3
 1830 0180 4FF00002 		mov	r2, #0
 1831 0184 6C4B     		ldr	r3, .L167+64
 1832 0186 FFF7FEFF 		bl	__aeabi_dadd
 1833 018a 0246     		mov	r2, r0
 1834 018c 0B46     		mov	r3, r1
 1835 018e 1046     		mov	r0, r2
 1836 0190 1946     		mov	r1, r3
 1837 0192 FFF7FEFF 		bl	__aeabi_d2iz
 1838 0196 0346     		mov	r3, r0
 1839 0198 FB63     		str	r3, [r7, #60]
 474:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 1840              		.loc 1 474 0
 1841 019a F86C     		ldr	r0, [r7, #76]
 1842 019c FFF7FEFF 		bl	__aeabi_i2d
 1843 01a0 5DA3     		adr	r3, .L167+32
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 42


 1844 01a2 D3E90023 		ldrd	r2, [r3]
 1845 01a6 FFF7FEFF 		bl	__aeabi_dmul
 1846 01aa 0246     		mov	r2, r0
 1847 01ac 0B46     		mov	r3, r1
 1848 01ae 9046     		mov	r8, r2
 1849 01b0 9946     		mov	r9, r3
 1850 01b2 F86B     		ldr	r0, [r7, #60]
 1851 01b4 FFF7FEFF 		bl	__aeabi_i2d
 1852 01b8 59A3     		adr	r3, .L167+40
 1853 01ba D3E90023 		ldrd	r2, [r3]
 1854 01be FFF7FEFF 		bl	__aeabi_dmul
 1855 01c2 0246     		mov	r2, r0
 1856 01c4 0B46     		mov	r3, r1
 1857 01c6 4046     		mov	r0, r8
 1858 01c8 4946     		mov	r1, r9
 1859 01ca FFF7FEFF 		bl	__aeabi_dsub
 1860 01ce 0246     		mov	r2, r0
 1861 01d0 0B46     		mov	r3, r1
 1862 01d2 C7E90C23 		strd	r2, [r7, #48]
 475:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const double z2 = z * z;
 1863              		.loc 1 475 0
 1864 01d6 D7E90C23 		ldrd	r2, [r7, #48]
 1865 01da D7E90C01 		ldrd	r0, [r7, #48]
 1866 01de FFF7FEFF 		bl	__aeabi_dmul
 1867 01e2 0246     		mov	r2, r0
 1868 01e4 0B46     		mov	r3, r1
 1869 01e6 C7E90A23 		strd	r2, [r7, #40]
 476:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   conv.U = (uint64_t)(exp2 + 1023) << 52U;
 1870              		.loc 1 476 0
 1871 01ea FB6B     		ldr	r3, [r7, #60]
 1872 01ec 03F2FF33 		addw	r3, r3, #1023
 1873 01f0 1A46     		mov	r2, r3
 1874 01f2 4FEAE273 		asr	r3, r2, #31
 1875 01f6 1505     		lsls	r5, r2, #20
 1876 01f8 0024     		movs	r4, #0
 1877 01fa C7E90645 		strd	r4, [r7, #24]
 477:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_functi
 478:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 1878              		.loc 1 478 0
 1879 01fe D7E90645 		ldrd	r4, [r7, #24]
 1880 0202 D7E90C01 		ldrd	r0, [r7, #48]
 1881 0206 0246     		mov	r2, r0
 1882 0208 0B46     		mov	r3, r1
 1883 020a FFF7FEFF 		bl	__aeabi_dadd
 1884 020e 0246     		mov	r2, r0
 1885 0210 0B46     		mov	r3, r1
 1886 0212 9046     		mov	r8, r2
 1887 0214 9946     		mov	r9, r3
 1888 0216 D7E90C23 		ldrd	r2, [r7, #48]
 1889 021a 4FF00000 		mov	r0, #0
 1890 021e 4FF08041 		mov	r1, #1073741824
 1891 0222 FFF7FEFF 		bl	__aeabi_dsub
 1892 0226 0246     		mov	r2, r0
 1893 0228 0B46     		mov	r3, r1
 1894 022a 9246     		mov	r10, r2
 1895 022c 9B46     		mov	fp, r3
 1896 022e 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 43


 1897 0232 424B     		ldr	r3, .L167+68
 1898 0234 D7E90A01 		ldrd	r0, [r7, #40]
 1899 0238 FFF7FEFF 		bl	__aeabi_ddiv
 1900 023c 0246     		mov	r2, r0
 1901 023e 0B46     		mov	r3, r1
 1902 0240 1046     		mov	r0, r2
 1903 0242 1946     		mov	r1, r3
 1904 0244 4FF00002 		mov	r2, #0
 1905 0248 3D4B     		ldr	r3, .L167+72
 1906 024a FFF7FEFF 		bl	__aeabi_dadd
 1907 024e 0246     		mov	r2, r0
 1908 0250 0B46     		mov	r3, r1
 1909 0252 D7E90A01 		ldrd	r0, [r7, #40]
 1910 0256 FFF7FEFF 		bl	__aeabi_ddiv
 1911 025a 0246     		mov	r2, r0
 1912 025c 0B46     		mov	r3, r1
 1913 025e 1046     		mov	r0, r2
 1914 0260 1946     		mov	r1, r3
 1915 0262 4FF00002 		mov	r2, #0
 1916 0266 374B     		ldr	r3, .L167+76
 1917 0268 FFF7FEFF 		bl	__aeabi_dadd
 1918 026c 0246     		mov	r2, r0
 1919 026e 0B46     		mov	r3, r1
 1920 0270 D7E90A01 		ldrd	r0, [r7, #40]
 1921 0274 FFF7FEFF 		bl	__aeabi_ddiv
 1922 0278 0246     		mov	r2, r0
 1923 027a 0B46     		mov	r3, r1
 1924 027c 5046     		mov	r0, r10
 1925 027e 5946     		mov	r1, fp
 1926 0280 FFF7FEFF 		bl	__aeabi_dadd
 1927 0284 0246     		mov	r2, r0
 1928 0286 0B46     		mov	r3, r1
 1929 0288 4046     		mov	r0, r8
 1930 028a 4946     		mov	r1, r9
 1931 028c FFF7FEFF 		bl	__aeabi_ddiv
 1932 0290 0246     		mov	r2, r0
 1933 0292 0B46     		mov	r3, r1
 1934 0294 1046     		mov	r0, r2
 1935 0296 1946     		mov	r1, r3
 1936 0298 4FF00002 		mov	r2, #0
 1937 029c 244B     		ldr	r3, .L167+56
 1938 029e FFF7FEFF 		bl	__aeabi_dadd
 1939 02a2 0246     		mov	r2, r0
 1940 02a4 0B46     		mov	r3, r1
 1941 02a6 2046     		mov	r0, r4
 1942 02a8 2946     		mov	r1, r5
 1943 02aa FFF7FEFF 		bl	__aeabi_dmul
 1944 02ae 0346     		mov	r3, r0
 1945 02b0 0C46     		mov	r4, r1
 1946 02b2 C7E90634 		strd	r3, [r7, #24]
 479:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // correct for rounding errors
 480:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (value < conv.F) {
 1947              		.loc 1 480 0
 1948 02b6 D7E90601 		ldrd	r0, [r7, #24]
 1949 02ba D7E91E23 		ldrd	r2, [r7, #120]
 1950 02be FFF7FEFF 		bl	__aeabi_dcmpgt
 1951 02c2 0346     		mov	r3, r0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 44


 1952 02c4 002B     		cmp	r3, #0
 1953 02c6 0DD0     		beq	.L141
 481:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     expval--;
 1954              		.loc 1 481 0
 1955 02c8 FB6C     		ldr	r3, [r7, #76]
 1956 02ca 013B     		subs	r3, r3, #1
 1957 02cc FB64     		str	r3, [r7, #76]
 482:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     conv.F /= 10;
 1958              		.loc 1 482 0
 1959 02ce D7E90601 		ldrd	r0, [r7, #24]
 1960 02d2 4FF00002 		mov	r2, #0
 1961 02d6 1A4B     		ldr	r3, .L167+72
 1962 02d8 FFF7FEFF 		bl	__aeabi_ddiv
 1963 02dc 0346     		mov	r3, r0
 1964 02de 0C46     		mov	r4, r1
 1965 02e0 C7E90634 		strd	r3, [r7, #24]
 1966              	.L141:
 483:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 484:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 485:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 486:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 1967              		.loc 1 486 0
 1968 02e4 FB6C     		ldr	r3, [r7, #76]
 1969 02e6 632B     		cmp	r3, #99
 1970 02e8 2EDC     		bgt	.L143
 1971              		.loc 1 486 0 is_stmt 0 discriminator 1
 1972 02ea FB6C     		ldr	r3, [r7, #76]
 1973 02ec 13F1630F 		cmn	r3, #99
 1974 02f0 2ADB     		blt	.L143
 1975              		.loc 1 486 0 discriminator 3
 1976 02f2 0423     		movs	r3, #4
 1977 02f4 29E0     		b	.L144
 1978              	.L168:
 1979 02f6 00BF     		.align	3
 1980              	.L167:
 1981 02f8 FB799F50 		.word	1352628731
 1982 02fc 1344D33F 		.word	1070810131
 1983 0300 B3C8608B 		.word	-1956591437
 1984 0304 288AC63F 		.word	1069976104
 1985 0308 61436F63 		.word	1668236129
 1986 030c A787D23F 		.word	1070761895
 1987 0310 71A37909 		.word	158966641
 1988 0314 4F930A40 		.word	1074434895
 1989 0318 1655B5BB 		.word	-1145744106
 1990 031c B16B0240 		.word	1073900465
 1991 0320 EF39FAFE 		.word	-17155601
 1992 0324 422EE63F 		.word	1072049730
 1993 0328 FFFFEF7F 		.word	2146435071
 1994 032c FFFF0F00 		.word	1048575
 1995 0330 0000F03F 		.word	1072693248
 1996 0334 0000F83F 		.word	1073217536
 1997 0338 0000E03F 		.word	1071644672
 1998 033c 00002C40 		.word	1076625408
 1999 0340 00002440 		.word	1076101120
 2000 0344 00001840 		.word	1075314688
 2001              	.L143:
 2002              		.loc 1 486 0 discriminator 4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 45


 2003 0348 0523     		movs	r3, #5
 2004              	.L144:
 2005              		.loc 1 486 0 discriminator 6
 2006 034a BB64     		str	r3, [r7, #72]
 487:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 488:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // in "%g" mode, "prec" is the number of *significant figures* not decimals
 489:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (flags & FLAGS_ADAPT_EXP) {
 2007              		.loc 1 489 0 is_stmt 1 discriminator 6
 2008 034c D7F88830 		ldr	r3, [r7, #136]
 2009 0350 03F40063 		and	r3, r3, #2048
 2010 0354 002B     		cmp	r3, #0
 2011 0356 3DD0     		beq	.L145
 490:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // do we want to fall-back to "%f" mode?
 491:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if ((value >= 1e-4) && (value < 1e6)) {
 2012              		.loc 1 491 0
 2013 0358 6BA3     		adr	r3, .L169
 2014 035a D3E90023 		ldrd	r2, [r3]
 2015 035e D7E91E01 		ldrd	r0, [r7, #120]
 2016 0362 FFF7FEFF 		bl	__aeabi_dcmpge
 2017 0366 0346     		mov	r3, r0
 2018 0368 002B     		cmp	r3, #0
 2019 036a 24D0     		beq	.L146
 2020              		.loc 1 491 0 is_stmt 0 discriminator 1
 2021 036c 68A3     		adr	r3, .L169+8
 2022 036e D3E90023 		ldrd	r2, [r3]
 2023 0372 D7E91E01 		ldrd	r0, [r7, #120]
 2024 0376 FFF7FEFF 		bl	__aeabi_dcmplt
 2025 037a 0346     		mov	r3, r0
 2026 037c 002B     		cmp	r3, #0
 2027 037e 1AD0     		beq	.L146
 492:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if ((int)prec > expval) {
 2028              		.loc 1 492 0 is_stmt 1
 2029 0380 D7F88020 		ldr	r2, [r7, #128]
 2030 0384 FB6C     		ldr	r3, [r7, #76]
 2031 0386 9A42     		cmp	r2, r3
 2032 0388 07DD     		ble	.L149
 493:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         prec = (unsigned)((int)prec - expval - 1);
 2033              		.loc 1 493 0
 2034 038a D7F88020 		ldr	r2, [r7, #128]
 2035 038e FB6C     		ldr	r3, [r7, #76]
 2036 0390 D31A     		subs	r3, r2, r3
 2037 0392 013B     		subs	r3, r3, #1
 2038 0394 C7F88030 		str	r3, [r7, #128]
 2039 0398 02E0     		b	.L150
 2040              	.L149:
 494:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 495:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       else {
 496:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         prec = 0;
 2041              		.loc 1 496 0
 2042 039a 0023     		movs	r3, #0
 2043 039c C7F88030 		str	r3, [r7, #128]
 2044              	.L150:
 497:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 498:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 2045              		.loc 1 498 0
 2046 03a0 D7F88830 		ldr	r3, [r7, #136]
 2047 03a4 43F48063 		orr	r3, r3, #1024
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 46


 2048 03a8 C7F88830 		str	r3, [r7, #136]
 499:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // no characters in exponent
 500:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       minwidth = 0U;
 2049              		.loc 1 500 0
 2050 03ac 0023     		movs	r3, #0
 2051 03ae BB64     		str	r3, [r7, #72]
 501:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       expval   = 0;
 2052              		.loc 1 501 0
 2053 03b0 0023     		movs	r3, #0
 2054 03b2 FB64     		str	r3, [r7, #76]
 2055 03b4 0EE0     		b	.L145
 2056              	.L146:
 502:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 503:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else {
 504:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // we use one sigfig for the whole part
 505:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if ((prec > 0) && (flags & FLAGS_PRECISION)) {
 2057              		.loc 1 505 0
 2058 03b6 D7F88030 		ldr	r3, [r7, #128]
 2059 03ba 002B     		cmp	r3, #0
 2060 03bc 0AD0     		beq	.L145
 2061              		.loc 1 505 0 is_stmt 0 discriminator 1
 2062 03be D7F88830 		ldr	r3, [r7, #136]
 2063 03c2 03F48063 		and	r3, r3, #1024
 2064 03c6 002B     		cmp	r3, #0
 2065 03c8 04D0     		beq	.L145
 506:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         --prec;
 2066              		.loc 1 506 0 is_stmt 1
 2067 03ca D7F88030 		ldr	r3, [r7, #128]
 2068 03ce 013B     		subs	r3, r3, #1
 2069 03d0 C7F88030 		str	r3, [r7, #128]
 2070              	.L145:
 507:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 508:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 509:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 510:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 511:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // will everything fit?
 512:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   unsigned int fwidth = width;
 2071              		.loc 1 512 0
 2072 03d4 D7F88430 		ldr	r3, [r7, #132]
 2073 03d8 7B64     		str	r3, [r7, #68]
 513:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (width > minwidth) {
 2074              		.loc 1 513 0
 2075 03da D7F88420 		ldr	r2, [r7, #132]
 2076 03de BB6C     		ldr	r3, [r7, #72]
 2077 03e0 9A42     		cmp	r2, r3
 2078 03e2 04D9     		bls	.L151
 514:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // we didn't fall-back so subtract the characters required for the exponent
 515:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     fwidth -= minwidth;
 2079              		.loc 1 515 0
 2080 03e4 7A6C     		ldr	r2, [r7, #68]
 2081 03e6 BB6C     		ldr	r3, [r7, #72]
 2082 03e8 D31A     		subs	r3, r2, r3
 2083 03ea 7B64     		str	r3, [r7, #68]
 2084 03ec 01E0     		b	.L152
 2085              	.L151:
 516:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   } else {
 517:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // not enough characters, so go back to default sizing
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 47


 518:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     fwidth = 0U;
 2086              		.loc 1 518 0
 2087 03ee 0023     		movs	r3, #0
 2088 03f0 7B64     		str	r3, [r7, #68]
 2089              	.L152:
 519:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 520:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if ((flags & FLAGS_LEFT) && minwidth) {
 2090              		.loc 1 520 0
 2091 03f2 D7F88830 		ldr	r3, [r7, #136]
 2092 03f6 03F00203 		and	r3, r3, #2
 2093 03fa 002B     		cmp	r3, #0
 2094 03fc 04D0     		beq	.L153
 2095              		.loc 1 520 0 is_stmt 0 discriminator 1
 2096 03fe BB6C     		ldr	r3, [r7, #72]
 2097 0400 002B     		cmp	r3, #0
 2098 0402 01D0     		beq	.L153
 521:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // if we're padding on the right, DON'T pad the floating part
 522:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     fwidth = 0U;
 2099              		.loc 1 522 0 is_stmt 1
 2100 0404 0023     		movs	r3, #0
 2101 0406 7B64     		str	r3, [r7, #68]
 2102              	.L153:
 523:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 524:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 525:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // rescale the float value
 526:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (expval) {
 2103              		.loc 1 526 0
 2104 0408 FB6C     		ldr	r3, [r7, #76]
 2105 040a 002B     		cmp	r3, #0
 2106 040c 0BD0     		beq	.L154
 527:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     value /= conv.F;
 2107              		.loc 1 527 0
 2108 040e D7E90634 		ldrd	r3, [r7, #24]
 2109 0412 1A46     		mov	r2, r3
 2110 0414 2346     		mov	r3, r4
 2111 0416 D7E91E01 		ldrd	r0, [r7, #120]
 2112 041a FFF7FEFF 		bl	__aeabi_ddiv
 2113 041e 0346     		mov	r3, r0
 2114 0420 0C46     		mov	r4, r1
 2115 0422 C7E91E34 		strd	r3, [r7, #120]
 2116              	.L154:
 528:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 529:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 530:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // output the floating part
 531:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const size_t start_idx = idx;
 2117              		.loc 1 531 0
 2118 0426 FB68     		ldr	r3, [r7, #12]
 2119 0428 7B62     		str	r3, [r7, #36]
 532:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADA
 2120              		.loc 1 532 0
 2121 042a 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 2122 042e 002B     		cmp	r3, #0
 2123 0430 06D0     		beq	.L155
 2124              		.loc 1 532 0 is_stmt 0 discriminator 1
 2125 0432 BB6F     		ldr	r3, [r7, #120]
 2126 0434 3B60     		str	r3, [r7]
 2127 0436 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 48


 2128 0438 83F00043 		eor	r3, r3, #-2147483648
 2129 043c 7B60     		str	r3, [r7, #4]
 2130 043e 03E0     		b	.L156
 2131              	.L155:
 2132              		.loc 1 532 0 discriminator 2
 2133 0440 97ED1E7B 		vldr.64	d7, [r7, #120]
 2134 0444 87ED007B 		vstr.64	d7, [r7]
 2135              	.L156:
 2136              		.loc 1 532 0 discriminator 4
 2137 0448 D7F88830 		ldr	r3, [r7, #136]
 2138 044c 23F40063 		bic	r3, r3, #2048
 2139 0450 0493     		str	r3, [sp, #16]
 2140 0452 7B6C     		ldr	r3, [r7, #68]
 2141 0454 0393     		str	r3, [sp, #12]
 2142 0456 D7F88030 		ldr	r3, [r7, #128]
 2143 045a 0293     		str	r3, [sp, #8]
 2144 045c 97ED007B 		vldr.64	d7, [r7]
 2145 0460 8DED007B 		vstr.64	d7, [sp]
 2146 0464 BB68     		ldr	r3, [r7, #8]
 2147 0466 FA68     		ldr	r2, [r7, #12]
 2148 0468 3969     		ldr	r1, [r7, #16]
 2149 046a 7869     		ldr	r0, [r7, #20]
 2150 046c FFF7FEFF 		bl	_ftoa
 2151 0470 F860     		str	r0, [r7, #12]
 533:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 534:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // output the exponent part
 535:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (minwidth) {
 2152              		.loc 1 535 0 is_stmt 1 discriminator 4
 2153 0472 BB6C     		ldr	r3, [r7, #72]
 2154 0474 002B     		cmp	r3, #0
 2155 0476 3FD0     		beq	.L157
 536:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // output the exponential symbol
 537:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 2156              		.loc 1 537 0
 2157 0478 D7F88830 		ldr	r3, [r7, #136]
 2158 047c 03F02003 		and	r3, r3, #32
 2159 0480 002B     		cmp	r3, #0
 2160 0482 01D0     		beq	.L158
 2161              		.loc 1 537 0 is_stmt 0 discriminator 1
 2162 0484 4520     		movs	r0, #69
 2163 0486 00E0     		b	.L159
 2164              	.L158:
 2165              		.loc 1 537 0 discriminator 2
 2166 0488 6520     		movs	r0, #101
 2167              	.L159:
 2168              		.loc 1 537 0 discriminator 4
 2169 048a FA68     		ldr	r2, [r7, #12]
 2170 048c 531C     		adds	r3, r2, #1
 2171 048e FB60     		str	r3, [r7, #12]
 2172 0490 7C69     		ldr	r4, [r7, #20]
 2173 0492 BB68     		ldr	r3, [r7, #8]
 2174 0494 3969     		ldr	r1, [r7, #16]
 2175 0496 A047     		blx	r4
 538:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // output the exponent value
 539:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, 
 2176              		.loc 1 539 0 is_stmt 1 discriminator 4
 2177 0498 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 49


 2178 049a 002B     		cmp	r3, #0
 2179 049c B8BF     		it	lt
 2180 049e 5B42     		rsblt	r3, r3, #0
 2181 04a0 1846     		mov	r0, r3
 2182 04a2 FB6C     		ldr	r3, [r7, #76]
 2183 04a4 DB0F     		lsrs	r3, r3, #31
 2184 04a6 DBB2     		uxtb	r3, r3
 2185 04a8 BA6C     		ldr	r2, [r7, #72]
 2186 04aa 013A     		subs	r2, r2, #1
 2187 04ac 0521     		movs	r1, #5
 2188 04ae 0591     		str	r1, [sp, #20]
 2189 04b0 0492     		str	r2, [sp, #16]
 2190 04b2 0022     		movs	r2, #0
 2191 04b4 0392     		str	r2, [sp, #12]
 2192 04b6 0A22     		movs	r2, #10
 2193 04b8 0292     		str	r2, [sp, #8]
 2194 04ba 0193     		str	r3, [sp, #4]
 2195 04bc 0090     		str	r0, [sp]
 2196 04be BB68     		ldr	r3, [r7, #8]
 2197 04c0 FA68     		ldr	r2, [r7, #12]
 2198 04c2 3969     		ldr	r1, [r7, #16]
 2199 04c4 7869     		ldr	r0, [r7, #20]
 2200 04c6 FFF7FEFF 		bl	_ntoa_long
 2201 04ca F860     		str	r0, [r7, #12]
 540:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // might need to right-pad spaces
 541:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (flags & FLAGS_LEFT) {
 2202              		.loc 1 541 0 discriminator 4
 2203 04cc D7F88830 		ldr	r3, [r7, #136]
 2204 04d0 03F00203 		and	r3, r3, #2
 2205 04d4 002B     		cmp	r3, #0
 2206 04d6 0FD0     		beq	.L157
 542:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 2207              		.loc 1 542 0
 2208 04d8 07E0     		b	.L160
 2209              	.L161:
 2210              		.loc 1 542 0 is_stmt 0 discriminator 2
 2211 04da FA68     		ldr	r2, [r7, #12]
 2212 04dc 531C     		adds	r3, r2, #1
 2213 04de FB60     		str	r3, [r7, #12]
 2214 04e0 7C69     		ldr	r4, [r7, #20]
 2215 04e2 BB68     		ldr	r3, [r7, #8]
 2216 04e4 3969     		ldr	r1, [r7, #16]
 2217 04e6 2020     		movs	r0, #32
 2218 04e8 A047     		blx	r4
 2219              	.L160:
 2220              		.loc 1 542 0 discriminator 1
 2221 04ea FA68     		ldr	r2, [r7, #12]
 2222 04ec 7B6A     		ldr	r3, [r7, #36]
 2223 04ee D21A     		subs	r2, r2, r3
 2224 04f0 D7F88430 		ldr	r3, [r7, #132]
 2225 04f4 9A42     		cmp	r2, r3
 2226 04f6 F0D3     		bcc	.L161
 2227              	.L157:
 543:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 544:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 545:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return idx;
 2228              		.loc 1 545 0 is_stmt 1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 50


 2229 04f8 FB68     		ldr	r3, [r7, #12]
 2230              	.L162:
 546:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 2231              		.loc 1 546 0 discriminator 1
 2232 04fa 1846     		mov	r0, r3
 2233 04fc 5437     		adds	r7, r7, #84
 2234              		.cfi_def_cfa_offset 36
 2235 04fe BD46     		mov	sp, r7
 2236              		.cfi_def_cfa_register 13
 2237              		@ sp needed
 2238 0500 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2239              	.L170:
 2240 0504 AFF30080 		.align	3
 2241              	.L169:
 2242 0508 2D431CEB 		.word	-350469331
 2243 050c E2361A3F 		.word	1058682594
 2244 0510 00000000 		.word	0
 2245 0514 80842E41 		.word	1093567616
 2246              		.cfi_endproc
 2247              	.LFE10:
 2248              		.size	_etoa, .-_etoa
 2249              		.section	.text._vsnprintf,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	_vsnprintf, %function
 2254              	_vsnprintf:
 2255              	.LFB11:
 547:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 548:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 549:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 550:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 551:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** // internal vsnprintf
 552:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_l
 553:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 2256              		.loc 1 553 0
 2257              		.cfi_startproc
 2258              		@ args = 4, pretend = 0, frame = 88
 2259              		@ frame_needed = 1, uses_anonymous_args = 0
 2260 0000 B0B5     		push	{r4, r5, r7, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 4, -16
 2263              		.cfi_offset 5, -12
 2264              		.cfi_offset 7, -8
 2265              		.cfi_offset 14, -4
 2266 0002 A0B0     		sub	sp, sp, #128
 2267              		.cfi_def_cfa_offset 144
 2268 0004 0AAF     		add	r7, sp, #40
 2269              		.cfi_def_cfa 7, 104
 2270 0006 F860     		str	r0, [r7, #12]
 2271 0008 B960     		str	r1, [r7, #8]
 2272 000a 7A60     		str	r2, [r7, #4]
 2273 000c 3B60     		str	r3, [r7]
 554:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   unsigned int flags, width, precision, n;
 555:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   size_t idx = 0U;
 2274              		.loc 1 555 0
 2275 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 51


 2276 0010 7B64     		str	r3, [r7, #68]
 556:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 557:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   if (!buffer) {
 2277              		.loc 1 557 0
 2278 0012 BB68     		ldr	r3, [r7, #8]
 2279 0014 002B     		cmp	r3, #0
 2280 0016 40F08C84 		bne	.L173
 558:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // use null output function
 559:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     out = _out_null;
 2281              		.loc 1 559 0
 2282 001a A04B     		ldr	r3, .L266
 2283 001c FB60     		str	r3, [r7, #12]
 560:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 561:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 562:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   while (*format)
 2284              		.loc 1 562 0
 2285 001e 00F088BC 		b	.L173
 2286              	.L259:
 563:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   {
 564:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // format specifier?  %[flags][width][.precision][length]
 565:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (*format != '%') {
 2287              		.loc 1 565 0
 2288 0022 3B68     		ldr	r3, [r7]
 2289 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 0026 252B     		cmp	r3, #37
 2291 0028 0DD0     		beq	.L174
 566:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // no
 567:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       out(*format, buffer, idx++, maxlen);
 2292              		.loc 1 567 0
 2293 002a 3B68     		ldr	r3, [r7]
 2294 002c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2295 002e 7A6C     		ldr	r2, [r7, #68]
 2296 0030 531C     		adds	r3, r2, #1
 2297 0032 7B64     		str	r3, [r7, #68]
 2298 0034 FC68     		ldr	r4, [r7, #12]
 2299 0036 7B68     		ldr	r3, [r7, #4]
 2300 0038 B968     		ldr	r1, [r7, #8]
 2301 003a A047     		blx	r4
 568:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       format++;
 2302              		.loc 1 568 0
 2303 003c 3B68     		ldr	r3, [r7]
 2304 003e 0133     		adds	r3, r3, #1
 2305 0040 3B60     		str	r3, [r7]
 569:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       continue;
 2306              		.loc 1 569 0
 2307 0042 00F076BC 		b	.L173
 2308              	.L174:
 570:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 571:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else {
 572:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       // yes, evaluate it
 573:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       format++;
 2309              		.loc 1 573 0
 2310 0046 3B68     		ldr	r3, [r7]
 2311 0048 0133     		adds	r3, r3, #1
 2312 004a 3B60     		str	r3, [r7]
 574:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 575:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 52


 576:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // evaluate flags
 577:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     flags = 0U;
 2313              		.loc 1 577 0
 2314 004c 0023     		movs	r3, #0
 2315 004e 7B65     		str	r3, [r7, #84]
 2316              	.L183:
 578:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     do {
 579:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       switch (*format) {
 2317              		.loc 1 579 0
 2318 0050 3B68     		ldr	r3, [r7]
 2319 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0054 203B     		subs	r3, r3, #32
 2321 0056 102B     		cmp	r3, #16
 2322 0058 56D8     		bhi	.L175
 2323 005a 01A2     		adr	r2, .L177
 2324 005c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2325              		.p2align 2
 2326              	.L177:
 2327 0060 E1000000 		.word	.L176+1
 2328 0064 09010000 		.word	.L175+1
 2329 0068 09010000 		.word	.L175+1
 2330 006c F5000000 		.word	.L178+1
 2331 0070 09010000 		.word	.L175+1
 2332 0074 09010000 		.word	.L175+1
 2333 0078 09010000 		.word	.L175+1
 2334 007c 09010000 		.word	.L175+1
 2335 0080 09010000 		.word	.L175+1
 2336 0084 09010000 		.word	.L175+1
 2337 0088 09010000 		.word	.L175+1
 2338 008c CD000000 		.word	.L179+1
 2339 0090 09010000 		.word	.L175+1
 2340 0094 B9000000 		.word	.L180+1
 2341 0098 09010000 		.word	.L175+1
 2342 009c 09010000 		.word	.L175+1
 2343 00a0 A5000000 		.word	.L181+1
 2344              		.p2align 1
 2345              	.L181:
 580:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 2346              		.loc 1 580 0
 2347 00a4 7B6D     		ldr	r3, [r7, #84]
 2348 00a6 43F00103 		orr	r3, r3, #1
 2349 00aa 7B65     		str	r3, [r7, #84]
 2350 00ac 3B68     		ldr	r3, [r7]
 2351 00ae 0133     		adds	r3, r3, #1
 2352 00b0 3B60     		str	r3, [r7]
 2353 00b2 0123     		movs	r3, #1
 2354 00b4 BB64     		str	r3, [r7, #72]
 2355 00b6 2AE0     		b	.L182
 2356              	.L180:
 581:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 2357              		.loc 1 581 0
 2358 00b8 7B6D     		ldr	r3, [r7, #84]
 2359 00ba 43F00203 		orr	r3, r3, #2
 2360 00be 7B65     		str	r3, [r7, #84]
 2361 00c0 3B68     		ldr	r3, [r7]
 2362 00c2 0133     		adds	r3, r3, #1
 2363 00c4 3B60     		str	r3, [r7]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 53


 2364 00c6 0123     		movs	r3, #1
 2365 00c8 BB64     		str	r3, [r7, #72]
 2366 00ca 20E0     		b	.L182
 2367              	.L179:
 582:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 2368              		.loc 1 582 0
 2369 00cc 7B6D     		ldr	r3, [r7, #84]
 2370 00ce 43F00403 		orr	r3, r3, #4
 2371 00d2 7B65     		str	r3, [r7, #84]
 2372 00d4 3B68     		ldr	r3, [r7]
 2373 00d6 0133     		adds	r3, r3, #1
 2374 00d8 3B60     		str	r3, [r7]
 2375 00da 0123     		movs	r3, #1
 2376 00dc BB64     		str	r3, [r7, #72]
 2377 00de 16E0     		b	.L182
 2378              	.L176:
 583:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 2379              		.loc 1 583 0
 2380 00e0 7B6D     		ldr	r3, [r7, #84]
 2381 00e2 43F00803 		orr	r3, r3, #8
 2382 00e6 7B65     		str	r3, [r7, #84]
 2383 00e8 3B68     		ldr	r3, [r7]
 2384 00ea 0133     		adds	r3, r3, #1
 2385 00ec 3B60     		str	r3, [r7]
 2386 00ee 0123     		movs	r3, #1
 2387 00f0 BB64     		str	r3, [r7, #72]
 2388 00f2 0CE0     		b	.L182
 2389              	.L178:
 584:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 2390              		.loc 1 584 0
 2391 00f4 7B6D     		ldr	r3, [r7, #84]
 2392 00f6 43F01003 		orr	r3, r3, #16
 2393 00fa 7B65     		str	r3, [r7, #84]
 2394 00fc 3B68     		ldr	r3, [r7]
 2395 00fe 0133     		adds	r3, r3, #1
 2396 0100 3B60     		str	r3, [r7]
 2397 0102 0123     		movs	r3, #1
 2398 0104 BB64     		str	r3, [r7, #72]
 2399 0106 02E0     		b	.L182
 2400              	.L175:
 585:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         default :                                   n = 0U; break;
 2401              		.loc 1 585 0
 2402 0108 0023     		movs	r3, #0
 2403 010a BB64     		str	r3, [r7, #72]
 2404 010c 00BF     		nop
 2405              	.L182:
 586:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 587:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     } while (n);
 2406              		.loc 1 587 0
 2407 010e BB6C     		ldr	r3, [r7, #72]
 2408 0110 002B     		cmp	r3, #0
 2409 0112 9DD1     		bne	.L183
 588:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 589:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // evaluate width field
 590:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     width = 0U;
 2410              		.loc 1 590 0
 2411 0114 0023     		movs	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 54


 2412 0116 3B65     		str	r3, [r7, #80]
 591:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (_is_digit(*format)) {
 2413              		.loc 1 591 0
 2414 0118 3B68     		ldr	r3, [r7]
 2415 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2416 011c 1846     		mov	r0, r3
 2417 011e FFF7FEFF 		bl	_is_digit
 2418 0122 0346     		mov	r3, r0
 2419 0124 002B     		cmp	r3, #0
 2420 0126 05D0     		beq	.L184
 592:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       width = _atoi(&format);
 2421              		.loc 1 592 0
 2422 0128 3B46     		mov	r3, r7
 2423 012a 1846     		mov	r0, r3
 2424 012c FFF7FEFF 		bl	_atoi
 2425 0130 3865     		str	r0, [r7, #80]
 2426 0132 18E0     		b	.L185
 2427              	.L184:
 593:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 594:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     else if (*format == '*') {
 2428              		.loc 1 594 0
 2429 0134 3B68     		ldr	r3, [r7]
 2430 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2431 0138 2A2B     		cmp	r3, #42
 2432 013a 14D1     		bne	.L185
 2433              	.LBB6:
 595:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       const int w = va_arg(va, int);
 2434              		.loc 1 595 0
 2435 013c BB6E     		ldr	r3, [r7, #104]
 2436 013e 1A1D     		adds	r2, r3, #4
 2437 0140 BA66     		str	r2, [r7, #104]
 2438 0142 1B68     		ldr	r3, [r3]
 2439 0144 3B63     		str	r3, [r7, #48]
 596:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if (w < 0) {
 2440              		.loc 1 596 0
 2441 0146 3B6B     		ldr	r3, [r7, #48]
 2442 0148 002B     		cmp	r3, #0
 2443 014a 07DA     		bge	.L186
 597:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= FLAGS_LEFT;    // reverse padding
 2444              		.loc 1 597 0
 2445 014c 7B6D     		ldr	r3, [r7, #84]
 2446 014e 43F00203 		orr	r3, r3, #2
 2447 0152 7B65     		str	r3, [r7, #84]
 598:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         width = (unsigned int)-w;
 2448              		.loc 1 598 0
 2449 0154 3B6B     		ldr	r3, [r7, #48]
 2450 0156 5B42     		negs	r3, r3
 2451 0158 3B65     		str	r3, [r7, #80]
 2452 015a 01E0     		b	.L187
 2453              	.L186:
 599:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 600:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       else {
 601:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         width = (unsigned int)w;
 2454              		.loc 1 601 0
 2455 015c 3B6B     		ldr	r3, [r7, #48]
 2456 015e 3B65     		str	r3, [r7, #80]
 2457              	.L187:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 55


 602:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 603:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       format++;
 2458              		.loc 1 603 0
 2459 0160 3B68     		ldr	r3, [r7]
 2460 0162 0133     		adds	r3, r3, #1
 2461 0164 3B60     		str	r3, [r7]
 2462              	.L185:
 2463              	.LBE6:
 604:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 605:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 606:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // evaluate precision field
 607:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     precision = 0U;
 2464              		.loc 1 607 0
 2465 0166 0023     		movs	r3, #0
 2466 0168 FB64     		str	r3, [r7, #76]
 608:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     if (*format == '.') {
 2467              		.loc 1 608 0
 2468 016a 3B68     		ldr	r3, [r7]
 2469 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2470 016e 2E2B     		cmp	r3, #46
 2471 0170 24D1     		bne	.L188
 609:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       flags |= FLAGS_PRECISION;
 2472              		.loc 1 609 0
 2473 0172 7B6D     		ldr	r3, [r7, #84]
 2474 0174 43F48063 		orr	r3, r3, #1024
 2475 0178 7B65     		str	r3, [r7, #84]
 610:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       format++;
 2476              		.loc 1 610 0
 2477 017a 3B68     		ldr	r3, [r7]
 2478 017c 0133     		adds	r3, r3, #1
 2479 017e 3B60     		str	r3, [r7]
 611:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       if (_is_digit(*format)) {
 2480              		.loc 1 611 0
 2481 0180 3B68     		ldr	r3, [r7]
 2482 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2483 0184 1846     		mov	r0, r3
 2484 0186 FFF7FEFF 		bl	_is_digit
 2485 018a 0346     		mov	r3, r0
 2486 018c 002B     		cmp	r3, #0
 2487 018e 05D0     		beq	.L189
 612:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         precision = _atoi(&format);
 2488              		.loc 1 612 0
 2489 0190 3B46     		mov	r3, r7
 2490 0192 1846     		mov	r0, r3
 2491 0194 FFF7FEFF 		bl	_atoi
 2492 0198 F864     		str	r0, [r7, #76]
 2493 019a 0FE0     		b	.L188
 2494              	.L189:
 613:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 614:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       else if (*format == '*') {
 2495              		.loc 1 614 0
 2496 019c 3B68     		ldr	r3, [r7]
 2497 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2498 01a0 2A2B     		cmp	r3, #42
 2499 01a2 0BD1     		bne	.L188
 2500              	.LBB7:
 615:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         const int prec = (int)va_arg(va, int);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 56


 2501              		.loc 1 615 0
 2502 01a4 BB6E     		ldr	r3, [r7, #104]
 2503 01a6 1A1D     		adds	r2, r3, #4
 2504 01a8 BA66     		str	r2, [r7, #104]
 2505 01aa 1B68     		ldr	r3, [r3]
 2506 01ac FB62     		str	r3, [r7, #44]
 616:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         precision = prec > 0 ? (unsigned int)prec : 0U;
 2507              		.loc 1 616 0
 2508 01ae FB6A     		ldr	r3, [r7, #44]
 2509 01b0 23EAE373 		bic	r3, r3, r3, asr #31
 2510 01b4 FB64     		str	r3, [r7, #76]
 617:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2511              		.loc 1 617 0
 2512 01b6 3B68     		ldr	r3, [r7]
 2513 01b8 0133     		adds	r3, r3, #1
 2514 01ba 3B60     		str	r3, [r7]
 2515              	.L188:
 2516              	.LBE7:
 618:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 619:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 620:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 621:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // evaluate length field
 622:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     switch (*format) {
 2517              		.loc 1 622 0
 2518 01bc 3B68     		ldr	r3, [r7]
 2519 01be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2520 01c0 683B     		subs	r3, r3, #104
 2521 01c2 122B     		cmp	r3, #18
 2522 01c4 66D8     		bhi	.L263
 2523 01c6 01A2     		adr	r2, .L192
 2524 01c8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2525              		.p2align 2
 2526              	.L192:
 2527 01cc 3F020000 		.word	.L191+1
 2528 01d0 95020000 		.word	.L263+1
 2529 01d4 75020000 		.word	.L193+1
 2530 01d8 95020000 		.word	.L263+1
 2531 01dc 19020000 		.word	.L194+1
 2532 01e0 95020000 		.word	.L263+1
 2533 01e4 95020000 		.word	.L263+1
 2534 01e8 95020000 		.word	.L263+1
 2535 01ec 95020000 		.word	.L263+1
 2536 01f0 95020000 		.word	.L263+1
 2537 01f4 95020000 		.word	.L263+1
 2538 01f8 95020000 		.word	.L263+1
 2539 01fc 65020000 		.word	.L195+1
 2540 0200 95020000 		.word	.L263+1
 2541 0204 95020000 		.word	.L263+1
 2542 0208 95020000 		.word	.L263+1
 2543 020c 95020000 		.word	.L263+1
 2544 0210 95020000 		.word	.L263+1
 2545 0214 85020000 		.word	.L196+1
 2546              		.p2align 1
 2547              	.L194:
 623:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'l' :
 624:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= FLAGS_LONG;
 2548              		.loc 1 624 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 57


 2549 0218 7B6D     		ldr	r3, [r7, #84]
 2550 021a 43F48073 		orr	r3, r3, #256
 2551 021e 7B65     		str	r3, [r7, #84]
 625:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2552              		.loc 1 625 0
 2553 0220 3B68     		ldr	r3, [r7]
 2554 0222 0133     		adds	r3, r3, #1
 2555 0224 3B60     		str	r3, [r7]
 626:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (*format == 'l') {
 2556              		.loc 1 626 0
 2557 0226 3B68     		ldr	r3, [r7]
 2558 0228 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2559 022a 6C2B     		cmp	r3, #108
 2560 022c 34D1     		bne	.L264
 627:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags |= FLAGS_LONG_LONG;
 2561              		.loc 1 627 0
 2562 022e 7B6D     		ldr	r3, [r7, #84]
 2563 0230 43F40073 		orr	r3, r3, #512
 2564 0234 7B65     		str	r3, [r7, #84]
 628:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           format++;
 2565              		.loc 1 628 0
 2566 0236 3B68     		ldr	r3, [r7]
 2567 0238 0133     		adds	r3, r3, #1
 2568 023a 3B60     		str	r3, [r7]
 629:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 630:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2569              		.loc 1 630 0
 2570 023c 2CE0     		b	.L264
 2571              	.L191:
 631:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'h' :
 632:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= FLAGS_SHORT;
 2572              		.loc 1 632 0
 2573 023e 7B6D     		ldr	r3, [r7, #84]
 2574 0240 43F08003 		orr	r3, r3, #128
 2575 0244 7B65     		str	r3, [r7, #84]
 633:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2576              		.loc 1 633 0
 2577 0246 3B68     		ldr	r3, [r7]
 2578 0248 0133     		adds	r3, r3, #1
 2579 024a 3B60     		str	r3, [r7]
 634:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (*format == 'h') {
 2580              		.loc 1 634 0
 2581 024c 3B68     		ldr	r3, [r7]
 2582 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2583 0250 682B     		cmp	r3, #104
 2584 0252 25D1     		bne	.L265
 635:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags |= FLAGS_CHAR;
 2585              		.loc 1 635 0
 2586 0254 7B6D     		ldr	r3, [r7, #84]
 2587 0256 43F04003 		orr	r3, r3, #64
 2588 025a 7B65     		str	r3, [r7, #84]
 636:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           format++;
 2589              		.loc 1 636 0
 2590 025c 3B68     		ldr	r3, [r7]
 2591 025e 0133     		adds	r3, r3, #1
 2592 0260 3B60     		str	r3, [r7]
 637:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 58


 638:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2593              		.loc 1 638 0
 2594 0262 1DE0     		b	.L265
 2595              	.L195:
 639:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 640:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 't' :
 641:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 2596              		.loc 1 641 0
 2597 0264 7B6D     		ldr	r3, [r7, #84]
 2598 0266 43F48073 		orr	r3, r3, #256
 2599 026a 7B65     		str	r3, [r7, #84]
 642:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2600              		.loc 1 642 0
 2601 026c 3B68     		ldr	r3, [r7]
 2602 026e 0133     		adds	r3, r3, #1
 2603 0270 3B60     		str	r3, [r7]
 643:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2604              		.loc 1 643 0
 2605 0272 16E0     		b	.L198
 2606              	.L193:
 644:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 645:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'j' :
 646:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 2607              		.loc 1 646 0
 2608 0274 7B6D     		ldr	r3, [r7, #84]
 2609 0276 43F40073 		orr	r3, r3, #512
 2610 027a 7B65     		str	r3, [r7, #84]
 647:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2611              		.loc 1 647 0
 2612 027c 3B68     		ldr	r3, [r7]
 2613 027e 0133     		adds	r3, r3, #1
 2614 0280 3B60     		str	r3, [r7]
 648:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2615              		.loc 1 648 0
 2616 0282 0EE0     		b	.L198
 2617              	.L196:
 649:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'z' :
 650:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 2618              		.loc 1 650 0
 2619 0284 7B6D     		ldr	r3, [r7, #84]
 2620 0286 43F48073 		orr	r3, r3, #256
 2621 028a 7B65     		str	r3, [r7, #84]
 651:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 2622              		.loc 1 651 0
 2623 028c 3B68     		ldr	r3, [r7]
 2624 028e 0133     		adds	r3, r3, #1
 2625 0290 3B60     		str	r3, [r7]
 652:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2626              		.loc 1 652 0
 2627 0292 06E0     		b	.L198
 2628              	.L263:
 653:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       default :
 654:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 2629              		.loc 1 654 0
 2630 0294 00BF     		nop
 2631 0296 04E0     		b	.L198
 2632              	.L264:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 59


 630:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'h' :
 2633              		.loc 1 630 0
 2634 0298 00BF     		nop
 2635 029a 02E0     		b	.L198
 2636              	.L267:
 2637              		.align	2
 2638              	.L266:
 2639 029c 00000000 		.word	_out_null
 2640              	.L265:
 638:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 2641              		.loc 1 638 0
 2642 02a0 00BF     		nop
 2643              	.L198:
 655:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 656:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 657:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     // evaluate specifier
 658:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     switch (*format) {
 2644              		.loc 1 658 0
 2645 02a2 3B68     		ldr	r3, [r7]
 2646 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 02a6 253B     		subs	r3, r3, #37
 2648 02a8 532B     		cmp	r3, #83
 2649 02aa 00F23583 		bhi	.L200
 2650 02ae 01A2     		adr	r2, .L202
 2651 02b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2652              		.p2align 2
 2653              	.L202:
 2654 02b4 01090000 		.word	.L201+1
 2655 02b8 19090000 		.word	.L200+1
 2656 02bc 19090000 		.word	.L200+1
 2657 02c0 19090000 		.word	.L200+1
 2658 02c4 19090000 		.word	.L200+1
 2659 02c8 19090000 		.word	.L200+1
 2660 02cc 19090000 		.word	.L200+1
 2661 02d0 19090000 		.word	.L200+1
 2662 02d4 19090000 		.word	.L200+1
 2663 02d8 19090000 		.word	.L200+1
 2664 02dc 19090000 		.word	.L200+1
 2665 02e0 19090000 		.word	.L200+1
 2666 02e4 19090000 		.word	.L200+1
 2667 02e8 19090000 		.word	.L200+1
 2668 02ec 19090000 		.word	.L200+1
 2669 02f0 19090000 		.word	.L200+1
 2670 02f4 19090000 		.word	.L200+1
 2671 02f8 19090000 		.word	.L200+1
 2672 02fc 19090000 		.word	.L200+1
 2673 0300 19090000 		.word	.L200+1
 2674 0304 19090000 		.word	.L200+1
 2675 0308 19090000 		.word	.L200+1
 2676 030c 19090000 		.word	.L200+1
 2677 0310 19090000 		.word	.L200+1
 2678 0314 19090000 		.word	.L200+1
 2679 0318 19090000 		.word	.L200+1
 2680 031c 19090000 		.word	.L200+1
 2681 0320 19090000 		.word	.L200+1
 2682 0324 19090000 		.word	.L200+1
 2683 0328 19090000 		.word	.L200+1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 60


 2684 032c 19090000 		.word	.L200+1
 2685 0330 19090000 		.word	.L200+1
 2686 0334 D9060000 		.word	.L203+1
 2687 0338 91060000 		.word	.L204+1
 2688 033c D9060000 		.word	.L203+1
 2689 0340 19090000 		.word	.L200+1
 2690 0344 19090000 		.word	.L200+1
 2691 0348 19090000 		.word	.L200+1
 2692 034c 19090000 		.word	.L200+1
 2693 0350 19090000 		.word	.L200+1
 2694 0354 19090000 		.word	.L200+1
 2695 0358 19090000 		.word	.L200+1
 2696 035c 19090000 		.word	.L200+1
 2697 0360 19090000 		.word	.L200+1
 2698 0364 19090000 		.word	.L200+1
 2699 0368 19090000 		.word	.L200+1
 2700 036c 19090000 		.word	.L200+1
 2701 0370 19090000 		.word	.L200+1
 2702 0374 19090000 		.word	.L200+1
 2703 0378 19090000 		.word	.L200+1
 2704 037c 19090000 		.word	.L200+1
 2705 0380 05040000 		.word	.L205+1
 2706 0384 19090000 		.word	.L200+1
 2707 0388 19090000 		.word	.L200+1
 2708 038c 19090000 		.word	.L200+1
 2709 0390 19090000 		.word	.L200+1
 2710 0394 19090000 		.word	.L200+1
 2711 0398 19090000 		.word	.L200+1
 2712 039c 19090000 		.word	.L200+1
 2713 03a0 19090000 		.word	.L200+1
 2714 03a4 19090000 		.word	.L200+1
 2715 03a8 05040000 		.word	.L205+1
 2716 03ac 41070000 		.word	.L206+1
 2717 03b0 05040000 		.word	.L205+1
 2718 03b4 D9060000 		.word	.L203+1
 2719 03b8 91060000 		.word	.L204+1
 2720 03bc D9060000 		.word	.L203+1
 2721 03c0 19090000 		.word	.L200+1
 2722 03c4 05040000 		.word	.L205+1
 2723 03c8 19090000 		.word	.L200+1
 2724 03cc 19090000 		.word	.L200+1
 2725 03d0 19090000 		.word	.L200+1
 2726 03d4 19090000 		.word	.L200+1
 2727 03d8 19090000 		.word	.L200+1
 2728 03dc 05040000 		.word	.L205+1
 2729 03e0 79080000 		.word	.L207+1
 2730 03e4 19090000 		.word	.L200+1
 2731 03e8 19090000 		.word	.L200+1
 2732 03ec B5070000 		.word	.L208+1
 2733 03f0 19090000 		.word	.L200+1
 2734 03f4 05040000 		.word	.L205+1
 2735 03f8 19090000 		.word	.L200+1
 2736 03fc 19090000 		.word	.L200+1
 2737 0400 05040000 		.word	.L205+1
 2738              		.p2align 1
 2739              	.L205:
 2740              	.LBB8:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 61


 659:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'd' :
 660:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'i' :
 661:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'u' :
 662:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'x' :
 663:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'X' :
 664:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'o' :
 665:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'b' : {
 666:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // set the base
 667:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         unsigned int base;
 668:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (*format == 'x' || *format == 'X') {
 2741              		.loc 1 668 0
 2742 0404 3B68     		ldr	r3, [r7]
 2743 0406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2744 0408 782B     		cmp	r3, #120
 2745 040a 03D0     		beq	.L209
 2746              		.loc 1 668 0 is_stmt 0 discriminator 1
 2747 040c 3B68     		ldr	r3, [r7]
 2748 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2749 0410 582B     		cmp	r3, #88
 2750 0412 02D1     		bne	.L210
 2751              	.L209:
 669:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           base = 16U;
 2752              		.loc 1 669 0 is_stmt 1
 2753 0414 1023     		movs	r3, #16
 2754 0416 3B64     		str	r3, [r7, #64]
 2755 0418 13E0     		b	.L211
 2756              	.L210:
 670:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 671:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         else if (*format == 'o') {
 2757              		.loc 1 671 0
 2758 041a 3B68     		ldr	r3, [r7]
 2759 041c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2760 041e 6F2B     		cmp	r3, #111
 2761 0420 02D1     		bne	.L212
 672:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           base =  8U;
 2762              		.loc 1 672 0
 2763 0422 0823     		movs	r3, #8
 2764 0424 3B64     		str	r3, [r7, #64]
 2765 0426 0CE0     		b	.L211
 2766              	.L212:
 673:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 674:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         else if (*format == 'b') {
 2767              		.loc 1 674 0
 2768 0428 3B68     		ldr	r3, [r7]
 2769 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2770 042c 622B     		cmp	r3, #98
 2771 042e 02D1     		bne	.L213
 675:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           base =  2U;
 2772              		.loc 1 675 0
 2773 0430 0223     		movs	r3, #2
 2774 0432 3B64     		str	r3, [r7, #64]
 2775 0434 05E0     		b	.L211
 2776              	.L213:
 676:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 677:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         else {
 678:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           base = 10U;
 2777              		.loc 1 678 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 62


 2778 0436 0A23     		movs	r3, #10
 2779 0438 3B64     		str	r3, [r7, #64]
 679:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags &= ~FLAGS_HASH;   // no hash for dec format
 2780              		.loc 1 679 0
 2781 043a 7B6D     		ldr	r3, [r7, #84]
 2782 043c 23F01003 		bic	r3, r3, #16
 2783 0440 7B65     		str	r3, [r7, #84]
 2784              	.L211:
 680:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 681:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // uppercase
 682:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (*format == 'X') {
 2785              		.loc 1 682 0
 2786 0442 3B68     		ldr	r3, [r7]
 2787 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2788 0446 582B     		cmp	r3, #88
 2789 0448 03D1     		bne	.L214
 683:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags |= FLAGS_UPPERCASE;
 2790              		.loc 1 683 0
 2791 044a 7B6D     		ldr	r3, [r7, #84]
 2792 044c 43F02003 		orr	r3, r3, #32
 2793 0450 7B65     		str	r3, [r7, #84]
 2794              	.L214:
 684:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 685:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 686:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // no plus or space flag for u, x, X, o, b
 687:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if ((*format != 'i') && (*format != 'd')) {
 2795              		.loc 1 687 0
 2796 0452 3B68     		ldr	r3, [r7]
 2797 0454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2798 0456 692B     		cmp	r3, #105
 2799 0458 07D0     		beq	.L215
 2800              		.loc 1 687 0 is_stmt 0 discriminator 1
 2801 045a 3B68     		ldr	r3, [r7]
 2802 045c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2803 045e 642B     		cmp	r3, #100
 2804 0460 03D0     		beq	.L215
 688:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 2805              		.loc 1 688 0 is_stmt 1
 2806 0462 7B6D     		ldr	r3, [r7, #84]
 2807 0464 23F00C03 		bic	r3, r3, #12
 2808 0468 7B65     		str	r3, [r7, #84]
 2809              	.L215:
 689:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 690:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 691:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // ignore '0' flag when precision is given
 692:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (flags & FLAGS_PRECISION) {
 2810              		.loc 1 692 0
 2811 046a 7B6D     		ldr	r3, [r7, #84]
 2812 046c 03F48063 		and	r3, r3, #1024
 2813 0470 002B     		cmp	r3, #0
 2814 0472 03D0     		beq	.L216
 693:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           flags &= ~FLAGS_ZEROPAD;
 2815              		.loc 1 693 0
 2816 0474 7B6D     		ldr	r3, [r7, #84]
 2817 0476 23F00103 		bic	r3, r3, #1
 2818 047a 7B65     		str	r3, [r7, #84]
 2819              	.L216:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 63


 694:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 695:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 696:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // convert the integer
 697:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if ((*format == 'i') || (*format == 'd')) {
 2820              		.loc 1 697 0
 2821 047c 3B68     		ldr	r3, [r7]
 2822 047e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2823 0480 692B     		cmp	r3, #105
 2824 0482 04D0     		beq	.L217
 2825              		.loc 1 697 0 is_stmt 0 discriminator 1
 2826 0484 3B68     		ldr	r3, [r7]
 2827 0486 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2828 0488 642B     		cmp	r3, #100
 2829 048a 40F08D80 		bne	.L218
 2830              	.L217:
 698:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           // signed
 699:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           if (flags & FLAGS_LONG_LONG) {
 2831              		.loc 1 699 0 is_stmt 1
 2832 048e 7B6D     		ldr	r3, [r7, #84]
 2833 0490 03F40073 		and	r3, r3, #512
 2834 0494 002B     		cmp	r3, #0
 2835 0496 2ED0     		beq	.L219
 2836              	.LBB9:
 700:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 701:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             const long long value = va_arg(va, long long);
 2837              		.loc 1 701 0
 2838 0498 BB6E     		ldr	r3, [r7, #104]
 2839 049a 0733     		adds	r3, r3, #7
 2840 049c 23F00703 		bic	r3, r3, #7
 2841 04a0 03F10802 		add	r2, r3, #8
 2842 04a4 BA66     		str	r2, [r7, #104]
 2843 04a6 D3E90034 		ldrd	r3, [r3]
 2844 04aa C7E90834 		strd	r3, [r7, #32]
 702:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value 
 2845              		.loc 1 702 0
 2846 04ae D7E90834 		ldrd	r3, [r7, #32]
 2847 04b2 002B     		cmp	r3, #0
 2848 04b4 74F10002 		sbcs	r2, r4, #0
 2849 04b8 02DA     		bge	.L220
 2850 04ba 5B42     		rsbs	r3, r3, #0
 2851 04bc 64EB4404 		sbc	r4, r4, r4, lsl #1
 2852              	.L220:
 2853 04c0 1946     		mov	r1, r3
 2854 04c2 2246     		mov	r2, r4
 2855 04c4 7B6A     		ldr	r3, [r7, #36]
 2856 04c6 DB0F     		lsrs	r3, r3, #31
 2857 04c8 D8B2     		uxtb	r0, r3
 2858 04ca 3B6C     		ldr	r3, [r7, #64]
 2859 04cc 4FF00004 		mov	r4, #0
 2860 04d0 7D6D     		ldr	r5, [r7, #84]
 2861 04d2 0895     		str	r5, [sp, #32]
 2862 04d4 3D6D     		ldr	r5, [r7, #80]
 2863 04d6 0795     		str	r5, [sp, #28]
 2864 04d8 FD6C     		ldr	r5, [r7, #76]
 2865 04da 0695     		str	r5, [sp, #24]
 2866 04dc CDE90434 		strd	r3, [sp, #16]
 2867 04e0 0290     		str	r0, [sp, #8]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 64


 2868 04e2 CDE90012 		strd	r1, [sp]
 2869 04e6 7B68     		ldr	r3, [r7, #4]
 2870 04e8 7A6C     		ldr	r2, [r7, #68]
 2871 04ea B968     		ldr	r1, [r7, #8]
 2872 04ec F868     		ldr	r0, [r7, #12]
 2873 04ee FFF7FEFF 		bl	_ntoa_long_long
 2874 04f2 7864     		str	r0, [r7, #68]
 2875              	.LBE9:
 699:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2876              		.loc 1 699 0
 2877 04f4 C8E0     		b	.L227
 2878              	.L219:
 703:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 704:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 705:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           else if (flags & FLAGS_LONG) {
 2879              		.loc 1 705 0
 2880 04f6 7B6D     		ldr	r3, [r7, #84]
 2881 04f8 03F48073 		and	r3, r3, #256
 2882 04fc 002B     		cmp	r3, #0
 2883 04fe 1ED0     		beq	.L222
 2884              	.LBB10:
 706:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             const long value = va_arg(va, long);
 2885              		.loc 1 706 0
 2886 0500 BB6E     		ldr	r3, [r7, #104]
 2887 0502 1A1D     		adds	r2, r3, #4
 2888 0504 BA66     		str	r2, [r7, #104]
 2889 0506 1B68     		ldr	r3, [r3]
 2890 0508 FB61     		str	r3, [r7, #28]
 707:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - valu
 2891              		.loc 1 707 0
 2892 050a FB69     		ldr	r3, [r7, #28]
 2893 050c 002B     		cmp	r3, #0
 2894 050e B8BF     		it	lt
 2895 0510 5B42     		rsblt	r3, r3, #0
 2896 0512 1946     		mov	r1, r3
 2897 0514 FB69     		ldr	r3, [r7, #28]
 2898 0516 DB0F     		lsrs	r3, r3, #31
 2899 0518 DBB2     		uxtb	r3, r3
 2900 051a 7A6D     		ldr	r2, [r7, #84]
 2901 051c 0592     		str	r2, [sp, #20]
 2902 051e 3A6D     		ldr	r2, [r7, #80]
 2903 0520 0492     		str	r2, [sp, #16]
 2904 0522 FA6C     		ldr	r2, [r7, #76]
 2905 0524 0392     		str	r2, [sp, #12]
 2906 0526 3A6C     		ldr	r2, [r7, #64]
 2907 0528 0292     		str	r2, [sp, #8]
 2908 052a 0193     		str	r3, [sp, #4]
 2909 052c 0091     		str	r1, [sp]
 2910 052e 7B68     		ldr	r3, [r7, #4]
 2911 0530 7A6C     		ldr	r2, [r7, #68]
 2912 0532 B968     		ldr	r1, [r7, #8]
 2913 0534 F868     		ldr	r0, [r7, #12]
 2914 0536 FFF7FEFF 		bl	_ntoa_long
 2915 053a 7864     		str	r0, [r7, #68]
 2916              	.LBE10:
 699:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2917              		.loc 1 699 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 65


 2918 053c A4E0     		b	.L227
 2919              	.L222:
 2920              	.LBB11:
 708:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 709:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           else {
 710:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) 
 2921              		.loc 1 710 0
 2922 053e 7B6D     		ldr	r3, [r7, #84]
 2923 0540 03F04003 		and	r3, r3, #64
 2924 0544 002B     		cmp	r3, #0
 2925 0546 05D0     		beq	.L223
 2926              		.loc 1 710 0 is_stmt 0 discriminator 1
 2927 0548 BB6E     		ldr	r3, [r7, #104]
 2928 054a 1A1D     		adds	r2, r3, #4
 2929 054c BA66     		str	r2, [r7, #104]
 2930 054e 1B68     		ldr	r3, [r3]
 2931 0550 DBB2     		uxtb	r3, r3
 2932 0552 0EE0     		b	.L224
 2933              	.L223:
 2934              		.loc 1 710 0 discriminator 2
 2935 0554 7B6D     		ldr	r3, [r7, #84]
 2936 0556 03F08003 		and	r3, r3, #128
 2937 055a 002B     		cmp	r3, #0
 2938 055c 05D0     		beq	.L225
 2939              		.loc 1 710 0 discriminator 4
 2940 055e BB6E     		ldr	r3, [r7, #104]
 2941 0560 1A1D     		adds	r2, r3, #4
 2942 0562 BA66     		str	r2, [r7, #104]
 2943 0564 1B68     		ldr	r3, [r3]
 2944 0566 1BB2     		sxth	r3, r3
 2945 0568 03E0     		b	.L224
 2946              	.L225:
 2947              		.loc 1 710 0 discriminator 5
 2948 056a BB6E     		ldr	r3, [r7, #104]
 2949 056c 1A1D     		adds	r2, r3, #4
 2950 056e BA66     		str	r2, [r7, #104]
 2951 0570 1B68     		ldr	r3, [r3]
 2952              	.L224:
 2953              		.loc 1 710 0 discriminator 8
 2954 0572 BB61     		str	r3, [r7, #24]
 711:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value
 2955              		.loc 1 711 0 is_stmt 1 discriminator 8
 2956 0574 BB69     		ldr	r3, [r7, #24]
 2957 0576 002B     		cmp	r3, #0
 2958 0578 B8BF     		it	lt
 2959 057a 5B42     		rsblt	r3, r3, #0
 2960 057c 1946     		mov	r1, r3
 2961 057e BB69     		ldr	r3, [r7, #24]
 2962 0580 DB0F     		lsrs	r3, r3, #31
 2963 0582 DBB2     		uxtb	r3, r3
 2964 0584 7A6D     		ldr	r2, [r7, #84]
 2965 0586 0592     		str	r2, [sp, #20]
 2966 0588 3A6D     		ldr	r2, [r7, #80]
 2967 058a 0492     		str	r2, [sp, #16]
 2968 058c FA6C     		ldr	r2, [r7, #76]
 2969 058e 0392     		str	r2, [sp, #12]
 2970 0590 3A6C     		ldr	r2, [r7, #64]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 66


 2971 0592 0292     		str	r2, [sp, #8]
 2972 0594 0193     		str	r3, [sp, #4]
 2973 0596 0091     		str	r1, [sp]
 2974 0598 7B68     		ldr	r3, [r7, #4]
 2975 059a 7A6C     		ldr	r2, [r7, #68]
 2976 059c B968     		ldr	r1, [r7, #8]
 2977 059e F868     		ldr	r0, [r7, #12]
 2978 05a0 FFF7FEFF 		bl	_ntoa_long
 2979 05a4 7864     		str	r0, [r7, #68]
 2980              	.LBE11:
 699:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 2981              		.loc 1 699 0 discriminator 8
 2982 05a6 6FE0     		b	.L227
 2983              	.L218:
 712:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 713:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 714:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         else {
 715:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           // unsigned
 716:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           if (flags & FLAGS_LONG_LONG) {
 2984              		.loc 1 716 0
 2985 05a8 7B6D     		ldr	r3, [r7, #84]
 2986 05aa 03F40073 		and	r3, r3, #512
 2987 05ae 002B     		cmp	r3, #0
 2988 05b0 20D0     		beq	.L228
 717:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 718:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, 
 2989              		.loc 1 718 0
 2990 05b2 BB6E     		ldr	r3, [r7, #104]
 2991 05b4 0733     		adds	r3, r3, #7
 2992 05b6 23F00703 		bic	r3, r3, #7
 2993 05ba 03F10802 		add	r2, r3, #8
 2994 05be BA66     		str	r2, [r7, #104]
 2995 05c0 D3E90034 		ldrd	r3, [r3]
 2996 05c4 3A6C     		ldr	r2, [r7, #64]
 2997 05c6 1146     		mov	r1, r2
 2998 05c8 4FF00002 		mov	r2, #0
 2999 05cc 786D     		ldr	r0, [r7, #84]
 3000 05ce 0890     		str	r0, [sp, #32]
 3001 05d0 386D     		ldr	r0, [r7, #80]
 3002 05d2 0790     		str	r0, [sp, #28]
 3003 05d4 F86C     		ldr	r0, [r7, #76]
 3004 05d6 0690     		str	r0, [sp, #24]
 3005 05d8 CDE90412 		strd	r1, [sp, #16]
 3006 05dc 0022     		movs	r2, #0
 3007 05de 0292     		str	r2, [sp, #8]
 3008 05e0 CDE90034 		strd	r3, [sp]
 3009 05e4 7B68     		ldr	r3, [r7, #4]
 3010 05e6 7A6C     		ldr	r2, [r7, #68]
 3011 05e8 B968     		ldr	r1, [r7, #8]
 3012 05ea F868     		ldr	r0, [r7, #12]
 3013 05ec FFF7FEFF 		bl	_ntoa_long_long
 3014 05f0 7864     		str	r0, [r7, #68]
 3015 05f2 49E0     		b	.L227
 3016              	.L228:
 719:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 720:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 721:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           else if (flags & FLAGS_LONG) {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 67


 3017              		.loc 1 721 0
 3018 05f4 7B6D     		ldr	r3, [r7, #84]
 3019 05f6 03F48073 		and	r3, r3, #256
 3020 05fa 002B     		cmp	r3, #0
 3021 05fc 16D0     		beq	.L229
 722:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, prec
 3022              		.loc 1 722 0
 3023 05fe BB6E     		ldr	r3, [r7, #104]
 3024 0600 1A1D     		adds	r2, r3, #4
 3025 0602 BA66     		str	r2, [r7, #104]
 3026 0604 1B68     		ldr	r3, [r3]
 3027 0606 7A6D     		ldr	r2, [r7, #84]
 3028 0608 0592     		str	r2, [sp, #20]
 3029 060a 3A6D     		ldr	r2, [r7, #80]
 3030 060c 0492     		str	r2, [sp, #16]
 3031 060e FA6C     		ldr	r2, [r7, #76]
 3032 0610 0392     		str	r2, [sp, #12]
 3033 0612 3A6C     		ldr	r2, [r7, #64]
 3034 0614 0292     		str	r2, [sp, #8]
 3035 0616 0022     		movs	r2, #0
 3036 0618 0192     		str	r2, [sp, #4]
 3037 061a 0093     		str	r3, [sp]
 3038 061c 7B68     		ldr	r3, [r7, #4]
 3039 061e 7A6C     		ldr	r2, [r7, #68]
 3040 0620 B968     		ldr	r1, [r7, #8]
 3041 0622 F868     		ldr	r0, [r7, #12]
 3042 0624 FFF7FEFF 		bl	_ntoa_long
 3043 0628 7864     		str	r0, [r7, #68]
 3044 062a 2DE0     		b	.L227
 3045              	.L229:
 3046              	.LBB12:
 723:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 724:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           else {
 725:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned in
 3047              		.loc 1 725 0
 3048 062c 7B6D     		ldr	r3, [r7, #84]
 3049 062e 03F04003 		and	r3, r3, #64
 3050 0632 002B     		cmp	r3, #0
 3051 0634 05D0     		beq	.L230
 3052              		.loc 1 725 0 is_stmt 0 discriminator 1
 3053 0636 BB6E     		ldr	r3, [r7, #104]
 3054 0638 1A1D     		adds	r2, r3, #4
 3055 063a BA66     		str	r2, [r7, #104]
 3056 063c 1B68     		ldr	r3, [r3]
 3057 063e DBB2     		uxtb	r3, r3
 3058 0640 0EE0     		b	.L231
 3059              	.L230:
 3060              		.loc 1 725 0 discriminator 2
 3061 0642 7B6D     		ldr	r3, [r7, #84]
 3062 0644 03F08003 		and	r3, r3, #128
 3063 0648 002B     		cmp	r3, #0
 3064 064a 05D0     		beq	.L232
 3065              		.loc 1 725 0 discriminator 4
 3066 064c BB6E     		ldr	r3, [r7, #104]
 3067 064e 1A1D     		adds	r2, r3, #4
 3068 0650 BA66     		str	r2, [r7, #104]
 3069 0652 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 68


 3070 0654 9BB2     		uxth	r3, r3
 3071 0656 03E0     		b	.L231
 3072              	.L232:
 3073              		.loc 1 725 0 discriminator 5
 3074 0658 BB6E     		ldr	r3, [r7, #104]
 3075 065a 1A1D     		adds	r2, r3, #4
 3076 065c BA66     		str	r2, [r7, #104]
 3077 065e 1B68     		ldr	r3, [r3]
 3078              	.L231:
 3079              		.loc 1 725 0 discriminator 8
 3080 0660 BB62     		str	r3, [r7, #40]
 726:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags)
 3081              		.loc 1 726 0 is_stmt 1 discriminator 8
 3082 0662 7B6D     		ldr	r3, [r7, #84]
 3083 0664 0593     		str	r3, [sp, #20]
 3084 0666 3B6D     		ldr	r3, [r7, #80]
 3085 0668 0493     		str	r3, [sp, #16]
 3086 066a FB6C     		ldr	r3, [r7, #76]
 3087 066c 0393     		str	r3, [sp, #12]
 3088 066e 3B6C     		ldr	r3, [r7, #64]
 3089 0670 0293     		str	r3, [sp, #8]
 3090 0672 0023     		movs	r3, #0
 3091 0674 0193     		str	r3, [sp, #4]
 3092 0676 BB6A     		ldr	r3, [r7, #40]
 3093 0678 0093     		str	r3, [sp]
 3094 067a 7B68     		ldr	r3, [r7, #4]
 3095 067c 7A6C     		ldr	r2, [r7, #68]
 3096 067e B968     		ldr	r1, [r7, #8]
 3097 0680 F868     		ldr	r0, [r7, #12]
 3098 0682 FFF7FEFF 		bl	_ntoa_long
 3099 0686 7864     		str	r0, [r7, #68]
 3100              	.L227:
 3101              	.LBE12:
 727:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 728:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 729:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3102              		.loc 1 729 0
 3103 0688 3B68     		ldr	r3, [r7]
 3104 068a 0133     		adds	r3, r3, #1
 3105 068c 3B60     		str	r3, [r7]
 730:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3106              		.loc 1 730 0
 3107 068e 50E1     		b	.L173
 3108              	.L204:
 3109              	.LBE8:
 731:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 732:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 733:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'f' :
 734:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'F' :
 735:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (*format == 'F') flags |= FLAGS_UPPERCASE;
 3110              		.loc 1 735 0
 3111 0690 3B68     		ldr	r3, [r7]
 3112 0692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3113 0694 462B     		cmp	r3, #70
 3114 0696 03D1     		bne	.L234
 3115              		.loc 1 735 0 is_stmt 0 discriminator 1
 3116 0698 7B6D     		ldr	r3, [r7, #84]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 69


 3117 069a 43F02003 		orr	r3, r3, #32
 3118 069e 7B65     		str	r3, [r7, #84]
 3119              	.L234:
 736:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3120              		.loc 1 736 0 is_stmt 1
 3121 06a0 BB6E     		ldr	r3, [r7, #104]
 3122 06a2 0733     		adds	r3, r3, #7
 3123 06a4 23F00703 		bic	r3, r3, #7
 3124 06a8 03F10802 		add	r2, r3, #8
 3125 06ac BA66     		str	r2, [r7, #104]
 3126 06ae D3E90034 		ldrd	r3, [r3]
 3127 06b2 7A6D     		ldr	r2, [r7, #84]
 3128 06b4 0492     		str	r2, [sp, #16]
 3129 06b6 3A6D     		ldr	r2, [r7, #80]
 3130 06b8 0392     		str	r2, [sp, #12]
 3131 06ba FA6C     		ldr	r2, [r7, #76]
 3132 06bc 0292     		str	r2, [sp, #8]
 3133 06be CDE90034 		strd	r3, [sp]
 3134 06c2 7B68     		ldr	r3, [r7, #4]
 3135 06c4 7A6C     		ldr	r2, [r7, #68]
 3136 06c6 B968     		ldr	r1, [r7, #8]
 3137 06c8 F868     		ldr	r0, [r7, #12]
 3138 06ca FFF7FEFF 		bl	_ftoa
 3139 06ce 7864     		str	r0, [r7, #68]
 737:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3140              		.loc 1 737 0
 3141 06d0 3B68     		ldr	r3, [r7]
 3142 06d2 0133     		adds	r3, r3, #1
 3143 06d4 3B60     		str	r3, [r7]
 738:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3144              		.loc 1 738 0
 3145 06d6 2CE1     		b	.L173
 3146              	.L203:
 739:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 740:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'e':
 741:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'E':
 742:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'g':
 743:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'G':
 744:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 3147              		.loc 1 744 0
 3148 06d8 3B68     		ldr	r3, [r7]
 3149 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3150 06dc 672B     		cmp	r3, #103
 3151 06de 03D0     		beq	.L235
 3152              		.loc 1 744 0 is_stmt 0 discriminator 2
 3153 06e0 3B68     		ldr	r3, [r7]
 3154 06e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3155 06e4 472B     		cmp	r3, #71
 3156 06e6 03D1     		bne	.L236
 3157              	.L235:
 3158              		.loc 1 744 0 discriminator 3
 3159 06e8 7B6D     		ldr	r3, [r7, #84]
 3160 06ea 43F40063 		orr	r3, r3, #2048
 3161 06ee 7B65     		str	r3, [r7, #84]
 3162              	.L236:
 745:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
 3163              		.loc 1 745 0 is_stmt 1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 70


 3164 06f0 3B68     		ldr	r3, [r7]
 3165 06f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3166 06f4 452B     		cmp	r3, #69
 3167 06f6 03D0     		beq	.L237
 3168              		.loc 1 745 0 is_stmt 0 discriminator 2
 3169 06f8 3B68     		ldr	r3, [r7]
 3170 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3171 06fc 472B     		cmp	r3, #71
 3172 06fe 03D1     		bne	.L238
 3173              	.L237:
 3174              		.loc 1 745 0 discriminator 3
 3175 0700 7B6D     		ldr	r3, [r7, #84]
 3176 0702 43F02003 		orr	r3, r3, #32
 3177 0706 7B65     		str	r3, [r7, #84]
 3178              	.L238:
 746:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 3179              		.loc 1 746 0 is_stmt 1
 3180 0708 BB6E     		ldr	r3, [r7, #104]
 3181 070a 0733     		adds	r3, r3, #7
 3182 070c 23F00703 		bic	r3, r3, #7
 3183 0710 03F10802 		add	r2, r3, #8
 3184 0714 BA66     		str	r2, [r7, #104]
 3185 0716 D3E90034 		ldrd	r3, [r3]
 3186 071a 7A6D     		ldr	r2, [r7, #84]
 3187 071c 0492     		str	r2, [sp, #16]
 3188 071e 3A6D     		ldr	r2, [r7, #80]
 3189 0720 0392     		str	r2, [sp, #12]
 3190 0722 FA6C     		ldr	r2, [r7, #76]
 3191 0724 0292     		str	r2, [sp, #8]
 3192 0726 CDE90034 		strd	r3, [sp]
 3193 072a 7B68     		ldr	r3, [r7, #4]
 3194 072c 7A6C     		ldr	r2, [r7, #68]
 3195 072e B968     		ldr	r1, [r7, #8]
 3196 0730 F868     		ldr	r0, [r7, #12]
 3197 0732 FFF7FEFF 		bl	_etoa
 3198 0736 7864     		str	r0, [r7, #68]
 747:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3199              		.loc 1 747 0
 3200 0738 3B68     		ldr	r3, [r7]
 3201 073a 0133     		adds	r3, r3, #1
 3202 073c 3B60     		str	r3, [r7]
 748:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3203              		.loc 1 748 0
 3204 073e F8E0     		b	.L173
 3205              	.L206:
 3206              	.LBB13:
 749:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 750:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 751:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'c' : {
 752:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         unsigned int l = 1U;
 3207              		.loc 1 752 0
 3208 0740 0123     		movs	r3, #1
 3209 0742 FB63     		str	r3, [r7, #60]
 753:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // pre padding
 754:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (!(flags & FLAGS_LEFT)) {
 3210              		.loc 1 754 0
 3211 0744 7B6D     		ldr	r3, [r7, #84]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 71


 3212 0746 03F00203 		and	r3, r3, #2
 3213 074a 002B     		cmp	r3, #0
 3214 074c 0ED1     		bne	.L239
 755:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3215              		.loc 1 755 0
 3216 074e 07E0     		b	.L240
 3217              	.L241:
 756:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 3218              		.loc 1 756 0
 3219 0750 7A6C     		ldr	r2, [r7, #68]
 3220 0752 531C     		adds	r3, r2, #1
 3221 0754 7B64     		str	r3, [r7, #68]
 3222 0756 FC68     		ldr	r4, [r7, #12]
 3223 0758 7B68     		ldr	r3, [r7, #4]
 3224 075a B968     		ldr	r1, [r7, #8]
 3225 075c 2020     		movs	r0, #32
 3226 075e A047     		blx	r4
 3227              	.L240:
 755:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3228              		.loc 1 755 0
 3229 0760 FB6B     		ldr	r3, [r7, #60]
 3230 0762 5A1C     		adds	r2, r3, #1
 3231 0764 FA63     		str	r2, [r7, #60]
 3232 0766 3A6D     		ldr	r2, [r7, #80]
 3233 0768 9342     		cmp	r3, r2
 3234 076a F1D3     		bcc	.L241
 3235              	.L239:
 757:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 758:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 759:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // char output
 760:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         out((char)va_arg(va, int), buffer, idx++, maxlen);
 3236              		.loc 1 760 0
 3237 076c BB6E     		ldr	r3, [r7, #104]
 3238 076e 1A1D     		adds	r2, r3, #4
 3239 0770 BA66     		str	r2, [r7, #104]
 3240 0772 1B68     		ldr	r3, [r3]
 3241 0774 D8B2     		uxtb	r0, r3
 3242 0776 7A6C     		ldr	r2, [r7, #68]
 3243 0778 531C     		adds	r3, r2, #1
 3244 077a 7B64     		str	r3, [r7, #68]
 3245 077c FC68     		ldr	r4, [r7, #12]
 3246 077e 7B68     		ldr	r3, [r7, #4]
 3247 0780 B968     		ldr	r1, [r7, #8]
 3248 0782 A047     		blx	r4
 761:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // post padding
 762:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (flags & FLAGS_LEFT) {
 3249              		.loc 1 762 0
 3250 0784 7B6D     		ldr	r3, [r7, #84]
 3251 0786 03F00203 		and	r3, r3, #2
 3252 078a 002B     		cmp	r3, #0
 3253 078c 0ED0     		beq	.L242
 763:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3254              		.loc 1 763 0
 3255 078e 07E0     		b	.L243
 3256              	.L244:
 764:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 3257              		.loc 1 764 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 72


 3258 0790 7A6C     		ldr	r2, [r7, #68]
 3259 0792 531C     		adds	r3, r2, #1
 3260 0794 7B64     		str	r3, [r7, #68]
 3261 0796 FC68     		ldr	r4, [r7, #12]
 3262 0798 7B68     		ldr	r3, [r7, #4]
 3263 079a B968     		ldr	r1, [r7, #8]
 3264 079c 2020     		movs	r0, #32
 3265 079e A047     		blx	r4
 3266              	.L243:
 763:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3267              		.loc 1 763 0
 3268 07a0 FB6B     		ldr	r3, [r7, #60]
 3269 07a2 5A1C     		adds	r2, r3, #1
 3270 07a4 FA63     		str	r2, [r7, #60]
 3271 07a6 3A6D     		ldr	r2, [r7, #80]
 3272 07a8 9342     		cmp	r3, r2
 3273 07aa F1D3     		bcc	.L244
 3274              	.L242:
 765:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 766:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 767:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3275              		.loc 1 767 0
 3276 07ac 3B68     		ldr	r3, [r7]
 3277 07ae 0133     		adds	r3, r3, #1
 3278 07b0 3B60     		str	r3, [r7]
 768:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3279              		.loc 1 768 0
 3280 07b2 BEE0     		b	.L173
 3281              	.L208:
 3282              	.LBE13:
 3283              	.LBB14:
 769:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 770:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 771:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 's' : {
 772:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         const char* p = va_arg(va, char*);
 3284              		.loc 1 772 0
 3285 07b4 BB6E     		ldr	r3, [r7, #104]
 3286 07b6 1A1D     		adds	r2, r3, #4
 3287 07b8 BA66     		str	r2, [r7, #104]
 3288 07ba 1B68     		ldr	r3, [r3]
 3289 07bc BB63     		str	r3, [r7, #56]
 773:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 3290              		.loc 1 773 0
 3291 07be FB6C     		ldr	r3, [r7, #76]
 3292 07c0 002B     		cmp	r3, #0
 3293 07c2 01D0     		beq	.L245
 3294              		.loc 1 773 0 is_stmt 0 discriminator 1
 3295 07c4 FB6C     		ldr	r3, [r7, #76]
 3296 07c6 01E0     		b	.L246
 3297              	.L245:
 3298              		.loc 1 773 0 discriminator 2
 3299 07c8 4FF0FF33 		mov	r3, #-1
 3300              	.L246:
 3301              		.loc 1 773 0 discriminator 4
 3302 07cc 1946     		mov	r1, r3
 3303 07ce B86B     		ldr	r0, [r7, #56]
 3304 07d0 FFF7FEFF 		bl	_strnlen_s
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 73


 3305 07d4 7863     		str	r0, [r7, #52]
 774:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // pre padding
 775:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (flags & FLAGS_PRECISION) {
 3306              		.loc 1 775 0 is_stmt 1 discriminator 4
 3307 07d6 7B6D     		ldr	r3, [r7, #84]
 3308 07d8 03F48063 		and	r3, r3, #1024
 3309 07dc 002B     		cmp	r3, #0
 3310 07de 05D0     		beq	.L247
 776:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           l = (l < precision ? l : precision);
 3311              		.loc 1 776 0
 3312 07e0 7A6B     		ldr	r2, [r7, #52]
 3313 07e2 FB6C     		ldr	r3, [r7, #76]
 3314 07e4 9342     		cmp	r3, r2
 3315 07e6 28BF     		it	cs
 3316 07e8 1346     		movcs	r3, r2
 3317 07ea 7B63     		str	r3, [r7, #52]
 3318              	.L247:
 777:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 778:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (!(flags & FLAGS_LEFT)) {
 3319              		.loc 1 778 0
 3320 07ec 7B6D     		ldr	r3, [r7, #84]
 3321 07ee 03F00203 		and	r3, r3, #2
 3322 07f2 002B     		cmp	r3, #0
 3323 07f4 1AD1     		bne	.L251
 779:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3324              		.loc 1 779 0
 3325 07f6 07E0     		b	.L249
 3326              	.L250:
 780:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 3327              		.loc 1 780 0
 3328 07f8 7A6C     		ldr	r2, [r7, #68]
 3329 07fa 531C     		adds	r3, r2, #1
 3330 07fc 7B64     		str	r3, [r7, #68]
 3331 07fe FC68     		ldr	r4, [r7, #12]
 3332 0800 7B68     		ldr	r3, [r7, #4]
 3333 0802 B968     		ldr	r1, [r7, #8]
 3334 0804 2020     		movs	r0, #32
 3335 0806 A047     		blx	r4
 3336              	.L249:
 779:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3337              		.loc 1 779 0
 3338 0808 7B6B     		ldr	r3, [r7, #52]
 3339 080a 5A1C     		adds	r2, r3, #1
 3340 080c 7A63     		str	r2, [r7, #52]
 3341 080e 3A6D     		ldr	r2, [r7, #80]
 3342 0810 9342     		cmp	r3, r2
 3343 0812 F1D3     		bcc	.L250
 781:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 782:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 783:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // string output
 784:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 3344              		.loc 1 784 0
 3345 0814 0AE0     		b	.L251
 3346              	.L253:
 785:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3347              		.loc 1 785 0
 3348 0816 BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 74


 3349 0818 5A1C     		adds	r2, r3, #1
 3350 081a BA63     		str	r2, [r7, #56]
 3351 081c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3352 081e 7A6C     		ldr	r2, [r7, #68]
 3353 0820 531C     		adds	r3, r2, #1
 3354 0822 7B64     		str	r3, [r7, #68]
 3355 0824 FC68     		ldr	r4, [r7, #12]
 3356 0826 7B68     		ldr	r3, [r7, #4]
 3357 0828 B968     		ldr	r1, [r7, #8]
 3358 082a A047     		blx	r4
 3359              	.L251:
 784:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3360              		.loc 1 784 0
 3361 082c BB6B     		ldr	r3, [r7, #56]
 3362 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3363 0830 002B     		cmp	r3, #0
 3364 0832 09D0     		beq	.L252
 784:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3365              		.loc 1 784 0 is_stmt 0 discriminator 1
 3366 0834 7B6D     		ldr	r3, [r7, #84]
 3367 0836 03F48063 		and	r3, r3, #1024
 3368 083a 002B     		cmp	r3, #0
 3369 083c EBD0     		beq	.L253
 784:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           out(*(p++), buffer, idx++, maxlen);
 3370              		.loc 1 784 0 discriminator 2
 3371 083e FB6C     		ldr	r3, [r7, #76]
 3372 0840 5A1E     		subs	r2, r3, #1
 3373 0842 FA64     		str	r2, [r7, #76]
 3374 0844 002B     		cmp	r3, #0
 3375 0846 E6D1     		bne	.L253
 3376              	.L252:
 786:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 787:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         // post padding
 788:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (flags & FLAGS_LEFT) {
 3377              		.loc 1 788 0 is_stmt 1
 3378 0848 7B6D     		ldr	r3, [r7, #84]
 3379 084a 03F00203 		and	r3, r3, #2
 3380 084e 002B     		cmp	r3, #0
 3381 0850 0ED0     		beq	.L254
 789:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3382              		.loc 1 789 0
 3383 0852 07E0     		b	.L255
 3384              	.L256:
 790:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 3385              		.loc 1 790 0
 3386 0854 7A6C     		ldr	r2, [r7, #68]
 3387 0856 531C     		adds	r3, r2, #1
 3388 0858 7B64     		str	r3, [r7, #68]
 3389 085a FC68     		ldr	r4, [r7, #12]
 3390 085c 7B68     		ldr	r3, [r7, #4]
 3391 085e B968     		ldr	r1, [r7, #8]
 3392 0860 2020     		movs	r0, #32
 3393 0862 A047     		blx	r4
 3394              	.L255:
 789:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           while (l++ < width) {
 3395              		.loc 1 789 0
 3396 0864 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 75


 3397 0866 5A1C     		adds	r2, r3, #1
 3398 0868 7A63     		str	r2, [r7, #52]
 3399 086a 3A6D     		ldr	r2, [r7, #80]
 3400 086c 9342     		cmp	r3, r2
 3401 086e F1D3     		bcc	.L256
 3402              	.L254:
 791:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           }
 792:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 793:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3403              		.loc 1 793 0
 3404 0870 3B68     		ldr	r3, [r7]
 3405 0872 0133     		adds	r3, r3, #1
 3406 0874 3B60     		str	r3, [r7]
 794:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3407              		.loc 1 794 0
 3408 0876 5CE0     		b	.L173
 3409              	.L207:
 3410              	.LBE14:
 3411              	.LBB15:
 795:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 796:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 797:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case 'p' : {
 798:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         width = sizeof(void*) * 2U;
 3412              		.loc 1 798 0
 3413 0878 0823     		movs	r3, #8
 3414 087a 3B65     		str	r3, [r7, #80]
 799:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 3415              		.loc 1 799 0
 3416 087c 7B6D     		ldr	r3, [r7, #84]
 3417 087e 43F02103 		orr	r3, r3, #33
 3418 0882 7B65     		str	r3, [r7, #84]
 800:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 801:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         const bool is_ll = sizeof(uintptr_t) == sizeof(long long);
 3419              		.loc 1 801 0
 3420 0884 0023     		movs	r3, #0
 3421 0886 FB75     		strb	r3, [r7, #23]
 802:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         if (is_ll) {
 3422              		.loc 1 802 0
 3423 0888 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3424 088a 002B     		cmp	r3, #0
 3425 088c 1DD0     		beq	.L257
 803:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U,
 3426              		.loc 1 803 0
 3427 088e BB6E     		ldr	r3, [r7, #104]
 3428 0890 1A1D     		adds	r2, r3, #4
 3429 0892 BA66     		str	r2, [r7, #104]
 3430 0894 1B68     		ldr	r3, [r3]
 3431 0896 4FF00004 		mov	r4, #0
 3432 089a 7A6D     		ldr	r2, [r7, #84]
 3433 089c 0892     		str	r2, [sp, #32]
 3434 089e 3A6D     		ldr	r2, [r7, #80]
 3435 08a0 0792     		str	r2, [sp, #28]
 3436 08a2 FA6C     		ldr	r2, [r7, #76]
 3437 08a4 0692     		str	r2, [sp, #24]
 3438 08a6 4FF01001 		mov	r1, #16
 3439 08aa 4FF00002 		mov	r2, #0
 3440 08ae CDE90412 		strd	r1, [sp, #16]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 76


 3441 08b2 0022     		movs	r2, #0
 3442 08b4 0292     		str	r2, [sp, #8]
 3443 08b6 CDE90034 		strd	r3, [sp]
 3444 08ba 7B68     		ldr	r3, [r7, #4]
 3445 08bc 7A6C     		ldr	r2, [r7, #68]
 3446 08be B968     		ldr	r1, [r7, #8]
 3447 08c0 F868     		ldr	r0, [r7, #12]
 3448 08c2 FFF7FEFF 		bl	_ntoa_long_long
 3449 08c6 7864     		str	r0, [r7, #68]
 3450 08c8 16E0     		b	.L258
 3451              	.L257:
 804:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 805:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         else {
 806:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 807:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****           idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)),
 3452              		.loc 1 807 0
 3453 08ca BB6E     		ldr	r3, [r7, #104]
 3454 08cc 1A1D     		adds	r2, r3, #4
 3455 08ce BA66     		str	r2, [r7, #104]
 3456 08d0 1B68     		ldr	r3, [r3]
 3457 08d2 1A46     		mov	r2, r3
 3458 08d4 7B6D     		ldr	r3, [r7, #84]
 3459 08d6 0593     		str	r3, [sp, #20]
 3460 08d8 3B6D     		ldr	r3, [r7, #80]
 3461 08da 0493     		str	r3, [sp, #16]
 3462 08dc FB6C     		ldr	r3, [r7, #76]
 3463 08de 0393     		str	r3, [sp, #12]
 3464 08e0 1023     		movs	r3, #16
 3465 08e2 0293     		str	r3, [sp, #8]
 3466 08e4 0023     		movs	r3, #0
 3467 08e6 0193     		str	r3, [sp, #4]
 3468 08e8 0092     		str	r2, [sp]
 3469 08ea 7B68     		ldr	r3, [r7, #4]
 3470 08ec 7A6C     		ldr	r2, [r7, #68]
 3471 08ee B968     		ldr	r1, [r7, #8]
 3472 08f0 F868     		ldr	r0, [r7, #12]
 3473 08f2 FFF7FEFF 		bl	_ntoa_long
 3474 08f6 7864     		str	r0, [r7, #68]
 3475              	.L258:
 808:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 809:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         }
 810:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** #endif
 811:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3476              		.loc 1 811 0
 3477 08f8 3B68     		ldr	r3, [r7]
 3478 08fa 0133     		adds	r3, r3, #1
 3479 08fc 3B60     		str	r3, [r7]
 812:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3480              		.loc 1 812 0
 3481 08fe 18E0     		b	.L173
 3482              	.L201:
 3483              	.LBE15:
 813:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       }
 814:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 815:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       case '%' :
 816:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         out('%', buffer, idx++, maxlen);
 3484              		.loc 1 816 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 77


 3485 0900 7A6C     		ldr	r2, [r7, #68]
 3486 0902 531C     		adds	r3, r2, #1
 3487 0904 7B64     		str	r3, [r7, #68]
 3488 0906 FC68     		ldr	r4, [r7, #12]
 3489 0908 7B68     		ldr	r3, [r7, #4]
 3490 090a B968     		ldr	r1, [r7, #8]
 3491 090c 2520     		movs	r0, #37
 3492 090e A047     		blx	r4
 817:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3493              		.loc 1 817 0
 3494 0910 3B68     		ldr	r3, [r7]
 3495 0912 0133     		adds	r3, r3, #1
 3496 0914 3B60     		str	r3, [r7]
 818:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3497              		.loc 1 818 0
 3498 0916 0CE0     		b	.L173
 3499              	.L200:
 819:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 820:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****       default :
 821:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         out(*format, buffer, idx++, maxlen);
 3500              		.loc 1 821 0
 3501 0918 3B68     		ldr	r3, [r7]
 3502 091a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3503 091c 7A6C     		ldr	r2, [r7, #68]
 3504 091e 531C     		adds	r3, r2, #1
 3505 0920 7B64     		str	r3, [r7, #68]
 3506 0922 FC68     		ldr	r4, [r7, #12]
 3507 0924 7B68     		ldr	r3, [r7, #4]
 3508 0926 B968     		ldr	r1, [r7, #8]
 3509 0928 A047     		blx	r4
 822:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         format++;
 3510              		.loc 1 822 0
 3511 092a 3B68     		ldr	r3, [r7]
 3512 092c 0133     		adds	r3, r3, #1
 3513 092e 3B60     		str	r3, [r7]
 823:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****         break;
 3514              		.loc 1 823 0
 3515 0930 00BF     		nop
 3516              	.L173:
 562:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   {
 3517              		.loc 1 562 0
 3518 0932 3B68     		ldr	r3, [r7]
 3519 0934 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3520 0936 002B     		cmp	r3, #0
 3521 0938 7FF473AB 		bne	.L259
 824:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****     }
 825:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   }
 826:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 827:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // termination
 828:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 3522              		.loc 1 828 0
 3523 093c 7A6C     		ldr	r2, [r7, #68]
 3524 093e 7B68     		ldr	r3, [r7, #4]
 3525 0940 9A42     		cmp	r2, r3
 3526 0942 02D3     		bcc	.L260
 3527              		.loc 1 828 0 is_stmt 0 discriminator 1
 3528 0944 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 78


 3529 0946 5A1E     		subs	r2, r3, #1
 3530 0948 00E0     		b	.L261
 3531              	.L260:
 3532              		.loc 1 828 0 discriminator 2
 3533 094a 7A6C     		ldr	r2, [r7, #68]
 3534              	.L261:
 3535              		.loc 1 828 0 discriminator 4
 3536 094c FC68     		ldr	r4, [r7, #12]
 3537 094e 7B68     		ldr	r3, [r7, #4]
 3538 0950 B968     		ldr	r1, [r7, #8]
 3539 0952 0020     		movs	r0, #0
 3540 0954 A047     		blx	r4
 829:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 830:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   // return written chars without terminating \0
 831:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return (int)idx;
 3541              		.loc 1 831 0 is_stmt 1 discriminator 4
 3542 0956 7B6C     		ldr	r3, [r7, #68]
 832:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 3543              		.loc 1 832 0 discriminator 4
 3544 0958 1846     		mov	r0, r3
 3545 095a 5837     		adds	r7, r7, #88
 3546              		.cfi_def_cfa_offset 16
 3547 095c BD46     		mov	sp, r7
 3548              		.cfi_def_cfa_register 13
 3549              		@ sp needed
 3550 095e B0BD     		pop	{r4, r5, r7, pc}
 3551              		.cfi_endproc
 3552              	.LFE11:
 3553              		.size	_vsnprintf, .-_vsnprintf
 3554              		.section	.text.lv_snprintf,"ax",%progbits
 3555              		.align	2
 3556              		.global	lv_snprintf
 3557              		.thumb
 3558              		.thumb_func
 3559              		.type	lv_snprintf, %function
 3560              	lv_snprintf:
 3561              	.LFB12:
 833:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 834:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 835:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
 836:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 837:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** int lv_snprintf(char* buffer, size_t count, const char* format, ...)
 838:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 3562              		.loc 1 838 0
 3563              		.cfi_startproc
 3564              		@ args = 4, pretend = 8, frame = 16
 3565              		@ frame_needed = 1, uses_anonymous_args = 1
 3566 0000 0CB4     		push	{r2, r3}
 3567              		.cfi_def_cfa_offset 8
 3568              		.cfi_offset 2, -8
 3569              		.cfi_offset 3, -4
 3570 0002 80B5     		push	{r7, lr}
 3571              		.cfi_def_cfa_offset 16
 3572              		.cfi_offset 7, -16
 3573              		.cfi_offset 14, -12
 3574 0004 86B0     		sub	sp, sp, #24
 3575              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 79


 3576 0006 02AF     		add	r7, sp, #8
 3577              		.cfi_def_cfa 7, 32
 3578 0008 7860     		str	r0, [r7, #4]
 3579 000a 3960     		str	r1, [r7]
 839:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   va_list va;
 840:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   va_start(va, format);
 3580              		.loc 1 840 0
 3581 000c 07F11C03 		add	r3, r7, #28
 3582 0010 BB60     		str	r3, [r7, #8]
 841:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 3583              		.loc 1 841 0
 3584 0012 BB68     		ldr	r3, [r7, #8]
 3585 0014 0093     		str	r3, [sp]
 3586 0016 BB69     		ldr	r3, [r7, #24]
 3587 0018 3A68     		ldr	r2, [r7]
 3588 001a 7968     		ldr	r1, [r7, #4]
 3589 001c 0548     		ldr	r0, .L270
 3590 001e FFF7FEFF 		bl	_vsnprintf
 3591 0022 F860     		str	r0, [r7, #12]
 842:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   va_end(va);
 843:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return ret;
 3592              		.loc 1 843 0
 3593 0024 FB68     		ldr	r3, [r7, #12]
 844:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 3594              		.loc 1 844 0
 3595 0026 1846     		mov	r0, r3
 3596 0028 1037     		adds	r7, r7, #16
 3597              		.cfi_def_cfa_offset 16
 3598 002a BD46     		mov	sp, r7
 3599              		.cfi_def_cfa_register 13
 3600              		@ sp needed
 3601 002c BDE88040 		pop	{r7, lr}
 3602              		.cfi_restore 14
 3603              		.cfi_restore 7
 3604              		.cfi_def_cfa_offset 8
 3605 0030 02B0     		add	sp, sp, #8
 3606              		.cfi_restore 3
 3607              		.cfi_restore 2
 3608              		.cfi_def_cfa_offset 0
 3609 0032 7047     		bx	lr
 3610              	.L271:
 3611              		.align	2
 3612              	.L270:
 3613 0034 00000000 		.word	_out_buffer
 3614              		.cfi_endproc
 3615              	.LFE12:
 3616              		.size	lv_snprintf, .-lv_snprintf
 3617              		.section	.text.lv_vsnprintf,"ax",%progbits
 3618              		.align	2
 3619              		.global	lv_vsnprintf
 3620              		.thumb
 3621              		.thumb_func
 3622              		.type	lv_vsnprintf, %function
 3623              	lv_vsnprintf:
 3624              	.LFB13:
 845:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** 
 846:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** int lv_vsnprintf(char* buffer, size_t count, const char* format, va_list va)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 80


 847:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** {
 3625              		.loc 1 847 0
 3626              		.cfi_startproc
 3627              		@ args = 0, pretend = 0, frame = 16
 3628              		@ frame_needed = 1, uses_anonymous_args = 0
 3629 0000 80B5     		push	{r7, lr}
 3630              		.cfi_def_cfa_offset 8
 3631              		.cfi_offset 7, -8
 3632              		.cfi_offset 14, -4
 3633 0002 86B0     		sub	sp, sp, #24
 3634              		.cfi_def_cfa_offset 32
 3635 0004 02AF     		add	r7, sp, #8
 3636              		.cfi_def_cfa 7, 24
 3637 0006 F860     		str	r0, [r7, #12]
 3638 0008 B960     		str	r1, [r7, #8]
 3639 000a 7A60     		str	r2, [r7, #4]
 3640 000c 3B60     		str	r3, [r7]
 848:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c ****   return _vsnprintf(_out_buffer, buffer, count, format, va);
 3641              		.loc 1 848 0
 3642 000e 3B68     		ldr	r3, [r7]
 3643 0010 0093     		str	r3, [sp]
 3644 0012 7B68     		ldr	r3, [r7, #4]
 3645 0014 BA68     		ldr	r2, [r7, #8]
 3646 0016 F968     		ldr	r1, [r7, #12]
 3647 0018 0348     		ldr	r0, .L274
 3648 001a FFF7FEFF 		bl	_vsnprintf
 3649 001e 0346     		mov	r3, r0
 849:..\..\..\lvgl\version_6.1.2\lvgl\src\lv_misc/lv_printf.c **** }
 3650              		.loc 1 849 0
 3651 0020 1846     		mov	r0, r3
 3652 0022 1037     		adds	r7, r7, #16
 3653              		.cfi_def_cfa_offset 8
 3654 0024 BD46     		mov	sp, r7
 3655              		.cfi_def_cfa_register 13
 3656              		@ sp needed
 3657 0026 80BD     		pop	{r7, pc}
 3658              	.L275:
 3659              		.align	2
 3660              	.L274:
 3661 0028 00000000 		.word	_out_buffer
 3662              		.cfi_endproc
 3663              	.LFE13:
 3664              		.size	lv_vsnprintf, .-lv_vsnprintf
 3665              		.section	.rodata
 3666              		.align	3
 3667              		.type	pow10.4373, %object
 3668              		.size	pow10.4373, 80
 3669              	pow10.4373:
 3670 0018 00000000 		.word	0
 3671 001c 0000F03F 		.word	1072693248
 3672 0020 00000000 		.word	0
 3673 0024 00002440 		.word	1076101120
 3674 0028 00000000 		.word	0
 3675 002c 00005940 		.word	1079574528
 3676 0030 00000000 		.word	0
 3677 0034 00408F40 		.word	1083129856
 3678 0038 00000000 		.word	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 81


 3679 003c 0088C340 		.word	1086556160
 3680 0040 00000000 		.word	0
 3681 0044 006AF840 		.word	1090021888
 3682 0048 00000000 		.word	0
 3683 004c 80842E41 		.word	1093567616
 3684 0050 00000000 		.word	0
 3685 0054 D0126341 		.word	1097011920
 3686 0058 00000000 		.word	0
 3687 005c 84D79741 		.word	1100470148
 3688 0060 00000000 		.word	0
 3689 0064 65CDCD41 		.word	1104006501
 3690              		.text
 3691              	.Letext0:
 3692              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3693              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3694              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3695              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3696              		.file 6 "<built-in>"
 3697              		.section	.debug_info,"",%progbits
 3698              	.Ldebug_info0:
 3699 0000 E00A0000 		.4byte	0xae0
 3700 0004 0400     		.2byte	0x4
 3701 0006 00000000 		.4byte	.Ldebug_abbrev0
 3702 000a 04       		.byte	0x4
 3703 000b 01       		.uleb128 0x1
 3704 000c AB000000 		.4byte	.LASF60
 3705 0010 0C       		.byte	0xc
 3706 0011 5E010000 		.4byte	.LASF61
 3707 0015 E5020000 		.4byte	.LASF62
 3708 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3709 001d 00000000 		.4byte	0
 3710 0021 00000000 		.4byte	.Ldebug_line0
 3711 0025 02       		.uleb128 0x2
 3712 0026 01       		.byte	0x1
 3713 0027 06       		.byte	0x6
 3714 0028 F6010000 		.4byte	.LASF0
 3715 002c 02       		.uleb128 0x2
 3716 002d 01       		.byte	0x1
 3717 002e 08       		.byte	0x8
 3718 002f DD010000 		.4byte	.LASF1
 3719 0033 02       		.uleb128 0x2
 3720 0034 02       		.byte	0x2
 3721 0035 05       		.byte	0x5
 3722 0036 1F000000 		.4byte	.LASF2
 3723 003a 02       		.uleb128 0x2
 3724 003b 02       		.byte	0x2
 3725 003c 07       		.byte	0x7
 3726 003d 33020000 		.4byte	.LASF3
 3727 0041 02       		.uleb128 0x2
 3728 0042 04       		.byte	0x4
 3729 0043 05       		.byte	0x5
 3730 0044 61020000 		.4byte	.LASF4
 3731 0048 02       		.uleb128 0x2
 3732 0049 04       		.byte	0x4
 3733 004a 07       		.byte	0x7
 3734 004b B4020000 		.4byte	.LASF5
 3735 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 82


 3736 0050 08       		.byte	0x8
 3737 0051 05       		.byte	0x5
 3738 0052 93000000 		.4byte	.LASF6
 3739 0056 03       		.uleb128 0x3
 3740 0057 70020000 		.4byte	.LASF8
 3741 005b 02       		.byte	0x2
 3742 005c 5B       		.byte	0x5b
 3743 005d 61000000 		.4byte	0x61
 3744 0061 02       		.uleb128 0x2
 3745 0062 08       		.byte	0x8
 3746 0063 07       		.byte	0x7
 3747 0064 08020000 		.4byte	.LASF7
 3748 0068 04       		.uleb128 0x4
 3749 0069 04       		.byte	0x4
 3750 006a 05       		.byte	0x5
 3751 006b 696E7400 		.ascii	"int\000"
 3752 006f 03       		.uleb128 0x3
 3753 0070 C6020000 		.4byte	.LASF9
 3754 0074 02       		.byte	0x2
 3755 0075 CA       		.byte	0xca
 3756 0076 7A000000 		.4byte	0x7a
 3757 007a 02       		.uleb128 0x2
 3758 007b 04       		.byte	0x4
 3759 007c 07       		.byte	0x7
 3760 007d 1F020000 		.4byte	.LASF10
 3761 0081 03       		.uleb128 0x3
 3762 0082 16000000 		.4byte	.LASF11
 3763 0086 03       		.byte	0x3
 3764 0087 3C       		.byte	0x3c
 3765 0088 56000000 		.4byte	0x56
 3766 008c 03       		.uleb128 0x3
 3767 008d 68000000 		.4byte	.LASF12
 3768 0091 03       		.byte	0x3
 3769 0092 48       		.byte	0x48
 3770 0093 6F000000 		.4byte	0x6f
 3771 0097 05       		.uleb128 0x5
 3772 0098 04       		.byte	0x4
 3773 0099 03       		.uleb128 0x3
 3774 009a 9C030000 		.4byte	.LASF13
 3775 009e 04       		.byte	0x4
 3776 009f 28       		.byte	0x28
 3777 00a0 A4000000 		.4byte	0xa4
 3778 00a4 06       		.uleb128 0x6
 3779 00a5 A1000000 		.4byte	.LASF63
 3780 00a9 04       		.byte	0x4
 3781 00aa 06       		.byte	0x6
 3782 00ab 00       		.byte	0
 3783 00ac BB000000 		.4byte	0xbb
 3784 00b0 07       		.uleb128 0x7
 3785 00b1 57020000 		.4byte	.LASF50
 3786 00b5 97000000 		.4byte	0x97
 3787 00b9 00       		.byte	0
 3788 00ba 00       		.byte	0
 3789 00bb 03       		.uleb128 0x3
 3790 00bc 4E000000 		.4byte	.LASF14
 3791 00c0 04       		.byte	0x4
 3792 00c1 62       		.byte	0x62
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 83


 3793 00c2 99000000 		.4byte	0x99
 3794 00c6 03       		.uleb128 0x3
 3795 00c7 29000000 		.4byte	.LASF15
 3796 00cb 05       		.byte	0x5
 3797 00cc D8       		.byte	0xd8
 3798 00cd 7A000000 		.4byte	0x7a
 3799 00d1 02       		.uleb128 0x2
 3800 00d2 08       		.byte	0x8
 3801 00d3 04       		.byte	0x4
 3802 00d4 D1010000 		.4byte	.LASF16
 3803 00d8 03       		.uleb128 0x3
 3804 00d9 C4010000 		.4byte	.LASF17
 3805 00dd 01       		.byte	0x1
 3806 00de 74       		.byte	0x74
 3807 00df E3000000 		.4byte	0xe3
 3808 00e3 08       		.uleb128 0x8
 3809 00e4 04       		.byte	0x4
 3810 00e5 E9000000 		.4byte	0xe9
 3811 00e9 09       		.uleb128 0x9
 3812 00ea 03010000 		.4byte	0x103
 3813 00ee 0A       		.uleb128 0xa
 3814 00ef 03010000 		.4byte	0x103
 3815 00f3 0A       		.uleb128 0xa
 3816 00f4 97000000 		.4byte	0x97
 3817 00f8 0A       		.uleb128 0xa
 3818 00f9 C6000000 		.4byte	0xc6
 3819 00fd 0A       		.uleb128 0xa
 3820 00fe C6000000 		.4byte	0xc6
 3821 0102 00       		.byte	0
 3822 0103 02       		.uleb128 0x2
 3823 0104 01       		.byte	0x1
 3824 0105 08       		.byte	0x8
 3825 0106 5C020000 		.4byte	.LASF18
 3826 010a 0B       		.uleb128 0xb
 3827 010b 0A000000 		.4byte	.LASF22
 3828 010f 01       		.byte	0x1
 3829 0110 7F       		.byte	0x7f
 3830 0111 00000000 		.4byte	.LFB0
 3831 0115 2E000000 		.4byte	.LFE0-.LFB0
 3832 0119 01       		.uleb128 0x1
 3833 011a 9C       		.byte	0x9c
 3834 011b 58010000 		.4byte	0x158
 3835 011f 0C       		.uleb128 0xc
 3836 0120 D2020000 		.4byte	.LASF19
 3837 0124 01       		.byte	0x1
 3838 0125 7F       		.byte	0x7f
 3839 0126 03010000 		.4byte	0x103
 3840 012a 02       		.uleb128 0x2
 3841 012b 91       		.byte	0x91
 3842 012c 77       		.sleb128 -9
 3843 012d 0C       		.uleb128 0xc
 3844 012e 85020000 		.4byte	.LASF20
 3845 0132 01       		.byte	0x1
 3846 0133 7F       		.byte	0x7f
 3847 0134 97000000 		.4byte	0x97
 3848 0138 02       		.uleb128 0x2
 3849 0139 91       		.byte	0x91
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 84


 3850 013a 70       		.sleb128 -16
 3851 013b 0D       		.uleb128 0xd
 3852 013c 69647800 		.ascii	"idx\000"
 3853 0140 01       		.byte	0x1
 3854 0141 7F       		.byte	0x7f
 3855 0142 C6000000 		.4byte	0xc6
 3856 0146 02       		.uleb128 0x2
 3857 0147 91       		.byte	0x91
 3858 0148 6C       		.sleb128 -20
 3859 0149 0C       		.uleb128 0xc
 3860 014a 2C020000 		.4byte	.LASF21
 3861 014e 01       		.byte	0x1
 3862 014f 7F       		.byte	0x7f
 3863 0150 C6000000 		.4byte	0xc6
 3864 0154 02       		.uleb128 0x2
 3865 0155 91       		.byte	0x91
 3866 0156 68       		.sleb128 -24
 3867 0157 00       		.byte	0
 3868 0158 0B       		.uleb128 0xb
 3869 0159 B3010000 		.4byte	.LASF23
 3870 015d 01       		.byte	0x1
 3871 015e 88       		.byte	0x88
 3872 015f 00000000 		.4byte	.LFB1
 3873 0163 1C000000 		.4byte	.LFE1-.LFB1
 3874 0167 01       		.uleb128 0x1
 3875 0168 9C       		.byte	0x9c
 3876 0169 A6010000 		.4byte	0x1a6
 3877 016d 0C       		.uleb128 0xc
 3878 016e D2020000 		.4byte	.LASF19
 3879 0172 01       		.byte	0x1
 3880 0173 88       		.byte	0x88
 3881 0174 03010000 		.4byte	0x103
 3882 0178 02       		.uleb128 0x2
 3883 0179 91       		.byte	0x91
 3884 017a 77       		.sleb128 -9
 3885 017b 0C       		.uleb128 0xc
 3886 017c 85020000 		.4byte	.LASF20
 3887 0180 01       		.byte	0x1
 3888 0181 88       		.byte	0x88
 3889 0182 97000000 		.4byte	0x97
 3890 0186 02       		.uleb128 0x2
 3891 0187 91       		.byte	0x91
 3892 0188 70       		.sleb128 -16
 3893 0189 0D       		.uleb128 0xd
 3894 018a 69647800 		.ascii	"idx\000"
 3895 018e 01       		.byte	0x1
 3896 018f 88       		.byte	0x88
 3897 0190 C6000000 		.4byte	0xc6
 3898 0194 02       		.uleb128 0x2
 3899 0195 91       		.byte	0x91
 3900 0196 6C       		.sleb128 -20
 3901 0197 0C       		.uleb128 0xc
 3902 0198 2C020000 		.4byte	.LASF21
 3903 019c 01       		.byte	0x1
 3904 019d 88       		.byte	0x88
 3905 019e C6000000 		.4byte	0xc6
 3906 01a2 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 85


 3907 01a3 91       		.byte	0x91
 3908 01a4 68       		.sleb128 -24
 3909 01a5 00       		.byte	0
 3910 01a6 0E       		.uleb128 0xe
 3911 01a7 46020000 		.4byte	.LASF25
 3912 01ab 01       		.byte	0x1
 3913 01ac 91       		.byte	0x91
 3914 01ad 7A000000 		.4byte	0x7a
 3915 01b1 00000000 		.4byte	.LFB2
 3916 01b5 3A000000 		.4byte	.LFE2-.LFB2
 3917 01b9 01       		.uleb128 0x1
 3918 01ba 9C       		.byte	0x9c
 3919 01bb E8010000 		.4byte	0x1e8
 3920 01bf 0D       		.uleb128 0xd
 3921 01c0 73747200 		.ascii	"str\000"
 3922 01c4 01       		.byte	0x1
 3923 01c5 91       		.byte	0x91
 3924 01c6 E8010000 		.4byte	0x1e8
 3925 01ca 02       		.uleb128 0x2
 3926 01cb 91       		.byte	0x91
 3927 01cc 6C       		.sleb128 -20
 3928 01cd 0C       		.uleb128 0xc
 3929 01ce 88030000 		.4byte	.LASF24
 3930 01d2 01       		.byte	0x1
 3931 01d3 91       		.byte	0x91
 3932 01d4 C6000000 		.4byte	0xc6
 3933 01d8 02       		.uleb128 0x2
 3934 01d9 91       		.byte	0x91
 3935 01da 68       		.sleb128 -24
 3936 01db 0F       		.uleb128 0xf
 3937 01dc 7300     		.ascii	"s\000"
 3938 01de 01       		.byte	0x1
 3939 01df 93       		.byte	0x93
 3940 01e0 E8010000 		.4byte	0x1e8
 3941 01e4 02       		.uleb128 0x2
 3942 01e5 91       		.byte	0x91
 3943 01e6 74       		.sleb128 -12
 3944 01e7 00       		.byte	0
 3945 01e8 08       		.uleb128 0x8
 3946 01e9 04       		.byte	0x4
 3947 01ea EE010000 		.4byte	0x1ee
 3948 01ee 10       		.uleb128 0x10
 3949 01ef 03010000 		.4byte	0x103
 3950 01f3 0E       		.uleb128 0xe
 3951 01f4 7B020000 		.4byte	.LASF26
 3952 01f8 01       		.byte	0x1
 3953 01f9 9B       		.byte	0x9b
 3954 01fa 1A020000 		.4byte	0x21a
 3955 01fe 00000000 		.4byte	.LFB3
 3956 0202 2E000000 		.4byte	.LFE3-.LFB3
 3957 0206 01       		.uleb128 0x1
 3958 0207 9C       		.byte	0x9c
 3959 0208 1A020000 		.4byte	0x21a
 3960 020c 0D       		.uleb128 0xd
 3961 020d 636800   		.ascii	"ch\000"
 3962 0210 01       		.byte	0x1
 3963 0211 9B       		.byte	0x9b
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 86


 3964 0212 03010000 		.4byte	0x103
 3965 0216 02       		.uleb128 0x2
 3966 0217 91       		.byte	0x91
 3967 0218 77       		.sleb128 -9
 3968 0219 00       		.byte	0
 3969 021a 02       		.uleb128 0x2
 3970 021b 01       		.byte	0x1
 3971 021c 02       		.byte	0x2
 3972 021d 6A020000 		.4byte	.LASF27
 3973 0221 11       		.uleb128 0x11
 3974 0222 42000000 		.4byte	.LASF28
 3975 0226 01       		.byte	0x1
 3976 0227 A2       		.byte	0xa2
 3977 0228 7A000000 		.4byte	0x7a
 3978 022c 00000000 		.4byte	.LFB4
 3979 0230 48000000 		.4byte	.LFE4-.LFB4
 3980 0234 01       		.uleb128 0x1
 3981 0235 9C       		.byte	0x9c
 3982 0236 55020000 		.4byte	0x255
 3983 023a 0D       		.uleb128 0xd
 3984 023b 73747200 		.ascii	"str\000"
 3985 023f 01       		.byte	0x1
 3986 0240 A2       		.byte	0xa2
 3987 0241 55020000 		.4byte	0x255
 3988 0245 02       		.uleb128 0x2
 3989 0246 91       		.byte	0x91
 3990 0247 6C       		.sleb128 -20
 3991 0248 0F       		.uleb128 0xf
 3992 0249 6900     		.ascii	"i\000"
 3993 024b 01       		.byte	0x1
 3994 024c A4       		.byte	0xa4
 3995 024d 7A000000 		.4byte	0x7a
 3996 0251 02       		.uleb128 0x2
 3997 0252 91       		.byte	0x91
 3998 0253 74       		.sleb128 -12
 3999 0254 00       		.byte	0
 4000 0255 08       		.uleb128 0x8
 4001 0256 04       		.byte	0x4
 4002 0257 E8010000 		.4byte	0x1e8
 4003 025b 11       		.uleb128 0x11
 4004 025c DC020000 		.4byte	.LASF29
 4005 0260 01       		.byte	0x1
 4006 0261 AD       		.byte	0xad
 4007 0262 C6000000 		.4byte	0xc6
 4008 0266 00000000 		.4byte	.LFB5
 4009 026a A0000000 		.4byte	.LFE5-.LFB5
 4010 026e 01       		.uleb128 0x1
 4011 026f 9C       		.byte	0x9c
 4012 0270 09030000 		.4byte	0x309
 4013 0274 0D       		.uleb128 0xd
 4014 0275 6F757400 		.ascii	"out\000"
 4015 0279 01       		.byte	0x1
 4016 027a AD       		.byte	0xad
 4017 027b D8000000 		.4byte	0xd8
 4018 027f 02       		.uleb128 0x2
 4019 0280 91       		.byte	0x91
 4020 0281 64       		.sleb128 -28
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 87


 4021 0282 0C       		.uleb128 0xc
 4022 0283 85020000 		.4byte	.LASF20
 4023 0287 01       		.byte	0x1
 4024 0288 AD       		.byte	0xad
 4025 0289 09030000 		.4byte	0x309
 4026 028d 02       		.uleb128 0x2
 4027 028e 91       		.byte	0x91
 4028 028f 60       		.sleb128 -32
 4029 0290 0D       		.uleb128 0xd
 4030 0291 69647800 		.ascii	"idx\000"
 4031 0295 01       		.byte	0x1
 4032 0296 AD       		.byte	0xad
 4033 0297 C6000000 		.4byte	0xc6
 4034 029b 02       		.uleb128 0x2
 4035 029c 91       		.byte	0x91
 4036 029d 5C       		.sleb128 -36
 4037 029e 0C       		.uleb128 0xc
 4038 029f 2C020000 		.4byte	.LASF21
 4039 02a3 01       		.byte	0x1
 4040 02a4 AD       		.byte	0xad
 4041 02a5 C6000000 		.4byte	0xc6
 4042 02a9 02       		.uleb128 0x2
 4043 02aa 91       		.byte	0x91
 4044 02ab 58       		.sleb128 -40
 4045 02ac 0D       		.uleb128 0xd
 4046 02ad 62756600 		.ascii	"buf\000"
 4047 02b1 01       		.byte	0x1
 4048 02b2 AD       		.byte	0xad
 4049 02b3 E8010000 		.4byte	0x1e8
 4050 02b7 02       		.uleb128 0x2
 4051 02b8 91       		.byte	0x91
 4052 02b9 00       		.sleb128 0
 4053 02ba 0D       		.uleb128 0xd
 4054 02bb 6C656E00 		.ascii	"len\000"
 4055 02bf 01       		.byte	0x1
 4056 02c0 AD       		.byte	0xad
 4057 02c1 C6000000 		.4byte	0xc6
 4058 02c5 02       		.uleb128 0x2
 4059 02c6 91       		.byte	0x91
 4060 02c7 04       		.sleb128 4
 4061 02c8 0C       		.uleb128 0xc
 4062 02c9 88000000 		.4byte	.LASF30
 4063 02cd 01       		.byte	0x1
 4064 02ce AD       		.byte	0xad
 4065 02cf 7A000000 		.4byte	0x7a
 4066 02d3 02       		.uleb128 0x2
 4067 02d4 91       		.byte	0x91
 4068 02d5 08       		.sleb128 8
 4069 02d6 0C       		.uleb128 0xc
 4070 02d7 02020000 		.4byte	.LASF31
 4071 02db 01       		.byte	0x1
 4072 02dc AD       		.byte	0xad
 4073 02dd 7A000000 		.4byte	0x7a
 4074 02e1 02       		.uleb128 0x2
 4075 02e2 91       		.byte	0x91
 4076 02e3 0C       		.sleb128 12
 4077 02e4 12       		.uleb128 0x12
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 88


 4078 02e5 72000000 		.4byte	.LASF32
 4079 02e9 01       		.byte	0x1
 4080 02ea AF       		.byte	0xaf
 4081 02eb 0F030000 		.4byte	0x30f
 4082 02ef 02       		.uleb128 0x2
 4083 02f0 91       		.byte	0x91
 4084 02f1 68       		.sleb128 -24
 4085 02f2 13       		.uleb128 0x13
 4086 02f3 26000000 		.4byte	.LBB2
 4087 02f7 24000000 		.4byte	.LBE2-.LBB2
 4088 02fb 0F       		.uleb128 0xf
 4089 02fc 6900     		.ascii	"i\000"
 4090 02fe 01       		.byte	0x1
 4091 02ff B3       		.byte	0xb3
 4092 0300 C6000000 		.4byte	0xc6
 4093 0304 02       		.uleb128 0x2
 4094 0305 91       		.byte	0x91
 4095 0306 6C       		.sleb128 -20
 4096 0307 00       		.byte	0
 4097 0308 00       		.byte	0
 4098 0309 08       		.uleb128 0x8
 4099 030a 04       		.byte	0x4
 4100 030b 03010000 		.4byte	0x103
 4101 030f 10       		.uleb128 0x10
 4102 0310 C6000000 		.4byte	0xc6
 4103 0314 11       		.uleb128 0x11
 4104 0315 97010000 		.4byte	.LASF33
 4105 0319 01       		.byte	0x1
 4106 031a CA       		.byte	0xca
 4107 031b C6000000 		.4byte	0xc6
 4108 031f 00000000 		.4byte	.LFB6
 4109 0323 B8010000 		.4byte	.LFE6-.LFB6
 4110 0327 01       		.uleb128 0x1
 4111 0328 9C       		.byte	0x9c
 4112 0329 C8030000 		.4byte	0x3c8
 4113 032d 0D       		.uleb128 0xd
 4114 032e 6F757400 		.ascii	"out\000"
 4115 0332 01       		.byte	0x1
 4116 0333 CA       		.byte	0xca
 4117 0334 D8000000 		.4byte	0xd8
 4118 0338 02       		.uleb128 0x2
 4119 0339 91       		.byte	0x91
 4120 033a 74       		.sleb128 -12
 4121 033b 0C       		.uleb128 0xc
 4122 033c 85020000 		.4byte	.LASF20
 4123 0340 01       		.byte	0x1
 4124 0341 CA       		.byte	0xca
 4125 0342 09030000 		.4byte	0x309
 4126 0346 02       		.uleb128 0x2
 4127 0347 91       		.byte	0x91
 4128 0348 70       		.sleb128 -16
 4129 0349 0D       		.uleb128 0xd
 4130 034a 69647800 		.ascii	"idx\000"
 4131 034e 01       		.byte	0x1
 4132 034f CA       		.byte	0xca
 4133 0350 C6000000 		.4byte	0xc6
 4134 0354 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 89


 4135 0355 91       		.byte	0x91
 4136 0356 6C       		.sleb128 -20
 4137 0357 0C       		.uleb128 0xc
 4138 0358 2C020000 		.4byte	.LASF21
 4139 035c 01       		.byte	0x1
 4140 035d CA       		.byte	0xca
 4141 035e C6000000 		.4byte	0xc6
 4142 0362 02       		.uleb128 0x2
 4143 0363 91       		.byte	0x91
 4144 0364 68       		.sleb128 -24
 4145 0365 0D       		.uleb128 0xd
 4146 0366 62756600 		.ascii	"buf\000"
 4147 036a 01       		.byte	0x1
 4148 036b CA       		.byte	0xca
 4149 036c 09030000 		.4byte	0x309
 4150 0370 02       		.uleb128 0x2
 4151 0371 91       		.byte	0x91
 4152 0372 00       		.sleb128 0
 4153 0373 0D       		.uleb128 0xd
 4154 0374 6C656E00 		.ascii	"len\000"
 4155 0378 01       		.byte	0x1
 4156 0379 CA       		.byte	0xca
 4157 037a C6000000 		.4byte	0xc6
 4158 037e 02       		.uleb128 0x2
 4159 037f 91       		.byte	0x91
 4160 0380 04       		.sleb128 4
 4161 0381 0C       		.uleb128 0xc
 4162 0382 AA010000 		.4byte	.LASF34
 4163 0386 01       		.byte	0x1
 4164 0387 CA       		.byte	0xca
 4165 0388 1A020000 		.4byte	0x21a
 4166 038c 02       		.uleb128 0x2
 4167 038d 91       		.byte	0x91
 4168 038e 08       		.sleb128 8
 4169 038f 0C       		.uleb128 0xc
 4170 0390 BE030000 		.4byte	.LASF35
 4171 0394 01       		.byte	0x1
 4172 0395 CA       		.byte	0xca
 4173 0396 7A000000 		.4byte	0x7a
 4174 039a 02       		.uleb128 0x2
 4175 039b 91       		.byte	0x91
 4176 039c 0C       		.sleb128 12
 4177 039d 0C       		.uleb128 0xc
 4178 039e 90030000 		.4byte	.LASF36
 4179 03a2 01       		.byte	0x1
 4180 03a3 CA       		.byte	0xca
 4181 03a4 7A000000 		.4byte	0x7a
 4182 03a8 02       		.uleb128 0x2
 4183 03a9 91       		.byte	0x91
 4184 03aa 10       		.sleb128 16
 4185 03ab 0C       		.uleb128 0xc
 4186 03ac 88000000 		.4byte	.LASF30
 4187 03b0 01       		.byte	0x1
 4188 03b1 CA       		.byte	0xca
 4189 03b2 7A000000 		.4byte	0x7a
 4190 03b6 02       		.uleb128 0x2
 4191 03b7 91       		.byte	0x91
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 90


 4192 03b8 14       		.sleb128 20
 4193 03b9 0C       		.uleb128 0xc
 4194 03ba 02020000 		.4byte	.LASF31
 4195 03be 01       		.byte	0x1
 4196 03bf CA       		.byte	0xca
 4197 03c0 7A000000 		.4byte	0x7a
 4198 03c4 02       		.uleb128 0x2
 4199 03c5 91       		.byte	0x91
 4200 03c6 18       		.sleb128 24
 4201 03c7 00       		.byte	0
 4202 03c8 14       		.uleb128 0x14
 4203 03c9 EB010000 		.4byte	.LASF37
 4204 03cd 01       		.byte	0x1
 4205 03ce 0001     		.2byte	0x100
 4206 03d0 C6000000 		.4byte	0xc6
 4207 03d4 00000000 		.4byte	.LFB7
 4208 03d8 CE000000 		.4byte	.LFE7-.LFB7
 4209 03dc 01       		.uleb128 0x1
 4210 03dd 9C       		.byte	0x9c
 4211 03de B0040000 		.4byte	0x4b0
 4212 03e2 15       		.uleb128 0x15
 4213 03e3 6F757400 		.ascii	"out\000"
 4214 03e7 01       		.byte	0x1
 4215 03e8 0001     		.2byte	0x100
 4216 03ea D8000000 		.4byte	0xd8
 4217 03ee 02       		.uleb128 0x2
 4218 03ef 91       		.byte	0x91
 4219 03f0 4C       		.sleb128 -52
 4220 03f1 16       		.uleb128 0x16
 4221 03f2 85020000 		.4byte	.LASF20
 4222 03f6 01       		.byte	0x1
 4223 03f7 0001     		.2byte	0x100
 4224 03f9 09030000 		.4byte	0x309
 4225 03fd 02       		.uleb128 0x2
 4226 03fe 91       		.byte	0x91
 4227 03ff 48       		.sleb128 -56
 4228 0400 15       		.uleb128 0x15
 4229 0401 69647800 		.ascii	"idx\000"
 4230 0405 01       		.byte	0x1
 4231 0406 0001     		.2byte	0x100
 4232 0408 C6000000 		.4byte	0xc6
 4233 040c 02       		.uleb128 0x2
 4234 040d 91       		.byte	0x91
 4235 040e 44       		.sleb128 -60
 4236 040f 16       		.uleb128 0x16
 4237 0410 2C020000 		.4byte	.LASF21
 4238 0414 01       		.byte	0x1
 4239 0415 0001     		.2byte	0x100
 4240 0417 C6000000 		.4byte	0xc6
 4241 041b 02       		.uleb128 0x2
 4242 041c 91       		.byte	0x91
 4243 041d 40       		.sleb128 -64
 4244 041e 16       		.uleb128 0x16
 4245 041f 62000000 		.4byte	.LASF38
 4246 0423 01       		.byte	0x1
 4247 0424 0001     		.2byte	0x100
 4248 0426 48000000 		.4byte	0x48
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 91


 4249 042a 02       		.uleb128 0x2
 4250 042b 91       		.byte	0x91
 4251 042c 00       		.sleb128 0
 4252 042d 16       		.uleb128 0x16
 4253 042e AA010000 		.4byte	.LASF34
 4254 0432 01       		.byte	0x1
 4255 0433 0001     		.2byte	0x100
 4256 0435 1A020000 		.4byte	0x21a
 4257 0439 02       		.uleb128 0x2
 4258 043a 91       		.byte	0x91
 4259 043b 04       		.sleb128 4
 4260 043c 16       		.uleb128 0x16
 4261 043d BE030000 		.4byte	.LASF35
 4262 0441 01       		.byte	0x1
 4263 0442 0001     		.2byte	0x100
 4264 0444 48000000 		.4byte	0x48
 4265 0448 02       		.uleb128 0x2
 4266 0449 91       		.byte	0x91
 4267 044a 08       		.sleb128 8
 4268 044b 16       		.uleb128 0x16
 4269 044c 90030000 		.4byte	.LASF36
 4270 0450 01       		.byte	0x1
 4271 0451 0001     		.2byte	0x100
 4272 0453 7A000000 		.4byte	0x7a
 4273 0457 02       		.uleb128 0x2
 4274 0458 91       		.byte	0x91
 4275 0459 0C       		.sleb128 12
 4276 045a 16       		.uleb128 0x16
 4277 045b 88000000 		.4byte	.LASF30
 4278 045f 01       		.byte	0x1
 4279 0460 0001     		.2byte	0x100
 4280 0462 7A000000 		.4byte	0x7a
 4281 0466 02       		.uleb128 0x2
 4282 0467 91       		.byte	0x91
 4283 0468 10       		.sleb128 16
 4284 0469 16       		.uleb128 0x16
 4285 046a 02020000 		.4byte	.LASF31
 4286 046e 01       		.byte	0x1
 4287 046f 0001     		.2byte	0x100
 4288 0471 7A000000 		.4byte	0x7a
 4289 0475 02       		.uleb128 0x2
 4290 0476 91       		.byte	0x91
 4291 0477 14       		.sleb128 20
 4292 0478 17       		.uleb128 0x17
 4293 0479 62756600 		.ascii	"buf\000"
 4294 047d 01       		.byte	0x1
 4295 047e 0201     		.2byte	0x102
 4296 0480 B0040000 		.4byte	0x4b0
 4297 0484 02       		.uleb128 0x2
 4298 0485 91       		.byte	0x91
 4299 0486 50       		.sleb128 -48
 4300 0487 17       		.uleb128 0x17
 4301 0488 6C656E00 		.ascii	"len\000"
 4302 048c 01       		.byte	0x1
 4303 048d 0301     		.2byte	0x103
 4304 048f C6000000 		.4byte	0xc6
 4305 0493 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 92


 4306 0494 91       		.byte	0x91
 4307 0495 74       		.sleb128 -12
 4308 0496 13       		.uleb128 0x13
 4309 0497 30000000 		.4byte	.LBB3
 4310 049b 5C000000 		.4byte	.LBE3-.LBB3
 4311 049f 18       		.uleb128 0x18
 4312 04a0 AB030000 		.4byte	.LASF39
 4313 04a4 01       		.byte	0x1
 4314 04a5 0D01     		.2byte	0x10d
 4315 04a7 EE010000 		.4byte	0x1ee
 4316 04ab 02       		.uleb128 0x2
 4317 04ac 91       		.byte	0x91
 4318 04ad 73       		.sleb128 -13
 4319 04ae 00       		.byte	0
 4320 04af 00       		.byte	0
 4321 04b0 19       		.uleb128 0x19
 4322 04b1 03010000 		.4byte	0x103
 4323 04b5 C0040000 		.4byte	0x4c0
 4324 04b9 1A       		.uleb128 0x1a
 4325 04ba C0040000 		.4byte	0x4c0
 4326 04be 1F       		.byte	0x1f
 4327 04bf 00       		.byte	0
 4328 04c0 02       		.uleb128 0x2
 4329 04c1 04       		.byte	0x4
 4330 04c2 07       		.byte	0x7
 4331 04c3 39000000 		.4byte	.LASF40
 4332 04c7 14       		.uleb128 0x14
 4333 04c8 A4020000 		.4byte	.LASF41
 4334 04cc 01       		.byte	0x1
 4335 04cd 1901     		.2byte	0x119
 4336 04cf C6000000 		.4byte	0xc6
 4337 04d3 00000000 		.4byte	.LFB8
 4338 04d7 DE000000 		.4byte	.LFE8-.LFB8
 4339 04db 01       		.uleb128 0x1
 4340 04dc 9C       		.byte	0x9c
 4341 04dd B1050000 		.4byte	0x5b1
 4342 04e1 15       		.uleb128 0x15
 4343 04e2 6F757400 		.ascii	"out\000"
 4344 04e6 01       		.byte	0x1
 4345 04e7 1901     		.2byte	0x119
 4346 04e9 D8000000 		.4byte	0xd8
 4347 04ed 02       		.uleb128 0x2
 4348 04ee 91       		.byte	0x91
 4349 04ef 44       		.sleb128 -60
 4350 04f0 16       		.uleb128 0x16
 4351 04f1 85020000 		.4byte	.LASF20
 4352 04f5 01       		.byte	0x1
 4353 04f6 1901     		.2byte	0x119
 4354 04f8 09030000 		.4byte	0x309
 4355 04fc 02       		.uleb128 0x2
 4356 04fd 91       		.byte	0x91
 4357 04fe 40       		.sleb128 -64
 4358 04ff 15       		.uleb128 0x15
 4359 0500 69647800 		.ascii	"idx\000"
 4360 0504 01       		.byte	0x1
 4361 0505 1901     		.2byte	0x119
 4362 0507 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 93


 4363 050b 03       		.uleb128 0x3
 4364 050c 91       		.byte	0x91
 4365 050d BC7F     		.sleb128 -68
 4366 050f 16       		.uleb128 0x16
 4367 0510 2C020000 		.4byte	.LASF21
 4368 0514 01       		.byte	0x1
 4369 0515 1901     		.2byte	0x119
 4370 0517 C6000000 		.4byte	0xc6
 4371 051b 03       		.uleb128 0x3
 4372 051c 91       		.byte	0x91
 4373 051d B87F     		.sleb128 -72
 4374 051f 16       		.uleb128 0x16
 4375 0520 62000000 		.4byte	.LASF38
 4376 0524 01       		.byte	0x1
 4377 0525 1901     		.2byte	0x119
 4378 0527 61000000 		.4byte	0x61
 4379 052b 02       		.uleb128 0x2
 4380 052c 91       		.byte	0x91
 4381 052d 00       		.sleb128 0
 4382 052e 16       		.uleb128 0x16
 4383 052f AA010000 		.4byte	.LASF34
 4384 0533 01       		.byte	0x1
 4385 0534 1901     		.2byte	0x119
 4386 0536 1A020000 		.4byte	0x21a
 4387 053a 02       		.uleb128 0x2
 4388 053b 91       		.byte	0x91
 4389 053c 08       		.sleb128 8
 4390 053d 16       		.uleb128 0x16
 4391 053e BE030000 		.4byte	.LASF35
 4392 0542 01       		.byte	0x1
 4393 0543 1901     		.2byte	0x119
 4394 0545 61000000 		.4byte	0x61
 4395 0549 02       		.uleb128 0x2
 4396 054a 91       		.byte	0x91
 4397 054b 10       		.sleb128 16
 4398 054c 16       		.uleb128 0x16
 4399 054d 90030000 		.4byte	.LASF36
 4400 0551 01       		.byte	0x1
 4401 0552 1901     		.2byte	0x119
 4402 0554 7A000000 		.4byte	0x7a
 4403 0558 02       		.uleb128 0x2
 4404 0559 91       		.byte	0x91
 4405 055a 18       		.sleb128 24
 4406 055b 16       		.uleb128 0x16
 4407 055c 88000000 		.4byte	.LASF30
 4408 0560 01       		.byte	0x1
 4409 0561 1901     		.2byte	0x119
 4410 0563 7A000000 		.4byte	0x7a
 4411 0567 02       		.uleb128 0x2
 4412 0568 91       		.byte	0x91
 4413 0569 1C       		.sleb128 28
 4414 056a 16       		.uleb128 0x16
 4415 056b 02020000 		.4byte	.LASF31
 4416 056f 01       		.byte	0x1
 4417 0570 1901     		.2byte	0x119
 4418 0572 7A000000 		.4byte	0x7a
 4419 0576 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 94


 4420 0577 91       		.byte	0x91
 4421 0578 20       		.sleb128 32
 4422 0579 17       		.uleb128 0x17
 4423 057a 62756600 		.ascii	"buf\000"
 4424 057e 01       		.byte	0x1
 4425 057f 1B01     		.2byte	0x11b
 4426 0581 B0040000 		.4byte	0x4b0
 4427 0585 02       		.uleb128 0x2
 4428 0586 91       		.byte	0x91
 4429 0587 48       		.sleb128 -56
 4430 0588 17       		.uleb128 0x17
 4431 0589 6C656E00 		.ascii	"len\000"
 4432 058d 01       		.byte	0x1
 4433 058e 1C01     		.2byte	0x11c
 4434 0590 C6000000 		.4byte	0xc6
 4435 0594 02       		.uleb128 0x2
 4436 0595 91       		.byte	0x91
 4437 0596 6C       		.sleb128 -20
 4438 0597 13       		.uleb128 0x13
 4439 0598 34000000 		.4byte	.LBB4
 4440 059c 66000000 		.4byte	.LBE4-.LBB4
 4441 05a0 18       		.uleb128 0x18
 4442 05a1 AB030000 		.4byte	.LASF39
 4443 05a5 01       		.byte	0x1
 4444 05a6 2601     		.2byte	0x126
 4445 05a8 EE010000 		.4byte	0x1ee
 4446 05ac 02       		.uleb128 0x2
 4447 05ad 91       		.byte	0x91
 4448 05ae 6B       		.sleb128 -21
 4449 05af 00       		.byte	0
 4450 05b0 00       		.byte	0
 4451 05b1 14       		.uleb128 0x14
 4452 05b2 A4010000 		.4byte	.LASF42
 4453 05b6 01       		.byte	0x1
 4454 05b7 3A01     		.2byte	0x13a
 4455 05b9 C6000000 		.4byte	0xc6
 4456 05bd 00000000 		.4byte	.LFB9
 4457 05c1 D4040000 		.4byte	.LFE9-.LFB9
 4458 05c5 01       		.uleb128 0x1
 4459 05c6 9C       		.byte	0x9c
 4460 05c7 DD060000 		.4byte	0x6dd
 4461 05cb 15       		.uleb128 0x15
 4462 05cc 6F757400 		.ascii	"out\000"
 4463 05d0 01       		.byte	0x1
 4464 05d1 3A01     		.2byte	0x13a
 4465 05d3 D8000000 		.4byte	0xd8
 4466 05d7 03       		.uleb128 0x3
 4467 05d8 91       		.byte	0x91
 4468 05d9 A47F     		.sleb128 -92
 4469 05db 16       		.uleb128 0x16
 4470 05dc 85020000 		.4byte	.LASF20
 4471 05e0 01       		.byte	0x1
 4472 05e1 3A01     		.2byte	0x13a
 4473 05e3 09030000 		.4byte	0x309
 4474 05e7 03       		.uleb128 0x3
 4475 05e8 91       		.byte	0x91
 4476 05e9 A07F     		.sleb128 -96
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 95


 4477 05eb 15       		.uleb128 0x15
 4478 05ec 69647800 		.ascii	"idx\000"
 4479 05f0 01       		.byte	0x1
 4480 05f1 3A01     		.2byte	0x13a
 4481 05f3 C6000000 		.4byte	0xc6
 4482 05f7 03       		.uleb128 0x3
 4483 05f8 91       		.byte	0x91
 4484 05f9 9C7F     		.sleb128 -100
 4485 05fb 16       		.uleb128 0x16
 4486 05fc 2C020000 		.4byte	.LASF21
 4487 0600 01       		.byte	0x1
 4488 0601 3A01     		.2byte	0x13a
 4489 0603 C6000000 		.4byte	0xc6
 4490 0607 03       		.uleb128 0x3
 4491 0608 91       		.byte	0x91
 4492 0609 987F     		.sleb128 -104
 4493 060b 16       		.uleb128 0x16
 4494 060c 62000000 		.4byte	.LASF38
 4495 0610 01       		.byte	0x1
 4496 0611 3A01     		.2byte	0x13a
 4497 0613 DD060000 		.4byte	0x6dd
 4498 0617 02       		.uleb128 0x2
 4499 0618 91       		.byte	0x91
 4500 0619 00       		.sleb128 0
 4501 061a 16       		.uleb128 0x16
 4502 061b 90030000 		.4byte	.LASF36
 4503 061f 01       		.byte	0x1
 4504 0620 3A01     		.2byte	0x13a
 4505 0622 7A000000 		.4byte	0x7a
 4506 0626 02       		.uleb128 0x2
 4507 0627 91       		.byte	0x91
 4508 0628 08       		.sleb128 8
 4509 0629 16       		.uleb128 0x16
 4510 062a 88000000 		.4byte	.LASF30
 4511 062e 01       		.byte	0x1
 4512 062f 3A01     		.2byte	0x13a
 4513 0631 7A000000 		.4byte	0x7a
 4514 0635 02       		.uleb128 0x2
 4515 0636 91       		.byte	0x91
 4516 0637 0C       		.sleb128 12
 4517 0638 16       		.uleb128 0x16
 4518 0639 02020000 		.4byte	.LASF31
 4519 063d 01       		.byte	0x1
 4520 063e 3A01     		.2byte	0x13a
 4521 0640 7A000000 		.4byte	0x7a
 4522 0644 02       		.uleb128 0x2
 4523 0645 91       		.byte	0x91
 4524 0646 10       		.sleb128 16
 4525 0647 17       		.uleb128 0x17
 4526 0648 62756600 		.ascii	"buf\000"
 4527 064c 01       		.byte	0x1
 4528 064d 3C01     		.2byte	0x13c
 4529 064f B0040000 		.4byte	0x4b0
 4530 0653 03       		.uleb128 0x3
 4531 0654 91       		.byte	0x91
 4532 0655 A87F     		.sleb128 -88
 4533 0657 17       		.uleb128 0x17
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 96


 4534 0658 6C656E00 		.ascii	"len\000"
 4535 065c 01       		.byte	0x1
 4536 065d 3D01     		.2byte	0x13d
 4537 065f C6000000 		.4byte	0xc6
 4538 0663 02       		.uleb128 0x2
 4539 0664 91       		.byte	0x91
 4540 0665 6C       		.sleb128 -20
 4541 0666 18       		.uleb128 0x18
 4542 0667 05000000 		.4byte	.LASF43
 4543 066b 01       		.byte	0x1
 4544 066c 3E01     		.2byte	0x13e
 4545 066e DD060000 		.4byte	0x6dd
 4546 0672 02       		.uleb128 0x2
 4547 0673 91       		.byte	0x91
 4548 0674 50       		.sleb128 -48
 4549 0675 18       		.uleb128 0x18
 4550 0676 C3030000 		.4byte	.LASF44
 4551 067a 01       		.byte	0x1
 4552 067b 4101     		.2byte	0x141
 4553 067d F9060000 		.4byte	0x6f9
 4554 0681 05       		.uleb128 0x5
 4555 0682 03       		.byte	0x3
 4556 0683 18000000 		.4byte	pow10.4373
 4557 0687 18       		.uleb128 0x18
 4558 0688 AA010000 		.4byte	.LASF34
 4559 068c 01       		.byte	0x1
 4560 068d 5601     		.2byte	0x156
 4561 068f 1A020000 		.4byte	0x21a
 4562 0693 02       		.uleb128 0x2
 4563 0694 91       		.byte	0x91
 4564 0695 6B       		.sleb128 -21
 4565 0696 18       		.uleb128 0x18
 4566 0697 51020000 		.4byte	.LASF45
 4567 069b 01       		.byte	0x1
 4568 069c 6601     		.2byte	0x166
 4569 069e 68000000 		.4byte	0x68
 4570 06a2 02       		.uleb128 0x2
 4571 06a3 91       		.byte	0x91
 4572 06a4 64       		.sleb128 -28
 4573 06a5 17       		.uleb128 0x17
 4574 06a6 746D7000 		.ascii	"tmp\000"
 4575 06aa 01       		.byte	0x1
 4576 06ab 6701     		.2byte	0x167
 4577 06ad DD060000 		.4byte	0x6dd
 4578 06b1 02       		.uleb128 0x2
 4579 06b2 91       		.byte	0x91
 4580 06b3 48       		.sleb128 -56
 4581 06b4 18       		.uleb128 0x18
 4582 06b5 5D000000 		.4byte	.LASF46
 4583 06b9 01       		.byte	0x1
 4584 06ba 6801     		.2byte	0x168
 4585 06bc 48000000 		.4byte	0x48
 4586 06c0 02       		.uleb128 0x2
 4587 06c1 91       		.byte	0x91
 4588 06c2 60       		.sleb128 -32
 4589 06c3 13       		.uleb128 0x13
 4590 06c4 14030000 		.4byte	.LBB5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 97


 4591 06c8 8E000000 		.4byte	.LBE5-.LBB5
 4592 06cc 18       		.uleb128 0x18
 4593 06cd 82030000 		.4byte	.LASF47
 4594 06d1 01       		.byte	0x1
 4595 06d2 8301     		.2byte	0x183
 4596 06d4 7A000000 		.4byte	0x7a
 4597 06d8 02       		.uleb128 0x2
 4598 06d9 91       		.byte	0x91
 4599 06da 5C       		.sleb128 -36
 4600 06db 00       		.byte	0
 4601 06dc 00       		.byte	0
 4602 06dd 02       		.uleb128 0x2
 4603 06de 08       		.byte	0x8
 4604 06df 04       		.byte	0x4
 4605 06e0 B1030000 		.4byte	.LASF48
 4606 06e4 19       		.uleb128 0x19
 4607 06e5 F4060000 		.4byte	0x6f4
 4608 06e9 F4060000 		.4byte	0x6f4
 4609 06ed 1A       		.uleb128 0x1a
 4610 06ee C0040000 		.4byte	0x4c0
 4611 06f2 09       		.byte	0x9
 4612 06f3 00       		.byte	0
 4613 06f4 10       		.uleb128 0x10
 4614 06f5 DD060000 		.4byte	0x6dd
 4615 06f9 10       		.uleb128 0x10
 4616 06fa E4060000 		.4byte	0x6e4
 4617 06fe 14       		.uleb128 0x14
 4618 06ff 48000000 		.4byte	.LASF49
 4619 0703 01       		.byte	0x1
 4620 0704 BA01     		.2byte	0x1ba
 4621 0706 C6000000 		.4byte	0xc6
 4622 070a 00000000 		.4byte	.LFB10
 4623 070e 18050000 		.4byte	.LFE10-.LFB10
 4624 0712 01       		.uleb128 0x1
 4625 0713 9C       		.byte	0x9c
 4626 0714 3B080000 		.4byte	0x83b
 4627 0718 15       		.uleb128 0x15
 4628 0719 6F757400 		.ascii	"out\000"
 4629 071d 01       		.byte	0x1
 4630 071e BA01     		.2byte	0x1ba
 4631 0720 D8000000 		.4byte	0xd8
 4632 0724 03       		.uleb128 0x3
 4633 0725 91       		.byte	0x91
 4634 0726 9C7F     		.sleb128 -100
 4635 0728 16       		.uleb128 0x16
 4636 0729 85020000 		.4byte	.LASF20
 4637 072d 01       		.byte	0x1
 4638 072e BA01     		.2byte	0x1ba
 4639 0730 09030000 		.4byte	0x309
 4640 0734 03       		.uleb128 0x3
 4641 0735 91       		.byte	0x91
 4642 0736 987F     		.sleb128 -104
 4643 0738 15       		.uleb128 0x15
 4644 0739 69647800 		.ascii	"idx\000"
 4645 073d 01       		.byte	0x1
 4646 073e BA01     		.2byte	0x1ba
 4647 0740 C6000000 		.4byte	0xc6
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 98


 4648 0744 03       		.uleb128 0x3
 4649 0745 91       		.byte	0x91
 4650 0746 947F     		.sleb128 -108
 4651 0748 16       		.uleb128 0x16
 4652 0749 2C020000 		.4byte	.LASF21
 4653 074d 01       		.byte	0x1
 4654 074e BA01     		.2byte	0x1ba
 4655 0750 C6000000 		.4byte	0xc6
 4656 0754 03       		.uleb128 0x3
 4657 0755 91       		.byte	0x91
 4658 0756 907F     		.sleb128 -112
 4659 0758 16       		.uleb128 0x16
 4660 0759 62000000 		.4byte	.LASF38
 4661 075d 01       		.byte	0x1
 4662 075e BA01     		.2byte	0x1ba
 4663 0760 DD060000 		.4byte	0x6dd
 4664 0764 02       		.uleb128 0x2
 4665 0765 91       		.byte	0x91
 4666 0766 00       		.sleb128 0
 4667 0767 16       		.uleb128 0x16
 4668 0768 90030000 		.4byte	.LASF36
 4669 076c 01       		.byte	0x1
 4670 076d BA01     		.2byte	0x1ba
 4671 076f 7A000000 		.4byte	0x7a
 4672 0773 02       		.uleb128 0x2
 4673 0774 91       		.byte	0x91
 4674 0775 08       		.sleb128 8
 4675 0776 16       		.uleb128 0x16
 4676 0777 88000000 		.4byte	.LASF30
 4677 077b 01       		.byte	0x1
 4678 077c BA01     		.2byte	0x1ba
 4679 077e 7A000000 		.4byte	0x7a
 4680 0782 02       		.uleb128 0x2
 4681 0783 91       		.byte	0x91
 4682 0784 0C       		.sleb128 12
 4683 0785 16       		.uleb128 0x16
 4684 0786 02020000 		.4byte	.LASF31
 4685 078a 01       		.byte	0x1
 4686 078b BA01     		.2byte	0x1ba
 4687 078d 7A000000 		.4byte	0x7a
 4688 0791 02       		.uleb128 0x2
 4689 0792 91       		.byte	0x91
 4690 0793 10       		.sleb128 16
 4691 0794 18       		.uleb128 0x18
 4692 0795 AA010000 		.4byte	.LASF34
 4693 0799 01       		.byte	0x1
 4694 079a C201     		.2byte	0x1c2
 4695 079c 3B080000 		.4byte	0x83b
 4696 07a0 02       		.uleb128 0x2
 4697 07a1 91       		.byte	0x91
 4698 07a2 4B       		.sleb128 -53
 4699 07a3 1B       		.uleb128 0x1b
 4700 07a4 08       		.byte	0x8
 4701 07a5 01       		.byte	0x1
 4702 07a6 CE01     		.2byte	0x1ce
 4703 07a8 C1070000 		.4byte	0x7c1
 4704 07ac 1C       		.uleb128 0x1c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 99


 4705 07ad 5500     		.ascii	"U\000"
 4706 07af 01       		.byte	0x1
 4707 07b0 CF01     		.2byte	0x1cf
 4708 07b2 81000000 		.4byte	0x81
 4709 07b6 1C       		.uleb128 0x1c
 4710 07b7 4600     		.ascii	"F\000"
 4711 07b9 01       		.byte	0x1
 4712 07ba D001     		.2byte	0x1d0
 4713 07bc DD060000 		.4byte	0x6dd
 4714 07c0 00       		.byte	0
 4715 07c1 18       		.uleb128 0x18
 4716 07c2 8E000000 		.4byte	.LASF51
 4717 07c6 01       		.byte	0x1
 4718 07c7 D101     		.2byte	0x1d1
 4719 07c9 A3070000 		.4byte	0x7a3
 4720 07cd 03       		.uleb128 0x3
 4721 07ce 91       		.byte	0x91
 4722 07cf A07F     		.sleb128 -96
 4723 07d1 18       		.uleb128 0x18
 4724 07d2 00000000 		.4byte	.LASF52
 4725 07d6 01       		.byte	0x1
 4726 07d7 D401     		.2byte	0x1d4
 4727 07d9 68000000 		.4byte	0x68
 4728 07dd 02       		.uleb128 0x2
 4729 07de 91       		.byte	0x91
 4730 07df 44       		.sleb128 -60
 4731 07e0 18       		.uleb128 0x18
 4732 07e1 BD010000 		.4byte	.LASF53
 4733 07e5 01       		.byte	0x1
 4734 07e6 D701     		.2byte	0x1d7
 4735 07e8 68000000 		.4byte	0x68
 4736 07ec 02       		.uleb128 0x2
 4737 07ed 91       		.byte	0x91
 4738 07ee 54       		.sleb128 -44
 4739 07ef 17       		.uleb128 0x17
 4740 07f0 7A00     		.ascii	"z\000"
 4741 07f2 01       		.byte	0x1
 4742 07f3 DA01     		.2byte	0x1da
 4743 07f5 F4060000 		.4byte	0x6f4
 4744 07f9 03       		.uleb128 0x3
 4745 07fa 91       		.byte	0x91
 4746 07fb B87F     		.sleb128 -72
 4747 07fd 17       		.uleb128 0x17
 4748 07fe 7A3200   		.ascii	"z2\000"
 4749 0801 01       		.byte	0x1
 4750 0802 DB01     		.2byte	0x1db
 4751 0804 F4060000 		.4byte	0x6f4
 4752 0808 03       		.uleb128 0x3
 4753 0809 91       		.byte	0x91
 4754 080a B07F     		.sleb128 -80
 4755 080c 18       		.uleb128 0x18
 4756 080d 30000000 		.4byte	.LASF54
 4757 0811 01       		.byte	0x1
 4758 0812 E601     		.2byte	0x1e6
 4759 0814 7A000000 		.4byte	0x7a
 4760 0818 02       		.uleb128 0x2
 4761 0819 91       		.byte	0x91
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 100


 4762 081a 50       		.sleb128 -48
 4763 081b 18       		.uleb128 0x18
 4764 081c 95030000 		.4byte	.LASF55
 4765 0820 01       		.byte	0x1
 4766 0821 0002     		.2byte	0x200
 4767 0823 7A000000 		.4byte	0x7a
 4768 0827 02       		.uleb128 0x2
 4769 0828 91       		.byte	0x91
 4770 0829 4C       		.sleb128 -52
 4771 082a 18       		.uleb128 0x18
 4772 082b 72000000 		.4byte	.LASF32
 4773 082f 01       		.byte	0x1
 4774 0830 1302     		.2byte	0x213
 4775 0832 0F030000 		.4byte	0x30f
 4776 0836 03       		.uleb128 0x3
 4777 0837 91       		.byte	0x91
 4778 0838 AC7F     		.sleb128 -84
 4779 083a 00       		.byte	0
 4780 083b 10       		.uleb128 0x10
 4781 083c 1A020000 		.4byte	0x21a
 4782 0840 14       		.uleb128 0x14
 4783 0841 8C020000 		.4byte	.LASF56
 4784 0845 01       		.byte	0x1
 4785 0846 2802     		.2byte	0x228
 4786 0848 68000000 		.4byte	0x68
 4787 084c 00000000 		.4byte	.LFB11
 4788 0850 60090000 		.4byte	.LFE11-.LFB11
 4789 0854 01       		.uleb128 0x1
 4790 0855 9C       		.byte	0x9c
 4791 0856 170A0000 		.4byte	0xa17
 4792 085a 15       		.uleb128 0x15
 4793 085b 6F757400 		.ascii	"out\000"
 4794 085f 01       		.byte	0x1
 4795 0860 2802     		.2byte	0x228
 4796 0862 D8000000 		.4byte	0xd8
 4797 0866 03       		.uleb128 0x3
 4798 0867 91       		.byte	0x91
 4799 0868 A47F     		.sleb128 -92
 4800 086a 16       		.uleb128 0x16
 4801 086b 85020000 		.4byte	.LASF20
 4802 086f 01       		.byte	0x1
 4803 0870 2802     		.2byte	0x228
 4804 0872 09030000 		.4byte	0x309
 4805 0876 03       		.uleb128 0x3
 4806 0877 91       		.byte	0x91
 4807 0878 A07F     		.sleb128 -96
 4808 087a 16       		.uleb128 0x16
 4809 087b 2C020000 		.4byte	.LASF21
 4810 087f 01       		.byte	0x1
 4811 0880 2802     		.2byte	0x228
 4812 0882 0F030000 		.4byte	0x30f
 4813 0886 03       		.uleb128 0x3
 4814 0887 91       		.byte	0x91
 4815 0888 9C7F     		.sleb128 -100
 4816 088a 16       		.uleb128 0x16
 4817 088b 56000000 		.4byte	.LASF57
 4818 088f 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 101


 4819 0890 2802     		.2byte	0x228
 4820 0892 E8010000 		.4byte	0x1e8
 4821 0896 03       		.uleb128 0x3
 4822 0897 91       		.byte	0x91
 4823 0898 987F     		.sleb128 -104
 4824 089a 15       		.uleb128 0x15
 4825 089b 766100   		.ascii	"va\000"
 4826 089e 01       		.byte	0x1
 4827 089f 2802     		.2byte	0x228
 4828 08a1 BB000000 		.4byte	0xbb
 4829 08a5 02       		.uleb128 0x2
 4830 08a6 91       		.byte	0x91
 4831 08a7 00       		.sleb128 0
 4832 08a8 18       		.uleb128 0x18
 4833 08a9 02020000 		.4byte	.LASF31
 4834 08ad 01       		.byte	0x1
 4835 08ae 2A02     		.2byte	0x22a
 4836 08b0 7A000000 		.4byte	0x7a
 4837 08b4 02       		.uleb128 0x2
 4838 08b5 91       		.byte	0x91
 4839 08b6 6C       		.sleb128 -20
 4840 08b7 18       		.uleb128 0x18
 4841 08b8 88000000 		.4byte	.LASF30
 4842 08bc 01       		.byte	0x1
 4843 08bd 2A02     		.2byte	0x22a
 4844 08bf 7A000000 		.4byte	0x7a
 4845 08c3 02       		.uleb128 0x2
 4846 08c4 91       		.byte	0x91
 4847 08c5 68       		.sleb128 -24
 4848 08c6 18       		.uleb128 0x18
 4849 08c7 C9030000 		.4byte	.LASF58
 4850 08cb 01       		.byte	0x1
 4851 08cc 2A02     		.2byte	0x22a
 4852 08ce 7A000000 		.4byte	0x7a
 4853 08d2 02       		.uleb128 0x2
 4854 08d3 91       		.byte	0x91
 4855 08d4 64       		.sleb128 -28
 4856 08d5 17       		.uleb128 0x17
 4857 08d6 6E00     		.ascii	"n\000"
 4858 08d8 01       		.byte	0x1
 4859 08d9 2A02     		.2byte	0x22a
 4860 08db 7A000000 		.4byte	0x7a
 4861 08df 02       		.uleb128 0x2
 4862 08e0 91       		.byte	0x91
 4863 08e1 60       		.sleb128 -32
 4864 08e2 17       		.uleb128 0x17
 4865 08e3 69647800 		.ascii	"idx\000"
 4866 08e7 01       		.byte	0x1
 4867 08e8 2B02     		.2byte	0x22b
 4868 08ea C6000000 		.4byte	0xc6
 4869 08ee 02       		.uleb128 0x2
 4870 08ef 91       		.byte	0x91
 4871 08f0 5C       		.sleb128 -36
 4872 08f1 1D       		.uleb128 0x1d
 4873 08f2 3C010000 		.4byte	.LBB6
 4874 08f6 2A000000 		.4byte	.LBE6-.LBB6
 4875 08fa 0C090000 		.4byte	0x90c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 102


 4876 08fe 17       		.uleb128 0x17
 4877 08ff 7700     		.ascii	"w\000"
 4878 0901 01       		.byte	0x1
 4879 0902 5302     		.2byte	0x253
 4880 0904 170A0000 		.4byte	0xa17
 4881 0908 02       		.uleb128 0x2
 4882 0909 91       		.byte	0x91
 4883 090a 48       		.sleb128 -56
 4884 090b 00       		.byte	0
 4885 090c 1D       		.uleb128 0x1d
 4886 090d A4010000 		.4byte	.LBB7
 4887 0911 18000000 		.4byte	.LBE7-.LBB7
 4888 0915 29090000 		.4byte	0x929
 4889 0919 18       		.uleb128 0x18
 4890 091a 90030000 		.4byte	.LASF36
 4891 091e 01       		.byte	0x1
 4892 091f 6702     		.2byte	0x267
 4893 0921 170A0000 		.4byte	0xa17
 4894 0925 02       		.uleb128 0x2
 4895 0926 91       		.byte	0x91
 4896 0927 44       		.sleb128 -60
 4897 0928 00       		.byte	0
 4898 0929 1D       		.uleb128 0x1d
 4899 092a 04040000 		.4byte	.LBB8
 4900 092e 8C020000 		.4byte	.LBE8-.LBB8
 4901 0932 B9090000 		.4byte	0x9b9
 4902 0936 18       		.uleb128 0x18
 4903 0937 BE030000 		.4byte	.LASF35
 4904 093b 01       		.byte	0x1
 4905 093c 9B02     		.2byte	0x29b
 4906 093e 7A000000 		.4byte	0x7a
 4907 0942 02       		.uleb128 0x2
 4908 0943 91       		.byte	0x91
 4909 0944 58       		.sleb128 -40
 4910 0945 1D       		.uleb128 0x1d
 4911 0946 98040000 		.4byte	.LBB9
 4912 094a 5C000000 		.4byte	.LBE9-.LBB9
 4913 094e 63090000 		.4byte	0x963
 4914 0952 18       		.uleb128 0x18
 4915 0953 62000000 		.4byte	.LASF38
 4916 0957 01       		.byte	0x1
 4917 0958 BD02     		.2byte	0x2bd
 4918 095a 1C0A0000 		.4byte	0xa1c
 4919 095e 03       		.uleb128 0x3
 4920 095f 91       		.byte	0x91
 4921 0960 B87F     		.sleb128 -72
 4922 0962 00       		.byte	0
 4923 0963 1D       		.uleb128 0x1d
 4924 0964 00050000 		.4byte	.LBB10
 4925 0968 3C000000 		.4byte	.LBE10-.LBB10
 4926 096c 81090000 		.4byte	0x981
 4927 0970 18       		.uleb128 0x18
 4928 0971 62000000 		.4byte	.LASF38
 4929 0975 01       		.byte	0x1
 4930 0976 C202     		.2byte	0x2c2
 4931 0978 210A0000 		.4byte	0xa21
 4932 097c 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 103


 4933 097d 91       		.byte	0x91
 4934 097e B47F     		.sleb128 -76
 4935 0980 00       		.byte	0
 4936 0981 1D       		.uleb128 0x1d
 4937 0982 3E050000 		.4byte	.LBB11
 4938 0986 68000000 		.4byte	.LBE11-.LBB11
 4939 098a 9F090000 		.4byte	0x99f
 4940 098e 18       		.uleb128 0x18
 4941 098f 62000000 		.4byte	.LASF38
 4942 0993 01       		.byte	0x1
 4943 0994 C602     		.2byte	0x2c6
 4944 0996 170A0000 		.4byte	0xa17
 4945 099a 03       		.uleb128 0x3
 4946 099b 91       		.byte	0x91
 4947 099c B07F     		.sleb128 -80
 4948 099e 00       		.byte	0
 4949 099f 13       		.uleb128 0x13
 4950 09a0 2C060000 		.4byte	.LBB12
 4951 09a4 5C000000 		.4byte	.LBE12-.LBB12
 4952 09a8 18       		.uleb128 0x18
 4953 09a9 62000000 		.4byte	.LASF38
 4954 09ad 01       		.byte	0x1
 4955 09ae D502     		.2byte	0x2d5
 4956 09b0 260A0000 		.4byte	0xa26
 4957 09b4 02       		.uleb128 0x2
 4958 09b5 91       		.byte	0x91
 4959 09b6 40       		.sleb128 -64
 4960 09b7 00       		.byte	0
 4961 09b8 00       		.byte	0
 4962 09b9 1D       		.uleb128 0x1d
 4963 09ba 40070000 		.4byte	.LBB13
 4964 09be 74000000 		.4byte	.LBE13-.LBB13
 4965 09c2 D4090000 		.4byte	0x9d4
 4966 09c6 17       		.uleb128 0x17
 4967 09c7 6C00     		.ascii	"l\000"
 4968 09c9 01       		.byte	0x1
 4969 09ca F002     		.2byte	0x2f0
 4970 09cc 7A000000 		.4byte	0x7a
 4971 09d0 02       		.uleb128 0x2
 4972 09d1 91       		.byte	0x91
 4973 09d2 54       		.sleb128 -44
 4974 09d3 00       		.byte	0
 4975 09d4 1D       		.uleb128 0x1d
 4976 09d5 B4070000 		.4byte	.LBB14
 4977 09d9 C4000000 		.4byte	.LBE14-.LBB14
 4978 09dd FC090000 		.4byte	0x9fc
 4979 09e1 17       		.uleb128 0x17
 4980 09e2 7000     		.ascii	"p\000"
 4981 09e4 01       		.byte	0x1
 4982 09e5 0403     		.2byte	0x304
 4983 09e7 E8010000 		.4byte	0x1e8
 4984 09eb 02       		.uleb128 0x2
 4985 09ec 91       		.byte	0x91
 4986 09ed 50       		.sleb128 -48
 4987 09ee 17       		.uleb128 0x17
 4988 09ef 6C00     		.ascii	"l\000"
 4989 09f1 01       		.byte	0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 104


 4990 09f2 0503     		.2byte	0x305
 4991 09f4 7A000000 		.4byte	0x7a
 4992 09f8 02       		.uleb128 0x2
 4993 09f9 91       		.byte	0x91
 4994 09fa 4C       		.sleb128 -52
 4995 09fb 00       		.byte	0
 4996 09fc 13       		.uleb128 0x13
 4997 09fd 78080000 		.4byte	.LBB15
 4998 0a01 88000000 		.4byte	.LBE15-.LBB15
 4999 0a05 18       		.uleb128 0x18
 5000 0a06 B8030000 		.4byte	.LASF59
 5001 0a0a 01       		.byte	0x1
 5002 0a0b 2103     		.2byte	0x321
 5003 0a0d 3B080000 		.4byte	0x83b
 5004 0a11 03       		.uleb128 0x3
 5005 0a12 91       		.byte	0x91
 5006 0a13 AF7F     		.sleb128 -81
 5007 0a15 00       		.byte	0
 5008 0a16 00       		.byte	0
 5009 0a17 10       		.uleb128 0x10
 5010 0a18 68000000 		.4byte	0x68
 5011 0a1c 10       		.uleb128 0x10
 5012 0a1d 4F000000 		.4byte	0x4f
 5013 0a21 10       		.uleb128 0x10
 5014 0a22 41000000 		.4byte	0x41
 5015 0a26 10       		.uleb128 0x10
 5016 0a27 7A000000 		.4byte	0x7a
 5017 0a2b 1E       		.uleb128 0x1e
 5018 0a2c 7C000000 		.4byte	.LASF64
 5019 0a30 01       		.byte	0x1
 5020 0a31 4503     		.2byte	0x345
 5021 0a33 68000000 		.4byte	0x68
 5022 0a37 00000000 		.4byte	.LFB12
 5023 0a3b 38000000 		.4byte	.LFE12-.LFB12
 5024 0a3f 01       		.uleb128 0x1
 5025 0a40 9C       		.byte	0x9c
 5026 0a41 910A0000 		.4byte	0xa91
 5027 0a45 16       		.uleb128 0x16
 5028 0a46 85020000 		.4byte	.LASF20
 5029 0a4a 01       		.byte	0x1
 5030 0a4b 4503     		.2byte	0x345
 5031 0a4d 09030000 		.4byte	0x309
 5032 0a51 02       		.uleb128 0x2
 5033 0a52 91       		.byte	0x91
 5034 0a53 64       		.sleb128 -28
 5035 0a54 16       		.uleb128 0x16
 5036 0a55 82030000 		.4byte	.LASF47
 5037 0a59 01       		.byte	0x1
 5038 0a5a 4503     		.2byte	0x345
 5039 0a5c C6000000 		.4byte	0xc6
 5040 0a60 02       		.uleb128 0x2
 5041 0a61 91       		.byte	0x91
 5042 0a62 60       		.sleb128 -32
 5043 0a63 16       		.uleb128 0x16
 5044 0a64 56000000 		.4byte	.LASF57
 5045 0a68 01       		.byte	0x1
 5046 0a69 4503     		.2byte	0x345
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 105


 5047 0a6b E8010000 		.4byte	0x1e8
 5048 0a6f 02       		.uleb128 0x2
 5049 0a70 91       		.byte	0x91
 5050 0a71 78       		.sleb128 -8
 5051 0a72 1F       		.uleb128 0x1f
 5052 0a73 17       		.uleb128 0x17
 5053 0a74 766100   		.ascii	"va\000"
 5054 0a77 01       		.byte	0x1
 5055 0a78 4703     		.2byte	0x347
 5056 0a7a BB000000 		.4byte	0xbb
 5057 0a7e 02       		.uleb128 0x2
 5058 0a7f 91       		.byte	0x91
 5059 0a80 68       		.sleb128 -24
 5060 0a81 17       		.uleb128 0x17
 5061 0a82 72657400 		.ascii	"ret\000"
 5062 0a86 01       		.byte	0x1
 5063 0a87 4903     		.2byte	0x349
 5064 0a89 170A0000 		.4byte	0xa17
 5065 0a8d 02       		.uleb128 0x2
 5066 0a8e 91       		.byte	0x91
 5067 0a8f 6C       		.sleb128 -20
 5068 0a90 00       		.byte	0
 5069 0a91 20       		.uleb128 0x20
 5070 0a92 97020000 		.4byte	.LASF65
 5071 0a96 01       		.byte	0x1
 5072 0a97 4E03     		.2byte	0x34e
 5073 0a99 68000000 		.4byte	0x68
 5074 0a9d 00000000 		.4byte	.LFB13
 5075 0aa1 2C000000 		.4byte	.LFE13-.LFB13
 5076 0aa5 01       		.uleb128 0x1
 5077 0aa6 9C       		.byte	0x9c
 5078 0aa7 16       		.uleb128 0x16
 5079 0aa8 85020000 		.4byte	.LASF20
 5080 0aac 01       		.byte	0x1
 5081 0aad 4E03     		.2byte	0x34e
 5082 0aaf 09030000 		.4byte	0x309
 5083 0ab3 02       		.uleb128 0x2
 5084 0ab4 91       		.byte	0x91
 5085 0ab5 74       		.sleb128 -12
 5086 0ab6 16       		.uleb128 0x16
 5087 0ab7 82030000 		.4byte	.LASF47
 5088 0abb 01       		.byte	0x1
 5089 0abc 4E03     		.2byte	0x34e
 5090 0abe C6000000 		.4byte	0xc6
 5091 0ac2 02       		.uleb128 0x2
 5092 0ac3 91       		.byte	0x91
 5093 0ac4 70       		.sleb128 -16
 5094 0ac5 16       		.uleb128 0x16
 5095 0ac6 56000000 		.4byte	.LASF57
 5096 0aca 01       		.byte	0x1
 5097 0acb 4E03     		.2byte	0x34e
 5098 0acd E8010000 		.4byte	0x1e8
 5099 0ad1 02       		.uleb128 0x2
 5100 0ad2 91       		.byte	0x91
 5101 0ad3 6C       		.sleb128 -20
 5102 0ad4 15       		.uleb128 0x15
 5103 0ad5 766100   		.ascii	"va\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 106


 5104 0ad8 01       		.byte	0x1
 5105 0ad9 4E03     		.2byte	0x34e
 5106 0adb BB000000 		.4byte	0xbb
 5107 0adf 02       		.uleb128 0x2
 5108 0ae0 91       		.byte	0x91
 5109 0ae1 68       		.sleb128 -24
 5110 0ae2 00       		.byte	0
 5111 0ae3 00       		.byte	0
 5112              		.section	.debug_abbrev,"",%progbits
 5113              	.Ldebug_abbrev0:
 5114 0000 01       		.uleb128 0x1
 5115 0001 11       		.uleb128 0x11
 5116 0002 01       		.byte	0x1
 5117 0003 25       		.uleb128 0x25
 5118 0004 0E       		.uleb128 0xe
 5119 0005 13       		.uleb128 0x13
 5120 0006 0B       		.uleb128 0xb
 5121 0007 03       		.uleb128 0x3
 5122 0008 0E       		.uleb128 0xe
 5123 0009 1B       		.uleb128 0x1b
 5124 000a 0E       		.uleb128 0xe
 5125 000b 55       		.uleb128 0x55
 5126 000c 17       		.uleb128 0x17
 5127 000d 11       		.uleb128 0x11
 5128 000e 01       		.uleb128 0x1
 5129 000f 10       		.uleb128 0x10
 5130 0010 17       		.uleb128 0x17
 5131 0011 00       		.byte	0
 5132 0012 00       		.byte	0
 5133 0013 02       		.uleb128 0x2
 5134 0014 24       		.uleb128 0x24
 5135 0015 00       		.byte	0
 5136 0016 0B       		.uleb128 0xb
 5137 0017 0B       		.uleb128 0xb
 5138 0018 3E       		.uleb128 0x3e
 5139 0019 0B       		.uleb128 0xb
 5140 001a 03       		.uleb128 0x3
 5141 001b 0E       		.uleb128 0xe
 5142 001c 00       		.byte	0
 5143 001d 00       		.byte	0
 5144 001e 03       		.uleb128 0x3
 5145 001f 16       		.uleb128 0x16
 5146 0020 00       		.byte	0
 5147 0021 03       		.uleb128 0x3
 5148 0022 0E       		.uleb128 0xe
 5149 0023 3A       		.uleb128 0x3a
 5150 0024 0B       		.uleb128 0xb
 5151 0025 3B       		.uleb128 0x3b
 5152 0026 0B       		.uleb128 0xb
 5153 0027 49       		.uleb128 0x49
 5154 0028 13       		.uleb128 0x13
 5155 0029 00       		.byte	0
 5156 002a 00       		.byte	0
 5157 002b 04       		.uleb128 0x4
 5158 002c 24       		.uleb128 0x24
 5159 002d 00       		.byte	0
 5160 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 107


 5161 002f 0B       		.uleb128 0xb
 5162 0030 3E       		.uleb128 0x3e
 5163 0031 0B       		.uleb128 0xb
 5164 0032 03       		.uleb128 0x3
 5165 0033 08       		.uleb128 0x8
 5166 0034 00       		.byte	0
 5167 0035 00       		.byte	0
 5168 0036 05       		.uleb128 0x5
 5169 0037 0F       		.uleb128 0xf
 5170 0038 00       		.byte	0
 5171 0039 0B       		.uleb128 0xb
 5172 003a 0B       		.uleb128 0xb
 5173 003b 00       		.byte	0
 5174 003c 00       		.byte	0
 5175 003d 06       		.uleb128 0x6
 5176 003e 13       		.uleb128 0x13
 5177 003f 01       		.byte	0x1
 5178 0040 03       		.uleb128 0x3
 5179 0041 0E       		.uleb128 0xe
 5180 0042 0B       		.uleb128 0xb
 5181 0043 0B       		.uleb128 0xb
 5182 0044 3A       		.uleb128 0x3a
 5183 0045 0B       		.uleb128 0xb
 5184 0046 3B       		.uleb128 0x3b
 5185 0047 0B       		.uleb128 0xb
 5186 0048 01       		.uleb128 0x1
 5187 0049 13       		.uleb128 0x13
 5188 004a 00       		.byte	0
 5189 004b 00       		.byte	0
 5190 004c 07       		.uleb128 0x7
 5191 004d 0D       		.uleb128 0xd
 5192 004e 00       		.byte	0
 5193 004f 03       		.uleb128 0x3
 5194 0050 0E       		.uleb128 0xe
 5195 0051 49       		.uleb128 0x49
 5196 0052 13       		.uleb128 0x13
 5197 0053 38       		.uleb128 0x38
 5198 0054 0B       		.uleb128 0xb
 5199 0055 34       		.uleb128 0x34
 5200 0056 19       		.uleb128 0x19
 5201 0057 00       		.byte	0
 5202 0058 00       		.byte	0
 5203 0059 08       		.uleb128 0x8
 5204 005a 0F       		.uleb128 0xf
 5205 005b 00       		.byte	0
 5206 005c 0B       		.uleb128 0xb
 5207 005d 0B       		.uleb128 0xb
 5208 005e 49       		.uleb128 0x49
 5209 005f 13       		.uleb128 0x13
 5210 0060 00       		.byte	0
 5211 0061 00       		.byte	0
 5212 0062 09       		.uleb128 0x9
 5213 0063 15       		.uleb128 0x15
 5214 0064 01       		.byte	0x1
 5215 0065 27       		.uleb128 0x27
 5216 0066 19       		.uleb128 0x19
 5217 0067 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 108


 5218 0068 13       		.uleb128 0x13
 5219 0069 00       		.byte	0
 5220 006a 00       		.byte	0
 5221 006b 0A       		.uleb128 0xa
 5222 006c 05       		.uleb128 0x5
 5223 006d 00       		.byte	0
 5224 006e 49       		.uleb128 0x49
 5225 006f 13       		.uleb128 0x13
 5226 0070 00       		.byte	0
 5227 0071 00       		.byte	0
 5228 0072 0B       		.uleb128 0xb
 5229 0073 2E       		.uleb128 0x2e
 5230 0074 01       		.byte	0x1
 5231 0075 03       		.uleb128 0x3
 5232 0076 0E       		.uleb128 0xe
 5233 0077 3A       		.uleb128 0x3a
 5234 0078 0B       		.uleb128 0xb
 5235 0079 3B       		.uleb128 0x3b
 5236 007a 0B       		.uleb128 0xb
 5237 007b 27       		.uleb128 0x27
 5238 007c 19       		.uleb128 0x19
 5239 007d 11       		.uleb128 0x11
 5240 007e 01       		.uleb128 0x1
 5241 007f 12       		.uleb128 0x12
 5242 0080 06       		.uleb128 0x6
 5243 0081 40       		.uleb128 0x40
 5244 0082 18       		.uleb128 0x18
 5245 0083 9742     		.uleb128 0x2117
 5246 0085 19       		.uleb128 0x19
 5247 0086 01       		.uleb128 0x1
 5248 0087 13       		.uleb128 0x13
 5249 0088 00       		.byte	0
 5250 0089 00       		.byte	0
 5251 008a 0C       		.uleb128 0xc
 5252 008b 05       		.uleb128 0x5
 5253 008c 00       		.byte	0
 5254 008d 03       		.uleb128 0x3
 5255 008e 0E       		.uleb128 0xe
 5256 008f 3A       		.uleb128 0x3a
 5257 0090 0B       		.uleb128 0xb
 5258 0091 3B       		.uleb128 0x3b
 5259 0092 0B       		.uleb128 0xb
 5260 0093 49       		.uleb128 0x49
 5261 0094 13       		.uleb128 0x13
 5262 0095 02       		.uleb128 0x2
 5263 0096 18       		.uleb128 0x18
 5264 0097 00       		.byte	0
 5265 0098 00       		.byte	0
 5266 0099 0D       		.uleb128 0xd
 5267 009a 05       		.uleb128 0x5
 5268 009b 00       		.byte	0
 5269 009c 03       		.uleb128 0x3
 5270 009d 08       		.uleb128 0x8
 5271 009e 3A       		.uleb128 0x3a
 5272 009f 0B       		.uleb128 0xb
 5273 00a0 3B       		.uleb128 0x3b
 5274 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 109


 5275 00a2 49       		.uleb128 0x49
 5276 00a3 13       		.uleb128 0x13
 5277 00a4 02       		.uleb128 0x2
 5278 00a5 18       		.uleb128 0x18
 5279 00a6 00       		.byte	0
 5280 00a7 00       		.byte	0
 5281 00a8 0E       		.uleb128 0xe
 5282 00a9 2E       		.uleb128 0x2e
 5283 00aa 01       		.byte	0x1
 5284 00ab 03       		.uleb128 0x3
 5285 00ac 0E       		.uleb128 0xe
 5286 00ad 3A       		.uleb128 0x3a
 5287 00ae 0B       		.uleb128 0xb
 5288 00af 3B       		.uleb128 0x3b
 5289 00b0 0B       		.uleb128 0xb
 5290 00b1 27       		.uleb128 0x27
 5291 00b2 19       		.uleb128 0x19
 5292 00b3 49       		.uleb128 0x49
 5293 00b4 13       		.uleb128 0x13
 5294 00b5 11       		.uleb128 0x11
 5295 00b6 01       		.uleb128 0x1
 5296 00b7 12       		.uleb128 0x12
 5297 00b8 06       		.uleb128 0x6
 5298 00b9 40       		.uleb128 0x40
 5299 00ba 18       		.uleb128 0x18
 5300 00bb 9742     		.uleb128 0x2117
 5301 00bd 19       		.uleb128 0x19
 5302 00be 01       		.uleb128 0x1
 5303 00bf 13       		.uleb128 0x13
 5304 00c0 00       		.byte	0
 5305 00c1 00       		.byte	0
 5306 00c2 0F       		.uleb128 0xf
 5307 00c3 34       		.uleb128 0x34
 5308 00c4 00       		.byte	0
 5309 00c5 03       		.uleb128 0x3
 5310 00c6 08       		.uleb128 0x8
 5311 00c7 3A       		.uleb128 0x3a
 5312 00c8 0B       		.uleb128 0xb
 5313 00c9 3B       		.uleb128 0x3b
 5314 00ca 0B       		.uleb128 0xb
 5315 00cb 49       		.uleb128 0x49
 5316 00cc 13       		.uleb128 0x13
 5317 00cd 02       		.uleb128 0x2
 5318 00ce 18       		.uleb128 0x18
 5319 00cf 00       		.byte	0
 5320 00d0 00       		.byte	0
 5321 00d1 10       		.uleb128 0x10
 5322 00d2 26       		.uleb128 0x26
 5323 00d3 00       		.byte	0
 5324 00d4 49       		.uleb128 0x49
 5325 00d5 13       		.uleb128 0x13
 5326 00d6 00       		.byte	0
 5327 00d7 00       		.byte	0
 5328 00d8 11       		.uleb128 0x11
 5329 00d9 2E       		.uleb128 0x2e
 5330 00da 01       		.byte	0x1
 5331 00db 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 110


 5332 00dc 0E       		.uleb128 0xe
 5333 00dd 3A       		.uleb128 0x3a
 5334 00de 0B       		.uleb128 0xb
 5335 00df 3B       		.uleb128 0x3b
 5336 00e0 0B       		.uleb128 0xb
 5337 00e1 27       		.uleb128 0x27
 5338 00e2 19       		.uleb128 0x19
 5339 00e3 49       		.uleb128 0x49
 5340 00e4 13       		.uleb128 0x13
 5341 00e5 11       		.uleb128 0x11
 5342 00e6 01       		.uleb128 0x1
 5343 00e7 12       		.uleb128 0x12
 5344 00e8 06       		.uleb128 0x6
 5345 00e9 40       		.uleb128 0x40
 5346 00ea 18       		.uleb128 0x18
 5347 00eb 9642     		.uleb128 0x2116
 5348 00ed 19       		.uleb128 0x19
 5349 00ee 01       		.uleb128 0x1
 5350 00ef 13       		.uleb128 0x13
 5351 00f0 00       		.byte	0
 5352 00f1 00       		.byte	0
 5353 00f2 12       		.uleb128 0x12
 5354 00f3 34       		.uleb128 0x34
 5355 00f4 00       		.byte	0
 5356 00f5 03       		.uleb128 0x3
 5357 00f6 0E       		.uleb128 0xe
 5358 00f7 3A       		.uleb128 0x3a
 5359 00f8 0B       		.uleb128 0xb
 5360 00f9 3B       		.uleb128 0x3b
 5361 00fa 0B       		.uleb128 0xb
 5362 00fb 49       		.uleb128 0x49
 5363 00fc 13       		.uleb128 0x13
 5364 00fd 02       		.uleb128 0x2
 5365 00fe 18       		.uleb128 0x18
 5366 00ff 00       		.byte	0
 5367 0100 00       		.byte	0
 5368 0101 13       		.uleb128 0x13
 5369 0102 0B       		.uleb128 0xb
 5370 0103 01       		.byte	0x1
 5371 0104 11       		.uleb128 0x11
 5372 0105 01       		.uleb128 0x1
 5373 0106 12       		.uleb128 0x12
 5374 0107 06       		.uleb128 0x6
 5375 0108 00       		.byte	0
 5376 0109 00       		.byte	0
 5377 010a 14       		.uleb128 0x14
 5378 010b 2E       		.uleb128 0x2e
 5379 010c 01       		.byte	0x1
 5380 010d 03       		.uleb128 0x3
 5381 010e 0E       		.uleb128 0xe
 5382 010f 3A       		.uleb128 0x3a
 5383 0110 0B       		.uleb128 0xb
 5384 0111 3B       		.uleb128 0x3b
 5385 0112 05       		.uleb128 0x5
 5386 0113 27       		.uleb128 0x27
 5387 0114 19       		.uleb128 0x19
 5388 0115 49       		.uleb128 0x49
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 111


 5389 0116 13       		.uleb128 0x13
 5390 0117 11       		.uleb128 0x11
 5391 0118 01       		.uleb128 0x1
 5392 0119 12       		.uleb128 0x12
 5393 011a 06       		.uleb128 0x6
 5394 011b 40       		.uleb128 0x40
 5395 011c 18       		.uleb128 0x18
 5396 011d 9642     		.uleb128 0x2116
 5397 011f 19       		.uleb128 0x19
 5398 0120 01       		.uleb128 0x1
 5399 0121 13       		.uleb128 0x13
 5400 0122 00       		.byte	0
 5401 0123 00       		.byte	0
 5402 0124 15       		.uleb128 0x15
 5403 0125 05       		.uleb128 0x5
 5404 0126 00       		.byte	0
 5405 0127 03       		.uleb128 0x3
 5406 0128 08       		.uleb128 0x8
 5407 0129 3A       		.uleb128 0x3a
 5408 012a 0B       		.uleb128 0xb
 5409 012b 3B       		.uleb128 0x3b
 5410 012c 05       		.uleb128 0x5
 5411 012d 49       		.uleb128 0x49
 5412 012e 13       		.uleb128 0x13
 5413 012f 02       		.uleb128 0x2
 5414 0130 18       		.uleb128 0x18
 5415 0131 00       		.byte	0
 5416 0132 00       		.byte	0
 5417 0133 16       		.uleb128 0x16
 5418 0134 05       		.uleb128 0x5
 5419 0135 00       		.byte	0
 5420 0136 03       		.uleb128 0x3
 5421 0137 0E       		.uleb128 0xe
 5422 0138 3A       		.uleb128 0x3a
 5423 0139 0B       		.uleb128 0xb
 5424 013a 3B       		.uleb128 0x3b
 5425 013b 05       		.uleb128 0x5
 5426 013c 49       		.uleb128 0x49
 5427 013d 13       		.uleb128 0x13
 5428 013e 02       		.uleb128 0x2
 5429 013f 18       		.uleb128 0x18
 5430 0140 00       		.byte	0
 5431 0141 00       		.byte	0
 5432 0142 17       		.uleb128 0x17
 5433 0143 34       		.uleb128 0x34
 5434 0144 00       		.byte	0
 5435 0145 03       		.uleb128 0x3
 5436 0146 08       		.uleb128 0x8
 5437 0147 3A       		.uleb128 0x3a
 5438 0148 0B       		.uleb128 0xb
 5439 0149 3B       		.uleb128 0x3b
 5440 014a 05       		.uleb128 0x5
 5441 014b 49       		.uleb128 0x49
 5442 014c 13       		.uleb128 0x13
 5443 014d 02       		.uleb128 0x2
 5444 014e 18       		.uleb128 0x18
 5445 014f 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 112


 5446 0150 00       		.byte	0
 5447 0151 18       		.uleb128 0x18
 5448 0152 34       		.uleb128 0x34
 5449 0153 00       		.byte	0
 5450 0154 03       		.uleb128 0x3
 5451 0155 0E       		.uleb128 0xe
 5452 0156 3A       		.uleb128 0x3a
 5453 0157 0B       		.uleb128 0xb
 5454 0158 3B       		.uleb128 0x3b
 5455 0159 05       		.uleb128 0x5
 5456 015a 49       		.uleb128 0x49
 5457 015b 13       		.uleb128 0x13
 5458 015c 02       		.uleb128 0x2
 5459 015d 18       		.uleb128 0x18
 5460 015e 00       		.byte	0
 5461 015f 00       		.byte	0
 5462 0160 19       		.uleb128 0x19
 5463 0161 01       		.uleb128 0x1
 5464 0162 01       		.byte	0x1
 5465 0163 49       		.uleb128 0x49
 5466 0164 13       		.uleb128 0x13
 5467 0165 01       		.uleb128 0x1
 5468 0166 13       		.uleb128 0x13
 5469 0167 00       		.byte	0
 5470 0168 00       		.byte	0
 5471 0169 1A       		.uleb128 0x1a
 5472 016a 21       		.uleb128 0x21
 5473 016b 00       		.byte	0
 5474 016c 49       		.uleb128 0x49
 5475 016d 13       		.uleb128 0x13
 5476 016e 2F       		.uleb128 0x2f
 5477 016f 0B       		.uleb128 0xb
 5478 0170 00       		.byte	0
 5479 0171 00       		.byte	0
 5480 0172 1B       		.uleb128 0x1b
 5481 0173 17       		.uleb128 0x17
 5482 0174 01       		.byte	0x1
 5483 0175 0B       		.uleb128 0xb
 5484 0176 0B       		.uleb128 0xb
 5485 0177 3A       		.uleb128 0x3a
 5486 0178 0B       		.uleb128 0xb
 5487 0179 3B       		.uleb128 0x3b
 5488 017a 05       		.uleb128 0x5
 5489 017b 01       		.uleb128 0x1
 5490 017c 13       		.uleb128 0x13
 5491 017d 00       		.byte	0
 5492 017e 00       		.byte	0
 5493 017f 1C       		.uleb128 0x1c
 5494 0180 0D       		.uleb128 0xd
 5495 0181 00       		.byte	0
 5496 0182 03       		.uleb128 0x3
 5497 0183 08       		.uleb128 0x8
 5498 0184 3A       		.uleb128 0x3a
 5499 0185 0B       		.uleb128 0xb
 5500 0186 3B       		.uleb128 0x3b
 5501 0187 05       		.uleb128 0x5
 5502 0188 49       		.uleb128 0x49
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 113


 5503 0189 13       		.uleb128 0x13
 5504 018a 00       		.byte	0
 5505 018b 00       		.byte	0
 5506 018c 1D       		.uleb128 0x1d
 5507 018d 0B       		.uleb128 0xb
 5508 018e 01       		.byte	0x1
 5509 018f 11       		.uleb128 0x11
 5510 0190 01       		.uleb128 0x1
 5511 0191 12       		.uleb128 0x12
 5512 0192 06       		.uleb128 0x6
 5513 0193 01       		.uleb128 0x1
 5514 0194 13       		.uleb128 0x13
 5515 0195 00       		.byte	0
 5516 0196 00       		.byte	0
 5517 0197 1E       		.uleb128 0x1e
 5518 0198 2E       		.uleb128 0x2e
 5519 0199 01       		.byte	0x1
 5520 019a 3F       		.uleb128 0x3f
 5521 019b 19       		.uleb128 0x19
 5522 019c 03       		.uleb128 0x3
 5523 019d 0E       		.uleb128 0xe
 5524 019e 3A       		.uleb128 0x3a
 5525 019f 0B       		.uleb128 0xb
 5526 01a0 3B       		.uleb128 0x3b
 5527 01a1 05       		.uleb128 0x5
 5528 01a2 27       		.uleb128 0x27
 5529 01a3 19       		.uleb128 0x19
 5530 01a4 49       		.uleb128 0x49
 5531 01a5 13       		.uleb128 0x13
 5532 01a6 11       		.uleb128 0x11
 5533 01a7 01       		.uleb128 0x1
 5534 01a8 12       		.uleb128 0x12
 5535 01a9 06       		.uleb128 0x6
 5536 01aa 40       		.uleb128 0x40
 5537 01ab 18       		.uleb128 0x18
 5538 01ac 9642     		.uleb128 0x2116
 5539 01ae 19       		.uleb128 0x19
 5540 01af 01       		.uleb128 0x1
 5541 01b0 13       		.uleb128 0x13
 5542 01b1 00       		.byte	0
 5543 01b2 00       		.byte	0
 5544 01b3 1F       		.uleb128 0x1f
 5545 01b4 18       		.uleb128 0x18
 5546 01b5 00       		.byte	0
 5547 01b6 00       		.byte	0
 5548 01b7 00       		.byte	0
 5549 01b8 20       		.uleb128 0x20
 5550 01b9 2E       		.uleb128 0x2e
 5551 01ba 01       		.byte	0x1
 5552 01bb 3F       		.uleb128 0x3f
 5553 01bc 19       		.uleb128 0x19
 5554 01bd 03       		.uleb128 0x3
 5555 01be 0E       		.uleb128 0xe
 5556 01bf 3A       		.uleb128 0x3a
 5557 01c0 0B       		.uleb128 0xb
 5558 01c1 3B       		.uleb128 0x3b
 5559 01c2 05       		.uleb128 0x5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 114


 5560 01c3 27       		.uleb128 0x27
 5561 01c4 19       		.uleb128 0x19
 5562 01c5 49       		.uleb128 0x49
 5563 01c6 13       		.uleb128 0x13
 5564 01c7 11       		.uleb128 0x11
 5565 01c8 01       		.uleb128 0x1
 5566 01c9 12       		.uleb128 0x12
 5567 01ca 06       		.uleb128 0x6
 5568 01cb 40       		.uleb128 0x40
 5569 01cc 18       		.uleb128 0x18
 5570 01cd 9642     		.uleb128 0x2116
 5571 01cf 19       		.uleb128 0x19
 5572 01d0 00       		.byte	0
 5573 01d1 00       		.byte	0
 5574 01d2 00       		.byte	0
 5575              		.section	.debug_aranges,"",%progbits
 5576 0000 84000000 		.4byte	0x84
 5577 0004 0200     		.2byte	0x2
 5578 0006 00000000 		.4byte	.Ldebug_info0
 5579 000a 04       		.byte	0x4
 5580 000b 00       		.byte	0
 5581 000c 0000     		.2byte	0
 5582 000e 0000     		.2byte	0
 5583 0010 00000000 		.4byte	.LFB0
 5584 0014 2E000000 		.4byte	.LFE0-.LFB0
 5585 0018 00000000 		.4byte	.LFB1
 5586 001c 1C000000 		.4byte	.LFE1-.LFB1
 5587 0020 00000000 		.4byte	.LFB2
 5588 0024 3A000000 		.4byte	.LFE2-.LFB2
 5589 0028 00000000 		.4byte	.LFB3
 5590 002c 2E000000 		.4byte	.LFE3-.LFB3
 5591 0030 00000000 		.4byte	.LFB4
 5592 0034 48000000 		.4byte	.LFE4-.LFB4
 5593 0038 00000000 		.4byte	.LFB5
 5594 003c A0000000 		.4byte	.LFE5-.LFB5
 5595 0040 00000000 		.4byte	.LFB6
 5596 0044 B8010000 		.4byte	.LFE6-.LFB6
 5597 0048 00000000 		.4byte	.LFB7
 5598 004c CE000000 		.4byte	.LFE7-.LFB7
 5599 0050 00000000 		.4byte	.LFB8
 5600 0054 DE000000 		.4byte	.LFE8-.LFB8
 5601 0058 00000000 		.4byte	.LFB9
 5602 005c D4040000 		.4byte	.LFE9-.LFB9
 5603 0060 00000000 		.4byte	.LFB10
 5604 0064 18050000 		.4byte	.LFE10-.LFB10
 5605 0068 00000000 		.4byte	.LFB11
 5606 006c 60090000 		.4byte	.LFE11-.LFB11
 5607 0070 00000000 		.4byte	.LFB12
 5608 0074 38000000 		.4byte	.LFE12-.LFB12
 5609 0078 00000000 		.4byte	.LFB13
 5610 007c 2C000000 		.4byte	.LFE13-.LFB13
 5611 0080 00000000 		.4byte	0
 5612 0084 00000000 		.4byte	0
 5613              		.section	.debug_ranges,"",%progbits
 5614              	.Ldebug_ranges0:
 5615 0000 00000000 		.4byte	.LFB0
 5616 0004 2E000000 		.4byte	.LFE0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 115


 5617 0008 00000000 		.4byte	.LFB1
 5618 000c 1C000000 		.4byte	.LFE1
 5619 0010 00000000 		.4byte	.LFB2
 5620 0014 3A000000 		.4byte	.LFE2
 5621 0018 00000000 		.4byte	.LFB3
 5622 001c 2E000000 		.4byte	.LFE3
 5623 0020 00000000 		.4byte	.LFB4
 5624 0024 48000000 		.4byte	.LFE4
 5625 0028 00000000 		.4byte	.LFB5
 5626 002c A0000000 		.4byte	.LFE5
 5627 0030 00000000 		.4byte	.LFB6
 5628 0034 B8010000 		.4byte	.LFE6
 5629 0038 00000000 		.4byte	.LFB7
 5630 003c CE000000 		.4byte	.LFE7
 5631 0040 00000000 		.4byte	.LFB8
 5632 0044 DE000000 		.4byte	.LFE8
 5633 0048 00000000 		.4byte	.LFB9
 5634 004c D4040000 		.4byte	.LFE9
 5635 0050 00000000 		.4byte	.LFB10
 5636 0054 18050000 		.4byte	.LFE10
 5637 0058 00000000 		.4byte	.LFB11
 5638 005c 60090000 		.4byte	.LFE11
 5639 0060 00000000 		.4byte	.LFB12
 5640 0064 38000000 		.4byte	.LFE12
 5641 0068 00000000 		.4byte	.LFB13
 5642 006c 2C000000 		.4byte	.LFE13
 5643 0070 00000000 		.4byte	0
 5644 0074 00000000 		.4byte	0
 5645              		.section	.debug_line,"",%progbits
 5646              	.Ldebug_line0:
 5647 0000 09070000 		.section	.debug_str,"MS",%progbits,1
 5647      0200E801 
 5647      00000201 
 5647      FB0E0D00 
 5647      01010101 
 5648              	.LASF52:
 5649 0000 65787032 		.ascii	"exp2\000"
 5649      00
 5650              	.LASF43:
 5651 0005 64696666 		.ascii	"diff\000"
 5651      00
 5652              	.LASF22:
 5653 000a 5F6F7574 		.ascii	"_out_buffer\000"
 5653      5F627566 
 5653      66657200 
 5654              	.LASF11:
 5655 0016 75696E74 		.ascii	"uint64_t\000"
 5655      36345F74 
 5655      00
 5656              	.LASF2:
 5657 001f 73686F72 		.ascii	"short int\000"
 5657      7420696E 
 5657      7400
 5658              	.LASF15:
 5659 0029 73697A65 		.ascii	"size_t\000"
 5659      5F7400
 5660              	.LASF54:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 116


 5661 0030 6D696E77 		.ascii	"minwidth\000"
 5661      69647468 
 5661      00
 5662              	.LASF40:
 5663 0039 73697A65 		.ascii	"sizetype\000"
 5663      74797065 
 5663      00
 5664              	.LASF28:
 5665 0042 5F61746F 		.ascii	"_atoi\000"
 5665      6900
 5666              	.LASF49:
 5667 0048 5F65746F 		.ascii	"_etoa\000"
 5667      6100
 5668              	.LASF14:
 5669 004e 76615F6C 		.ascii	"va_list\000"
 5669      69737400 
 5670              	.LASF57:
 5671 0056 666F726D 		.ascii	"format\000"
 5671      617400
 5672              	.LASF46:
 5673 005d 66726163 		.ascii	"frac\000"
 5673      00
 5674              	.LASF38:
 5675 0062 76616C75 		.ascii	"value\000"
 5675      6500
 5676              	.LASF12:
 5677 0068 75696E74 		.ascii	"uintptr_t\000"
 5677      7074725F 
 5677      7400
 5678              	.LASF32:
 5679 0072 73746172 		.ascii	"start_idx\000"
 5679      745F6964 
 5679      7800
 5680              	.LASF64:
 5681 007c 6C765F73 		.ascii	"lv_snprintf\000"
 5681      6E707269 
 5681      6E746600 
 5682              	.LASF30:
 5683 0088 77696474 		.ascii	"width\000"
 5683      6800
 5684              	.LASF51:
 5685 008e 636F6E76 		.ascii	"conv\000"
 5685      00
 5686              	.LASF6:
 5687 0093 6C6F6E67 		.ascii	"long long int\000"
 5687      206C6F6E 
 5687      6720696E 
 5687      7400
 5688              	.LASF63:
 5689 00a1 5F5F7661 		.ascii	"__va_list\000"
 5689      5F6C6973 
 5689      7400
 5690              	.LASF60:
 5691 00ab 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5691      43313120 
 5691      352E342E 
 5691      31203230 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 117


 5691      31363036 
 5692 00de 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 5692      20726576 
 5692      6973696F 
 5692      6E203233 
 5692      37373135 
 5693 0111 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 5693      70202D6D 
 5693      6670753D 
 5693      66707634 
 5693      2D73702D 
 5694 0144 65637469 		.ascii	"ections -ffat-lto-objects\000"
 5694      6F6E7320 
 5694      2D666661 
 5694      742D6C74 
 5694      6F2D6F62 
 5695              	.LASF61:
 5696 015e 2E2E5C2E 		.ascii	"..\\..\\..\\lvgl\\version_6.1.2\\lvgl\\src\\lv_misc"
 5696      2E5C2E2E 
 5696      5C6C7667 
 5696      6C5C7665 
 5696      7273696F 
 5697 018a 5C6C765F 		.ascii	"\\lv_printf.c\000"
 5697      7072696E 
 5697      74662E63 
 5697      00
 5698              	.LASF33:
 5699 0197 5F6E746F 		.ascii	"_ntoa_format\000"
 5699      615F666F 
 5699      726D6174 
 5699      00
 5700              	.LASF42:
 5701 01a4 5F66746F 		.ascii	"_ftoa\000"
 5701      6100
 5702              	.LASF34:
 5703 01aa 6E656761 		.ascii	"negative\000"
 5703      74697665 
 5703      00
 5704              	.LASF23:
 5705 01b3 5F6F7574 		.ascii	"_out_null\000"
 5705      5F6E756C 
 5705      6C00
 5706              	.LASF53:
 5707 01bd 65787076 		.ascii	"expval\000"
 5707      616C00
 5708              	.LASF17:
 5709 01c4 6F75745F 		.ascii	"out_fct_type\000"
 5709      6663745F 
 5709      74797065 
 5709      00
 5710              	.LASF16:
 5711 01d1 6C6F6E67 		.ascii	"long double\000"
 5711      20646F75 
 5711      626C6500 
 5712              	.LASF1:
 5713 01dd 756E7369 		.ascii	"unsigned char\000"
 5713      676E6564 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 118


 5713      20636861 
 5713      7200
 5714              	.LASF37:
 5715 01eb 5F6E746F 		.ascii	"_ntoa_long\000"
 5715      615F6C6F 
 5715      6E6700
 5716              	.LASF0:
 5717 01f6 7369676E 		.ascii	"signed char\000"
 5717      65642063 
 5717      68617200 
 5718              	.LASF31:
 5719 0202 666C6167 		.ascii	"flags\000"
 5719      7300
 5720              	.LASF7:
 5721 0208 6C6F6E67 		.ascii	"long long unsigned int\000"
 5721      206C6F6E 
 5721      6720756E 
 5721      7369676E 
 5721      65642069 
 5722              	.LASF10:
 5723 021f 756E7369 		.ascii	"unsigned int\000"
 5723      676E6564 
 5723      20696E74 
 5723      00
 5724              	.LASF21:
 5725 022c 6D61786C 		.ascii	"maxlen\000"
 5725      656E00
 5726              	.LASF3:
 5727 0233 73686F72 		.ascii	"short unsigned int\000"
 5727      7420756E 
 5727      7369676E 
 5727      65642069 
 5727      6E7400
 5728              	.LASF25:
 5729 0246 5F737472 		.ascii	"_strnlen_s\000"
 5729      6E6C656E 
 5729      5F7300
 5730              	.LASF45:
 5731 0251 77686F6C 		.ascii	"whole\000"
 5731      6500
 5732              	.LASF50:
 5733 0257 5F5F6170 		.ascii	"__ap\000"
 5733      00
 5734              	.LASF18:
 5735 025c 63686172 		.ascii	"char\000"
 5735      00
 5736              	.LASF4:
 5737 0261 6C6F6E67 		.ascii	"long int\000"
 5737      20696E74 
 5737      00
 5738              	.LASF27:
 5739 026a 5F426F6F 		.ascii	"_Bool\000"
 5739      6C00
 5740              	.LASF8:
 5741 0270 5F5F7569 		.ascii	"__uint64_t\000"
 5741      6E743634 
 5741      5F7400
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 119


 5742              	.LASF26:
 5743 027b 5F69735F 		.ascii	"_is_digit\000"
 5743      64696769 
 5743      7400
 5744              	.LASF20:
 5745 0285 62756666 		.ascii	"buffer\000"
 5745      657200
 5746              	.LASF56:
 5747 028c 5F76736E 		.ascii	"_vsnprintf\000"
 5747      7072696E 
 5747      746600
 5748              	.LASF65:
 5749 0297 6C765F76 		.ascii	"lv_vsnprintf\000"
 5749      736E7072 
 5749      696E7466 
 5749      00
 5750              	.LASF41:
 5751 02a4 5F6E746F 		.ascii	"_ntoa_long_long\000"
 5751      615F6C6F 
 5751      6E675F6C 
 5751      6F6E6700 
 5752              	.LASF5:
 5753 02b4 6C6F6E67 		.ascii	"long unsigned int\000"
 5753      20756E73 
 5753      69676E65 
 5753      6420696E 
 5753      7400
 5754              	.LASF9:
 5755 02c6 5F5F7569 		.ascii	"__uintptr_t\000"
 5755      6E747074 
 5755      725F7400 
 5756              	.LASF19:
 5757 02d2 63686172 		.ascii	"character\000"
 5757      61637465 
 5757      7200
 5758              	.LASF29:
 5759 02dc 5F6F7574 		.ascii	"_out_rev\000"
 5759      5F726576 
 5759      00
 5760              	.LASF62:
 5761 02e5 433A5C55 		.ascii	"C:\\Users\\tmj32\\Documents\\TCNJ\\Senior_Project\\"
 5761      73657273 
 5761      5C746D6A 
 5761      33325C44 
 5761      6F63756D 
 5762 0312 4F736369 		.ascii	"Oscilloscope_Senior_Project\\tcom_engineering\\embe"
 5762      6C6C6F73 
 5762      636F7065 
 5762      5F53656E 
 5762      696F725F 
 5763 0343 645F7377 		.ascii	"d_sw\\tcom_app\\tcom_app_psoc6_lvgl6\\tcom_displ_te"
 5763      5C74636F 
 5763      6D5F6170 
 5763      705C7463 
 5763      6F6D5F61 
 5764 0373 73745F70 		.ascii	"st_psoc6.cydsn\000"
 5764      736F6336 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccnJfx6K.s 			page 120


 5764      2E637964 
 5764      736E00
 5765              	.LASF47:
 5766 0382 636F756E 		.ascii	"count\000"
 5766      7400
 5767              	.LASF24:
 5768 0388 6D617873 		.ascii	"maxsize\000"
 5768      697A6500 
 5769              	.LASF36:
 5770 0390 70726563 		.ascii	"prec\000"
 5770      00
 5771              	.LASF55:
 5772 0395 66776964 		.ascii	"fwidth\000"
 5772      746800
 5773              	.LASF13:
 5774 039c 5F5F676E 		.ascii	"__gnuc_va_list\000"
 5774      75635F76 
 5774      615F6C69 
 5774      737400
 5775              	.LASF39:
 5776 03ab 64696769 		.ascii	"digit\000"
 5776      7400
 5777              	.LASF48:
 5778 03b1 646F7562 		.ascii	"double\000"
 5778      6C6500
 5779              	.LASF59:
 5780 03b8 69735F6C 		.ascii	"is_ll\000"
 5780      6C00
 5781              	.LASF35:
 5782 03be 62617365 		.ascii	"base\000"
 5782      00
 5783              	.LASF44:
 5784 03c3 706F7731 		.ascii	"pow10\000"
 5784      3000
 5785              	.LASF58:
 5786 03c9 70726563 		.ascii	"precision\000"
 5786      6973696F 
 5786      6E00
 5787              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
