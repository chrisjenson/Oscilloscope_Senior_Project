ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_scb_spi.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SCB_ReadRxFifo,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	Cy_SCB_ReadRxFifo, %function
  25              	Cy_SCB_ReadRxFifo:
  26              	.LFB166:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_common.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \file cy_scb_common.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Provides common API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The Serial Communications Block (SCB) supports three serial communication 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * protocols: Serial Peripheral Interface (SPI), Universal Asynchronous Receiver 
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Transmitter (UART), and Inter Integrated Circuit (I2C or IIC). Only one of 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the protocols is supported by an SCB at any given time.
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this driver are in cy_scb_spi.h, 
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_uart.h, cy_scb_ezi2c.h, cy_scb_i2c.h respectively. Include cy_pdl.h 
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common Common
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_ezi2c  EZI2C (SCB)
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_i2c    I2C (SCB)
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_spi    SPI (SCB)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_uart   UART (SCB)
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \} */
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Common API for the Serial Communication Block.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is the common API that provides an interface to the SCB hardware.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C, SPI, and UART drivers use this common API.
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Most users will use individual drivers and do not need to use the common
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * API for the SCB. However, you can use the common SCB API to implement
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a custom driver based on the SCB hardware.
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this part of the driver are in 
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_common.h. You can include either of cy_scb_spi.h, cy_scb_uart.h, 
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_ezi2c.h, cy_scb_i2c.h depending on the desired functionality. 
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You can also include cy_pdl.h to get access to all functions and declarations 
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * in the PDL.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_configuration Configuration Considerations
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is not a driver and it does not require configuration.
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Refer to the SCB chapter of the technical reference manual (TRM).
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_MISRA MISRA-C Compliance
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>MISRA rule</th>
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Class (Required/Advisory)</th>
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Description</th>
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Description of Deviation(s)</th>
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>11.4</td>
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A</td>
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A cast should not be performed between a pointer to object type and
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         a different pointer to object type.</td>
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>The pointer to the buffer memory is void to allow handling of
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         The cast operation is safe because the configuration is verified
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         before operation is performed.
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         </td>
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_changelog Changelog
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 3


  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2">2.20</td>
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Flattened the organization of the driver source code into the single 
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         source directory and the single include directory.
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     </td>
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Driver library directory-structure simplification.</td>
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added register access layer. Use register access macros instead
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         of direct register access using dereferenced pointers.</td>
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Makes register access device-independent, so that the PDL does 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         not need to be recompiled for each supported part number.</td>
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>2.10</td>
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>None.</td>
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>SCB I2C driver updated.</td>
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2"> 2.0</td>
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added parameters validation for public API.
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Fixed functions which return interrupt status to return only defined
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         set of interrupt statuses.</td>
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>1.0</td>
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Initial version.</td>
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros Macros
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_functions Functions
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_data_structures Data Structures
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if !defined(CY_SCB_COMMON_H)
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_COMMON_H
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdint.h>
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stddef.h>
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdbool.h>
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device.h"
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device_headers.h"
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syslib.h"
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syspm.h"
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #ifdef CY_IP_MXSCB
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if defined(__cplusplus)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 4


 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** extern "C" {
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #endif
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                            Function Prototypes
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo    (CySCB_Type const *base);
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level);
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base);
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid  (CySCB_Type const *base);
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxFifo   (CySCB_Type *base);
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_WriteTxFifo   (CySCB_Type *base, uint32_t data);
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level);
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base);
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid  (CySCB_Type const *base);
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxComplete  (CySCB_Type const *base);
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxFifo   (CySCB_Type *base);
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode);
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base);
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base);
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask  (CySCB_Type const *base);
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base);
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base);
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask  (CySCB_Type const *base);
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base);
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base);
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask  (CySCB_Type const *base);
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base);
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearMasterInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base);
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask  (CySCB_Type const *base);
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base);
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSlaveInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 5


 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base);
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetI2CInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask  (CySCB_Type const *base);
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base);
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearI2CInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base);
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSpiInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask  (CySCB_Type const *base);
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base);
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSpiInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                         Internal Function Prototypes
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayNoCheck  (CySCB_Type const *base, void *buffer, uint32_t size);
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_ReadArray         (CySCB_Type const *base, void *buffer, uint32_t size);
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayBlocking (CySCB_Type const *base, void *buffer, uint32_t size);
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_Write             (CySCB_Type *base, uint32_t data);
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayNoCheck (CySCB_Type *base, void *buffer, uint32_t size);
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteArray        (CySCB_Type *base, void *buffer, uint32_t size);
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size);
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteString       (CySCB_Type *base, char_t const string[]);
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteDefaultArrayNoCheck(CySCB_Type *base, uint32_t txData, uint32_t size);
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteDefaultArray (CySCB_Type *base, uint32_t txData, uint32_t size);
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize (CySCB_Type const *base);
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_FwBlockReset(CySCB_Type *base);
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base);
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base);
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxFifoLevel   (CySCB_Type const *base);
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_functions */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                        API Constants
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_macros
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver major version */
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MAJOR    (2)
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver minor version */
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MINOR    (20)
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SCB driver identifier */
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_ID           CY_PDL_DRV_ID(0x2AU)
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 6


 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Position for SCB driver sub mode */
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SUB_MODE_Pos (13UL)
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_EZI2C_ID     (0x0UL << CY_SCB_SUB_MODE_Pos)
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ID       (0x1UL << CY_SCB_SUB_MODE_Pos)
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_ID       (0x2UL << CY_SCB_SUB_MODE_Pos)
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_ID      (0x3UL << CY_SCB_SUB_MODE_Pos)
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_intr_cause SCB Interrupt Causes
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Master interrupt sources */
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR SCB_INTR_CAUSE_M_Msk
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Slave interrupt sources  */
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR  SCB_INTR_CAUSE_S_Msk
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from TX interrupt sources */
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR     SCB_INTR_CAUSE_TX_Msk
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from RX interrupt sources */
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR     SCB_INTR_CAUSE_RX_Msk
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from I2C externally clocked interrupt sources */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR    SCB_INTR_CAUSE_I2C_EC_Msk
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from SPI externally clocked interrupt sources */
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR    SCB_INTR_CAUSE_SPI_EC_Msk
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_intr_cause */
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_tx_intr TX Interrupt Statuses
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the TX FIFO is less than the value
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * of the TX FIFO level
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_LEVEL           SCB_INTR_TX_TRIGGER_Msk
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is not full */
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_NOT_FULL        SCB_INTR_TX_NOT_FULL_Msk
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is empty */
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_EMPTY           SCB_INTR_TX_EMPTY_Msk
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full TX FIFO */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_OVERFLOW        SCB_INTR_TX_OVERFLOW_Msk
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 7


 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty TX FIFO */
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UNDERFLOW       SCB_INTR_TX_UNDERFLOW_Msk
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The UART transfer is complete: all data elements from the TX FIFO are sent
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_DONE       SCB_INTR_TX_UART_DONE_Msk
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SmartCard only: UART received a NACK */
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_NACK       SCB_INTR_TX_UART_NACK_Msk
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SmartCard only: the value on the TX line of the UART does not match the
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value on the RX line
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_ARB_LOST   SCB_INTR_TX_UART_ARB_LOST_Msk
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_tx_intr */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_rx_intr RX Interrupt Statuses
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the RX FIFO is greater than the value of the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * RX FIFO level
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_LEVEL             SCB_INTR_RX_TRIGGER_Msk
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is not empty */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_NOT_EMPTY         SCB_INTR_RX_NOT_EMPTY_Msk
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is full */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_FULL              SCB_INTR_RX_FULL_Msk
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full RX FIFO */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_OVERFLOW          SCB_INTR_RX_OVERFLOW_Msk
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty RX FIFO */
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UNDERFLOW         SCB_INTR_RX_UNDERFLOW_Msk
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART framing error detected */
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_FRAME_ERROR  SCB_INTR_RX_FRAME_ERROR_Msk
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART parity error detected  */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_PARITY_ERROR SCB_INTR_RX_PARITY_ERROR_Msk
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART break detected */
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_BREAK_DETECT SCB_INTR_RX_BREAK_DETECT_Msk
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_rx_intr */
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_slave_intr Slave Interrupt Statuses
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * I2C slave lost arbitration: the value driven on the SDA line is not the same
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * as the value observed on the SDA line
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 8


 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ARB_LOST      SCB_INTR_S_I2C_ARB_LOST_Msk
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a NAK */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_NACK          SCB_INTR_S_I2C_NACK_Msk
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received  an ACK */
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ACK           SCB_INTR_S_I2C_ACK_Msk
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * A Stop or Repeated Start event for a write transfer intended for this slave
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * was detected.
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_WRITE_STOP    SCB_INTR_S_I2C_WRITE_STOP_Msk
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A Stop or Repeated Start event intended for this slave was detected */
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_STOP          SCB_INTR_S_I2C_STOP_Msk
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a Start condition */
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_START         SCB_INTR_S_I2C_START_Msk
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received the matching address */
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH    SCB_INTR_S_I2C_ADDR_MATCH_Msk
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C Slave received the general call address */
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_GENERAL_ADDR  SCB_INTR_S_I2C_GENERAL_Msk
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave bus error (detection of unexpected Start or Stop condition) */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_BUS_ERROR     SCB_INTR_S_I2C_BUS_ERROR_Msk
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI slave select line is deselected at an expected time during an
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SPI transfer.
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_SPI_BUS_ERROR     SCB_INTR_S_SPI_BUS_ERROR_Msk
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_slave_intr */
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_master_intr Master Interrupt Statuses
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master lost arbitration */
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ARB_LOST    SCB_INTR_M_I2C_ARB_LOST_Msk
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received a NACK */
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_NACK        SCB_INTR_M_I2C_NACK_Msk
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received an ACK */
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ACK         SCB_INTR_M_I2C_ACK_Msk
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master generated a Stop */
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_STOP        SCB_INTR_M_I2C_STOP_Msk
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master bus error (detection of unexpected START or STOP condition)
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_BUS_ERROR   SCB_INTR_M_I2C_BUS_ERROR_Msk
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 9


 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI master transfer is complete: all data elements transferred from the
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * TX FIFO and TX shift register.
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_SPI_DONE        SCB_INTR_M_SPI_DONE_Msk
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_master_intr */
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_i2c_intr I2C Interrupt Statuses
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the I2C slave received the matching address.
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Note that this interrupt source triggers in active mode.
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_WAKEUP     SCB_INTR_I2C_EC_WAKE_UP_Msk
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_i2c_intr */
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_SpiIntrStatuses SPI Interrupt Statuses
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the SPI slave detects an active edge of the slave select
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * signal. Note that this interrupt source triggers in active mode.
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_WAKEUP     SCB_INTR_SPI_EC_WAKE_UP_Msk
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_SpiIntrStatuses */
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                           Internal Constants
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Default registers values */
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_DEF_VAL         (_VAL2FLD(SCB_CTRL_OVS, 15UL) | \
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_CTRL_MODE, 3UL))
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_DEF_VAL     (_VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_READY_DATA_ACK, 1UL)      | \
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_NOT_READY_DATA_NACK, 1UL) | \
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_GENERAL_IGNORE, 1UL)      | \
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_ADDR_ACK, 1UL)      | \
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_DATA_ACK, 1UL)      | \
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_ADDR_NACK, 1UL) | \
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_DATA_NACK, 1UL))
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_DEF_VAL      (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 3UL)   | \
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_SEL, 1UL)    | \
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SCL_IN_FILT_SEL, 1UL)    | \
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT0_TRIM, 2UL) | \
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT1_TRIM, 2UL) | \
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT2_TRIM, 2UL))
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_DEF_VAL     _VAL2FLD(SCB_SPI_CTRL_MODE, 3UL)
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 10


 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_CTRL_DEF_VAL    _VAL2FLD(SCB_UART_CTRL_MODE, 3UL)
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_DEF_VAL (_VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS, 2UL) | \
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, 10UL))
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_DEF_VAL _VAL2FLD(SCB_UART_TX_CTRL_STOP_BITS, 2UL)
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_CTRL_DEF_VAL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, 7UL) | \
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_RX_CTRL_MSB_FIRST,  1UL))
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_CTRL_DEF_VAL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, 7UL) | \
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_TX_CTRL_MSB_FIRST,  1UL))
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SCB CTRL modes */
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_I2C   (0UL)
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_SPI   (1UL)
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_UART  (2UL)
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to set the I2C mode */
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Pos    SCB_I2C_CTRL_SLAVE_MODE_Pos
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Msk    (SCB_I2C_CTRL_SLAVE_MODE_Msk | \
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      SCB_I2C_CTRL_MASTER_MODE_Msk)
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Cypress ID #282226:
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SCB_I2C_CFG_SDA_IN_FILT_TRIM[1]: SCB clock enable (1), clock disable (0).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_CLK_ENABLE_Msk  (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 2UL))
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* I2C has fixed data width */
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_DATA_WIDTH   (7UL)
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* RX and TX control register values */
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_RX_CTRL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_RX_CTRL_MSB_FIRST_Msk)
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_TX_CTRL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_TX_CTRL_MSB_FIRST_Msk | SCB_TX_CTRL_OPEN_DRAIN_Msk)
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to make an address byte */
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Pos  (1UL)
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Msk  (0xFEUL)
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI slave select polarity */
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Pos   SCB_SPI_CTRL_SSEL_POLARITY0_Pos
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Msk   (SCB_SPI_CTRL_SSEL_POLARITY0_Msk | \
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY1_Msk | \
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY2_Msk | \
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY3_Msk)
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI clock modes: CPHA and CPOL */
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Pos    SCB_SPI_CTRL_CPHA_Pos
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Msk    (SCB_SPI_CTRL_CPHA_Msk | SCB_SPI_CTRL_CPOL_Msk)
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* UART parity and parity enable combination */
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Msk      (SCB_UART_RX_CTRL_PARITY_ENABLED_Msk | \
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_RX_CTRL_PARITY_Msk)
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Pos      SCB_UART_RX_CTRL_PARITY_Pos
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 11


 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Msk      (SCB_UART_TX_CTRL_PARITY_ENABLED_Msk | \
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_TX_CTRL_PARITY_Msk)
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Pos      SCB_UART_TX_CTRL_PARITY_Pos
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Max number of bits for byte mode */
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_BYTE_WIDTH   (8UL)
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Single unit to wait */
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_WAIT_1_UNIT  (1U)
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Clear interrupt sources */
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CLEAR_ALL_INTR_SRC   (0UL)
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Hardware FIFO size: EZ_DATA_NR / 4 = (512 / 4) = 128 */
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_FIFO_SIZE            (128UL)
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Provides a list of allowed sources */
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_MASK     (CY_SCB_TX_INTR_LEVEL     | CY_SCB_TX_INTR_NOT_FULL  | CY_SCB_TX_IN
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_OVERFLOW  | CY_SCB_TX_INTR_UNDERFLOW | CY_SCB_TX_IN
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_MASK     (CY_SCB_RX_INTR_LEVEL             | CY_SCB_RX_INTR_NOT_EMPTY | CY_S
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_OVERFLOW          | CY_SCB_RX_INTR_UNDERFLOW       
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_FRAME_ERROR  | CY_SCB_RX_INTR_UART_PARITY_ERRO
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_BREAK_DETECT)
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_MASK  (CY_SCB_SLAVE_INTR_I2C_ARB_LOST   | CY_SCB_SLAVE_INTR_I2C_NACK | CY
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_WRITE_STOP | CY_SCB_SLAVE_INTR_I2C_STOP | CY
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH | CY_SCB_SLAVE_INTR_I2C_GENERAL_A
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_BUS_ERROR  | CY_SCB_SLAVE_INTR_SPI_BUS_ERROR
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_MASK (CY_SCB_MASTER_INTR_I2C_ARB_LOST  | CY_SCB_MASTER_INTR_I2C_NACK | \
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_ACK       | CY_SCB_MASTER_INTR_I2C_STOP | \
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_BUS_ERROR | CY_SCB_MASTER_INTR_SPI_DONE)
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_MASK    CY_SCB_I2C_INTR_WAKEUP
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_MASK    CY_SCB_SPI_INTR_WAKEUP
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_INTR_VALID(intr, mask)            ( 0UL == ((intr) & ((uint32_t) ~(mask))) )
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level)  ((level) < Cy_SCB_GetFifoSize(base))
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_ADDR_VALID(addr)              ( (0U == ((addr) & 0x80U)) )
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_BUFFER_VALID(buffer, size)        ( (NULL != (buffer)) && ((size) > 0UL) )
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_BUFFER_VALID(buffer, size)    ( (0UL == (size)) ? true : (NULL != (buffer)) )
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros */
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                       In-line Function Implementation
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 12


 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ReadRxFifo
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Reads a data element directly out of the RX FIFO.
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the RX FIFO has data before reading it.
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data from RX FIFO.
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo(CySCB_Type const *base)
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
  28              		.loc 1 619 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_RX_FIFO_RD(base));
  41              		.loc 1 620 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a D3F84033 		ldr	r3, [r3, #832]
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
  44              		.loc 1 621 0
  45 000e 1846     		mov	r0, r3
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0018 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE166:
  57              		.size	Cy_SCB_ReadRxFifo, .-Cy_SCB_ReadRxFifo
  58 001a 00BF     		.section	.rodata
  59              		.align	2
  60              	.LC0:
  61 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
  61      72617465 
  61      645F536F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 13


  61      75726365 
  61      5C50536F 
  62 002e 7363625C 		.ascii	"scb\\cy_scb_common.h\000"
  62      63795F73 
  62      63625F63 
  62      6F6D6D6F 
  62      6E2E6800 
  63              		.section	.text.Cy_SCB_SetRxFifoLevel,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	Cy_SCB_SetRxFifoLevel, %function
  68              	Cy_SCB_SetRxFifoLevel:
  69              	.LFB167:
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxFifoLevel
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX FIFO level. When there are more data elements in the RX FIFO than
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the RX FIFO level interrupt is triggered.
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are more data elements in the FIFO than this level, the RX level
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level)
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
  70              		.loc 1 639 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
  84              		.loc 1 640 0
  85 000a 7868     		ldr	r0, [r7, #4]
  86 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
  87 0010 0246     		mov	r2, r0
  88 0012 3B68     		ldr	r3, [r7]
  89 0014 9A42     		cmp	r2, r3
  90 0016 04D8     		bhi	.L4
  91              		.loc 1 640 0 is_stmt 0 discriminator 1
  92 0018 4FF42071 		mov	r1, #640
  93 001c 0848     		ldr	r0, .L5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 14


  94 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  95              	.L4:
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_RX_FIFO_CTRL(base), SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, level);
  96              		.loc 1 642 0 is_stmt 1
  97 0022 7B68     		ldr	r3, [r7, #4]
  98 0024 D3F80433 		ldr	r3, [r3, #772]
  99 0028 23F0FF02 		bic	r2, r3, #255
 100 002c 3B68     		ldr	r3, [r7]
 101 002e DBB2     		uxtb	r3, r3
 102 0030 1A43     		orrs	r2, r2, r3
 103 0032 7B68     		ldr	r3, [r7, #4]
 104 0034 C3F80423 		str	r2, [r3, #772]
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 105              		.loc 1 643 0
 106 0038 00BF     		nop
 107 003a 0837     		adds	r7, r7, #8
 108              		.cfi_def_cfa_offset 8
 109 003c BD46     		mov	sp, r7
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 003e 80BD     		pop	{r7, pc}
 113              	.L6:
 114              		.align	2
 115              	.L5:
 116 0040 00000000 		.word	.LC0
 117              		.cfi_endproc
 118              	.LFE167:
 119              		.size	Cy_SCB_SetRxFifoLevel, .-Cy_SCB_SetRxFifoLevel
 120              		.section	.text.Cy_SCB_GetNumInRxFifo,"ax",%progbits
 121              		.align	2
 122              		.thumb
 123              		.thumb_func
 124              		.type	Cy_SCB_GetNumInRxFifo, %function
 125              	Cy_SCB_GetNumInRxFifo:
 126              	.LFB168:
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInRxFifo
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the RX FIFO.
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in RX FIFO.
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base)
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 127              		.loc 1 660 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 8
 130              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 15


 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0002 83B0     		sub	sp, sp, #12
 136              		.cfi_def_cfa_offset 16
 137 0004 00AF     		add	r7, sp, #0
 138              		.cfi_def_cfa_register 7
 139 0006 7860     		str	r0, [r7, #4]
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_USED, SCB_RX_FIFO_STATUS(base));
 140              		.loc 1 661 0
 141 0008 7B68     		ldr	r3, [r7, #4]
 142 000a D3F80833 		ldr	r3, [r3, #776]
 143 000e C3F30803 		ubfx	r3, r3, #0, #9
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 144              		.loc 1 662 0
 145 0012 1846     		mov	r0, r3
 146 0014 0C37     		adds	r7, r7, #12
 147              		.cfi_def_cfa_offset 4
 148 0016 BD46     		mov	sp, r7
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0018 5DF8047B 		ldr	r7, [sp], #4
 152              		.cfi_restore 7
 153              		.cfi_def_cfa_offset 0
 154 001c 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE168:
 157              		.size	Cy_SCB_GetNumInRxFifo, .-Cy_SCB_GetNumInRxFifo
 158 001e 00BF     		.section	.text.Cy_SCB_ClearRxFifo,"ax",%progbits
 159              		.align	2
 160              		.thumb
 161              		.thumb_func
 162              		.type	Cy_SCB_ClearRxFifo, %function
 163              	Cy_SCB_ClearRxFifo:
 164              	.LFB170:
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxSrValid
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the RX FIFO Shift Register valid bit.
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - RX shift register valid; 0 - RX shift register not valid.
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid(CySCB_Type const *base)
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_SR_VALID, SCB_RX_FIFO_STATUS(base));
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 16


 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxFifo
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX FIFO and shifter.
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If there is partial data in the shifter, it is cleared and lost.
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxFifo(CySCB_Type* base)
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 165              		.loc 1 698 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 80B4     		push	{r7}
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              		.cfi_def_cfa_offset 16
 175 0004 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) |= (uint32_t)  SCB_RX_FIFO_CTRL_CLEAR_Msk;
 178              		.loc 1 699 0
 179 0008 7B68     		ldr	r3, [r7, #4]
 180 000a D3F80433 		ldr	r3, [r3, #772]
 181 000e 43F48032 		orr	r2, r3, #65536
 182 0012 7B68     		ldr	r3, [r7, #4]
 183 0014 C3F80423 		str	r2, [r3, #772]
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) &= (uint32_t) ~SCB_RX_FIFO_CTRL_CLEAR_Msk;
 184              		.loc 1 700 0
 185 0018 7B68     		ldr	r3, [r7, #4]
 186 001a D3F80433 		ldr	r3, [r3, #772]
 187 001e 23F48032 		bic	r2, r3, #65536
 188 0022 7B68     		ldr	r3, [r7, #4]
 189 0024 C3F80423 		str	r2, [r3, #772]
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_RX_FIFO_CTRL(base);
 190              		.loc 1 702 0
 191 0028 7B68     		ldr	r3, [r7, #4]
 192 002a D3F80433 		ldr	r3, [r3, #772]
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 193              		.loc 1 703 0
 194 002e 00BF     		nop
 195 0030 0C37     		adds	r7, r7, #12
 196              		.cfi_def_cfa_offset 4
 197 0032 BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 0034 5DF8047B 		ldr	r7, [sp], #4
 201              		.cfi_restore 7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 17


 202              		.cfi_def_cfa_offset 0
 203 0038 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE170:
 206              		.size	Cy_SCB_ClearRxFifo, .-Cy_SCB_ClearRxFifo
 207 003a 00BF     		.section	.text.Cy_SCB_SetTxFifoLevel,"ax",%progbits
 208              		.align	2
 209              		.thumb
 210              		.thumb_func
 211              		.type	Cy_SCB_SetTxFifoLevel, %function
 212              	Cy_SCB_SetTxFifoLevel:
 213              	.LFB172:
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_WriteTxFifo
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes data directly into the TX FIFO.
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the TX FIFO is not full before writing
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * into it.
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param data
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data to write to the TX FIFO.
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_WriteTxFifo(CySCB_Type* base, uint32_t data)
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_WR(base) = data;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxFifoLevel
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the TX FIFO level. When there are fewer data elements in the TX FIFO than
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the TX FIFO level interrupt is triggered.
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are fewer data elements in the FIFO than this level, the TX level
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level)
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 214              		.loc 1 743 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 18


 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 226 0006 7860     		str	r0, [r7, #4]
 227 0008 3960     		str	r1, [r7]
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
 228              		.loc 1 744 0
 229 000a 7868     		ldr	r0, [r7, #4]
 230 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 231 0010 0246     		mov	r2, r0
 232 0012 3B68     		ldr	r3, [r7]
 233 0014 9A42     		cmp	r2, r3
 234 0016 04D8     		bhi	.L11
 235              		.loc 1 744 0 is_stmt 0 discriminator 1
 236 0018 4FF43A71 		mov	r1, #744
 237 001c 0848     		ldr	r0, .L12
 238 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 239              	.L11:
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_TX_FIFO_CTRL(base), SCB_TX_FIFO_CTRL_TRIGGER_LEVEL, level);
 240              		.loc 1 746 0 is_stmt 1
 241 0022 7B68     		ldr	r3, [r7, #4]
 242 0024 D3F80432 		ldr	r3, [r3, #516]
 243 0028 23F0FF02 		bic	r2, r3, #255
 244 002c 3B68     		ldr	r3, [r7]
 245 002e DBB2     		uxtb	r3, r3
 246 0030 1A43     		orrs	r2, r2, r3
 247 0032 7B68     		ldr	r3, [r7, #4]
 248 0034 C3F80422 		str	r2, [r3, #516]
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 249              		.loc 1 747 0
 250 0038 00BF     		nop
 251 003a 0837     		adds	r7, r7, #8
 252              		.cfi_def_cfa_offset 8
 253 003c BD46     		mov	sp, r7
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 003e 80BD     		pop	{r7, pc}
 257              	.L13:
 258              		.align	2
 259              	.L12:
 260 0040 00000000 		.word	.LC0
 261              		.cfi_endproc
 262              	.LFE172:
 263              		.size	Cy_SCB_SetTxFifoLevel, .-Cy_SCB_SetTxFifoLevel
 264              		.section	.text.Cy_SCB_GetNumInTxFifo,"ax",%progbits
 265              		.align	2
 266              		.thumb
 267              		.thumb_func
 268              		.type	Cy_SCB_GetNumInTxFifo, %function
 269              	Cy_SCB_GetNumInTxFifo:
 270              	.LFB173:
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 19


 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInTxFifo
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the TX FIFO.
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in the TX FIFO.
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base)
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 271              		.loc 1 764 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276 0000 80B4     		push	{r7}
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 83B0     		sub	sp, sp, #12
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_USED, SCB_TX_FIFO_STATUS(base));
 284              		.loc 1 765 0
 285 0008 7B68     		ldr	r3, [r7, #4]
 286 000a D3F80832 		ldr	r3, [r3, #520]
 287 000e C3F30803 		ubfx	r3, r3, #0, #9
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 288              		.loc 1 766 0
 289 0012 1846     		mov	r0, r3
 290 0014 0C37     		adds	r7, r7, #12
 291              		.cfi_def_cfa_offset 4
 292 0016 BD46     		mov	sp, r7
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 0018 5DF8047B 		ldr	r7, [sp], #4
 296              		.cfi_restore 7
 297              		.cfi_def_cfa_offset 0
 298 001c 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE173:
 301              		.size	Cy_SCB_GetNumInTxFifo, .-Cy_SCB_GetNumInTxFifo
 302 001e 00BF     		.section	.text.Cy_SCB_GetTxSrValid,"ax",%progbits
 303              		.align	2
 304              		.thumb
 305              		.thumb_func
 306              		.type	Cy_SCB_GetTxSrValid, %function
 307              	Cy_SCB_GetTxSrValid:
 308              	.LFB174:
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 20


 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxSrValid
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the TX FIFO Shift Register valid bit.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - TX shift register valid; 0 - TX shift register not valid.
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid(CySCB_Type const *base)
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 309              		.loc 1 783 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 83B0     		sub	sp, sp, #12
 318              		.cfi_def_cfa_offset 16
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 7860     		str	r0, [r7, #4]
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_SR_VALID, SCB_TX_FIFO_STATUS(base));
 322              		.loc 1 784 0
 323 0008 7B68     		ldr	r3, [r7, #4]
 324 000a D3F80832 		ldr	r3, [r3, #520]
 325 000e 03F40043 		and	r3, r3, #32768
 326 0012 DB0B     		lsrs	r3, r3, #15
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 327              		.loc 1 785 0
 328 0014 1846     		mov	r0, r3
 329 0016 0C37     		adds	r7, r7, #12
 330              		.cfi_def_cfa_offset 4
 331 0018 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 001a 5DF8047B 		ldr	r7, [sp], #4
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 001e 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE174:
 340              		.size	Cy_SCB_GetTxSrValid, .-Cy_SCB_GetTxSrValid
 341              		.section	.text.Cy_SCB_IsTxComplete,"ax",%progbits
 342              		.align	2
 343              		.thumb
 344              		.thumb_func
 345              		.type	Cy_SCB_IsTxComplete, %function
 346              	Cy_SCB_IsTxComplete:
 347              	.LFB175:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 21


 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxComplete
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Checks whether the TX FIFO and Shifter are empty and there is no more data to send.
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Pointer to SPI the SCB instance.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, transmission complete. If false, transmission is not complete.
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxComplete(CySCB_Type const *base)
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 348              		.loc 1 802 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 90B5     		push	{r4, r7, lr}
 353              		.cfi_def_cfa_offset 12
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 83B0     		sub	sp, sp, #12
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****      return (0UL == (Cy_SCB_GetNumInTxFifo(base) + Cy_SCB_GetTxSrValid(base)));
 362              		.loc 1 803 0
 363 0008 7868     		ldr	r0, [r7, #4]
 364 000a FFF7FEFF 		bl	Cy_SCB_GetNumInTxFifo
 365 000e 0446     		mov	r4, r0
 366 0010 7868     		ldr	r0, [r7, #4]
 367 0012 FFF7FEFF 		bl	Cy_SCB_GetTxSrValid
 368 0016 0346     		mov	r3, r0
 369 0018 2344     		add	r3, r3, r4
 370 001a 002B     		cmp	r3, #0
 371 001c 0CBF     		ite	eq
 372 001e 0123     		moveq	r3, #1
 373 0020 0023     		movne	r3, #0
 374 0022 DBB2     		uxtb	r3, r3
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 375              		.loc 1 804 0
 376 0024 1846     		mov	r0, r3
 377 0026 0C37     		adds	r7, r7, #12
 378              		.cfi_def_cfa_offset 12
 379 0028 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 002a 90BD     		pop	{r4, r7, pc}
 383              		.cfi_endproc
 384              	.LFE175:
 385              		.size	Cy_SCB_IsTxComplete, .-Cy_SCB_IsTxComplete
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 22


 386              		.section	.text.Cy_SCB_ClearTxFifo,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	Cy_SCB_ClearTxFifo, %function
 391              	Cy_SCB_ClearTxFifo:
 392              	.LFB176:
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxFifo
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX FIFO.
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX FIFO clear operation also clears the shift register. Thus the shifter
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * could be cleared in the middle of a data element transfer. Thia results in
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * "ones" being sent on the bus for the remainder of the transfer.
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxFifo(CySCB_Type *base)
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 393              		.loc 1 823 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 8
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 398 0000 80B4     		push	{r7}
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 83B0     		sub	sp, sp, #12
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) |= (uint32_t)  SCB_TX_FIFO_CTRL_CLEAR_Msk;
 406              		.loc 1 824 0
 407 0008 7B68     		ldr	r3, [r7, #4]
 408 000a D3F80432 		ldr	r3, [r3, #516]
 409 000e 43F48032 		orr	r2, r3, #65536
 410 0012 7B68     		ldr	r3, [r7, #4]
 411 0014 C3F80422 		str	r2, [r3, #516]
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) &= (uint32_t) ~SCB_TX_FIFO_CTRL_CLEAR_Msk;
 412              		.loc 1 825 0
 413 0018 7B68     		ldr	r3, [r7, #4]
 414 001a D3F80432 		ldr	r3, [r3, #516]
 415 001e 23F48032 		bic	r2, r3, #65536
 416 0022 7B68     		ldr	r3, [r7, #4]
 417 0024 C3F80422 		str	r2, [r3, #516]
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_TX_FIFO_CTRL(base);
 418              		.loc 1 827 0
 419 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 23


 420 002a D3F80432 		ldr	r3, [r3, #516]
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 421              		.loc 1 828 0
 422 002e 00BF     		nop
 423 0030 0C37     		adds	r7, r7, #12
 424              		.cfi_def_cfa_offset 4
 425 0032 BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 0034 5DF8047B 		ldr	r7, [sp], #4
 429              		.cfi_restore 7
 430              		.cfi_def_cfa_offset 0
 431 0038 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE176:
 434              		.size	Cy_SCB_ClearTxFifo, .-Cy_SCB_ClearTxFifo
 435 003a 00BF     		.section	.text.Cy_SCB_SetRxInterruptMask,"ax",%progbits
 436              		.align	2
 437              		.thumb
 438              		.thumb_func
 439              		.type	Cy_SCB_SetRxInterruptMask, %function
 440              	Cy_SCB_SetRxInterruptMask:
 441              	.LFB180:
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetByteMode
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets whether the RX and TX FIFOs are in byte mode.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The FIFOs are either 16-bit wide or 8-bit wide (byte mode).
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When the FIFO is in byte mode it is twice as deep. See the device datasheet
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * for FIFO depths.
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param byteMode
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, TX and RX FIFOs are 8-bit wide. If false, the FIFOs are 16-bit wide.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode)
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     if (byteMode)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) |=  SCB_CTRL_BYTE_MODE_Msk;
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     else
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) &= ~SCB_CTRL_BYTE_MODE_Msk;
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetInterruptCause
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 24


 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the mask of bits showing the source of the current triggered
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt. This is useful for modes of operation where an interrupt can
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * be generated by conditions in multiple interrupt source registers.
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The mask with the OR of the following conditions that have been triggered.
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_intr_cause for the set of constants.
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base)
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_CAUSE(base));
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatus
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt request register. This register contains the current
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the RX interrupt sources.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the RX interrupt sources. Each constant is a bit field
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value. The value returned may have multiple bits set to indicate the
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status.
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base)
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX(base) & CY_SCB_RX_INTR_MASK);
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterruptMask
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the RX interrupt mask register. This register configures which bits
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register can trigger an interrupt event.
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr.
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 25


 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 442              		.loc 1 921 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 450 0002 82B0     		sub	sp, sp, #8
 451              		.cfi_def_cfa_offset 16
 452 0004 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 454 0006 7860     		str	r0, [r7, #4]
 455 0008 3960     		str	r1, [r7]
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
 456              		.loc 1 922 0
 457 000a 3B68     		ldr	r3, [r7]
 458 000c 23F43663 		bic	r3, r3, #2912
 459 0010 23F00D03 		bic	r3, r3, #13
 460 0014 002B     		cmp	r3, #0
 461 0016 04D0     		beq	.L22
 462              		.loc 1 922 0 is_stmt 0 discriminator 1
 463 0018 40F29A31 		movw	r1, #922
 464 001c 0548     		ldr	r0, .L23
 465 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 466              	.L22:
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_MASK(base) = interruptMask;
 467              		.loc 1 924 0 is_stmt 1
 468 0022 7B68     		ldr	r3, [r7, #4]
 469 0024 3A68     		ldr	r2, [r7]
 470 0026 C3F8C82F 		str	r2, [r3, #4040]
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 471              		.loc 1 925 0
 472 002a 00BF     		nop
 473 002c 0837     		adds	r7, r7, #8
 474              		.cfi_def_cfa_offset 8
 475 002e BD46     		mov	sp, r7
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 0030 80BD     		pop	{r7, pc}
 479              	.L24:
 480 0032 00BF     		.align	2
 481              	.L23:
 482 0034 00000000 		.word	.LC0
 483              		.cfi_endproc
 484              	.LFE180:
 485              		.size	Cy_SCB_SetRxInterruptMask, .-Cy_SCB_SetRxInterruptMask
 486              		.section	.text.Cy_SCB_GetRxInterruptMask,"ax",%progbits
 487              		.align	2
 488              		.thumb
 489              		.thumb_func
 490              		.type	Cy_SCB_GetRxInterruptMask, %function
 491              	Cy_SCB_GetRxInterruptMask:
 492              	.LFB181:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 26


 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptMask
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt mask register. This register specifies which bits
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register trigger can an interrupt event.
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask(CySCB_Type const *base)
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 493              		.loc 1 944 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 83B0     		sub	sp, sp, #12
 502              		.cfi_def_cfa_offset 16
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASK(base));
 506              		.loc 1 945 0
 507 0008 7B68     		ldr	r3, [r7, #4]
 508 000a D3F8C83F 		ldr	r3, [r3, #4040]
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 509              		.loc 1 946 0
 510 000e 1846     		mov	r0, r3
 511 0010 0C37     		adds	r7, r7, #12
 512              		.cfi_def_cfa_offset 4
 513 0012 BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 0014 5DF8047B 		ldr	r7, [sp], #4
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 0018 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE181:
 522              		.size	Cy_SCB_GetRxInterruptMask, .-Cy_SCB_GetRxInterruptMask
 523 001a 00BF     		.section	.text.Cy_SCB_GetRxInterruptStatusMasked,"ax",%progbits
 524              		.align	2
 525              		.thumb
 526              		.thumb_func
 527              		.type	Cy_SCB_GetRxInterruptStatusMasked, %function
 528              	Cy_SCB_GetRxInterruptStatusMasked:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 27


 529              	.LFB182:
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatusMasked
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt masked request register. This register contains
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the RX interrupt request and
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled RX interrupt sources caused the interrupt event.
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled RX interrupt sources.
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base)
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 530              		.loc 1 968 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 8
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              		.cfi_def_cfa_offset 4
 537              		.cfi_offset 7, -4
 538 0002 83B0     		sub	sp, sp, #12
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 542 0006 7860     		str	r0, [r7, #4]
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASKED(base));
 543              		.loc 1 969 0
 544 0008 7B68     		ldr	r3, [r7, #4]
 545 000a D3F8CC3F 		ldr	r3, [r3, #4044]
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 546              		.loc 1 970 0
 547 000e 1846     		mov	r0, r3
 548 0010 0C37     		adds	r7, r7, #12
 549              		.cfi_def_cfa_offset 4
 550 0012 BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 0014 5DF8047B 		ldr	r7, [sp], #4
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0018 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE182:
 559              		.size	Cy_SCB_GetRxInterruptStatusMasked, .-Cy_SCB_GetRxInterruptStatusMasked
 560 001a 00BF     		.section	.text.Cy_SCB_ClearRxInterrupt,"ax",%progbits
 561              		.align	2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 28


 562              		.thumb
 563              		.thumb_func
 564              		.type	Cy_SCB_ClearRxInterrupt, %function
 565              	Cy_SCB_ClearRxInterrupt:
 566              	.LFB183:
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxInterrupt
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX interrupt sources in the interrupt request register.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to be cleared.
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FIFO_LEVEL interrupt source is not cleared when
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    the RX FIFO has more entries than the level.
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_NOT_EMPTY interrupt source is not cleared when the
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is not empty.
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FULL interrupt source is not cleared when the
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is full.
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 567              		.loc 1 996 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 82B0     		sub	sp, sp, #8
 576              		.cfi_def_cfa_offset 16
 577 0004 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 580 0008 3960     		str	r1, [r7]
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
 581              		.loc 1 997 0
 582 000a 3B68     		ldr	r3, [r7]
 583 000c 23F43663 		bic	r3, r3, #2912
 584 0010 23F00D03 		bic	r3, r3, #13
 585 0014 002B     		cmp	r3, #0
 586 0016 04D0     		beq	.L30
 587              		.loc 1 997 0 is_stmt 0 discriminator 1
 588 0018 40F2E531 		movw	r1, #997
 589 001c 0648     		ldr	r0, .L31
 590 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 591              	.L30:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 29


 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX(base) = interruptMask;
 592              		.loc 1 999 0 is_stmt 1
 593 0022 7B68     		ldr	r3, [r7, #4]
 594 0024 3A68     		ldr	r2, [r7]
 595 0026 C3F8C02F 		str	r2, [r3, #4032]
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_RX(base);
 596              		.loc 1 1000 0
 597 002a 7B68     		ldr	r3, [r7, #4]
 598 002c D3F8C03F 		ldr	r3, [r3, #4032]
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 599              		.loc 1 1001 0
 600 0030 00BF     		nop
 601 0032 0837     		adds	r7, r7, #8
 602              		.cfi_def_cfa_offset 8
 603 0034 BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0036 80BD     		pop	{r7, pc}
 607              	.L32:
 608              		.align	2
 609              	.L31:
 610 0038 00000000 		.word	.LC0
 611              		.cfi_endproc
 612              	.LFE183:
 613              		.size	Cy_SCB_ClearRxInterrupt, .-Cy_SCB_ClearRxInterrupt
 614              		.section	.text.Cy_SCB_SetTxInterruptMask,"ax",%progbits
 615              		.align	2
 616              		.thumb
 617              		.thumb_func
 618              		.type	Cy_SCB_SetTxInterruptMask, %function
 619              	Cy_SCB_SetTxInterruptMask:
 620              	.LFB186:
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterrupt
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX interrupt sources in the interrupt request register.
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to set in the RX interrupt request register.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_SET(base) = interruptMask;
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 30


1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatus
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt request register. This register contains the current
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the TX interrupt sources.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of TX interrupt sources.
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base)
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX(base) & CY_SCB_TX_INTR_MASK);
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterruptMask
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the TX interrupt mask register. This register configures which bits
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the TX interrupt request register can trigger an interrupt event.
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 621              		.loc 1 1065 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 82B0     		sub	sp, sp, #8
 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 7860     		str	r0, [r7, #4]
 634 0008 3960     		str	r1, [r7]
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
 635              		.loc 1 1066 0
 636 000a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 31


 637 000c 23F4EE63 		bic	r3, r3, #1904
 638 0010 23F00303 		bic	r3, r3, #3
 639 0014 002B     		cmp	r3, #0
 640 0016 04D0     		beq	.L34
 641              		.loc 1 1066 0 is_stmt 0 discriminator 1
 642 0018 40F22A41 		movw	r1, #1066
 643 001c 0548     		ldr	r0, .L35
 644 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 645              	.L34:
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_MASK(base) = interruptMask;
 646              		.loc 1 1068 0 is_stmt 1
 647 0022 7B68     		ldr	r3, [r7, #4]
 648 0024 3A68     		ldr	r2, [r7]
 649 0026 C3F8882F 		str	r2, [r3, #3976]
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 650              		.loc 1 1069 0
 651 002a 00BF     		nop
 652 002c 0837     		adds	r7, r7, #8
 653              		.cfi_def_cfa_offset 8
 654 002e BD46     		mov	sp, r7
 655              		.cfi_def_cfa_register 13
 656              		@ sp needed
 657 0030 80BD     		pop	{r7, pc}
 658              	.L36:
 659 0032 00BF     		.align	2
 660              	.L35:
 661 0034 00000000 		.word	.LC0
 662              		.cfi_endproc
 663              	.LFE186:
 664              		.size	Cy_SCB_SetTxInterruptMask, .-Cy_SCB_SetTxInterruptMask
 665              		.section	.text.Cy_SCB_GetTxInterruptMask,"ax",%progbits
 666              		.align	2
 667              		.thumb
 668              		.thumb_func
 669              		.type	Cy_SCB_GetTxInterruptMask, %function
 670              	Cy_SCB_GetTxInterruptMask:
 671              	.LFB187:
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptMask
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt mask register. This register specifies which
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the TX interrupt request register can trigger an interrupt event.
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask(CySCB_Type const *base)
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 32


 672              		.loc 1 1088 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0002 83B0     		sub	sp, sp, #12
 681              		.cfi_def_cfa_offset 16
 682 0004 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASK(base));
 685              		.loc 1 1089 0
 686 0008 7B68     		ldr	r3, [r7, #4]
 687 000a D3F8883F 		ldr	r3, [r3, #3976]
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 688              		.loc 1 1090 0
 689 000e 1846     		mov	r0, r3
 690 0010 0C37     		adds	r7, r7, #12
 691              		.cfi_def_cfa_offset 4
 692 0012 BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0014 5DF8047B 		ldr	r7, [sp], #4
 696              		.cfi_restore 7
 697              		.cfi_def_cfa_offset 0
 698 0018 7047     		bx	lr
 699              		.cfi_endproc
 700              	.LFE187:
 701              		.size	Cy_SCB_GetTxInterruptMask, .-Cy_SCB_GetTxInterruptMask
 702 001a 00BF     		.section	.text.Cy_SCB_GetTxInterruptStatusMasked,"ax",%progbits
 703              		.align	2
 704              		.thumb
 705              		.thumb_func
 706              		.type	Cy_SCB_GetTxInterruptStatusMasked, %function
 707              	Cy_SCB_GetTxInterruptStatusMasked:
 708              	.LFB188:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatusMasked
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt masked request register. This register contains
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the TX interrupt request and
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled TX interrupt sources caused the interrupt event.
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled TX interrupt sources.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 33


1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base)
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 709              		.loc 1 1112 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 80B4     		push	{r7}
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 7, -4
 717 0002 83B0     		sub	sp, sp, #12
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASKED(base));
 722              		.loc 1 1113 0
 723 0008 7B68     		ldr	r3, [r7, #4]
 724 000a D3F88C3F 		ldr	r3, [r3, #3980]
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 725              		.loc 1 1114 0
 726 000e 1846     		mov	r0, r3
 727 0010 0C37     		adds	r7, r7, #12
 728              		.cfi_def_cfa_offset 4
 729 0012 BD46     		mov	sp, r7
 730              		.cfi_def_cfa_register 13
 731              		@ sp needed
 732 0014 5DF8047B 		ldr	r7, [sp], #4
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 0018 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE188:
 738              		.size	Cy_SCB_GetTxInterruptStatusMasked, .-Cy_SCB_GetTxInterruptStatusMasked
 739 001a 00BF     		.section	.text.Cy_SCB_ClearTxInterrupt,"ax",%progbits
 740              		.align	2
 741              		.thumb
 742              		.thumb_func
 743              		.type	Cy_SCB_ClearTxInterrupt, %function
 744              	Cy_SCB_ClearTxInterrupt:
 745              	.LFB189:
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxInterrupt
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX interrupt sources in the interrupt request register.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to be cleared.
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 34


1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_FIFO_LEVEL interrupt source is not cleared when the
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has fewer entries than the TX level.
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_NOT_FULL interrupt source is not cleared when the
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has empty entries in the TX FIFO.
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_EMPTY interrupt source is not cleared when the
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty.
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_UNDERFLOW interrupt source is not cleared when the
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty. Put data into the TX FIFO before clearing it.
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 746              		.loc 1 1142 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 8
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 82B0     		sub	sp, sp, #8
 755              		.cfi_def_cfa_offset 16
 756 0004 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 758 0006 7860     		str	r0, [r7, #4]
 759 0008 3960     		str	r1, [r7]
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
 760              		.loc 1 1143 0
 761 000a 3B68     		ldr	r3, [r7]
 762 000c 23F4EE63 		bic	r3, r3, #1904
 763 0010 23F00303 		bic	r3, r3, #3
 764 0014 002B     		cmp	r3, #0
 765 0016 04D0     		beq	.L42
 766              		.loc 1 1143 0 is_stmt 0 discriminator 1
 767 0018 40F27741 		movw	r1, #1143
 768 001c 0648     		ldr	r0, .L43
 769 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 770              	.L42:
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX(base) = interruptMask;
 771              		.loc 1 1145 0 is_stmt 1
 772 0022 7B68     		ldr	r3, [r7, #4]
 773 0024 3A68     		ldr	r2, [r7]
 774 0026 C3F8802F 		str	r2, [r3, #3968]
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_TX(base);
 775              		.loc 1 1146 0
 776 002a 7B68     		ldr	r3, [r7, #4]
 777 002c D3F8803F 		ldr	r3, [r3, #3968]
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 778              		.loc 1 1147 0
 779 0030 00BF     		nop
 780 0032 0837     		adds	r7, r7, #8
 781              		.cfi_def_cfa_offset 8
 782 0034 BD46     		mov	sp, r7
 783              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 35


 784              		@ sp needed
 785 0036 80BD     		pop	{r7, pc}
 786              	.L44:
 787              		.align	2
 788              	.L43:
 789 0038 00000000 		.word	.LC0
 790              		.cfi_endproc
 791              	.LFE189:
 792              		.size	Cy_SCB_ClearTxInterrupt, .-Cy_SCB_ClearTxInterrupt
 793              		.section	.text.Cy_SCB_SetMasterInterruptMask,"ax",%progbits
 794              		.align	2
 795              		.thumb
 796              		.thumb_func
 797              		.type	Cy_SCB_SetMasterInterruptMask, %function
 798              	Cy_SCB_SetMasterInterruptMask:
 799              	.LFB192:
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterrupt
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets TX interrupt sources in the interrupt request register.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to set in the TX interrupt request register.
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_SET(base) = interruptMask;
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatus
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt request register. This register contains the current
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the master interrupt sources.
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the master interrupt sources.
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 36


1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base)
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M(base) & CY_SCB_MASTER_INTR_MASK);
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterruptMask
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the master interrupt mask register. This register specifies which bits
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be enable.
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 800              		.loc 1 1211 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 8
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 82B0     		sub	sp, sp, #8
 809              		.cfi_def_cfa_offset 16
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 7860     		str	r0, [r7, #4]
 813 0008 3960     		str	r1, [r7]
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
 814              		.loc 1 1212 0
 815 000a 3B68     		ldr	r3, [r7]
 816 000c 23F44573 		bic	r3, r3, #788
 817 0010 23F00303 		bic	r3, r3, #3
 818 0014 002B     		cmp	r3, #0
 819 0016 04D0     		beq	.L46
 820              		.loc 1 1212 0 is_stmt 0 discriminator 1
 821 0018 40F2BC41 		movw	r1, #1212
 822 001c 0548     		ldr	r0, .L47
 823 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 824              	.L46:
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_MASK(base) = interruptMask;
 825              		.loc 1 1214 0 is_stmt 1
 826 0022 7B68     		ldr	r3, [r7, #4]
 827 0024 3A68     		ldr	r2, [r7]
 828 0026 C3F8082F 		str	r2, [r3, #3848]
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 829              		.loc 1 1215 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 37


 830 002a 00BF     		nop
 831 002c 0837     		adds	r7, r7, #8
 832              		.cfi_def_cfa_offset 8
 833 002e BD46     		mov	sp, r7
 834              		.cfi_def_cfa_register 13
 835              		@ sp needed
 836 0030 80BD     		pop	{r7, pc}
 837              	.L48:
 838 0032 00BF     		.align	2
 839              	.L47:
 840 0034 00000000 		.word	.LC0
 841              		.cfi_endproc
 842              	.LFE192:
 843              		.size	Cy_SCB_SetMasterInterruptMask, .-Cy_SCB_SetMasterInterruptMask
 844              		.section	.text.Cy_SCB_SetSlaveInterruptMask,"ax",%progbits
 845              		.align	2
 846              		.thumb
 847              		.thumb_func
 848              		.type	Cy_SCB_SetSlaveInterruptMask, %function
 849              	Cy_SCB_SetSlaveInterruptMask:
 850              	.LFB198:
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptMask
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt mask register. This register specifies which bits
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled master interrupt sources.
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask(CySCB_Type const *base)
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASK(base));
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatusMasked
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt masked request register. This register contains a
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the master interrupt request and mask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled master interrupt sources caused the interrupt
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 38


1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled master interrupt sources.
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base)
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASKED(base));
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearMasterInterrupt
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears master interrupt sources in the interrupt request register.
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be cleared.
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M(base) = interruptMask;
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_M(base);
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterrupt
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets master interrupt sources in the interrupt request register.
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to set in the master interrupt request register.
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_SET(base) = interruptMask;
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 39


1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatus
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt request register. This register contains the current
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the slave interrupt sources.
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the slave interrupt sources.
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base)
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S(base) & CY_SCB_SLAVE_INTR_MASK);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterruptMask
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes slave interrupt mask register.
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 851              		.loc 1 1349 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 864 0008 3960     		str	r1, [r7]
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
 865              		.loc 1 1350 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 40


 866 000a 3B68     		ldr	r3, [r7]
 867 000c 23F41F63 		bic	r3, r3, #2544
 868 0010 23F00F03 		bic	r3, r3, #15
 869 0014 002B     		cmp	r3, #0
 870 0016 04D0     		beq	.L50
 871              		.loc 1 1350 0 is_stmt 0 discriminator 1
 872 0018 40F24651 		movw	r1, #1350
 873 001c 0548     		ldr	r0, .L51
 874 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 875              	.L50:
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_MASK(base) = interruptMask;
 876              		.loc 1 1352 0 is_stmt 1
 877 0022 7B68     		ldr	r3, [r7, #4]
 878 0024 3A68     		ldr	r2, [r7]
 879 0026 C3F8482F 		str	r2, [r3, #3912]
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 880              		.loc 1 1353 0
 881 002a 00BF     		nop
 882 002c 0837     		adds	r7, r7, #8
 883              		.cfi_def_cfa_offset 8
 884 002e BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0030 80BD     		pop	{r7, pc}
 888              	.L52:
 889 0032 00BF     		.align	2
 890              	.L51:
 891 0034 00000000 		.word	.LC0
 892              		.cfi_endproc
 893              	.LFE198:
 894              		.size	Cy_SCB_SetSlaveInterruptMask, .-Cy_SCB_SetSlaveInterruptMask
 895              		.section	.text.Cy_SCB_GetSlaveInterruptStatusMasked,"ax",%progbits
 896              		.align	2
 897              		.thumb
 898              		.thumb_func
 899              		.type	Cy_SCB_GetSlaveInterruptStatusMasked, %function
 900              	Cy_SCB_GetSlaveInterruptStatusMasked:
 901              	.LFB200:
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptMask
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt mask register.
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 41


1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask(CySCB_Type const *base)
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASK(base));
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatusMasked
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt masked request register. This register contains a
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the slave interrupt request and mask
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled slave interrupt sources caused the interrupt
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled slave interrupt sources.
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base)
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 902              		.loc 1 1398 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 8
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907 0000 80B4     		push	{r7}
 908              		.cfi_def_cfa_offset 4
 909              		.cfi_offset 7, -4
 910 0002 83B0     		sub	sp, sp, #12
 911              		.cfi_def_cfa_offset 16
 912 0004 00AF     		add	r7, sp, #0
 913              		.cfi_def_cfa_register 7
 914 0006 7860     		str	r0, [r7, #4]
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASKED(base));
 915              		.loc 1 1399 0
 916 0008 7B68     		ldr	r3, [r7, #4]
 917 000a D3F84C3F 		ldr	r3, [r3, #3916]
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 918              		.loc 1 1400 0
 919 000e 1846     		mov	r0, r3
 920 0010 0C37     		adds	r7, r7, #12
 921              		.cfi_def_cfa_offset 4
 922 0012 BD46     		mov	sp, r7
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 0014 5DF8047B 		ldr	r7, [sp], #4
 926              		.cfi_restore 7
 927              		.cfi_def_cfa_offset 0
 928 0018 7047     		bx	lr
 929              		.cfi_endproc
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 42


 930              	.LFE200:
 931              		.size	Cy_SCB_GetSlaveInterruptStatusMasked, .-Cy_SCB_GetSlaveInterruptStatusMasked
 932 001a 00BF     		.section	.text.Cy_SCB_ClearSlaveInterrupt,"ax",%progbits
 933              		.align	2
 934              		.thumb
 935              		.thumb_func
 936              		.type	Cy_SCB_ClearSlaveInterrupt, %function
 937              	Cy_SCB_ClearSlaveInterrupt:
 938              	.LFB201:
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSlaveInterrupt
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the slave interrupt sources in the interrupt request register.
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Slave interrupt sources to be cleared.
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 939              		.loc 1 1418 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 952 0008 3960     		str	r1, [r7]
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
 953              		.loc 1 1419 0
 954 000a 3B68     		ldr	r3, [r7]
 955 000c 23F41F63 		bic	r3, r3, #2544
 956 0010 23F00F03 		bic	r3, r3, #15
 957 0014 002B     		cmp	r3, #0
 958 0016 04D0     		beq	.L56
 959              		.loc 1 1419 0 is_stmt 0 discriminator 1
 960 0018 40F28B51 		movw	r1, #1419
 961 001c 0648     		ldr	r0, .L57
 962 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 963              	.L56:
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S(base) = interruptMask;
 964              		.loc 1 1421 0 is_stmt 1
 965 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 43


 966 0024 3A68     		ldr	r2, [r7]
 967 0026 C3F8402F 		str	r2, [r3, #3904]
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_S(base);
 968              		.loc 1 1422 0
 969 002a 7B68     		ldr	r3, [r7, #4]
 970 002c D3F8403F 		ldr	r3, [r3, #3904]
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 971              		.loc 1 1423 0
 972 0030 00BF     		nop
 973 0032 0837     		adds	r7, r7, #8
 974              		.cfi_def_cfa_offset 8
 975 0034 BD46     		mov	sp, r7
 976              		.cfi_def_cfa_register 13
 977              		@ sp needed
 978 0036 80BD     		pop	{r7, pc}
 979              	.L58:
 980              		.align	2
 981              	.L57:
 982 0038 00000000 		.word	.LC0
 983              		.cfi_endproc
 984              	.LFE201:
 985              		.size	Cy_SCB_ClearSlaveInterrupt, .-Cy_SCB_ClearSlaveInterrupt
 986              		.section	.text.Cy_SCB_SetSpiInterruptMask,"ax",%progbits
 987              		.align	2
 988              		.thumb
 989              		.thumb_func
 990              		.type	Cy_SCB_SetSpiInterruptMask, %function
 991              	Cy_SCB_SetSpiInterruptMask:
 992              	.LFB209:
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterrupt
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets slave interrupt sources in the interrupt request register.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The slave interrupt sources to set in the slave interrupt request register
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_SET(base) = interruptMask;
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatus
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 44


1452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt request register. This register contains the
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status of the I2C interrupt sources.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the I2C interrupt sources. Each constant is a bit
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * field value.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status.
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base)
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC(base) & CY_SCB_I2C_INTR_MASK);
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetI2CInterruptMask
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the I2C interrupt mask register. This register specifies which bits
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetI2CInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC_MASK(base) = interruptMask;
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptMask
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt mask register. This register specifies which bits
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr.
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 45


1509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask(CySCB_Type const *base)
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASK(base));
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatusMasked
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt masked request register. This register contains
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from I2C interrupt request and mask
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled I2C interrupt sources caused the interrupt event.
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled I2C interrupt sources.
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base)
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASKED(base));
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearI2CInterrupt
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears I2C interrupt sources in the interrupt request register.
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C interrupt sources to be cleared.
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearI2CInterrupt(CySCB_Type *base, uint32_t interruptMask)
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC(base) = interruptMask;
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_I2C_EC(base);
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatus
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 46


1566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt request register. This register contains the current
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the SPI interrupt sources.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of SPI interrupt sources. Each constant is a bit field value.
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base)
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC(base) & CY_SCB_SPI_INTR_MASK);
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSpiInterruptMask
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the SPI interrupt mask register. This register specifies which
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the SPI interrupt request register can trigger an interrupt event.
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSpiInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 993              		.loc 1 1600 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 8
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997 0000 80B5     		push	{r7, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 82B0     		sub	sp, sp, #8
 1002              		.cfi_def_cfa_offset 16
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 7860     		str	r0, [r7, #4]
 1006 0008 3960     		str	r1, [r7]
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
 1007              		.loc 1 1601 0
 1008 000a 3B68     		ldr	r3, [r7]
 1009 000c 23F00103 		bic	r3, r3, #1
 1010 0010 002B     		cmp	r3, #0
 1011 0012 04D0     		beq	.L60
 1012              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1013 0014 40F24161 		movw	r1, #1601
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 47


 1014 0018 0548     		ldr	r0, .L61
 1015 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1016              	.L60:
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC_MASK(base) = interruptMask;
 1017              		.loc 1 1603 0 is_stmt 1
 1018 001e 7B68     		ldr	r3, [r7, #4]
 1019 0020 3A68     		ldr	r2, [r7]
 1020 0022 C3F8C82E 		str	r2, [r3, #3784]
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1021              		.loc 1 1604 0
 1022 0026 00BF     		nop
 1023 0028 0837     		adds	r7, r7, #8
 1024              		.cfi_def_cfa_offset 8
 1025 002a BD46     		mov	sp, r7
 1026              		.cfi_def_cfa_register 13
 1027              		@ sp needed
 1028 002c 80BD     		pop	{r7, pc}
 1029              	.L62:
 1030 002e 00BF     		.align	2
 1031              	.L61:
 1032 0030 00000000 		.word	.LC0
 1033              		.cfi_endproc
 1034              	.LFE209:
 1035              		.size	Cy_SCB_SetSpiInterruptMask, .-Cy_SCB_SetSpiInterruptMask
 1036              		.section	.text.Cy_SCB_GetSpiInterruptStatusMasked,"ax",%progbits
 1037              		.align	2
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	Cy_SCB_GetSpiInterruptStatusMasked, %function
 1041              	Cy_SCB_GetSpiInterruptStatusMasked:
 1042              	.LFB211:
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptMask
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt mask register. This register specifies which bits
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the SPI interrupt request register can trigger an interrupt event.
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask(CySCB_Type const *base)
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASK(base));
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatusMasked
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 48


1630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt masked request register. This register contains
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the SPI interrupt request and
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled SPI interrupt sources caused the interrupt event.
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled SPI interrupt sources.
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base)
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 1043              		.loc 1 1647 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0000 80B4     		push	{r7}
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0002 83B0     		sub	sp, sp, #12
 1052              		.cfi_def_cfa_offset 16
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 1055 0006 7860     		str	r0, [r7, #4]
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASKED(base));
 1056              		.loc 1 1648 0
 1057 0008 7B68     		ldr	r3, [r7, #4]
 1058 000a D3F8CC3E 		ldr	r3, [r3, #3788]
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1059              		.loc 1 1649 0
 1060 000e 1846     		mov	r0, r3
 1061 0010 0C37     		adds	r7, r7, #12
 1062              		.cfi_def_cfa_offset 4
 1063 0012 BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 0014 5DF8047B 		ldr	r7, [sp], #4
 1067              		.cfi_restore 7
 1068              		.cfi_def_cfa_offset 0
 1069 0018 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE211:
 1072              		.size	Cy_SCB_GetSpiInterruptStatusMasked, .-Cy_SCB_GetSpiInterruptStatusMasked
 1073 001a 00BF     		.section	.text.Cy_SCB_ClearSpiInterrupt,"ax",%progbits
 1074              		.align	2
 1075              		.thumb
 1076              		.thumb_func
 1077              		.type	Cy_SCB_ClearSpiInterrupt, %function
 1078              	Cy_SCB_ClearSpiInterrupt:
 1079              	.LFB212:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 49


1650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSpiInterrupt
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears SPI interrupt sources in the interrupt request register.
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI interrupt sources to be cleared.
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSpiInterrupt(CySCB_Type *base, uint32_t interruptMask)
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 1080              		.loc 1 1667 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 8
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 16
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 7860     		str	r0, [r7, #4]
 1093 0008 3960     		str	r1, [r7]
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
 1094              		.loc 1 1668 0
 1095 000a 3B68     		ldr	r3, [r7]
 1096 000c 23F00103 		bic	r3, r3, #1
 1097 0010 002B     		cmp	r3, #0
 1098 0012 04D0     		beq	.L66
 1099              		.loc 1 1668 0 is_stmt 0 discriminator 1
 1100 0014 40F28461 		movw	r1, #1668
 1101 0018 0648     		ldr	r0, .L67
 1102 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1103              	.L66:
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC(base) = interruptMask;
 1104              		.loc 1 1670 0 is_stmt 1
 1105 001e 7B68     		ldr	r3, [r7, #4]
 1106 0020 3A68     		ldr	r2, [r7]
 1107 0022 C3F8C02E 		str	r2, [r3, #3776]
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_SPI_EC(base);
 1108              		.loc 1 1671 0
 1109 0026 7B68     		ldr	r3, [r7, #4]
 1110 0028 D3F8C03E 		ldr	r3, [r3, #3776]
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1111              		.loc 1 1672 0
 1112 002c 00BF     		nop
 1113 002e 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 50


 1114              		.cfi_def_cfa_offset 8
 1115 0030 BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0032 80BD     		pop	{r7, pc}
 1119              	.L68:
 1120              		.align	2
 1121              	.L67:
 1122 0034 00000000 		.word	.LC0
 1123              		.cfi_endproc
 1124              	.LFE212:
 1125              		.size	Cy_SCB_ClearSpiInterrupt, .-Cy_SCB_ClearSpiInterrupt
 1126              		.section	.text.Cy_SCB_GetFifoSize,"ax",%progbits
 1127              		.align	2
 1128              		.thumb
 1129              		.thumb_func
 1130              		.type	Cy_SCB_GetFifoSize, %function
 1131              	Cy_SCB_GetFifoSize:
 1132              	.LFB213:
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetFifoSize
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX and TX FIFO depth.
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * FIFO depth.
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize(CySCB_Type const *base)
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 1133              		.loc 1 1689 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 8
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138 0000 80B4     		push	{r7}
 1139              		.cfi_def_cfa_offset 4
 1140              		.cfi_offset 7, -4
 1141 0002 83B0     		sub	sp, sp, #12
 1142              		.cfi_def_cfa_offset 16
 1143 0004 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2BOOL(SCB_CTRL_BYTE_MODE, SCB_CTRL(base)) ?
 1146              		.loc 1 1690 0
 1147 0008 7B68     		ldr	r3, [r7, #4]
 1148 000a 1B68     		ldr	r3, [r3]
 1149 000c 03F40063 		and	r3, r3, #2048
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 1150              		.loc 1 1691 0
 1151 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 51


 1152 0012 01D0     		beq	.L70
 1153              		.loc 1 1691 0 is_stmt 0 discriminator 1
 1154 0014 8023     		movs	r3, #128
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2BOOL(SCB_CTRL_BYTE_MODE, SCB_CTRL(base)) ?
 1155              		.loc 1 1690 0 is_stmt 1 discriminator 1
 1156 0016 00E0     		b	.L72
 1157              	.L70:
 1158              		.loc 1 1691 0 discriminator 2
 1159 0018 4023     		movs	r3, #64
 1160              	.L72:
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1161              		.loc 1 1692 0 discriminator 1
 1162 001a 1846     		mov	r0, r3
 1163 001c 0C37     		adds	r7, r7, #12
 1164              		.cfi_def_cfa_offset 4
 1165 001e BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0020 5DF8047B 		ldr	r7, [sp], #4
 1169              		.cfi_restore 7
 1170              		.cfi_def_cfa_offset 0
 1171 0024 7047     		bx	lr
 1172              		.cfi_endproc
 1173              	.LFE213:
 1174              		.size	Cy_SCB_GetFifoSize, .-Cy_SCB_GetFifoSize
 1175 0026 00BF     		.section	.text.Cy_SCB_IsRxDataWidthByte,"ax",%progbits
 1176              		.align	2
 1177              		.thumb
 1178              		.thumb_func
 1179              		.type	Cy_SCB_IsRxDataWidthByte, %function
 1180              	Cy_SCB_IsRxDataWidthByte:
 1181              	.LFB214:
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsRxDataWidthByte
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the RX data width is a byte (8 bits).
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * True if the RX data width is a byte (8 bits).
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base)
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 1182              		.loc 1 1709 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 8
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187 0000 80B4     		push	{r7}
 1188              		.cfi_def_cfa_offset 4
 1189              		.cfi_offset 7, -4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 52


 1190 0002 83B0     		sub	sp, sp, #12
 1191              		.cfi_def_cfa_offset 16
 1192 0004 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 1194 0006 7860     		str	r0, [r7, #4]
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_RX_CTRL_DATA_WIDTH, SCB_RX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
 1195              		.loc 1 1710 0
 1196 0008 7B68     		ldr	r3, [r7, #4]
 1197 000a D3F80033 		ldr	r3, [r3, #768]
 1198 000e 03F00F03 		and	r3, r3, #15
 1199 0012 072B     		cmp	r3, #7
 1200 0014 94BF     		ite	ls
 1201 0016 0123     		movls	r3, #1
 1202 0018 0023     		movhi	r3, #0
 1203 001a DBB2     		uxtb	r3, r3
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1204              		.loc 1 1711 0
 1205 001c 1846     		mov	r0, r3
 1206 001e 0C37     		adds	r7, r7, #12
 1207              		.cfi_def_cfa_offset 4
 1208 0020 BD46     		mov	sp, r7
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 0022 5DF8047B 		ldr	r7, [sp], #4
 1212              		.cfi_restore 7
 1213              		.cfi_def_cfa_offset 0
 1214 0026 7047     		bx	lr
 1215              		.cfi_endproc
 1216              	.LFE214:
 1217              		.size	Cy_SCB_IsRxDataWidthByte, .-Cy_SCB_IsRxDataWidthByte
 1218              		.section	.text.Cy_SCB_IsTxDataWidthByte,"ax",%progbits
 1219              		.align	2
 1220              		.thumb
 1221              		.thumb_func
 1222              		.type	Cy_SCB_IsTxDataWidthByte, %function
 1223              	Cy_SCB_IsTxDataWidthByte:
 1224              	.LFB215:
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxDataWidthByte
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the TX data width is a byte (8 bits).
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, the TX data width is a byte (8 bits). Otherwise, false.
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base)
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 1225              		.loc 1 1728 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 53


 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230 0000 80B4     		push	{r7}
 1231              		.cfi_def_cfa_offset 4
 1232              		.cfi_offset 7, -4
 1233 0002 83B0     		sub	sp, sp, #12
 1234              		.cfi_def_cfa_offset 16
 1235 0004 00AF     		add	r7, sp, #0
 1236              		.cfi_def_cfa_register 7
 1237 0006 7860     		str	r0, [r7, #4]
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_TX_CTRL_DATA_WIDTH, SCB_TX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
 1238              		.loc 1 1729 0
 1239 0008 7B68     		ldr	r3, [r7, #4]
 1240 000a D3F80032 		ldr	r3, [r3, #512]
 1241 000e 03F00F03 		and	r3, r3, #15
 1242 0012 072B     		cmp	r3, #7
 1243 0014 94BF     		ite	ls
 1244 0016 0123     		movls	r3, #1
 1245 0018 0023     		movhi	r3, #0
 1246 001a DBB2     		uxtb	r3, r3
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 1247              		.loc 1 1730 0
 1248 001c 1846     		mov	r0, r3
 1249 001e 0C37     		adds	r7, r7, #12
 1250              		.cfi_def_cfa_offset 4
 1251 0020 BD46     		mov	sp, r7
 1252              		.cfi_def_cfa_register 13
 1253              		@ sp needed
 1254 0022 5DF8047B 		ldr	r7, [sp], #4
 1255              		.cfi_restore 7
 1256              		.cfi_def_cfa_offset 0
 1257 0026 7047     		bx	lr
 1258              		.cfi_endproc
 1259              	.LFE215:
 1260              		.size	Cy_SCB_IsTxDataWidthByte, .-Cy_SCB_IsTxDataWidthByte
 1261              		.section	.text.Cy_SCB_SPI_Enable,"ax",%progbits
 1262              		.align	2
 1263              		.thumb
 1264              		.thumb_func
 1265              		.type	Cy_SCB_SPI_Enable, %function
 1266              	Cy_SCB_SPI_Enable:
 1267              	.LFB218:
 1268              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_spi.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \file cy_scb_spi.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Provides SPI API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 54


  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Driver API for SPI Peripheral.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The functions and other declarations used in this part of the driver are in 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * cy_scb_spi.h. You can also include cy_pdl.h (ModusToolbox only) to get access 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * to all functions and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI protocol is a synchronous serial interface protocol. Devices operate 
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * in either master or slave mode. The master initiates the data transfer. 
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SCB supports single-master-multiple-slaves topology for SPI. Multiple 
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * slaves are supported with individual slave select lines.
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Features:
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Supports master and slave functionalitySupports three types of SPI protocols:
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *  * Motorola SPI - modes 0, 1, 2, and 3
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *  * Texas Instruments SPI, with coinciding and preceding data frame indicator - mode 1 only
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *  * National Semiconductor (MicroWire) SPI - mode 0 only
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Master supports up to four slave select lines
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   * Each slave select has configurable active polarity (high or low)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   * Slave select can be programmed to stay active for a whole transfer, or 
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     just for each byte
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Master supports late sampling for better timing margin
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Master supports continuous SPI clock
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Data frame size programmable from 4 bits to 16 bits
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Programmable oversampling
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * MSb or LSb first
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Median filter available for inputs
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_configuration Configuration Considerations
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI driver configuration can be divided to number of sequential
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * steps listed below:
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_config
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_pins
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_clock
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_data_rate
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_intr
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * \ref group_scb_spi_enable
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI driver is built on top of the SCB hardware block. The SCB1 instance is
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * used as an example for all code snippets. Modify the code to match your
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * design.
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_config Configure SPI
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To set up the SPI driver, provide the configuration parameters in the
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_stc_scb_spi_config_t structure. For example: provide spiMode,
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * subMode, sclkMode, oversample, rxDataWidth, and txDataWidth. The other
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * parameters are optional for operation. To initialize the driver, call
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref Cy_SCB_SPI_Init function providing a pointer to the populated
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_stc_scb_spi_config_t structure and the allocated 
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_stc_scb_spi_context_t structure.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 55


  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_CFG
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_pins Assign and Configure Pins
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Only dedicated SCB pins can be used for SPI operation. The HSIOM
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * register must be configured to connect dedicated SCB SPI pins to the 
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * SCB block. Also, the SPI output pins must be configured in Strong Drive Input 
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Off mode and SPI input pins in Digital High-Z.
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_CFG_PINS
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_clock Assign Clock Divider
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * A clock source must be connected to the SCB block to oversample input and
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * output signals, in this document this clock will be referred as clk_scb.
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * You must use one of the 8-bit or 16-bit dividers. Use the \ref group_sysclk 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * driver API to do this.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_CFG_ASSIGN_CLOCK
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_data_rate Configure Data Rate
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To get the SPI slave to operate with the desired data rate, the clk_scb must be
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * fast enough to provide sufficient oversampling. Use the \ref group_sysclk driver 
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * API to do that.
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_CFG_DATA_RATE_SLAVE
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To get the SPI master to operate with the desired data rate, multiply the 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * oversample factor by the desired data rate to determine the required 
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * frequency for clk_scb. Use the \ref group_sysclk driver API to configure 
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * clk_scb frequency. Set the <em><b>oversample parameter in configuration 
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * structure</b></em> to define number of SCB clocks in one SCLK period. 
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * When this value is even, the first and second phases of the SCLK period are 
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the same. Otherwise, the first phase is one SCB clock cycle longer than the 
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * second phase. The level of the first phase of the clock period depends on CPOL
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * settings: 0 - low level and 1 - high level.
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_CFG_DATA_RATE_MASTER
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * <b>Refer to the technical reference manual (TRM) section SPI sub-section
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Oversampling and Bit Rate to get information about how to configure SPI to run 
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * with desired data rate</b>.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_intr Configure Interrupt
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The interrupt is optional for the SPI operation. To configure the interrupt,
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the \ref Cy_SCB_SPI_Interrupt function must be called in the interrupt
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * handler for the selected SCB instance. Also, this interrupt must be enabled
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * in the NVIC.
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The interrupt must be configured when \ref group_scb_spi_hl will be used.
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 56


 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_INTR_A
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_INTR_B
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_enable Enable SPI
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Finally, enable the SPI operation by calling \ref Cy_SCB_SPI_Enable.
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * For the slave, this means that SPI device starts responding to the transfers.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * For the master, it is ready to execute transfers.
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_ENABLE
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_use_cases Common Use Cases
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI API is the same for the master and slave mode operation and
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * is divided into two categories: \ref group_scb_spi_low_level_functions
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * and \ref group_scb_spi_high_level_functions. \n
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * <em>Do not mix <b>High-Level</b> and <b>Low-Level</b> API because a Low-Level
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * API can adversely affect the operation of a High-Level API.</em>
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_ll Low-Level API
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The \ref group_scb_spi_low_level_functions functions allow
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * interacting directly with the hardware and do not use \ref Cy_SCB_SPI_Interrupt.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * These functions do not require context for operation. Thus, NULL can be
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * passed for context parameter in \ref Cy_SCB_SPI_Init and \ref Cy_SCB_SPI_Disable 
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * instead of a pointer to the context structure.
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * To write data into the TX FIFO, use one of the provided functions:
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_Write, \ref Cy_SCB_SPI_WriteArray or
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_WriteArrayBlocking.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   Note that in the master mode, putting data into the TX FIFO starts a
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   transfer. Due to the nature of SPI, the received data is put into the RX FIFO.
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * To read data from the RX FIFO, use one of the provided functions:
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_Read or \ref Cy_SCB_SPI_ReadArray. Again due to the nature 
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   of SPI these functions do not start a transfer on the bus, they only read 
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   data out of the RX FIFO that has already been received.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The statuses can be polled using: \ref Cy_SCB_SPI_GetRxFifoStatus,
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_GetTxFifoStatus and \ref Cy_SCB_SPI_GetSlaveMasterStatus.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <em>The statuses are <b>W1C (Write 1 to Clear)</b> and after a status
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   is set, it must be cleared.</em> Note that there are statuses evaluated as level.
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   These statuses remain set until an event is true. Therefore, after the clear
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   operation, the status is cleared but then it is restored (if the event is still
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   true).
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   Also, the following functions can be used for polling as well
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_IsBusBusy, \ref Cy_SCB_SPI_IsTxComplete,
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SPI_GetNumInRxFifo and \ref Cy_SCB_SPI_GetNumInTxFifo.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_TRANFER_DATA_LL
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \subsection group_scb_spi_hl High-Level API
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 57


 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The \ref group_scb_spi_high_level_functions API use \ref Cy_SCB_SPI_Interrupt
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * to execute the transfer. Call \ref Cy_SCB_SPI_Transfer to start communication: for master 
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * mode calling this function starts a transaction with the slave. For slave mode 
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the read and write buffers are prepared for the communication with the master.
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * After a transfer is started, the \ref Cy_SCB_SPI_Interrupt handles the
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * transfer until its completion. Therefore, the \ref Cy_SCB_SPI_Interrupt function 
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * must be called inside the user interrupt handler to make the High-Level API work. 
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To monitor the status of the transfer operation, use \ref Cy_SCB_SPI_GetTransferStatus.
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Alternatively, use \ref Cy_SCB_SPI_RegisterCallback to register a callback
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * function to be notified about \ref group_scb_spi_macros_callback_events.
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\spi_snippets.c SPI_TRANFER_DATA
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_dma_trig DMA Trigger
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SCB provides TX and RX output trigger signals that can be routed to the
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * DMA controller inputs. These signals are assigned based on the data availability
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * in the TX and RX FIFOs appropriately.
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The RX trigger signal is active while the number of data
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   elements in the RX FIFO is greater than the value of RX FIFO level. Use
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   function \ref Cy_SCB_SetRxFifoLevel or set configuration structure
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   rxFifoTriggerLevel parameter to configure RX FIFO level value. \n
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <em>For example, the RX FIFO has 8 data elements and the RX FIFO level is 0.
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   The RX trigger signal is active until DMA reads all data from
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   the RX FIFO.</em>
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The TX trigger signal is active while the number of data elements
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   in the TX FIFO is less than the value of TX FIFO level. Use function
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref Cy_SCB_SetTxFifoLevel or set configuration structure txFifoTriggerLevel
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   parameter to configure TX FIFO level value. \n
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <em>For example, the TX FIFO has 0 data elements (empty) and the TX FIFO level
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   is 7. The TX trigger signal is active until DMA loads TX FIFO
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   with 8 data elements (note that after the first TX load operation, the data 
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   element goes to the shift register and TX FIFO is empty).</em>
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To route SCB TX or RX trigger signals to the DMA controller, use \ref group_trigmux
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * driver API.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To properly handle DMA level request signal activation and de-activation from the SCB
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * peripheral block the DMA Descriptor typically must be configured to re-trigger
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * after 16 Clk_Slow cycles.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_lp Low Power Support
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI driver provides callback functions to handle power mode transitions.
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The callback \ref Cy_SCB_SPI_DeepSleepCallback must be called
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * during execution of \ref Cy_SysPm_CpuEnterDeepSleep; \ref Cy_SCB_SPI_HibernateCallback
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * must be called during execution of \ref Cy_SysPm_SystemEnterHibernate. To trigger the
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * callback execution, the callback must be registered before calling the
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * power mode transition function. Refer to \ref group_syspm driver for more
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * information about power mode transitions and callback registration.
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * 
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SPI master is disabled during Deep Sleep and Hibernate and stops driving 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 58


 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the output pins. The state of the SPI master output pins SCLK, SS, and MOSI is 
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * High-Z, which can cause unexpected behavior of the SPI Slave due to possible 
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * glitches on these lines. These pins must keep the inactive level (the same state 
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * when SPI master is enabled and does not transfer data) before entering Deep 
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Sleep or Hibernate mode. To do that, write the GPIO data register of each pin 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * to the inactive level for each output pin. Then configure High-Speed Input 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Output Multiplexer (HSIOM) of each pin to be controlled by the GPIO (use 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_gpio driver API). After after exiting Deep Sleep mode the SPI 
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * master must be enabled and the pins configuration restored to return the 
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * SPI master control of the pins (after exiting Hibernate mode, the 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * system initialization code does the same). Copy either or 
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * both \ref Cy_SCB_SPI_DeepSleepCallback and \ref Cy_SCB_SPI_HibernateCallback 
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * as appropriate, and make the changes described above inside the function.
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Alternately, external pull-up or pull-down resistors can be connected 
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * to the appropriate SPI lines to keep them inactive during Deep-Sleep or 
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Hibernate.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Only applicable for <b>rev-08 of the CY8CKIT-062-BLE</b>.
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * For proper operation, when the SPI slave is configured to be a wakeup
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * source from Deep Sleep mode, the \ref Cy_SCB_SPI_DeepSleepCallback must be
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * copied and modified. Refer to the function description to get the details.
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_more_information More Information
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * For more information on the SCB peripheral, refer to the technical reference
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * manual (TRM).
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_MISRA MISRA-C Compliance
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ********************************************************************************
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * <table class="doxtable">
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <th>MISRA Rule</th>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <th>Rule Class (Required/Advisory)</th>
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <th>Rule Description</th>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <th>Description of Deviation(s)</th>
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>11.4</td>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>A</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>A cast should not be performed between a pointer to object type and
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         a different pointer to object type.</td>
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         * The pointer to the buffer memory is void to allow handling
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         The cast operation is safe because the configuration is verified
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         before operation is performed.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         * The functions \ref Cy_SCB_SPI_DeepSleepCallback and
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         \ref Cy_SCB_SPI_HibernateCallback are callback of
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         \ref cy_en_syspm_status_t type. The cast operation safety in these
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         functions becomes the user's responsibility because pointers are
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         initialized when callback is registered in SysPm driver.</td>
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>13.7</td>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 59


 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>R</td>
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Boolean operations whose results are invariant shall not be
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         permitted.</td>
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>The SCB block parameters can be a constant false or true depends on
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         the selected device and cause this violation.</td>
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>14.1</td>
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>R</td>
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>There shall be no unreachable code.</td>
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>The SCB block parameters can be a constant false or true depends on
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         the selected device and cause code to be unreachable.</td>
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>14.2</td>
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>R</td>
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>All non-null statements shall either: a) have at least one side-effect
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         however executed, or b) cause control flow to change.</td>
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>The unused function parameters are cast to void. This statement
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         has no side-effect and is used to suppress a compiler warning.</td>
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>14.7</td>
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>R</td>
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>A function shall have a single point of exit at the end of the
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         function.</td>
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>The functions can return from several points. This is done to improve
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         code clarity when returning error status code if input parameters
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         validation is failed.</td>
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * </table>
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \section group_scb_spi_changelog Changelog
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * <table class="doxtable">
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td rowspan="2">2.20</td>
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Flattened the organization of the driver source code into the single 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         source directory and the single include directory.
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     </td>
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Driver library directory-structure simplification.</td>
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Added register access layer. Use register access macros instead
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         of direct register access using dereferenced pointers.</td>
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Makes register access device-independent, so that the PDL does 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         not need to be recompiled for each supported part number.</td>
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>2.10</td>
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>None.</td>
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>SCB I2C driver updated.</td>
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td rowspan="4"> 2.0</td>
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Fixed SPI callback notification when error event occurred.</td>
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>The SPI callback passed incorrect event value if error event occurred.</td>
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 60


 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Added parameters validation for public API.</td>
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td></td>
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Replaced variables that have limited range of values with enumerated
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *         types.</td>
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td></td>
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Added missing "cy_cb_" to the callback function type names.</td>
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td></td>
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   <tr>
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>1.0</td>
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td>Initial version.</td>
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *     <td></td>
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   </tr>
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * </table>
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros Macros
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_functions Functions
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_general_functions General
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_high_level_functions High-Level
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_low_level_functions Low-Level
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_interrupt_functions Interrupt
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_low_power_functions Low Power Callbacks
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \}
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_data_structures Data Structures
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_enums Enumerated Types
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #if !defined(CY_SCB_SPI_H)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_H
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #include "cy_scb_common.h"
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #if defined(__cplusplus)
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** extern "C" {
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #endif
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                               Enumerated Types
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_enums
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI status codes */
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** Operation completed successfully */
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SUCCESS = 0U,
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 61


 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** One or more of input parameters are invalid */
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_BAD_PARAM = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_SPI_ID | 1U),
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * SPI is busy processing a transfer.
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_TRANSFER_BUSY = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_SPI_ID | 2U)
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_status_t;
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI Modes */
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SLAVE,   /**< Configures SCB for SPI Slave operation  */
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_MASTER,  /**< Configures SCB for SPI Master operation */
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_mode_t;
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI Submodes */
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** Configures an SPI for a standard Motorola SPI operation */
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_MOTOROLA     = 0x0U,
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Configures the SPI for the TI SPI operation. In the TI mode, the slave
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * select is a pulse. In this case, the pulse coincides with the first bit.
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_TI_COINCIDES = 0x01U,
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Configures an SPI for the National SPI operation. This is a half-duplex
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * mode of operation.
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_NATIONAL     = 0x02U,
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Configures an SPI for the TI SPI operation, in the TI mode. The slave
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * select is a pulse. In this case the pulse precedes the first bit.
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_TI_PRECEDES  = 0x05U,
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_sub_mode_t;
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI SCLK Modes */
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_CPHA0_CPOL0 = 0U,   /**< Clock is active low, data is changed on first edge   */
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_CPHA0_CPOL1 = 1U,   /**< Clock is active high, data is changed on first edge  */
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_CPHA1_CPOL0 = 2U,   /**< Clock is active low, data is changed on second edge  */
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_CPHA1_CPOL1 = 3U,   /**< Clock is active high, data is changed on second edge */
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_sclk_mode_t;
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI Slave Selects */
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SLAVE_SELECT0 = 0U,   /**< Master will use Slave Select 0 */
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SLAVE_SELECT1 = 1U,   /**< Master will use Slave Select 1 */
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SLAVE_SELECT2 = 2U,   /**< Master will use Slave Select 2 */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 62


 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_SLAVE_SELECT3 = 3U,   /**< Master will use Slave Select 3 */
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_slave_select_t;
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI Polarity */
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef enum
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_ACTIVE_LOW  = 0U,    /**< Signal in question is active low */
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_SCB_SPI_ACTIVE_HIGH = 1U,    /**< Signal in question is active high */
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_en_scb_spi_polarity_t;
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_enums */
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                            Type Definitions
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_data_structures
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Provides the typedef for the callback function called in the
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref Cy_SCB_SPI_Interrupt to notify the user about occurrences of
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_scb_spi_macros_callback_events.
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef void (* cy_cb_scb_spi_handle_events_t)(uint32_t event);
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI configuration structure */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef struct cy_stc_scb_spi_config
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** Specifies the mode of operation */
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     cy_en_scb_spi_mode_t    spiMode;
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** Specifies the submode of SPI operation */
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     cy_en_scb_spi_sub_mode_t    subMode;
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Configures the SCLK operation for Motorola sub-mode, ignored for all
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * other submodes
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     cy_en_scb_spi_sclk_mode_t    sclkMode;
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Oversample factor for SPI.
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * * For the master mode, the data rate is the SCB clock / oversample
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     *   (the valid range is 4 to 16, when MISO is used; if MISO is not used
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     *   then the valid range is 2 to 16).
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * * For the slave mode, the oversample value is ignored. The data rate is
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     *   determined by the SCB clock frequency.
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    oversample;
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * The width of RX data (valid range 4-16). It must be the same as
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 63


 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * \ref txDataWidth except in National sub-mode.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    rxDataWidth;
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * The width of TX data (valid range 4-16). It must be the same as
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * \ref rxDataWidth except in National sub-mode.
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    txDataWidth;
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Enables the hardware to shift out the data element MSB first, otherwise,
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * LSB first
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableMsbFirst;
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Enables the master to generate a continuous SCLK regardless of whether
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * there is data to send
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableFreeRunSclk;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Enables a digital 3-tap median filter to be applied to the input
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * of the RX FIFO to filter glitches on the line.
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableInputFilter;
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Enables the master to sample MISO line one half clock later to allow
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * better timings.
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableMisoLateSample;
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Enables the master to transmit each data element separated by a
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * de-assertion of the slave select line (only applicable for the master
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * mode)
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableTransferSeperation;
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Sets active polarity of each SS line.
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * This is a bit mask: bit 0 corresponds to SS0 and so on to SS3.
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * 1 means active high, a 0 means active low.
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    ssPolarity;
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * When set, the slave will wake the device when the slave select line
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * becomes active.
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Note that not all SCBs support this mode. Consult the device
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * datasheet to determine which SCBs support wake from Deep Sleep.
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     bool        enableWakeFromSleep;
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 64


 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * When there are more entries in the RX FIFO then this level
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * the RX trigger output goes high. This output can be connected
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * to a DMA channel through a trigger mux.
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Also, it controls the \ref CY_SCB_SPI_RX_TRIGGER interrupt source.
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    rxFifoTriggerLevel;
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Bits set in this mask will allow events to cause an interrupt
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * (See \ref group_scb_spi_macros_rx_fifo_status for the set of constant)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    rxFifoIntEnableMask;
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * When there are fewer entries in the TX FIFO then this level
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * the TX trigger output goes high. This output can be connected
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * to a DMA channel through a trigger mux.
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Also, it controls the \ref CY_SCB_SPI_TX_TRIGGER interrupt source.
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    txFifoTriggerLevel;
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Bits set in this mask allow events to cause an interrupt
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * (See \ref group_scb_spi_macros_tx_fifo_status for the set of constants)
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    txFifoIntEnableMask;
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * Bits set in this mask allow events to cause an interrupt
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * (See \ref group_scb_spi_macros_master_slave_status for the set of
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * constants)
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t    masterSlaveIntEnableMask;
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }cy_stc_scb_spi_config_t;
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** SPI context structure.
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * All fields for the context structure are internal. Firmware never reads or
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * writes these values. Firmware allocates the structure and provides the
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * address of the structure to the driver in function calls. Firmware must
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * ensure that the defined instance of this structure remains in scope
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * while the drive is in use.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** typedef struct cy_stc_scb_spi_context
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t volatile status;       /**< The receive status */
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     void    *rxBuf;                 /**< The pointer to the receive buffer */
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t rxBufSize;             /**< The receive buffer size */
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t volatile rxBufIdx;     /**< The current location in the receive buffer */
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     void    *txBuf;                 /**< The pointer to the transmit buffer */
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t txBufSize;             /**< The transmit buffer size */
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t volatile txBufIdx;     /**< The current location in the transmit buffer */
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 65


 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * The pointer to an event callback that is called when any of
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     * \ref group_scb_spi_macros_callback_events occurs
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     */
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     cy_cb_scb_spi_handle_events_t cbEvents;
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #if !defined(NDEBUG)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t initKey;               /**< Tracks the context initialization */
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #endif /* !(NDEBUG) */
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /** \endcond */
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** } cy_stc_scb_spi_context_t;
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_data_structures */
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                          Function Prototypes
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_general_functions
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** cy_en_scb_spi_status_t Cy_SCB_SPI_Init(CySCB_Type *base, cy_stc_scb_spi_config_t const *config,
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                        cy_stc_scb_spi_context_t *context);
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** void Cy_SCB_SPI_DeInit (CySCB_Type *base);
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_Enable(CySCB_Type *base);
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** void Cy_SCB_SPI_Disable(CySCB_Type *base, cy_stc_scb_spi_context_t *context);
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_SetActiveSlaveSelect(CySCB_Type *base,
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                     cy_en_scb_spi_slave_select_t slaveSelect);
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_SetActiveSlaveSelectPolarity(CySCB_Type *base,
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                     cy_en_scb_spi_slave_select_t slaveSelect,
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                     cy_en_scb_spi_polarity_t polarity);
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE bool Cy_SCB_SPI_IsBusBusy(CySCB_Type const *base);
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_general_functions */
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_high_level_functions
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** cy_en_scb_spi_status_t Cy_SCB_SPI_Transfer(CySCB_Type *base, void *txBuffer, void *rxBuffer, uint32
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                            cy_stc_scb_spi_context_t *context);
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** void     Cy_SCB_SPI_AbortTransfer    (CySCB_Type *base, cy_stc_scb_spi_context_t *context);
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** uint32_t Cy_SCB_SPI_GetTransferStatus(CySCB_Type const *base, cy_stc_scb_spi_context_t const *conte
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** uint32_t Cy_SCB_SPI_GetNumTransfered (CySCB_Type const *base, cy_stc_scb_spi_context_t const *conte
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_high_level_functions */
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_low_level_functions
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_Read     (CySCB_Type const *base);
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_ReadArray(CySCB_Type const *base, void *buffer, uint32_t size);
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_Write     (CySCB_Type *base, uint32_t data);
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_WriteArray(CySCB_Type *base, void *buffer, uint32_t size);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 66


 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void     Cy_SCB_SPI_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t siz
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetTxFifoStatus  (CySCB_Type const *base);
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void     Cy_SCB_SPI_ClearTxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetRxFifoStatus  (CySCB_Type const *base);
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void     Cy_SCB_SPI_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetSlaveMasterStatus  (CySCB_Type const *base);
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void     Cy_SCB_SPI_ClearSlaveMasterStatus(CySCB_Type *base, uint32_t clearMask);
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetNumInTxFifo(CySCB_Type const *base);
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE bool     Cy_SCB_SPI_IsTxComplete  (CySCB_Type const *base);
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetNumInRxFifo(CySCB_Type const *base);
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearRxFifo(CySCB_Type *base);
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearTxFifo(CySCB_Type *base);
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_low_level_functions */
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_interrupt_functions
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** void Cy_SCB_SPI_Interrupt(CySCB_Type *base, cy_stc_scb_spi_context_t *context);
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_RegisterCallback(CySCB_Type const *base, cy_cb_scb_spi_handle_event
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                  cy_stc_scb_spi_context_t *context);
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_interrupt_functions */
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_low_power_functions
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** cy_en_syspm_status_t Cy_SCB_SPI_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, c
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** cy_en_syspm_status_t Cy_SCB_SPI_HibernateCallback(cy_stc_syspm_callback_params_t *callbackParams, c
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_low_power_functions */
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                               API Constants
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_macros
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros_tx_fifo_status SPI TX FIFO Statuses
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Macros to check SPI TX FIFO status returned by \ref Cy_SCB_SPI_GetTxFifoStatus
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * function or assign mask for \ref Cy_SCB_SPI_ClearTxFifoStatus function.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Each SPI TX FIFO status is encoded in a separate bit, therefore multiple bits
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * may be set to indicate the current status.
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The number of entries in the TX FIFO is less than the TX FIFO trigger level
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 67


 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * value
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_TRIGGER       (SCB_INTR_TX_TRIGGER_Msk)
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The TX FIFO is not full, there is a space for more data */
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_NOT_FULL      (SCB_INTR_TX_NOT_FULL_Msk)
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The TX FIFO is empty, note that there may still be data in the shift register.
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_EMPTY         (SCB_INTR_TX_EMPTY_Msk)
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** An attempt to write to the full TX FIFO */
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_OVERFLOW      (SCB_INTR_TX_OVERFLOW_Msk)
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Applicable only for the slave mode. The master tried to read more
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * data elements than available.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_UNDERFLOW     (SCB_INTR_TX_UNDERFLOW_Msk)
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros_tx_fifo_status */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros_rx_fifo_status SPI RX FIFO Statuses
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Macros to check SPI RX FIFO status returned by \ref Cy_SCB_SPI_GetRxFifoStatus
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * function or assign mask for \ref Cy_SCB_SPI_ClearRxFifoStatus function.
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Each SPI RX FIFO status is encoded in a separate bit, therefore multiple
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * bits may be set to indicate the current status.
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The number of entries in the RX FIFO is more than the RX FIFO trigger
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * level value.
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_TRIGGER       (SCB_INTR_RX_TRIGGER_Msk)
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The RX FIFO is not empty, there is data to read */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_NOT_EMPTY     (SCB_INTR_RX_NOT_EMPTY_Msk)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The RX FIFO is full. There is no more space for additional data.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Any additional data will be dropped.
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_FULL          (SCB_INTR_RX_FULL_Msk)
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The RX FIFO was full and there was an attempt to write to it.
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This additional data was dropped.
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_OVERFLOW      (SCB_INTR_RX_OVERFLOW_Msk)
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** An attempt to read from an empty RX FIFO */
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_UNDERFLOW     (SCB_INTR_RX_UNDERFLOW_Msk)
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros_rx_fifo_status */
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros_master_slave_status SPI Master and Slave Statuses
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 68


 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Macros to check SPI Mater and Slave status returned by \ref Cy_SCB_SPI_GetSlaveMasterStatus
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * function or assign mask for \ref Cy_SCB_SPI_ClearSlaveMasterStatus function.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The slave was deselected at the wrong time */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_SLAVE_ERR       (SCB_INTR_S_SPI_BUS_ERROR_Msk)
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The master has transmitted all data elements from FIFO and shifter */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_MASTER_DONE     (SCB_INTR_M_SPI_DONE_Msk)
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros_master_slave_status */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros_xfer_status SPI Transfer Status
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Macros to check current SPI transfer status returned by 
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref Cy_SCB_SPI_GetTransferStatus function. 
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Each SPI transfer status is encoded in a separate bit, therefore multiple bits
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * may be set to indicate the current status.
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Transfer operation started by \ref Cy_SCB_SPI_Transfer is in progress
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_ACTIVE     (0x01UL)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * All data elements specified by \ref Cy_SCB_SPI_Transfer for transmission
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * have been loaded into the TX FIFO
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_IN_FIFO    (0x02UL)
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The slave was deselected at the wrong time. */
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_SLAVE_TRANSFER_ERR  (SCB_INTR_S_SPI_BUS_ERROR_Msk)
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * RX FIFO was full and there was an attempt to write to it.
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This additional data was dropped.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_OVERFLOW   (SCB_INTR_RX_OVERFLOW_Msk)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Applicable only for the slave mode. The master tried to read more
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * data elements than available in the TX FIFO.
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_UNDERFLOW  (SCB_INTR_TX_UNDERFLOW_Msk)
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros_xfer_status */
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \defgroup group_scb_spi_macros_callback_events SPI Callback Events
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Macros to check SPI events passed by \ref cy_cb_scb_spi_handle_events_t callback.
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Note that only single event is notified by the callback when it is called.
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * All data elements specified by \ref Cy_SCB_SPI_Transfer for transmission
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * have been loaded into the TX FIFO
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_IN_FIFO_EVENT  (0x01U)
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 69


 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** The transfer operation started by \ref Cy_SCB_SPI_Transfer is complete */
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_CMPLT_EVENT    (0x02U)
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * An error occurred during the transfer. This includes overflow, underflow
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * and a transfer error. Check \ref Cy_SCB_SPI_GetTransferStatus.
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_ERR_EVENT      (0x04U)
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros_callback_events */
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** Default TX value when no TX buffer is defined */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_DEFAULT_TX  (0x0000FFFFUL)
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** Data returned by the hardware when an empty RX FIFO is read */
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_NO_DATA  (0xFFFFFFFFUL)
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                          Internal Constants
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \cond INTERNAL */
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_RX_INTR_MASK  (CY_SCB_SPI_RX_TRIGGER  | CY_SCB_SPI_RX_NOT_EMPTY | CY_SCB_SPI_RX_
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                   CY_SCB_SPI_RX_OVERFLOW | CY_SCB_SPI_RX_UNDERFLOW)
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TX_INTR_MASK  (CY_SCB_SPI_TX_TRIGGER  | CY_SCB_SPI_TX_NOT_FULL | CY_SCB_SPI_TX_E
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                   CY_SCB_SPI_TX_OVERFLOW | CY_SCB_SPI_TX_UNDERFLOW)
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_MASTER_SLAVE_INTR_MASK (CY_SCB_SPI_MASTER_DONE | CY_SCB_SPI_SLAVE_ERR)
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_TRANSFER_ERR    (CY_SCB_SPI_SLAVE_TRANSFER_ERR | CY_SCB_SPI_TRANSFER_OVERFLOW | 
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                     CY_SCB_SPI_TRANSFER_UNDERFLOW)
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_INIT_KEY        (0x00ABCDEFUL)
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_MODE_VALID(mode)          ( (CY_SCB_SPI_SLAVE  == (mode)) || \
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_MASTER == (mode)) )
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_SUB_MODE_VALID(subMode)   ( (CY_SCB_SPI_MOTOROLA     == (subMode)) || \
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_TI_COINCIDES == (subMode)) || \
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_TI_PRECEDES  == (subMode)) || \
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_NATIONAL     == (subMode)) )
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_SCLK_MODE_VALID(clkMode)  ( (CY_SCB_SPI_CPHA0_CPOL0 == (clkMode)) || \
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_CPHA0_CPOL1 == (clkMode)) || \
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_CPHA1_CPOL0 == (clkMode)) || \
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_CPHA1_CPOL1 == (clkMode)) )
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_POLARITY_VALID(polarity)  ( (CY_SCB_SPI_ACTIVE_LOW  == (polarity)) || \
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_ACTIVE_HIGH == (polarity)) )
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_SLAVE_SEL_VALID(ss)       ( (CY_SCB_SPI_SLAVE_SELECT0 == (ss)) || \
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_SLAVE_SELECT1 == (ss)) || \
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_SLAVE_SELECT2 == (ss)) || \
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                   (CY_SCB_SPI_SLAVE_SELECT3 == (ss)) )
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 70


 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_OVERSAMPLE_VALID(ovs, mode)   ( (CY_SCB_SPI_MASTER == (mode)) ? (((ovs) >= 2U
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_DATA_WIDTH_VALID(width)       ( ((width) >= 4UL) && ((width) <= 16UL) )
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_SS_POLARITY_VALID(polarity)   ( (0UL == ((polarity) & (~0x0FUL))) )
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_BUFFER_VALID(txBuffer, rxBuffer, size)  ( ((size) > 0UL)  && \
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                                  (false == ((NULL == (txBuffer)) &&
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** #define CY_SCB_SPI_IS_BOTH_DATA_WIDTH_VALID(subMode, rxWidth, txWidth)  ( (CY_SCB_SPI_NATIONAL != (
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                                                                     ((rxWidth) == (
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \endcond */
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_macros */
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *                     In-line Function Implementation
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_general_functions
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_Enable
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Enables the SCB block for the SPI operation.
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_Enable(CySCB_Type *base)
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1269              		.loc 2 961 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 8
 1272              		@ frame_needed = 1, uses_anonymous_args = 0
 1273              		@ link register save eliminated.
 1274 0000 80B4     		push	{r7}
 1275              		.cfi_def_cfa_offset 4
 1276              		.cfi_offset 7, -4
 1277 0002 83B0     		sub	sp, sp, #12
 1278              		.cfi_def_cfa_offset 16
 1279 0004 00AF     		add	r7, sp, #0
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     SCB_CTRL(base) |= SCB_CTRL_ENABLED_Msk;
 1282              		.loc 2 962 0
 1283 0008 7B68     		ldr	r3, [r7, #4]
 1284 000a 1B68     		ldr	r3, [r3]
 1285 000c 43F00042 		orr	r2, r3, #-2147483648
 1286 0010 7B68     		ldr	r3, [r7, #4]
 1287 0012 1A60     		str	r2, [r3]
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1288              		.loc 2 963 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 71


 1289 0014 00BF     		nop
 1290 0016 0C37     		adds	r7, r7, #12
 1291              		.cfi_def_cfa_offset 4
 1292 0018 BD46     		mov	sp, r7
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 001a 5DF8047B 		ldr	r7, [sp], #4
 1296              		.cfi_restore 7
 1297              		.cfi_def_cfa_offset 0
 1298 001e 7047     		bx	lr
 1299              		.cfi_endproc
 1300              	.LFE218:
 1301              		.size	Cy_SCB_SPI_Enable, .-Cy_SCB_SPI_Enable
 1302              		.section	.text.Cy_SCB_SPI_IsBusBusy,"ax",%progbits
 1303              		.align	2
 1304              		.thumb
 1305              		.thumb_func
 1306              		.type	Cy_SCB_SPI_IsBusBusy, %function
 1307              	Cy_SCB_SPI_IsBusBusy:
 1308              	.LFB219:
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_IsBusBusy
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns whether the SPI bus is busy or not. The bus busy is determined using
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the slave select signal.
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Motorola and National Semiconductor sub-modes: the bus is busy after the
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   slave select line is activated and lasts until the slave select line is
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   deactivated.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Texas Instrument sub-modes: The bus is busy the moment of the initial
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   pulse on the slave select line and lasts until the transfer is complete 
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   (all bytes from the TX FIFO area shifted-out on the bus).
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * True - the bus is busy; false - the bus is idle.
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The SPI master does not assign the slave select line immediately after
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   the first data element is written into the TX FIFO. It takes up to two SCLK
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   clocks to assign the slave select line. Before this happens, the bus
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   is considered idle.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * If the SPI master is configured to transmit each data element separated by 
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   a de-assertion of the slave select line, the bus is busy during each element
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   transfer and is free between them.
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE bool Cy_SCB_SPI_IsBusBusy(CySCB_Type const *base)
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1309              		.loc 2 996 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 8
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 72


 1313              		@ link register save eliminated.
 1314 0000 80B4     		push	{r7}
 1315              		.cfi_def_cfa_offset 4
 1316              		.cfi_offset 7, -4
 1317 0002 83B0     		sub	sp, sp, #12
 1318              		.cfi_def_cfa_offset 16
 1319 0004 00AF     		add	r7, sp, #0
 1320              		.cfi_def_cfa_register 7
 1321 0006 7860     		str	r0, [r7, #4]
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return _FLD2BOOL(SCB_SPI_STATUS_BUS_BUSY, SCB_SPI_STATUS(base));
 1322              		.loc 2 997 0
 1323 0008 7B68     		ldr	r3, [r7, #4]
 1324 000a 5B6A     		ldr	r3, [r3, #36]
 1325 000c 03F00103 		and	r3, r3, #1
 1326 0010 002B     		cmp	r3, #0
 1327 0012 14BF     		ite	ne
 1328 0014 0123     		movne	r3, #1
 1329 0016 0023     		moveq	r3, #0
 1330 0018 DBB2     		uxtb	r3, r3
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1331              		.loc 2 998 0
 1332 001a 1846     		mov	r0, r3
 1333 001c 0C37     		adds	r7, r7, #12
 1334              		.cfi_def_cfa_offset 4
 1335 001e BD46     		mov	sp, r7
 1336              		.cfi_def_cfa_register 13
 1337              		@ sp needed
 1338 0020 5DF8047B 		ldr	r7, [sp], #4
 1339              		.cfi_restore 7
 1340              		.cfi_def_cfa_offset 0
 1341 0024 7047     		bx	lr
 1342              		.cfi_endproc
 1343              	.LFE219:
 1344              		.size	Cy_SCB_SPI_IsBusBusy, .-Cy_SCB_SPI_IsBusBusy
 1345 0026 00BF     		.section	.text.Cy_SCB_SPI_GetNumInRxFifo,"ax",%progbits
 1346              		.align	2
 1347              		.thumb
 1348              		.thumb_func
 1349              		.type	Cy_SCB_SPI_GetNumInRxFifo, %function
 1350              	Cy_SCB_SPI_GetNumInRxFifo:
 1351              	.LFB224:
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_SetActiveSlaveSelect
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Selects an active slave select line from one of four available.
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This function is applicable for the master and slave.
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param slaveSelect
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The slave select line number.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref cy_en_scb_spi_slave_select_t for the set of constants.
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 73


1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SCB must be idle or disabled before calling this function.
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_SetActiveSlaveSelect(CySCB_Type *base, cy_en_scb_spi_slave_select_t
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L3(CY_SCB_SPI_IS_SLAVE_SEL_VALID(slaveSelect));
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_REG32_CLR_SET(SCB_SPI_CTRL(base), SCB_SPI_CTRL_SSEL, (uint32_t) slaveSelect);
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_SetActiveSlaveSelectPolarity
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Sets the active polarity for the slave select line.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param slaveSelect
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The slave select line number.
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref cy_en_scb_spi_slave_select_t for the set of constants.
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param polarity
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The polarity of the slave select line.
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref cy_en_scb_spi_polarity_t for the set of constants.
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The SCB must be idle or disabled before calling this function.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_SetActiveSlaveSelectPolarity(CySCB_Type *base,
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                 cy_en_scb_spi_slave_select_t slaveSelect,
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****                                 cy_en_scb_spi_polarity_t polarity)
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t mask = _VAL2FLD(CY_SCB_SPI_CTRL_SSEL_POLARITY, (0x01UL << slaveSelect));
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L3(CY_SCB_SPI_IS_SLAVE_SEL_VALID(slaveSelect));
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L3(CY_SCB_SPI_IS_POLARITY_VALID (polarity));
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     if (CY_SCB_SPI_ACTIVE_HIGH != polarity)
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         SCB_SPI_CTRL(base) |= (uint32_t)  mask;
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     else
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         SCB_SPI_CTRL(base) &= (uint32_t) ~mask;
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_general_functions */
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_low_level_functions
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 74


1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_GetRxFifoStatus
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns the current status of the RX FIFO.
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_scb_spi_macros_rx_fifo_status
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetRxFifoStatus(CySCB_Type const *base)
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return (Cy_SCB_GetRxInterruptStatus(base) & CY_SCB_SPI_RX_INTR_MASK);
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ClearRxFifoStatus
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Clears the selected statuses of the RX FIFO.
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param clearMask
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The mask of which statuses to clear.
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref group_scb_spi_macros_rx_fifo_status for the set of constants.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * This status is also used for interrupt generation, so clearing it also
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   clears the interrupt sources.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Level sensitive statuses such as \ref CY_SCB_SPI_RX_TRIGGER,
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref CY_SCB_SPI_RX_NOT_EMPTY and \ref CY_SCB_SPI_RX_FULL set high again after
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   being cleared if the condition remains true.
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask)
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_SPI_RX_INTR_MASK));
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     Cy_SCB_ClearRxInterrupt(base, clearMask);
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_GetNumInRxFifo
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns the number of data elements in the SPI RX FIFO.
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 75


1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements in the RX FIFO.
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The size of a data element defined by the configured RX data width.
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This number does not include any data currently in the RX shifter.
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetNumInRxFifo(CySCB_Type const *base)
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1352              		.loc 2 1139 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 8
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 80B5     		push	{r7, lr}
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 82B0     		sub	sp, sp, #8
 1361              		.cfi_def_cfa_offset 16
 1362 0004 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_GetNumInRxFifo(base);
 1365              		.loc 2 1140 0
 1366 0008 7868     		ldr	r0, [r7, #4]
 1367 000a FFF7FEFF 		bl	Cy_SCB_GetNumInRxFifo
 1368 000e 0346     		mov	r3, r0
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1369              		.loc 2 1141 0
 1370 0010 1846     		mov	r0, r3
 1371 0012 0837     		adds	r7, r7, #8
 1372              		.cfi_def_cfa_offset 8
 1373 0014 BD46     		mov	sp, r7
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 0016 80BD     		pop	{r7, pc}
 1377              		.cfi_endproc
 1378              	.LFE224:
 1379              		.size	Cy_SCB_SPI_GetNumInRxFifo, .-Cy_SCB_SPI_GetNumInRxFifo
 1380              		.section	.text.Cy_SCB_SPI_ClearRxFifo,"ax",%progbits
 1381              		.align	2
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	Cy_SCB_SPI_ClearRxFifo, %function
 1385              	Cy_SCB_SPI_ClearRxFifo:
 1386              	.LFB225:
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ClearRxFifo
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Clears all data out of the SPI RX FIFO.
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 76


1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \sideeffect
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Any data currently in the shifter is cleared and lost.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearRxFifo(CySCB_Type *base)
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1387              		.loc 2 1158 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 8
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 82B0     		sub	sp, sp, #8
 1396              		.cfi_def_cfa_offset 16
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 7860     		str	r0, [r7, #4]
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     Cy_SCB_ClearRxFifo(base);
 1400              		.loc 2 1159 0
 1401 0008 7868     		ldr	r0, [r7, #4]
 1402 000a FFF7FEFF 		bl	Cy_SCB_ClearRxFifo
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1403              		.loc 2 1160 0
 1404 000e 00BF     		nop
 1405 0010 0837     		adds	r7, r7, #8
 1406              		.cfi_def_cfa_offset 8
 1407 0012 BD46     		mov	sp, r7
 1408              		.cfi_def_cfa_register 13
 1409              		@ sp needed
 1410 0014 80BD     		pop	{r7, pc}
 1411              		.cfi_endproc
 1412              	.LFE225:
 1413              		.size	Cy_SCB_SPI_ClearRxFifo, .-Cy_SCB_SPI_ClearRxFifo
 1414 0016 00BF     		.section	.text.Cy_SCB_SPI_IsTxComplete,"ax",%progbits
 1415              		.align	2
 1416              		.thumb
 1417              		.thumb_func
 1418              		.type	Cy_SCB_SPI_IsTxComplete, %function
 1419              	Cy_SCB_SPI_IsTxComplete:
 1420              	.LFB229:
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_GetTxFifoStatus
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns the current status of the TX FIFO.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_scb_spi_macros_tx_fifo_status
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 77


1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetTxFifoStatus(CySCB_Type const *base)
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return (Cy_SCB_GetTxInterruptStatus(base) & CY_SCB_SPI_TX_INTR_MASK);
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ClearTxFifoStatus
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Clears the selected statuses of the TX FIFO.
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param clearMask
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The mask of which statuses to clear.
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref group_scb_spi_macros_tx_fifo_status for the set of constants.
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The status is also used for interrupt generation, so clearing it also
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   clears the interrupt sources.
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * Level sensitive statuses such as \ref CY_SCB_SPI_TX_TRIGGER,
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   \ref CY_SCB_SPI_TX_EMPTY and \ref CY_SCB_SPI_TX_NOT_FULL set high again after
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   being cleared if the condition remains true.
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearTxFifoStatus(CySCB_Type *base, uint32_t clearMask)
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_SPI_TX_INTR_MASK));
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     Cy_SCB_ClearTxInterrupt(base, clearMask);
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_GetNumInTxFifo
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns the number of data elements in the SPI TX FIFO.
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements in the TX FIFO.
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The size of a data element defined by the configured TX data width.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This number does not include any data currently in the TX shifter.
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetNumInTxFifo(CySCB_Type const *base)
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_GetNumInTxFifo(base);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 78


1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_IsTxComplete
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Checks whether the TX FIFO and Shifter are empty and there is no more data to send
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Pointer to the SPI SCB instance.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * If true, transmission complete. If false, transmission is not complete.
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE bool Cy_SCB_SPI_IsTxComplete(CySCB_Type const *base)
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1421              		.loc 2 1248 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 8
 1424              		@ frame_needed = 1, uses_anonymous_args = 0
 1425 0000 80B5     		push	{r7, lr}
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 82B0     		sub	sp, sp, #8
 1430              		.cfi_def_cfa_offset 16
 1431 0004 00AF     		add	r7, sp, #0
 1432              		.cfi_def_cfa_register 7
 1433 0006 7860     		str	r0, [r7, #4]
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_IsTxComplete(base);
 1434              		.loc 2 1249 0
 1435 0008 7868     		ldr	r0, [r7, #4]
 1436 000a FFF7FEFF 		bl	Cy_SCB_IsTxComplete
 1437 000e 0346     		mov	r3, r0
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1438              		.loc 2 1250 0
 1439 0010 1846     		mov	r0, r3
 1440 0012 0837     		adds	r7, r7, #8
 1441              		.cfi_def_cfa_offset 8
 1442 0014 BD46     		mov	sp, r7
 1443              		.cfi_def_cfa_register 13
 1444              		@ sp needed
 1445 0016 80BD     		pop	{r7, pc}
 1446              		.cfi_endproc
 1447              	.LFE229:
 1448              		.size	Cy_SCB_SPI_IsTxComplete, .-Cy_SCB_SPI_IsTxComplete
 1449              		.section	.text.Cy_SCB_SPI_ClearTxFifo,"ax",%progbits
 1450              		.align	2
 1451              		.thumb
 1452              		.thumb_func
 1453              		.type	Cy_SCB_SPI_ClearTxFifo, %function
 1454              	Cy_SCB_SPI_ClearTxFifo:
 1455              	.LFB230:
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 79


1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ClearTxFifo
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Clears all data out of the SPI TX FIFO.
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \sideeffect
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The TX FIFO clear operation also clears the shift register;
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * the shifter can be cleared in the middle of a data element transfer,
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * corrupting it. The data element corruption means that all bits that have
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * not been transmitted are transmitted as 1s on the bus.
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearTxFifo(CySCB_Type *base)
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1456              		.loc 2 1270 0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 8
 1459              		@ frame_needed = 1, uses_anonymous_args = 0
 1460 0000 80B5     		push	{r7, lr}
 1461              		.cfi_def_cfa_offset 8
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 82B0     		sub	sp, sp, #8
 1465              		.cfi_def_cfa_offset 16
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 1468 0006 7860     		str	r0, [r7, #4]
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     Cy_SCB_ClearTxFifo(base);
 1469              		.loc 2 1271 0
 1470 0008 7868     		ldr	r0, [r7, #4]
 1471 000a FFF7FEFF 		bl	Cy_SCB_ClearTxFifo
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1472              		.loc 2 1272 0
 1473 000e 00BF     		nop
 1474 0010 0837     		adds	r7, r7, #8
 1475              		.cfi_def_cfa_offset 8
 1476 0012 BD46     		mov	sp, r7
 1477              		.cfi_def_cfa_register 13
 1478              		@ sp needed
 1479 0014 80BD     		pop	{r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE230:
 1482              		.size	Cy_SCB_SPI_ClearTxFifo, .-Cy_SCB_SPI_ClearTxFifo
 1483 0016 00BF     		.section	.text.Cy_SCB_SPI_Read,"ax",%progbits
 1484              		.align	2
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	Cy_SCB_SPI_Read, %function
 1488              	Cy_SCB_SPI_Read:
 1489              	.LFB233:
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 80


1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_GetSlaveMasterStatus
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Returns the current status of either the slave or the master, depending
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * on the configured SPI mode.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_scb_spi_macros_master_slave_status
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_GetSlaveMasterStatus(CySCB_Type const *base)
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     uint32_t retStatus;
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     if (_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base)))
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         retStatus = (Cy_SCB_GetMasterInterruptStatus(base) & CY_SCB_MASTER_INTR_SPI_DONE);
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     else
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         retStatus = (Cy_SCB_GetSlaveInterruptStatus(base) & CY_SCB_SLAVE_INTR_SPI_BUS_ERROR);
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return (retStatus);
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ClearSlaveMasterStatus
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Clears the selected statuses of either the slave or the master.
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param clearMask
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The mask of which statuses to clear.
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref group_scb_spi_macros_master_slave_status for the set of constants.
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_ClearSlaveMasterStatus(CySCB_Type *base, uint32_t clearMask)
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     if (_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base)))
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_MASTER_INTR_SPI_DONE));
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         Cy_SCB_ClearMasterInterrupt(base, clearMask);
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     else
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_SLAVE_INTR_SPI_BUS_ERROR));
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         Cy_SCB_ClearSlaveInterrupt(base, clearMask);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 81


1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_Read
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Reads a single data element from the SPI RX FIFO.
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This function does not check whether the RX FIFO has data before reading it.
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * If the RX FIFO is empty, the function returns \ref CY_SCB_SPI_RX_NO_DATA.
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Data from the RX FIFO.
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The data element size is defined by the configured RX data width.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * This function only reads data available in the RX FIFO. It does not
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   initiate an SPI transfer.
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the master mode, this function writes data into the TX FIFO and 
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   waits until the transfer is completed before reading data from the RX FIFO.
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_Read(CySCB_Type const *base)
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1490              		.loc 2 1360 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 8
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 82B0     		sub	sp, sp, #8
 1499              		.cfi_def_cfa_offset 16
 1500 0004 00AF     		add	r7, sp, #0
 1501              		.cfi_def_cfa_register 7
 1502 0006 7860     		str	r0, [r7, #4]
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_ReadRxFifo(base);
 1503              		.loc 2 1361 0
 1504 0008 7868     		ldr	r0, [r7, #4]
 1505 000a FFF7FEFF 		bl	Cy_SCB_ReadRxFifo
 1506 000e 0346     		mov	r3, r0
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1507              		.loc 2 1362 0
 1508 0010 1846     		mov	r0, r3
 1509 0012 0837     		adds	r7, r7, #8
 1510              		.cfi_def_cfa_offset 8
 1511 0014 BD46     		mov	sp, r7
 1512              		.cfi_def_cfa_register 13
 1513              		@ sp needed
 1514 0016 80BD     		pop	{r7, pc}
 1515              		.cfi_endproc
 1516              	.LFE233:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 82


 1517              		.size	Cy_SCB_SPI_Read, .-Cy_SCB_SPI_Read
 1518              		.section	.text.CY_SCB_SPI_GetSclkMode,"ax",%progbits
 1519              		.align	2
 1520              		.thumb
 1521              		.thumb_func
 1522              		.type	CY_SCB_SPI_GetSclkMode, %function
 1523              	CY_SCB_SPI_GetSclkMode:
 1524              	.LFB239:
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_ReadArray
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Reads an array of data out of the SPI RX FIFO.
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This function does not block. It returns how many data elements were read
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * from the RX FIFO.
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param buffer
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the location to place data read from the RX FIFO.
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The element size is defined by the data type, which depends on the configured
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * RX data width.
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param size
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements to read from the RX FIFO.
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements read from the RX FIFO.
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * This function only reads data available in the RX FIFO. It does not
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   initiate an SPI transfer.
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the master mode, this function writes data into the TX FIFO and 
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   waits until the transfer is completed before reading data from the RX FIFO.
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_ReadArray(CySCB_Type const *base, void *buffer, uint32_t size)
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_ReadArray(base, buffer, size);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_Write
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Places a single data element in the SPI TX FIFO.
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * This function does not block. It returns how many data elements were placed
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * in the TX FIFO.
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 83


1412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param data
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Data to put in the TX FIFO.
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The element size is defined by the data type, which depends on the configured
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * TX data width.
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements placed in the TX FIFO: 0 or 1.
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the master mode, writing data into the TX FIFO starts an SPI
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   transfer.
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the slave mode, writing data into the TX FIFO does not start
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   an SPI transfer. The data is loaded in the TX FIFO and will be sent
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   to the master on its request.
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The SPI interface is full-duplex, therefore reads and writes occur
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   at the same time. Thus, for every data element transferred out of the
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   TX FIFO, one is transferred into the RX FIFO.
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_Write(CySCB_Type *base, uint32_t data)
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_Write(base, data);
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_WriteArray
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Places an array of data in the SPI TX FIFO. This function does not
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * block. It returns how many data elements were placed in the TX FIFO.
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param buffer
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the data to place in the TX FIFO.
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The element size is defined by the data type, which depends on the configured
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * TX data width.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param size
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements to transmit.
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements placed in the TX FIFO.
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the master mode, writing data into the TX FIFO starts an SPI
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   transfer.
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the slave mode, writing data into the TX FIFO does not start
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   an SPI transfer. The data is loaded in the TX FIFO and will be sent to
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   the master on its request.
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The SPI interface is full-duplex, therefore reads and writes occur
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   at the same time. Thus, for every data element transferred out of the
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   TX FIFO, one is transferred into the RX FIFO.
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 84


1469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t Cy_SCB_SPI_WriteArray(CySCB_Type *base, void *buffer, uint32_t size)
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     return Cy_SCB_WriteArray(base, buffer, size);
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_WriteArrayBlocking
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Places an array of data in the SPI TX FIFO. This function blocks
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * until the number of data elements specified by size is placed in the SPI
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * TX FIFO.
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param buffer
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to data to place in the TX FIFO.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The element size is defined by the data type, which depends on the configured
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * TX data width.
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param size
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The number of data elements to write into the TX FIFO.
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the master mode, writing data into the TX FIFO starts an SPI
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   transfer.
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * When in the slave mode, writing data into the TX FIFO does not start
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   an SPI transfer. The data is loaded in the TX FIFO and will be sent to
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   the master on its request.
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * * The SPI interface is full-duplex, therefore reads and writes occur
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   at the same time. Thus, for every data element transferred out of the
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *   TX FIFO, one is transferred into the RX FIFO.
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size)
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     Cy_SCB_WriteArrayBlocking(base, buffer, size);
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \} group_scb_spi_low_level_functions */
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /**
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \addtogroup group_scb_spi_interrupt_functions
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \{
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** */
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: Cy_SCB_SPI_RegisterCallback
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Registers a callback function, which notifies that
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 85


1526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref group_scb_spi_macros_callback_events occurred in the
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref Cy_SCB_SPI_Interrupt.
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param base
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the SPI SCB instance.
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param callback
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the callback function.
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * See \ref cy_cb_scb_spi_handle_events_t for the function prototype.
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param context
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * by the user. The structure is used during the SPI operation for internal
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * configuration and data retention. The user should not modify anything
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * in this structure.
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \note
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * To remove the callback, pass NULL as the pointer to the callback function.
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE void Cy_SCB_SPI_RegisterCallback(CySCB_Type const *base,
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****             cy_cb_scb_spi_handle_events_t callback, cy_stc_scb_spi_context_t *context)
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     /* Suppress a compiler warning about unused variables */
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     (void) base;
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     context->cbEvents = callback;
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /** \cond INTERNAL */
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** /*******************************************************************************
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Function Name: CY_SCB_SPI_GetSclkMode
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** ****************************************************************************//**
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * Return correct SCLK mode depends on selected sub mode.
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param subMode
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_en_scb_spi_sub_mode_t
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \param sclkMode
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_en_scb_spi_sclk_mode_t
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \return
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** * \ref cy_en_scb_spi_sclk_mode_t
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** *******************************************************************************/
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** __STATIC_INLINE uint32_t CY_SCB_SPI_GetSclkMode(cy_en_scb_spi_sub_mode_t subMode , cy_en_scb_spi_sc
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** {
 1525              		.loc 2 1573 0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 8
 1528              		@ frame_needed = 1, uses_anonymous_args = 0
 1529              		@ link register save eliminated.
 1530 0000 80B4     		push	{r7}
 1531              		.cfi_def_cfa_offset 4
 1532              		.cfi_offset 7, -4
 1533 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 86


 1534              		.cfi_def_cfa_offset 16
 1535 0004 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
 1537 0006 0346     		mov	r3, r0
 1538 0008 0A46     		mov	r2, r1
 1539 000a FB71     		strb	r3, [r7, #7]
 1540 000c 1346     		mov	r3, r2
 1541 000e BB71     		strb	r3, [r7, #6]
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     switch (subMode)
 1542              		.loc 2 1574 0
 1543 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1544 0012 052B     		cmp	r3, #5
 1545 0014 14D8     		bhi	.L89
 1546 0016 01A2     		adr	r2, .L91
 1547 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1548              		.p2align 2
 1549              	.L91:
 1550 001c 3D000000 		.word	.L90+1
 1551 0020 35000000 		.word	.L92+1
 1552 0024 39000000 		.word	.L93+1
 1553 0028 41000000 		.word	.L89+1
 1554 002c 41000000 		.word	.L89+1
 1555 0030 35000000 		.word	.L92+1
 1556              		.p2align 1
 1557              	.L92:
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     {
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         case CY_SCB_SPI_TI_PRECEDES:
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         case CY_SCB_SPI_TI_COINCIDES:
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****             return (uint32_t) CY_SCB_SPI_CPHA1_CPOL0;
 1558              		.loc 2 1578 0
 1559 0034 0223     		movs	r3, #2
 1560 0036 04E0     		b	.L94
 1561              	.L93:
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         case CY_SCB_SPI_NATIONAL:
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****             return (uint32_t) CY_SCB_SPI_CPHA0_CPOL0;
 1562              		.loc 2 1581 0
 1563 0038 0023     		movs	r3, #0
 1564 003a 02E0     		b	.L94
 1565              	.L90:
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         case CY_SCB_SPI_MOTOROLA:
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****             return (uint32_t) sclkMode;
 1566              		.loc 2 1584 0
 1567 003c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1568 003e 00E0     		b	.L94
 1569              	.L89:
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** 
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****         default:
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****             return (uint32_t) sclkMode;
 1570              		.loc 2 1587 0
 1571 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1572              	.L94:
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h ****     }
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.h **** }
 1573              		.loc 2 1589 0
 1574 0042 1846     		mov	r0, r3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 87


 1575 0044 0C37     		adds	r7, r7, #12
 1576              		.cfi_def_cfa_offset 4
 1577 0046 BD46     		mov	sp, r7
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 0048 5DF8047B 		ldr	r7, [sp], #4
 1581              		.cfi_restore 7
 1582              		.cfi_def_cfa_offset 0
 1583 004c 7047     		bx	lr
 1584              		.cfi_endproc
 1585              	.LFE239:
 1586              		.size	CY_SCB_SPI_GetSclkMode, .-CY_SCB_SPI_GetSclkMode
 1587 004e 00BF     		.section	.rodata
 1588 0042 0000     		.align	2
 1589              	.LC1:
 1590 0044 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 1590      72617465 
 1590      645F536F 
 1590      75726365 
 1590      5C50536F 
 1591 0072 7363625C 		.ascii	"scb\\cy_scb_spi.c\000"
 1591      63795F73 
 1591      63625F73 
 1591      70692E63 
 1591      00
 1592              		.section	.text.Cy_SCB_SPI_Init,"ax",%progbits
 1593              		.align	2
 1594              		.global	Cy_SCB_SPI_Init
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	Cy_SCB_SPI_Init, %function
 1598              	Cy_SCB_SPI_Init:
 1599              	.LFB240:
 1600              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_spi.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \file cy_scb_spi.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Provides SPI API implementation of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** #include "cy_scb_spi.h"
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** #ifdef CY_IP_MXSCB
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** #if defined(__cplusplus)
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** extern "C" {
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** #endif
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /* Static functions */
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 88


  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void HandleTransmit(CySCB_Type *base, cy_stc_scb_spi_context_t *context);
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void HandleReceive (CySCB_Type *base, cy_stc_scb_spi_context_t *context);
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void DiscardArrayNoCheck(CySCB_Type const *base, uint32_t size);
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_Init
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Initializes the SCB for SPI operation.
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param config
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the configuration structure \ref cy_stc_scb_spi_config_t.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If only SPI \ref group_scb_spi_ll will be used pass NULL as pointer to 
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * context.
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_en_scb_spi_status_t
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Ensure that the SCB block is disabled before calling this function.
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** cy_en_scb_spi_status_t Cy_SCB_SPI_Init(CySCB_Type *base, cy_stc_scb_spi_config_t const *config, cy_
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 1601              		.loc 3 56 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 24
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 90B5     		push	{r4, r7, lr}
 1606              		.cfi_def_cfa_offset 12
 1607              		.cfi_offset 4, -12
 1608              		.cfi_offset 7, -8
 1609              		.cfi_offset 14, -4
 1610 0002 87B0     		sub	sp, sp, #28
 1611              		.cfi_def_cfa_offset 40
 1612 0004 00AF     		add	r7, sp, #0
 1613              		.cfi_def_cfa_register 7
 1614 0006 F860     		str	r0, [r7, #12]
 1615 0008 B960     		str	r1, [r7, #8]
 1616 000a 7A60     		str	r2, [r7, #4]
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Input parameters verification */
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if ((NULL == base) || (NULL == config))
 1617              		.loc 3 58 0
 1618 000c FB68     		ldr	r3, [r7, #12]
 1619 000e 002B     		cmp	r3, #0
 1620 0010 02D0     		beq	.L96
 1621              		.loc 3 58 0 is_stmt 0 discriminator 1
 1622 0012 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 89


 1623 0014 002B     		cmp	r3, #0
 1624 0016 01D1     		bne	.L97
 1625              	.L96:
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         return CY_SCB_SPI_BAD_PARAM;
 1626              		.loc 3 60 0 is_stmt 1
 1627 0018 A14B     		ldr	r3, .L138
 1628 001a 88E1     		b	.L98
 1629              	.L97:
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L3(CY_SCB_SPI_IS_MODE_VALID     (config->spiMode));
 1630              		.loc 3 63 0
 1631 001c BB68     		ldr	r3, [r7, #8]
 1632 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 0020 002B     		cmp	r3, #0
 1634 0022 07D0     		beq	.L99
 1635              		.loc 3 63 0 is_stmt 0 discriminator 1
 1636 0024 BB68     		ldr	r3, [r7, #8]
 1637 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 0028 012B     		cmp	r3, #1
 1639 002a 03D0     		beq	.L99
 1640              		.loc 3 63 0 discriminator 2
 1641 002c 3F21     		movs	r1, #63
 1642 002e 9D48     		ldr	r0, .L138+4
 1643 0030 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1644              	.L99:
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L3(CY_SCB_SPI_IS_SUB_MODE_VALID (config->subMode));
 1645              		.loc 3 64 0 is_stmt 1
 1646 0034 BB68     		ldr	r3, [r7, #8]
 1647 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1648 0038 002B     		cmp	r3, #0
 1649 003a 0FD0     		beq	.L100
 1650              		.loc 3 64 0 is_stmt 0 discriminator 1
 1651 003c BB68     		ldr	r3, [r7, #8]
 1652 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1653 0040 012B     		cmp	r3, #1
 1654 0042 0BD0     		beq	.L100
 1655              		.loc 3 64 0 discriminator 2
 1656 0044 BB68     		ldr	r3, [r7, #8]
 1657 0046 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1658 0048 052B     		cmp	r3, #5
 1659 004a 07D0     		beq	.L100
 1660              		.loc 3 64 0 discriminator 3
 1661 004c BB68     		ldr	r3, [r7, #8]
 1662 004e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1663 0050 022B     		cmp	r3, #2
 1664 0052 03D0     		beq	.L100
 1665              		.loc 3 64 0 discriminator 4
 1666 0054 4021     		movs	r1, #64
 1667 0056 9348     		ldr	r0, .L138+4
 1668 0058 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1669              	.L100:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L3(CY_SCB_SPI_IS_SCLK_MODE_VALID(config->sclkMode));
 1670              		.loc 3 65 0 is_stmt 1
 1671 005c BB68     		ldr	r3, [r7, #8]
 1672 005e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 90


 1673 0060 002B     		cmp	r3, #0
 1674 0062 0FD0     		beq	.L101
 1675              		.loc 3 65 0 is_stmt 0 discriminator 1
 1676 0064 BB68     		ldr	r3, [r7, #8]
 1677 0066 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1678 0068 012B     		cmp	r3, #1
 1679 006a 0BD0     		beq	.L101
 1680              		.loc 3 65 0 discriminator 2
 1681 006c BB68     		ldr	r3, [r7, #8]
 1682 006e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1683 0070 022B     		cmp	r3, #2
 1684 0072 07D0     		beq	.L101
 1685              		.loc 3 65 0 discriminator 3
 1686 0074 BB68     		ldr	r3, [r7, #8]
 1687 0076 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1688 0078 032B     		cmp	r3, #3
 1689 007a 03D0     		beq	.L101
 1690              		.loc 3 65 0 discriminator 4
 1691 007c 4121     		movs	r1, #65
 1692 007e 8948     		ldr	r0, .L138+4
 1693 0080 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1694              	.L101:
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_SPI_IS_OVERSAMPLE_VALID (config->oversample, config->spiMode));
 1695              		.loc 3 67 0 is_stmt 1
 1696 0084 BB68     		ldr	r3, [r7, #8]
 1697 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 0088 012B     		cmp	r3, #1
 1699 008a 0BD1     		bne	.L102
 1700              		.loc 3 67 0 is_stmt 0 discriminator 1
 1701 008c BB68     		ldr	r3, [r7, #8]
 1702 008e 5B68     		ldr	r3, [r3, #4]
 1703 0090 012B     		cmp	r3, #1
 1704 0092 03D9     		bls	.L103
 1705              		.loc 3 67 0 discriminator 3
 1706 0094 BB68     		ldr	r3, [r7, #8]
 1707 0096 5B68     		ldr	r3, [r3, #4]
 1708 0098 102B     		cmp	r3, #16
 1709 009a 03D9     		bls	.L102
 1710              	.L103:
 1711              		.loc 3 67 0 discriminator 4
 1712 009c 4321     		movs	r1, #67
 1713 009e 8148     		ldr	r0, .L138+4
 1714 00a0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1715              	.L102:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_SPI_IS_SS_POLARITY_VALID(config->ssPolarity));
 1716              		.loc 3 68 0 is_stmt 1
 1717 00a4 BB68     		ldr	r3, [r7, #8]
 1718 00a6 9B69     		ldr	r3, [r3, #24]
 1719 00a8 23F00F03 		bic	r3, r3, #15
 1720 00ac 002B     		cmp	r3, #0
 1721 00ae 03D0     		beq	.L104
 1722              		.loc 3 68 0 is_stmt 0 discriminator 1
 1723 00b0 4421     		movs	r1, #68
 1724 00b2 7C48     		ldr	r0, .L138+4
 1725 00b4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1726              	.L104:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 91


  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_SPI_IS_DATA_WIDTH_VALID (config->rxDataWidth));
 1727              		.loc 3 69 0 is_stmt 1
 1728 00b8 BB68     		ldr	r3, [r7, #8]
 1729 00ba 9B68     		ldr	r3, [r3, #8]
 1730 00bc 032B     		cmp	r3, #3
 1731 00be 03D9     		bls	.L105
 1732              		.loc 3 69 0 is_stmt 0 discriminator 2
 1733 00c0 BB68     		ldr	r3, [r7, #8]
 1734 00c2 9B68     		ldr	r3, [r3, #8]
 1735 00c4 102B     		cmp	r3, #16
 1736 00c6 03D9     		bls	.L106
 1737              	.L105:
 1738              		.loc 3 69 0 discriminator 3
 1739 00c8 4521     		movs	r1, #69
 1740 00ca 7648     		ldr	r0, .L138+4
 1741 00cc FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1742              	.L106:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_SPI_IS_DATA_WIDTH_VALID (config->txDataWidth));
 1743              		.loc 3 70 0 is_stmt 1
 1744 00d0 BB68     		ldr	r3, [r7, #8]
 1745 00d2 DB68     		ldr	r3, [r3, #12]
 1746 00d4 032B     		cmp	r3, #3
 1747 00d6 03D9     		bls	.L107
 1748              		.loc 3 70 0 is_stmt 0 discriminator 2
 1749 00d8 BB68     		ldr	r3, [r7, #8]
 1750 00da DB68     		ldr	r3, [r3, #12]
 1751 00dc 102B     		cmp	r3, #16
 1752 00de 03D9     		bls	.L108
 1753              	.L107:
 1754              		.loc 3 70 0 discriminator 3
 1755 00e0 4621     		movs	r1, #70
 1756 00e2 7048     		ldr	r0, .L138+4
 1757 00e4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1758              	.L108:
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_SPI_IS_BOTH_DATA_WIDTH_VALID(config->subMode, config->rxDataWidth, config->
 1759              		.loc 3 71 0 is_stmt 1
 1760 00e8 BB68     		ldr	r3, [r7, #8]
 1761 00ea 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1762 00ec 022B     		cmp	r3, #2
 1763 00ee 09D0     		beq	.L109
 1764              		.loc 3 71 0 is_stmt 0 discriminator 1
 1765 00f0 BB68     		ldr	r3, [r7, #8]
 1766 00f2 9A68     		ldr	r2, [r3, #8]
 1767 00f4 BB68     		ldr	r3, [r7, #8]
 1768 00f6 DB68     		ldr	r3, [r3, #12]
 1769 00f8 9A42     		cmp	r2, r3
 1770 00fa 03D0     		beq	.L109
 1771              		.loc 3 71 0 discriminator 2
 1772 00fc 4721     		movs	r1, #71
 1773 00fe 6948     		ldr	r0, .L138+4
 1774 0100 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1775              	.L109:
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(config->rxFifoIntEnableMask, CY_SCB_SPI_RX_INTR_MASK));
 1776              		.loc 3 73 0 is_stmt 1
 1777 0104 BB68     		ldr	r3, [r7, #8]
 1778 0106 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 92


 1779 0108 23F06D03 		bic	r3, r3, #109
 1780 010c 002B     		cmp	r3, #0
 1781 010e 03D0     		beq	.L110
 1782              		.loc 3 73 0 is_stmt 0 discriminator 1
 1783 0110 4921     		movs	r1, #73
 1784 0112 6448     		ldr	r0, .L138+4
 1785 0114 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1786              	.L110:
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(config->txFifoIntEnableMask, CY_SCB_SPI_TX_INTR_MASK));
 1787              		.loc 3 74 0 is_stmt 1
 1788 0118 BB68     		ldr	r3, [r7, #8]
 1789 011a DB6A     		ldr	r3, [r3, #44]
 1790 011c 23F07303 		bic	r3, r3, #115
 1791 0120 002B     		cmp	r3, #0
 1792 0122 03D0     		beq	.L111
 1793              		.loc 3 74 0 is_stmt 0 discriminator 1
 1794 0124 4A21     		movs	r1, #74
 1795 0126 5F48     		ldr	r0, .L138+4
 1796 0128 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1797              	.L111:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(config->masterSlaveIntEnableMask, CY_SCB_SPI_MASTER_SLAVE_INT
 1798              		.loc 3 75 0 is_stmt 1
 1799 012c BB68     		ldr	r3, [r7, #8]
 1800 012e 1B6B     		ldr	r3, [r3, #48]
 1801 0130 23F42063 		bic	r3, r3, #2560
 1802 0134 002B     		cmp	r3, #0
 1803 0136 03D0     		beq	.L112
 1804              		.loc 3 75 0 is_stmt 0 discriminator 1
 1805 0138 4B21     		movs	r1, #75
 1806 013a 5A48     		ldr	r0, .L138+4
 1807 013c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1808              	.L112:
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     uint32_t locSclkMode = CY_SCB_SPI_GetSclkMode(config->subMode, config->sclkMode);
 1809              		.loc 3 77 0 is_stmt 1
 1810 0140 BB68     		ldr	r3, [r7, #8]
 1811 0142 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1812 0144 BB68     		ldr	r3, [r7, #8]
 1813 0146 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1814 0148 1946     		mov	r1, r3
 1815 014a 1046     		mov	r0, r2
 1816 014c FFF7FEFF 		bl	CY_SCB_SPI_GetSclkMode
 1817 0150 7861     		str	r0, [r7, #20]
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     bool byteMode = (config->rxDataWidth <= CY_SCB_BYTE_WIDTH) && (config->txDataWidth <= CY_SCB_BY
 1818              		.loc 3 79 0
 1819 0152 BB68     		ldr	r3, [r7, #8]
 1820 0154 9B68     		ldr	r3, [r3, #8]
 1821 0156 082B     		cmp	r3, #8
 1822 0158 05D8     		bhi	.L113
 1823              		.loc 3 79 0 is_stmt 0 discriminator 1
 1824 015a BB68     		ldr	r3, [r7, #8]
 1825 015c DB68     		ldr	r3, [r3, #12]
 1826 015e 082B     		cmp	r3, #8
 1827 0160 01D8     		bhi	.L113
 1828              		.loc 3 79 0 discriminator 3
 1829 0162 0123     		movs	r3, #1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 93


 1830 0164 00E0     		b	.L114
 1831              	.L113:
 1832              		.loc 3 79 0 discriminator 4
 1833 0166 0023     		movs	r3, #0
 1834              	.L114:
 1835              		.loc 3 79 0 discriminator 6
 1836 0168 FB74     		strb	r3, [r7, #19]
 1837 016a FB7C     		ldrb	r3, [r7, #19]
 1838 016c 03F00103 		and	r3, r3, #1
 1839 0170 FB74     		strb	r3, [r7, #19]
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Configure an SPI interface */
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_CTRL(base) = _BOOL2FLD(SCB_CTRL_BYTE_MODE, byteMode)                     |
 1840              		.loc 3 82 0 is_stmt 1 discriminator 6
 1841 0172 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1842 0174 002B     		cmp	r3, #0
 1843 0176 02D0     		beq	.L115
 1844              		.loc 3 82 0 is_stmt 0 discriminator 1
 1845 0178 4FF40062 		mov	r2, #2048
 1846 017c 00E0     		b	.L116
 1847              	.L115:
 1848              		.loc 3 82 0 discriminator 2
 1849 017e 0022     		movs	r2, #0
 1850              	.L116:
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _BOOL2FLD(SCB_CTRL_EC_AM_MODE, config->enableWakeFromSleep) |
 1851              		.loc 3 83 0 is_stmt 1
 1852 0180 BB68     		ldr	r3, [r7, #8]
 1853 0182 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1854 0184 002B     		cmp	r3, #0
 1855 0186 02D0     		beq	.L117
 1856              		.loc 3 83 0 is_stmt 0 discriminator 1
 1857 0188 4FF48073 		mov	r3, #256
 1858 018c 00E0     		b	.L118
 1859              	.L117:
 1860              		.loc 3 83 0 discriminator 2
 1861 018e 0023     		movs	r3, #0
 1862              	.L118:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _BOOL2FLD(SCB_CTRL_EC_AM_MODE, config->enableWakeFromSleep) |
 1863              		.loc 3 82 0 is_stmt 1
 1864 0190 1A43     		orrs	r2, r2, r3
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _VAL2FLD(SCB_CTRL_OVS, (config->oversample - 1UL))          |
 1865              		.loc 3 84 0
 1866 0192 BB68     		ldr	r3, [r7, #8]
 1867 0194 5B68     		ldr	r3, [r3, #4]
 1868 0196 013B     		subs	r3, r3, #1
 1869 0198 03F00F03 		and	r3, r3, #15
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _BOOL2FLD(SCB_CTRL_EC_AM_MODE, config->enableWakeFromSleep) |
 1870              		.loc 3 83 0
 1871 019c 1343     		orrs	r3, r3, r2
 1872              		.loc 3 84 0
 1873 019e 43F08072 		orr	r2, r3, #16777216
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _BOOL2FLD(SCB_CTRL_EC_AM_MODE, config->enableWakeFromSleep) |
 1874              		.loc 3 82 0
 1875 01a2 FB68     		ldr	r3, [r7, #12]
 1876 01a4 1A60     		str	r2, [r3]
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                  _VAL2FLD(SCB_CTRL_MODE, CY_SCB_CTRL_MODE_SPI);
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 94


  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Configure SCB_CTRL.BYTE_MODE then verify levels */
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, config->rxFifoTriggerLevel));
 1877              		.loc 3 88 0
 1878 01a6 BB68     		ldr	r3, [r7, #8]
 1879 01a8 1C6A     		ldr	r4, [r3, #32]
 1880 01aa F868     		ldr	r0, [r7, #12]
 1881 01ac FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 1882 01b0 0346     		mov	r3, r0
 1883 01b2 9C42     		cmp	r4, r3
 1884 01b4 03D3     		bcc	.L119
 1885              		.loc 3 88 0 is_stmt 0 discriminator 1
 1886 01b6 5821     		movs	r1, #88
 1887 01b8 3A48     		ldr	r0, .L138+4
 1888 01ba FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1889              	.L119:
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, config->txFifoTriggerLevel));
 1890              		.loc 3 89 0 is_stmt 1
 1891 01be BB68     		ldr	r3, [r7, #8]
 1892 01c0 9C6A     		ldr	r4, [r3, #40]
 1893 01c2 F868     		ldr	r0, [r7, #12]
 1894 01c4 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 1895 01c8 0346     		mov	r3, r0
 1896 01ca 9C42     		cmp	r4, r3
 1897 01cc 03D3     		bcc	.L120
 1898              		.loc 3 89 0 is_stmt 0 discriminator 1
 1899 01ce 5921     		movs	r1, #89
 1900 01d0 3448     		ldr	r0, .L138+4
 1901 01d2 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1902              	.L120:
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_SPI_CTRL(base) = _BOOL2FLD(SCB_SPI_CTRL_SSEL_CONTINUOUS, (!config->enableTransferSeperation
 1903              		.loc 3 91 0 is_stmt 1
 1904 01d6 BB68     		ldr	r3, [r7, #8]
 1905 01d8 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1906 01da 83F00103 		eor	r3, r3, #1
 1907 01de DBB2     		uxtb	r3, r3
 1908 01e0 002B     		cmp	r3, #0
 1909 01e2 01D0     		beq	.L121
 1910              		.loc 3 91 0 is_stmt 0 discriminator 1
 1911 01e4 0122     		movs	r2, #1
 1912 01e6 00E0     		b	.L122
 1913              	.L121:
 1914              		.loc 3 91 0 discriminator 2
 1915 01e8 0022     		movs	r2, #0
 1916              	.L122:
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SELECT_PRECEDE,  (CY_SCB_SPI_TI_PRECEDES == config->sub
 1917              		.loc 3 92 0 is_stmt 1
 1918 01ea BB68     		ldr	r3, [r7, #8]
 1919 01ec 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1920 01ee 052B     		cmp	r3, #5
 1921 01f0 01D1     		bne	.L123
 1922              		.loc 3 92 0 is_stmt 0 discriminator 1
 1923 01f2 0223     		movs	r3, #2
 1924 01f4 00E0     		b	.L124
 1925              	.L123:
 1926              		.loc 3 92 0 discriminator 2
 1927 01f6 0023     		movs	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 95


 1928              	.L124:
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SELECT_PRECEDE,  (CY_SCB_SPI_TI_PRECEDES == config->sub
 1929              		.loc 3 91 0 is_stmt 1
 1930 01f8 1A43     		orrs	r2, r2, r3
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_LATE_MISO_SAMPLE, config->enableMisoLateSample)       |
 1931              		.loc 3 93 0
 1932 01fa BB68     		ldr	r3, [r7, #8]
 1933 01fc DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 1934 01fe 002B     		cmp	r3, #0
 1935 0200 01D0     		beq	.L125
 1936              		.loc 3 93 0 is_stmt 0 discriminator 1
 1937 0202 1023     		movs	r3, #16
 1938 0204 00E0     		b	.L126
 1939              	.L125:
 1940              		.loc 3 93 0 discriminator 2
 1941 0206 0023     		movs	r3, #0
 1942              	.L126:
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SELECT_PRECEDE,  (CY_SCB_SPI_TI_PRECEDES == config->sub
 1943              		.loc 3 92 0 is_stmt 1
 1944 0208 1A43     		orrs	r2, r2, r3
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SCLK_CONTINUOUS,  config->enableFreeRunSclk)          |
 1945              		.loc 3 94 0
 1946 020a BB68     		ldr	r3, [r7, #8]
 1947 020c 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1948 020e 002B     		cmp	r3, #0
 1949 0210 01D0     		beq	.L127
 1950              		.loc 3 94 0 is_stmt 0 discriminator 1
 1951 0212 2023     		movs	r3, #32
 1952 0214 00E0     		b	.L128
 1953              	.L127:
 1954              		.loc 3 94 0 discriminator 2
 1955 0216 0023     		movs	r3, #0
 1956              	.L128:
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_LATE_MISO_SAMPLE, config->enableMisoLateSample)       |
 1957              		.loc 3 93 0 is_stmt 1
 1958 0218 1A43     		orrs	r2, r2, r3
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_MASTER_MODE,     (CY_SCB_SPI_MASTER == config->spiMode)
 1959              		.loc 3 95 0
 1960 021a BB68     		ldr	r3, [r7, #8]
 1961 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1962 021e 012B     		cmp	r3, #1
 1963 0220 02D1     		bne	.L129
 1964              		.loc 3 95 0 is_stmt 0 discriminator 1
 1965 0222 4FF00043 		mov	r3, #-2147483648
 1966 0226 00E0     		b	.L130
 1967              	.L129:
 1968              		.loc 3 95 0 discriminator 2
 1969 0228 0023     		movs	r3, #0
 1970              	.L130:
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SCLK_CONTINUOUS,  config->enableFreeRunSclk)          |
 1971              		.loc 3 94 0 is_stmt 1
 1972 022a 1A43     		orrs	r2, r2, r3
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _VAL2FLD(CY_SCB_SPI_CTRL_CLK_MODE,      locSclkMode)                         |
 1973              		.loc 3 96 0
 1974 022c 7B69     		ldr	r3, [r7, #20]
 1975 022e 9B00     		lsls	r3, r3, #2
 1976 0230 03F00C03 		and	r3, r3, #12
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 96


  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_MASTER_MODE,     (CY_SCB_SPI_MASTER == config->spiMode)
 1977              		.loc 3 95 0
 1978 0234 1A43     		orrs	r2, r2, r3
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _VAL2FLD(CY_SCB_SPI_CTRL_SSEL_POLARITY, config->ssPolarity)                  |
 1979              		.loc 3 97 0
 1980 0236 BB68     		ldr	r3, [r7, #8]
 1981 0238 9B69     		ldr	r3, [r3, #24]
 1982 023a 1B02     		lsls	r3, r3, #8
 1983 023c 03F47063 		and	r3, r3, #3840
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _VAL2FLD(CY_SCB_SPI_CTRL_CLK_MODE,      locSclkMode)                         |
 1984              		.loc 3 96 0
 1985 0240 1A43     		orrs	r2, r2, r3
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _VAL2FLD(SCB_SPI_CTRL_MODE,  (uint32_t) config->subMode);
 1986              		.loc 3 98 0
 1987 0242 BB68     		ldr	r3, [r7, #8]
 1988 0244 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1989 0246 1B06     		lsls	r3, r3, #24
 1990 0248 03F04073 		and	r3, r3, #50331648
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _VAL2FLD(CY_SCB_SPI_CTRL_SSEL_POLARITY, config->ssPolarity)                  |
 1991              		.loc 3 97 0
 1992 024c 1A43     		orrs	r2, r2, r3
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                      _BOOL2FLD(SCB_SPI_CTRL_SELECT_PRECEDE,  (CY_SCB_SPI_TI_PRECEDES == config->sub
 1993              		.loc 3 91 0
 1994 024e FB68     		ldr	r3, [r7, #12]
 1995 0250 1A62     		str	r2, [r3, #32]
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Configure the RX direction */
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_RX_CTRL(base) = _BOOL2FLD(SCB_RX_CTRL_MSB_FIRST, config->enableMsbFirst) |
 1996              		.loc 3 101 0
 1997 0252 BB68     		ldr	r3, [r7, #8]
 1998 0254 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1999 0256 002B     		cmp	r3, #0
 2000 0258 02D0     		beq	.L131
 2001              		.loc 3 101 0 is_stmt 0 discriminator 1
 2002 025a 4FF48072 		mov	r2, #256
 2003 025e 00E0     		b	.L132
 2004              	.L131:
 2005              		.loc 3 101 0 discriminator 2
 2006 0260 0022     		movs	r2, #0
 2007              	.L132:
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, config->enableInputFilter) |
 2008              		.loc 3 102 0 is_stmt 1
 2009 0262 BB68     		ldr	r3, [r7, #8]
 2010 0264 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 2011 0266 002B     		cmp	r3, #0
 2012 0268 02D0     		beq	.L133
 2013              		.loc 3 102 0 is_stmt 0 discriminator 1
 2014 026a 4FF40073 		mov	r3, #512
 2015 026e 00E0     		b	.L134
 2016              	.L133:
 2017              		.loc 3 102 0 discriminator 2
 2018 0270 0023     		movs	r3, #0
 2019              	.L134:
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, config->enableInputFilter) |
 2020              		.loc 3 101 0 is_stmt 1
 2021 0272 1A43     		orrs	r2, r2, r3
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, (config->rxDataWidth - 1UL));
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 97


 2022              		.loc 3 103 0
 2023 0274 BB68     		ldr	r3, [r7, #8]
 2024 0276 9B68     		ldr	r3, [r3, #8]
 2025 0278 013B     		subs	r3, r3, #1
 2026 027a 03F00F03 		and	r3, r3, #15
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, config->enableInputFilter) |
 2027              		.loc 3 102 0
 2028 027e 1A43     		orrs	r2, r2, r3
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, config->enableInputFilter) |
 2029              		.loc 3 101 0
 2030 0280 FB68     		ldr	r3, [r7, #12]
 2031 0282 C3F80023 		str	r2, [r3, #768]
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_RX_FIFO_CTRL(base) = _VAL2FLD(SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, config->rxFifoTriggerLevel);
 2032              		.loc 3 105 0
 2033 0286 BB68     		ldr	r3, [r7, #8]
 2034 0288 1B6A     		ldr	r3, [r3, #32]
 2035 028a DAB2     		uxtb	r2, r3
 2036 028c FB68     		ldr	r3, [r7, #12]
 2037 028e C3F80423 		str	r2, [r3, #772]
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Configure the TX direction */
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_TX_CTRL(base) = _BOOL2FLD(SCB_TX_CTRL_MSB_FIRST, config->enableMsbFirst) |
 2038              		.loc 3 108 0
 2039 0292 BB68     		ldr	r3, [r7, #8]
 2040 0294 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 2041 0296 002B     		cmp	r3, #0
 2042 0298 06D0     		beq	.L135
 2043              		.loc 3 108 0 is_stmt 0 discriminator 1
 2044 029a 4FF48072 		mov	r2, #256
 2045 029e 04E0     		b	.L136
 2046              	.L139:
 2047              		.align	2
 2048              	.L138:
 2049 02a0 0140AA00 		.word	11157505
 2050 02a4 44000000 		.word	.LC1
 2051              	.L135:
 2052              		.loc 3 108 0 discriminator 2
 2053 02a8 0022     		movs	r2, #0
 2054              	.L136:
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, (config->txDataWidth - 1UL));
 2055              		.loc 3 109 0 is_stmt 1
 2056 02aa BB68     		ldr	r3, [r7, #8]
 2057 02ac DB68     		ldr	r3, [r3, #12]
 2058 02ae 013B     		subs	r3, r3, #1
 2059 02b0 03F00F03 		and	r3, r3, #15
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, (config->txDataWidth - 1UL));
 2060              		.loc 3 108 0
 2061 02b4 1A43     		orrs	r2, r2, r3
 2062 02b6 FB68     		ldr	r3, [r7, #12]
 2063 02b8 C3F80022 		str	r2, [r3, #512]
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_TX_FIFO_CTRL(base) = _VAL2FLD(SCB_TX_FIFO_CTRL_TRIGGER_LEVEL, config->txFifoTriggerLevel);
 2064              		.loc 3 111 0
 2065 02bc BB68     		ldr	r3, [r7, #8]
 2066 02be 9B6A     		ldr	r3, [r3, #40]
 2067 02c0 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 98


 2068 02c2 FB68     		ldr	r3, [r7, #12]
 2069 02c4 C3F80422 		str	r2, [r3, #516]
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Set up interrupt sources */
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_RX_MASK(base) = (config->rxFifoIntEnableMask & CY_SCB_SPI_RX_INTR_MASK);
 2070              		.loc 3 114 0
 2071 02c8 BB68     		ldr	r3, [r7, #8]
 2072 02ca 5B6A     		ldr	r3, [r3, #36]
 2073 02cc 03F06D02 		and	r2, r3, #109
 2074 02d0 FB68     		ldr	r3, [r7, #12]
 2075 02d2 C3F8C82F 		str	r2, [r3, #4040]
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_TX_MASK(base) = (config->txFifoIntEnableMask & CY_SCB_SPI_TX_INTR_MASK);
 2076              		.loc 3 115 0
 2077 02d6 BB68     		ldr	r3, [r7, #8]
 2078 02d8 DB6A     		ldr	r3, [r3, #44]
 2079 02da 03F07302 		and	r2, r3, #115
 2080 02de FB68     		ldr	r3, [r7, #12]
 2081 02e0 C3F8882F 		str	r2, [r3, #3976]
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_M(base)       = (config->masterSlaveIntEnableMask & CY_SCB_SPI_MASTER_DONE);
 2082              		.loc 3 116 0
 2083 02e4 BB68     		ldr	r3, [r7, #8]
 2084 02e6 1B6B     		ldr	r3, [r3, #48]
 2085 02e8 03F40072 		and	r2, r3, #512
 2086 02ec FB68     		ldr	r3, [r7, #12]
 2087 02ee C3F8002F 		str	r2, [r3, #3840]
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_S(base)       = (config->masterSlaveIntEnableMask & CY_SCB_SPI_SLAVE_ERR);
 2088              		.loc 3 117 0
 2089 02f2 BB68     		ldr	r3, [r7, #8]
 2090 02f4 1B6B     		ldr	r3, [r3, #48]
 2091 02f6 03F40062 		and	r2, r3, #2048
 2092 02fa FB68     		ldr	r3, [r7, #12]
 2093 02fc C3F8402F 		str	r2, [r3, #3904]
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_SPI_EC_MASK(base) = 0UL;
 2094              		.loc 3 118 0
 2095 0300 FB68     		ldr	r3, [r7, #12]
 2096 0302 0022     		movs	r2, #0
 2097 0304 C3F8C82E 		str	r2, [r3, #3784]
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Initialize the context */
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (NULL != context)
 2098              		.loc 3 121 0
 2099 0308 7B68     		ldr	r3, [r7, #4]
 2100 030a 002B     		cmp	r3, #0
 2101 030c 0ED0     		beq	.L137
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status    = 0UL;
 2102              		.loc 3 123 0
 2103 030e 7B68     		ldr	r3, [r7, #4]
 2104 0310 0022     		movs	r2, #0
 2105 0312 1A60     		str	r2, [r3]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBufIdx  = 0UL;
 2106              		.loc 3 125 0
 2107 0314 7B68     		ldr	r3, [r7, #4]
 2108 0316 0022     		movs	r2, #0
 2109 0318 9A61     		str	r2, [r3, #24]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBufIdx  = 0UL;
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 99


 2110              		.loc 3 126 0
 2111 031a 7B68     		ldr	r3, [r7, #4]
 2112 031c 0022     		movs	r2, #0
 2113 031e DA60     		str	r2, [r3, #12]
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->cbEvents = NULL;
 2114              		.loc 3 128 0
 2115 0320 7B68     		ldr	r3, [r7, #4]
 2116 0322 0022     		movs	r2, #0
 2117 0324 DA61     		str	r2, [r3, #28]
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     #if !defined(NDEBUG)
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Put an initialization key into the initKey variable to verify
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         * context initialization in the transfer API.
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         */
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->initKey = CY_SCB_SPI_INIT_KEY;
 2118              		.loc 3 134 0
 2119 0326 7B68     		ldr	r3, [r7, #4]
 2120 0328 034A     		ldr	r2, .L140
 2121 032a 1A62     		str	r2, [r3, #32]
 2122              	.L137:
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     #endif /* !(NDEBUG) */
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return CY_SCB_SPI_SUCCESS;
 2123              		.loc 3 138 0
 2124 032c 0023     		movs	r3, #0
 2125              	.L98:
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2126              		.loc 3 139 0
 2127 032e 1846     		mov	r0, r3
 2128 0330 1C37     		adds	r7, r7, #28
 2129              		.cfi_def_cfa_offset 12
 2130 0332 BD46     		mov	sp, r7
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed
 2133 0334 90BD     		pop	{r4, r7, pc}
 2134              	.L141:
 2135 0336 00BF     		.align	2
 2136              	.L140:
 2137 0338 EFCDAB00 		.word	11259375
 2138              		.cfi_endproc
 2139              	.LFE240:
 2140              		.size	Cy_SCB_SPI_Init, .-Cy_SCB_SPI_Init
 2141              		.section	.text.Cy_SCB_SPI_DeInit,"ax",%progbits
 2142              		.align	2
 2143              		.global	Cy_SCB_SPI_DeInit
 2144              		.thumb
 2145              		.thumb_func
 2146              		.type	Cy_SCB_SPI_DeInit, %function
 2147              	Cy_SCB_SPI_DeInit:
 2148              	.LFB241:
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_DeInit
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 100


 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * De-initializes the SCB block; returns the register values to default.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Ensure that the SCB block is disabled before calling this function.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** void Cy_SCB_SPI_DeInit(CySCB_Type *base)
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2149              		.loc 3 156 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 8
 2152              		@ frame_needed = 1, uses_anonymous_args = 0
 2153              		@ link register save eliminated.
 2154 0000 80B4     		push	{r7}
 2155              		.cfi_def_cfa_offset 4
 2156              		.cfi_offset 7, -4
 2157 0002 83B0     		sub	sp, sp, #12
 2158              		.cfi_def_cfa_offset 16
 2159 0004 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
 2161 0006 7860     		str	r0, [r7, #4]
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* SPI interface */
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_CTRL(base)         = CY_SCB_CTRL_DEF_VAL;
 2162              		.loc 3 158 0
 2163 0008 7B68     		ldr	r3, [r7, #4]
 2164 000a 1B4A     		ldr	r2, .L143
 2165 000c 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_SPI_CTRL(base)     = CY_SCB_SPI_CTRL_DEF_VAL;
 2166              		.loc 3 159 0
 2167 000e 7B68     		ldr	r3, [r7, #4]
 2168 0010 4FF04072 		mov	r2, #50331648
 2169 0014 1A62     		str	r2, [r3, #32]
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* RX direction */
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_RX_CTRL(base)      = CY_SCB_RX_CTRL_DEF_VAL;
 2170              		.loc 3 162 0
 2171 0016 7B68     		ldr	r3, [r7, #4]
 2172 0018 40F20712 		movw	r2, #263
 2173 001c C3F80023 		str	r2, [r3, #768]
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_RX_FIFO_CTRL(base) = 0UL;
 2174              		.loc 3 163 0
 2175 0020 7B68     		ldr	r3, [r7, #4]
 2176 0022 0022     		movs	r2, #0
 2177 0024 C3F80423 		str	r2, [r3, #772]
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* TX direction */
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_TX_CTRL(base)      = CY_SCB_TX_CTRL_DEF_VAL;
 2178              		.loc 3 166 0
 2179 0028 7B68     		ldr	r3, [r7, #4]
 2180 002a 40F20712 		movw	r2, #263
 2181 002e C3F80022 		str	r2, [r3, #512]
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_TX_FIFO_CTRL(base) = 0UL;
 2182              		.loc 3 167 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 101


 2183 0032 7B68     		ldr	r3, [r7, #4]
 2184 0034 0022     		movs	r2, #0
 2185 0036 C3F80422 		str	r2, [r3, #516]
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Disable all interrupt sources */
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_SPI_EC_MASK(base) = 0UL;
 2186              		.loc 3 170 0
 2187 003a 7B68     		ldr	r3, [r7, #4]
 2188 003c 0022     		movs	r2, #0
 2189 003e C3F8C82E 		str	r2, [r3, #3784]
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_I2C_EC_MASK(base) = 0UL;
 2190              		.loc 3 171 0
 2191 0042 7B68     		ldr	r3, [r7, #4]
 2192 0044 0022     		movs	r2, #0
 2193 0046 C3F8882E 		str	r2, [r3, #3720]
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_RX_MASK(base)     = 0UL;
 2194              		.loc 3 172 0
 2195 004a 7B68     		ldr	r3, [r7, #4]
 2196 004c 0022     		movs	r2, #0
 2197 004e C3F8C82F 		str	r2, [r3, #4040]
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_TX_MASK(base)     = 0UL;
 2198              		.loc 3 173 0
 2199 0052 7B68     		ldr	r3, [r7, #4]
 2200 0054 0022     		movs	r2, #0
 2201 0056 C3F8882F 		str	r2, [r3, #3976]
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_M_MASK(base)      = 0UL;
 2202              		.loc 3 174 0
 2203 005a 7B68     		ldr	r3, [r7, #4]
 2204 005c 0022     		movs	r2, #0
 2205 005e C3F8082F 		str	r2, [r3, #3848]
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_INTR_S_MASK(base)      = 0UL;
 2206              		.loc 3 175 0
 2207 0062 7B68     		ldr	r3, [r7, #4]
 2208 0064 0022     		movs	r2, #0
 2209 0066 C3F8482F 		str	r2, [r3, #3912]
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2210              		.loc 3 176 0
 2211 006a 00BF     		nop
 2212 006c 0C37     		adds	r7, r7, #12
 2213              		.cfi_def_cfa_offset 4
 2214 006e BD46     		mov	sp, r7
 2215              		.cfi_def_cfa_register 13
 2216              		@ sp needed
 2217 0070 5DF8047B 		ldr	r7, [sp], #4
 2218              		.cfi_restore 7
 2219              		.cfi_def_cfa_offset 0
 2220 0074 7047     		bx	lr
 2221              	.L144:
 2222 0076 00BF     		.align	2
 2223              	.L143:
 2224 0078 0F000003 		.word	50331663
 2225              		.cfi_endproc
 2226              	.LFE241:
 2227              		.size	Cy_SCB_SPI_DeInit, .-Cy_SCB_SPI_DeInit
 2228              		.section	.text.Cy_SCB_SPI_Disable,"ax",%progbits
 2229              		.align	2
 2230              		.global	Cy_SCB_SPI_Disable
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 102


 2231              		.thumb
 2232              		.thumb_func
 2233              		.type	Cy_SCB_SPI_Disable, %function
 2234              	Cy_SCB_SPI_Disable:
 2235              	.LFB242:
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_Disable
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Disables the SCB block, clears context statuses, and disables
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * TX and RX interrupt sources.
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Note that after the block is disabled, the TX and RX FIFOs and
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * hardware statuses are cleared. Also, the hardware stops driving the output
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * and ignores the input. Refer to section \ref group_scb_spi_lp for more 
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * information about SPI pins when SCB disabled.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If only SPI functions that do not require context will be used to pass NULL
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * as pointer to context.
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Calling this function when the SPI is busy (master preforms data transfer or
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * slave communicates with the master) may cause transfer corruption because the
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * hardware stops driving the outputs and ignores the inputs.
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Ensure that the SPI is not busy before calling this function.
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** void Cy_SCB_SPI_Disable(CySCB_Type *base, cy_stc_scb_spi_context_t *context)
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2236              		.loc 3 209 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 8
 2239              		@ frame_needed = 1, uses_anonymous_args = 0
 2240 0000 80B5     		push	{r7, lr}
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 7, -8
 2243              		.cfi_offset 14, -4
 2244 0002 82B0     		sub	sp, sp, #8
 2245              		.cfi_def_cfa_offset 16
 2246 0004 00AF     		add	r7, sp, #0
 2247              		.cfi_def_cfa_register 7
 2248 0006 7860     		str	r0, [r7, #4]
 2249 0008 3960     		str	r1, [r7]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     SCB_CTRL(base) &= (uint32_t) ~SCB_CTRL_ENABLED_Msk;
 2250              		.loc 3 210 0
 2251 000a 7B68     		ldr	r3, [r7, #4]
 2252 000c 1B68     		ldr	r3, [r3]
 2253 000e 23F00042 		bic	r2, r3, #-2147483648
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 103


 2254 0012 7B68     		ldr	r3, [r7, #4]
 2255 0014 1A60     		str	r2, [r3]
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (NULL != context)
 2256              		.loc 3 212 0
 2257 0016 3B68     		ldr	r3, [r7]
 2258 0018 002B     		cmp	r3, #0
 2259 001a 08D0     		beq	.L146
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status    = 0UL;
 2260              		.loc 3 214 0
 2261 001c 3B68     		ldr	r3, [r7]
 2262 001e 0022     		movs	r2, #0
 2263 0020 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBufIdx  = 0UL;
 2264              		.loc 3 216 0
 2265 0022 3B68     		ldr	r3, [r7]
 2266 0024 0022     		movs	r2, #0
 2267 0026 DA60     		str	r2, [r3, #12]
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBufIdx  = 0UL;
 2268              		.loc 3 217 0
 2269 0028 3B68     		ldr	r3, [r7]
 2270 002a 0022     		movs	r2, #0
 2271 002c 9A61     		str	r2, [r3, #24]
 2272              	.L146:
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Disable RX and TX interrupt sources for the slave because
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     * RX overflow and TX underflow are kept enabled after the 1st call of
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     * Cy_SCB_SPI_Transfer().
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     */
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (!_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base)))
 2273              		.loc 3 224 0
 2274 002e 7B68     		ldr	r3, [r7, #4]
 2275 0030 1B6A     		ldr	r3, [r3, #32]
 2276 0032 002B     		cmp	r3, #0
 2277 0034 07DB     		blt	.L148
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2278              		.loc 3 226 0
 2279 0036 0021     		movs	r1, #0
 2280 0038 7868     		ldr	r0, [r7, #4]
 2281 003a FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetTxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2282              		.loc 3 227 0
 2283 003e 0021     		movs	r1, #0
 2284 0040 7868     		ldr	r0, [r7, #4]
 2285 0042 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 2286              	.L148:
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2287              		.loc 3 229 0
 2288 0046 00BF     		nop
 2289 0048 0837     		adds	r7, r7, #8
 2290              		.cfi_def_cfa_offset 8
 2291 004a BD46     		mov	sp, r7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 104


 2292              		.cfi_def_cfa_register 13
 2293              		@ sp needed
 2294 004c 80BD     		pop	{r7, pc}
 2295              		.cfi_endproc
 2296              	.LFE242:
 2297              		.size	Cy_SCB_SPI_Disable, .-Cy_SCB_SPI_Disable
 2298 004e 00BF     		.section	.text.Cy_SCB_SPI_DeepSleepCallback,"ax",%progbits
 2299              		.align	2
 2300              		.global	Cy_SCB_SPI_DeepSleepCallback
 2301              		.thumb
 2302              		.thumb_func
 2303              		.type	Cy_SCB_SPI_DeepSleepCallback, %function
 2304              	Cy_SCB_SPI_DeepSleepCallback:
 2305              	.LFB243:
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_DeepSleepCallback
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function handles the transition of the SCB SPI into and out of
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Deep Sleep mode. It prevents the device from entering Deep Sleep mode
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * if the SPI slave or master is actively communicating, or there is any data 
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in the TX or RX FIFOs.
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The following behavior of the SPI SCB depends on whether the SCB block is
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * wakeup-capable or not:
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * <b>Wakeup-capable</b>: any transfer intended to the slave wakes up 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   the device from Deep Sleep mode. The slave responds with 0xFF to the  
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   transfer and incoming data is ignored. 
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   If the transfer occurs before the device enters Deep Sleep mode, the device
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   will not enter Deep Sleep mode and incoming data is stored in the RX FIFO.
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   The SCB clock is disabled before entering Deep Sleep and enabled after the 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   device exits Deep Sleep mode. The SCB clock disabling may lead to 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   corrupted data in the RX FIFO. Clear the RX FIFO after this callback is 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   executed.
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   Note that for proper SPI operation after Deep Sleep the source of 
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   hf_clk[0] must be stable, this includes the FLL/PLL. The SysClk callback 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   ensures that hf_clk[0] gets stable and it must be called before 
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   \ref Cy_SCB_SPI_DeepSleepCallback. 
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   Only the SPI slave can be configured to be a wakeup source from Deep Sleep
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   mode.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * <b>Not wakeup-capable</b>: the SPI is disabled. It is enabled when 
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   the device fails to enter Deep Sleep mode or it is awakened from Deep Sleep 
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   mode. While the SPI is disabled, it stops driving the outputs and ignores 
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   the inputs. Any incoming data is ignored.
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   Refer to section \ref group_scb_spi_lp for more information about SPI pins 
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   when SCB disabled.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function must be called during execution of \ref Cy_SysPm_CpuEnterDeepSleep.
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * To do it, register this function as a callback before calling
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref Cy_SysPm_CpuEnterDeepSleep : specify \ref CY_SYSPM_DEEPSLEEP as the callback
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * type and call \ref Cy_SysPm_RegisterCallback.
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param callbackParams
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the callback parameters structure
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_stc_syspm_callback_params_t.
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 105


 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param mode
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_en_syspm_status_t
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Only applicable for <b>rev-08 of the CY8CKIT-062-BLE</b>.
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * For proper operation, when the SPI slave is configured to be a wakeup source
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * from Deep Sleep mode, this function must be copied and modified by the user.
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The SPI clock disable code must be inserted in the \ref CY_SYSPM_BEFORE_TRANSITION
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * and clock enable code in the \ref CY_SYSPM_AFTER_TRANSITION mode processing.
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** cy_en_syspm_status_t Cy_SCB_SPI_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, c
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2306              		.loc 3 288 0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 24
 2309              		@ frame_needed = 1, uses_anonymous_args = 0
 2310 0000 80B5     		push	{r7, lr}
 2311              		.cfi_def_cfa_offset 8
 2312              		.cfi_offset 7, -8
 2313              		.cfi_offset 14, -4
 2314 0002 86B0     		sub	sp, sp, #24
 2315              		.cfi_def_cfa_offset 32
 2316 0004 00AF     		add	r7, sp, #0
 2317              		.cfi_def_cfa_register 7
 2318 0006 7860     		str	r0, [r7, #4]
 2319 0008 0B46     		mov	r3, r1
 2320 000a FB70     		strb	r3, [r7, #3]
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CySCB_Type *locBase = (CySCB_Type *) callbackParams->base;
 2321              		.loc 3 289 0
 2322 000c 7B68     		ldr	r3, [r7, #4]
 2323 000e 1B68     		ldr	r3, [r3]
 2324 0010 3B61     		str	r3, [r7, #16]
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     cy_stc_scb_spi_context_t *locContext = (cy_stc_scb_spi_context_t *) callbackParams->context;
 2325              		.loc 3 290 0
 2326 0012 7B68     		ldr	r3, [r7, #4]
 2327 0014 5B68     		ldr	r3, [r3, #4]
 2328 0016 FB60     		str	r3, [r7, #12]
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     cy_en_syspm_status_t retStatus = CY_SYSPM_FAIL;
 2329              		.loc 3 292 0
 2330 0018 494B     		ldr	r3, .L167
 2331 001a 7B61     		str	r3, [r7, #20]
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     switch(mode)
 2332              		.loc 3 294 0
 2333 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2334 001e 013B     		subs	r3, r3, #1
 2335 0020 072B     		cmp	r3, #7
 2336 0022 00F28480 		bhi	.L165
 2337 0026 01A2     		adr	r2, .L152
 2338 0028 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2339              		.p2align 2
 2340              	.L152:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 106


 2341 002c 4D000000 		.word	.L151+1
 2342 0030 C3000000 		.word	.L153+1
 2343 0034 2F010000 		.word	.L165+1
 2344 0038 DB000000 		.word	.L154+1
 2345 003c 2F010000 		.word	.L165+1
 2346 0040 2F010000 		.word	.L165+1
 2347 0044 2F010000 		.word	.L165+1
 2348 0048 01010000 		.word	.L155+1
 2349              		.p2align 1
 2350              	.L151:
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_CHECK_READY:
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Check whether the High-level API is not busy executing the transfer
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * operation.
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             if (0UL == (CY_SCB_SPI_TRANSFER_ACTIVE & Cy_SCB_SPI_GetTransferStatus(locBase, locConte
 2351              		.loc 3 301 0
 2352 004c F968     		ldr	r1, [r7, #12]
 2353 004e 3869     		ldr	r0, [r7, #16]
 2354 0050 FFF7FEFF 		bl	Cy_SCB_SPI_GetTransferStatus
 2355 0054 0346     		mov	r3, r0
 2356 0056 03F00103 		and	r3, r3, #1
 2357 005a 002B     		cmp	r3, #0
 2358 005c 69D1     		bne	.L166
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* If the SPI bus is not busy, all data elements are transferred
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * on the bus from the TX FIFO and shifter and the RX FIFOs are
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * empty - the SPI is ready to enter Deep Sleep mode.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 if (!Cy_SCB_SPI_IsBusBusy(locBase))
 2359              		.loc 3 307 0
 2360 005e 3869     		ldr	r0, [r7, #16]
 2361 0060 FFF7FEFF 		bl	Cy_SCB_SPI_IsBusBusy
 2362 0064 0346     		mov	r3, r0
 2363 0066 83F00103 		eor	r3, r3, #1
 2364 006a DBB2     		uxtb	r3, r3
 2365 006c 002B     		cmp	r3, #0
 2366 006e 60D0     		beq	.L166
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 {
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     if (Cy_SCB_SPI_IsTxComplete(locBase))
 2367              		.loc 3 309 0
 2368 0070 3869     		ldr	r0, [r7, #16]
 2369 0072 FFF7FEFF 		bl	Cy_SCB_SPI_IsTxComplete
 2370 0076 0346     		mov	r3, r0
 2371 0078 002B     		cmp	r3, #0
 2372 007a 5AD0     		beq	.L166
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     {
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         if (0UL == Cy_SCB_SPI_GetNumInRxFifo(locBase))
 2373              		.loc 3 311 0
 2374 007c 3869     		ldr	r0, [r7, #16]
 2375 007e FFF7FEFF 		bl	Cy_SCB_SPI_GetNumInRxFifo
 2376 0082 0346     		mov	r3, r0
 2377 0084 002B     		cmp	r3, #0
 2378 0086 54D1     		bne	.L166
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         {
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             if (_FLD2BOOL(SCB_CTRL_EC_AM_MODE, SCB_CTRL(locBase)))
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 107


 2379              		.loc 3 313 0
 2380 0088 3B69     		ldr	r3, [r7, #16]
 2381 008a 1B68     		ldr	r3, [r3]
 2382 008c 03F48073 		and	r3, r3, #256
 2383 0090 002B     		cmp	r3, #0
 2384 0092 0FD0     		beq	.L157
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             {
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 /* The SCB is wakeup-capable: clear the SPI
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * wakeup interrupt source because it triggers
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * during Active mode communication and make
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * sure that a new transfer is not started after
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * clearing.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 */
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 Cy_SCB_ClearSpiInterrupt(locBase, CY_SCB_SPI_INTR_WAKEUP);
 2385              		.loc 3 321 0
 2386 0094 0121     		movs	r1, #1
 2387 0096 3869     		ldr	r0, [r7, #16]
 2388 0098 FFF7FEFF 		bl	Cy_SCB_ClearSpiInterrupt
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 if (!Cy_SCB_SPI_IsBusBusy(locBase))
 2389              		.loc 3 323 0
 2390 009c 3869     		ldr	r0, [r7, #16]
 2391 009e FFF7FEFF 		bl	Cy_SCB_SPI_IsBusBusy
 2392 00a2 0346     		mov	r3, r0
 2393 00a4 83F00103 		eor	r3, r3, #1
 2394 00a8 DBB2     		uxtb	r3, r3
 2395 00aa 002B     		cmp	r3, #0
 2396 00ac 41D0     		beq	.L166
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 {
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                     retStatus = CY_SYSPM_SUCCESS;
 2397              		.loc 3 325 0
 2398 00ae 0023     		movs	r3, #0
 2399 00b0 7B61     		str	r3, [r7, #20]
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 }
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             }
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             else
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             {
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 /* The SCB is NOT wakeup-capable: disable the
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * SPI. The master and slave stop driving the
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * bus until the SPI is enabled. This happens
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * when the device fails to enter Deep Sleep
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 * mode or it is awakened from Deep Sleep mode.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 */
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 Cy_SCB_SPI_Disable(locBase, locContext);
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                 retStatus = CY_SYSPM_SUCCESS;
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             }
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         }
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2400              		.loc 3 345 0
 2401 00b2 3EE0     		b	.L166
 2402              	.L157:
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 108


 2403              		.loc 3 336 0
 2404 00b4 F968     		ldr	r1, [r7, #12]
 2405 00b6 3869     		ldr	r0, [r7, #16]
 2406 00b8 FFF7FEFF 		bl	Cy_SCB_SPI_Disable
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             }
 2407              		.loc 3 338 0
 2408 00bc 0023     		movs	r3, #0
 2409 00be 7B61     		str	r3, [r7, #20]
 2410              		.loc 3 345 0
 2411 00c0 37E0     		b	.L166
 2412              	.L153:
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_CHECK_FAIL:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* The other driver is not ready for Deep Sleep mode. Restore
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * Active mode configuration.
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             if (!_FLD2BOOL(SCB_CTRL_EC_AM_MODE, SCB_CTRL(locBase)))
 2413              		.loc 3 353 0
 2414 00c2 3B69     		ldr	r3, [r7, #16]
 2415 00c4 1B68     		ldr	r3, [r3]
 2416 00c6 03F48073 		and	r3, r3, #256
 2417 00ca 002B     		cmp	r3, #0
 2418 00cc 02D1     		bne	.L160
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* The SCB is NOT wakeup-capable: enable the SPI to operate */
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 Cy_SCB_SPI_Enable(locBase);
 2419              		.loc 3 356 0
 2420 00ce 3869     		ldr	r0, [r7, #16]
 2421 00d0 FFF7FEFF 		bl	Cy_SCB_SPI_Enable
 2422              	.L160:
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             retStatus = CY_SYSPM_SUCCESS;
 2423              		.loc 3 359 0
 2424 00d4 0023     		movs	r3, #0
 2425 00d6 7B61     		str	r3, [r7, #20]
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2426              		.loc 3 361 0
 2427 00d8 2CE0     		b	.L159
 2428              	.L154:
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_BEFORE_TRANSITION:
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* This code executes inside the critical section and enabling the
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * active interrupt source makes the interrupt pending in the NVIC.
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * However, the interrupt processing is delayed until the code exits
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * the critical section. The pending interrupt force WFI instruction
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * does nothing and the device remains in Active mode.
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             if (_FLD2BOOL(SCB_CTRL_EC_AM_MODE, SCB_CTRL(locBase)))
 2429              		.loc 3 372 0
 2430 00da 3B69     		ldr	r3, [r7, #16]
 2431 00dc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 109


 2432 00de 03F48073 		and	r3, r3, #256
 2433 00e2 002B     		cmp	r3, #0
 2434 00e4 09D0     		beq	.L161
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* The SCB is wakeup-capable: enable the SPI wakeup interrupt
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * source. If any transaction happens, the wakeup interrupt
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * becomes pending and prevents entering Deep Sleep mode.
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 Cy_SCB_SetSpiInterruptMask(locBase, CY_SCB_I2C_INTR_WAKEUP);
 2435              		.loc 3 378 0
 2436 00e6 0121     		movs	r1, #1
 2437 00e8 3869     		ldr	r0, [r7, #16]
 2438 00ea FFF7FEFF 		bl	Cy_SCB_SetSpiInterruptMask
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* Disable SCB clock */
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 SCB_I2C_CFG(locBase) &= (uint32_t) ~CY_SCB_I2C_CFG_CLK_ENABLE_Msk;
 2439              		.loc 3 381 0
 2440 00ee 3B69     		ldr	r3, [r7, #16]
 2441 00f0 1B6F     		ldr	r3, [r3, #112]
 2442 00f2 23F00202 		bic	r2, r3, #2
 2443 00f6 3B69     		ldr	r3, [r7, #16]
 2444 00f8 1A67     		str	r2, [r3, #112]
 2445              	.L161:
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* IMPORTANT (replace line above for the CY8CKIT-062 rev-08): 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * for proper entering Deep Sleep mode the SPI clock must be disabled. 
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * This code must be inserted by the user because the driver 
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * does not have access to the clock.
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             retStatus = CY_SYSPM_SUCCESS;
 2446              		.loc 3 390 0
 2447 00fa 0023     		movs	r3, #0
 2448 00fc 7B61     		str	r3, [r7, #20]
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2449              		.loc 3 392 0
 2450 00fe 19E0     		b	.L159
 2451              	.L155:
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_AFTER_TRANSITION:
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             if (_FLD2BOOL(SCB_CTRL_EC_AM_MODE, SCB_CTRL(locBase)))
 2452              		.loc 3 396 0
 2453 0100 3B69     		ldr	r3, [r7, #16]
 2454 0102 1B68     		ldr	r3, [r3]
 2455 0104 03F48073 		and	r3, r3, #256
 2456 0108 002B     		cmp	r3, #0
 2457 010a 0AD0     		beq	.L162
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* Enable SCB clock */
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 SCB_I2C_CFG(locBase) |= CY_SCB_I2C_CFG_CLK_ENABLE_Msk;
 2458              		.loc 3 399 0
 2459 010c 3B69     		ldr	r3, [r7, #16]
 2460 010e 1B6F     		ldr	r3, [r3, #112]
 2461 0110 43F00202 		orr	r2, r3, #2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 110


 2462 0114 3B69     		ldr	r3, [r7, #16]
 2463 0116 1A67     		str	r2, [r3, #112]
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* IMPORTANT (replace line above for the CY8CKIT-062 rev-08): 
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * for proper exiting Deep Sleep mode, the SPI clock must be enabled. 
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * This code must be inserted by the user because the driver 
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * does not have access to the clock.
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* The SCB is wakeup-capable: disable the SPI wakeup interrupt
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * source
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 Cy_SCB_SetSpiInterruptMask(locBase, CY_SCB_CLEAR_ALL_INTR_SRC);
 2464              		.loc 3 410 0
 2465 0118 0021     		movs	r1, #0
 2466 011a 3869     		ldr	r0, [r7, #16]
 2467 011c FFF7FEFF 		bl	Cy_SCB_SetSpiInterruptMask
 2468 0120 02E0     		b	.L163
 2469              	.L162:
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             else
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* The SCB is NOT wakeup-capable: enable the SPI to operate */
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 Cy_SCB_SPI_Enable(locBase);
 2470              		.loc 3 415 0
 2471 0122 3869     		ldr	r0, [r7, #16]
 2472 0124 FFF7FEFF 		bl	Cy_SCB_SPI_Enable
 2473              	.L163:
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             retStatus = CY_SYSPM_SUCCESS;
 2474              		.loc 3 418 0
 2475 0128 0023     		movs	r3, #0
 2476 012a 7B61     		str	r3, [r7, #20]
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2477              		.loc 3 420 0
 2478 012c 02E0     		b	.L159
 2479              	.L165:
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         default:
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             break;
 2480              		.loc 3 423 0
 2481 012e 00BF     		nop
 2482 0130 00E0     		b	.L159
 2483              	.L166:
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 2484              		.loc 3 345 0
 2485 0132 00BF     		nop
 2486              	.L159:
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return (retStatus);
 2487              		.loc 3 426 0
 2488 0134 7B69     		ldr	r3, [r7, #20]
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2489              		.loc 3 427 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 111


 2490 0136 1846     		mov	r0, r3
 2491 0138 1837     		adds	r7, r7, #24
 2492              		.cfi_def_cfa_offset 8
 2493 013a BD46     		mov	sp, r7
 2494              		.cfi_def_cfa_register 13
 2495              		@ sp needed
 2496 013c 80BD     		pop	{r7, pc}
 2497              	.L168:
 2498 013e 00BF     		.align	2
 2499              	.L167:
 2500 0140 FF004200 		.word	4325631
 2501              		.cfi_endproc
 2502              	.LFE243:
 2503              		.size	Cy_SCB_SPI_DeepSleepCallback, .-Cy_SCB_SPI_DeepSleepCallback
 2504              		.section	.text.Cy_SCB_SPI_HibernateCallback,"ax",%progbits
 2505              		.align	2
 2506              		.global	Cy_SCB_SPI_HibernateCallback
 2507              		.thumb
 2508              		.thumb_func
 2509              		.type	Cy_SCB_SPI_HibernateCallback, %function
 2510              	Cy_SCB_SPI_HibernateCallback:
 2511              	.LFB244:
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_HibernateCallback
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function handles the transition of the SCB SPI into Hibernate mode.
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * It prevents the device from entering Hibernate mode if the SPI slave or 
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * master is actively communicating, or there is any data in the TX or RX FIFOs.
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If the SPI is ready to enter Hibernate mode, it is disabled. If the device
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * failed to enter Hibernate mode, the SPI is re-enabled. While the SPI is
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * disabled, it stops driving the outputs and ignores the inputs. Any incoming 
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * data is ignored. Refer to section \ref group_scb_spi_lp for more information 
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * about SPI pins when SCB disabled.
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function must be called during execution of \ref Cy_SysPm_SystemEnterHibernate.
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * To do it, register this function as a callback before calling
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref Cy_SysPm_SystemEnterHibernate : specify \ref CY_SYSPM_HIBERNATE as the callback
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * type and call \ref Cy_SysPm_RegisterCallback. 
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param callbackParams
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the callback parameters structure
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_stc_syspm_callback_params_t.
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param mode
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_en_syspm_status_t
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** cy_en_syspm_status_t Cy_SCB_SPI_HibernateCallback(cy_stc_syspm_callback_params_t *callbackParams, c
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2512              		.loc 3 460 0
 2513              		.cfi_startproc
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 112


 2514              		@ args = 0, pretend = 0, frame = 24
 2515              		@ frame_needed = 1, uses_anonymous_args = 0
 2516 0000 80B5     		push	{r7, lr}
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 7, -8
 2519              		.cfi_offset 14, -4
 2520 0002 86B0     		sub	sp, sp, #24
 2521              		.cfi_def_cfa_offset 32
 2522 0004 00AF     		add	r7, sp, #0
 2523              		.cfi_def_cfa_register 7
 2524 0006 7860     		str	r0, [r7, #4]
 2525 0008 0B46     		mov	r3, r1
 2526 000a FB70     		strb	r3, [r7, #3]
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CySCB_Type *locBase = (CySCB_Type *) callbackParams->base;
 2527              		.loc 3 461 0
 2528 000c 7B68     		ldr	r3, [r7, #4]
 2529 000e 1B68     		ldr	r3, [r3]
 2530 0010 3B61     		str	r3, [r7, #16]
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     cy_stc_scb_spi_context_t *locContext = (cy_stc_scb_spi_context_t *) callbackParams->context;
 2531              		.loc 3 462 0
 2532 0012 7B68     		ldr	r3, [r7, #4]
 2533 0014 5B68     		ldr	r3, [r3, #4]
 2534 0016 FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     cy_en_syspm_status_t  retStatus = CY_SYSPM_FAIL;
 2535              		.loc 3 464 0
 2536 0018 274B     		ldr	r3, .L180
 2537 001a 7B61     		str	r3, [r7, #20]
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     switch(mode)
 2538              		.loc 3 466 0
 2539 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2540 001e 013B     		subs	r3, r3, #1
 2541 0020 072B     		cmp	r3, #7
 2542 0022 41D8     		bhi	.L178
 2543 0024 01A2     		adr	r2, .L172
 2544 0026 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2545 002a 00BF     		.p2align 2
 2546              	.L172:
 2547 002c 4D000000 		.word	.L171+1
 2548 0030 97000000 		.word	.L173+1
 2549 0034 A9000000 		.word	.L178+1
 2550 0038 A3000000 		.word	.L174+1
 2551 003c A9000000 		.word	.L178+1
 2552 0040 A9000000 		.word	.L178+1
 2553 0044 A9000000 		.word	.L178+1
 2554 0048 A3000000 		.word	.L174+1
 2555              		.p2align 1
 2556              	.L171:
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_CHECK_READY:
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Check whether the High-level API is not busy executing the transfer
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * operation.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             if (0UL == (CY_SCB_SPI_TRANSFER_ACTIVE & Cy_SCB_SPI_GetTransferStatus(locBase, locConte
 2557              		.loc 3 473 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 113


 2558 004c F968     		ldr	r1, [r7, #12]
 2559 004e 3869     		ldr	r0, [r7, #16]
 2560 0050 FFF7FEFF 		bl	Cy_SCB_SPI_GetTransferStatus
 2561 0054 0346     		mov	r3, r0
 2562 0056 03F00103 		and	r3, r3, #1
 2563 005a 002B     		cmp	r3, #0
 2564 005c 26D1     		bne	.L179
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             {
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 /* If the SPI bus is not busy, all data elements are transferred
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * on the bus from the TX FIFO and shifter and the RX FIFOs are
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 * empty - the SPI is ready to enter Hibernate mode.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 */
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 if (!Cy_SCB_SPI_IsBusBusy(locBase))
 2565              		.loc 3 479 0
 2566 005e 3869     		ldr	r0, [r7, #16]
 2567 0060 FFF7FEFF 		bl	Cy_SCB_SPI_IsBusBusy
 2568 0064 0346     		mov	r3, r0
 2569 0066 83F00103 		eor	r3, r3, #1
 2570 006a DBB2     		uxtb	r3, r3
 2571 006c 002B     		cmp	r3, #0
 2572 006e 1DD0     		beq	.L179
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 {
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     if (Cy_SCB_SPI_IsTxComplete(locBase))
 2573              		.loc 3 481 0
 2574 0070 3869     		ldr	r0, [r7, #16]
 2575 0072 FFF7FEFF 		bl	Cy_SCB_SPI_IsTxComplete
 2576 0076 0346     		mov	r3, r0
 2577 0078 002B     		cmp	r3, #0
 2578 007a 17D0     		beq	.L179
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     {
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         if (0UL == Cy_SCB_SPI_GetNumInRxFifo(locBase))
 2579              		.loc 3 483 0
 2580 007c 3869     		ldr	r0, [r7, #16]
 2581 007e FFF7FEFF 		bl	Cy_SCB_SPI_GetNumInRxFifo
 2582 0082 0346     		mov	r3, r0
 2583 0084 002B     		cmp	r3, #0
 2584 0086 11D1     		bne	.L179
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         {
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             /* Disable the SPI. The master or slave stops
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             * driving the bus until the SPI is enabled.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             * This happens if the device failed to enter
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             * Hibernate mode.
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             */
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             Cy_SCB_SPI_Disable(locBase, locContext);
 2585              		.loc 3 490 0
 2586 0088 F968     		ldr	r1, [r7, #12]
 2587 008a 3869     		ldr	r0, [r7, #16]
 2588 008c FFF7FEFF 		bl	Cy_SCB_SPI_Disable
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                             retStatus = CY_SYSPM_SUCCESS;
 2589              		.loc 3 492 0
 2590 0090 0023     		movs	r3, #0
 2591 0092 7B61     		str	r3, [r7, #20]
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                         }
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                     }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                 }
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             }
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 114


 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2592              		.loc 3 498 0
 2593 0094 0AE0     		b	.L179
 2594              	.L173:
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_CHECK_FAIL:
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* The other driver is not ready for Hibernate mode. Restore Active
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * mode configuration.
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Enable the SPI to operate */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SPI_Enable(locBase);
 2595              		.loc 3 507 0
 2596 0096 3869     		ldr	r0, [r7, #16]
 2597 0098 FFF7FEFF 		bl	Cy_SCB_SPI_Enable
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             retStatus = CY_SYSPM_SUCCESS;
 2598              		.loc 3 509 0
 2599 009c 0023     		movs	r3, #0
 2600 009e 7B61     		str	r3, [r7, #20]
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2601              		.loc 3 511 0
 2602 00a0 05E0     		b	.L176
 2603              	.L174:
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_BEFORE_TRANSITION:
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         case CY_SYSPM_AFTER_TRANSITION:
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* The SCB is not capable of waking up from Hibernate mode:
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * do nothing.
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             retStatus = CY_SYSPM_SUCCESS;
 2604              		.loc 3 519 0
 2605 00a2 0023     		movs	r3, #0
 2606 00a4 7B61     		str	r3, [r7, #20]
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         break;
 2607              		.loc 3 521 0
 2608 00a6 02E0     		b	.L176
 2609              	.L178:
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         default:
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             break;
 2610              		.loc 3 524 0
 2611 00a8 00BF     		nop
 2612 00aa 00E0     		b	.L176
 2613              	.L179:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 2614              		.loc 3 498 0
 2615 00ac 00BF     		nop
 2616              	.L176:
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return (retStatus);
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 115


 2617              		.loc 3 527 0
 2618 00ae 7B69     		ldr	r3, [r7, #20]
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2619              		.loc 3 528 0
 2620 00b0 1846     		mov	r0, r3
 2621 00b2 1837     		adds	r7, r7, #24
 2622              		.cfi_def_cfa_offset 8
 2623 00b4 BD46     		mov	sp, r7
 2624              		.cfi_def_cfa_register 13
 2625              		@ sp needed
 2626 00b6 80BD     		pop	{r7, pc}
 2627              	.L181:
 2628              		.align	2
 2629              	.L180:
 2630 00b8 FF004200 		.word	4325631
 2631              		.cfi_endproc
 2632              	.LFE244:
 2633              		.size	Cy_SCB_SPI_HibernateCallback, .-Cy_SCB_SPI_HibernateCallback
 2634              		.section	.text.Cy_SCB_SPI_Transfer,"ax",%progbits
 2635              		.align	2
 2636              		.global	Cy_SCB_SPI_Transfer
 2637              		.thumb
 2638              		.thumb_func
 2639              		.type	Cy_SCB_SPI_Transfer, %function
 2640              	Cy_SCB_SPI_Transfer:
 2641              	.LFB245:
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /************************* High-Level Functions ********************************
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The following functions are considered high-level. They provide the layer of
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * intelligence to the SCB. These functions require interrupts.
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Low-level and high-level functions must not be mixed because low-level API
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * can adversely affect the operation of high-level functions.
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_Transfer
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function starts an SPI transfer operation.
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * It configures transmit and receive buffers for an SPI transfer.
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If the data that will be received is not important, pass NULL as rxBuffer.
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If the data that will be transmitted is not important, pass NULL as txBuffer
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * and then the \ref CY_SCB_SPI_DEFAULT_TX is sent out as each data element.
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Note that passing NULL as rxBuffer and txBuffer are considered invalid cases.
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * After the function configures TX and RX interrupt sources, it returns and
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref Cy_SCB_SPI_Interrupt manages further data transfer.
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * In the master mode, the transfer operation starts after calling this
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   function
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * In the slave mode, the transfer registers and will start when
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   the master request arrives.
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * When the transfer operation is completed (requested number of data elements
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * sent and received), the \ref CY_SCB_SPI_TRANSFER_ACTIVE status is cleared
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 116


 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * and the \ref CY_SCB_SPI_TRANSFER_CMPLT_EVENT event is generated.
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param txBuffer
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer of the buffer with data to transmit.
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The element size is defined by the data type that depends on the configured
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * TX data width.
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param rxBuffer
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the buffer to store received data.
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The element size is defined by the data type that depends on the configured
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * RX data width.
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param size
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The number of data elements to transmit and receive.
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref cy_en_scb_spi_status_t
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * The buffers must not be modified and must stay allocated until the end of the
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   transfer.
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * * This function overrides all RX and TX FIFO interrupt sources and changes
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *   the RX and TX FIFO level.
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** cy_en_scb_spi_status_t Cy_SCB_SPI_Transfer(CySCB_Type *base, void *txBuffer, void *rxBuffer, uint32
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                            cy_stc_scb_spi_context_t *context)
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2642              		.loc 3 596 0
 2643              		.cfi_startproc
 2644              		@ args = 4, pretend = 0, frame = 24
 2645              		@ frame_needed = 1, uses_anonymous_args = 0
 2646 0000 80B5     		push	{r7, lr}
 2647              		.cfi_def_cfa_offset 8
 2648              		.cfi_offset 7, -8
 2649              		.cfi_offset 14, -4
 2650 0002 86B0     		sub	sp, sp, #24
 2651              		.cfi_def_cfa_offset 32
 2652 0004 00AF     		add	r7, sp, #0
 2653              		.cfi_def_cfa_register 7
 2654 0006 F860     		str	r0, [r7, #12]
 2655 0008 B960     		str	r1, [r7, #8]
 2656 000a 7A60     		str	r2, [r7, #4]
 2657 000c 3B60     		str	r3, [r7]
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L1(NULL != context);
 2658              		.loc 3 597 0
 2659 000e 3B6A     		ldr	r3, [r7, #32]
 2660 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 117


 2661 0012 04D1     		bne	.L183
 2662              		.loc 3 597 0 is_stmt 0 discriminator 1
 2663 0014 40F25521 		movw	r1, #597
 2664 0018 4448     		ldr	r0, .L197
 2665 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2666              	.L183:
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L1(CY_SCB_SPI_INIT_KEY == context->initKey);
 2667              		.loc 3 598 0 is_stmt 1
 2668 001e 3B6A     		ldr	r3, [r7, #32]
 2669 0020 1B6A     		ldr	r3, [r3, #32]
 2670 0022 434A     		ldr	r2, .L197+4
 2671 0024 9342     		cmp	r3, r2
 2672 0026 04D0     		beq	.L184
 2673              		.loc 3 598 0 is_stmt 0 discriminator 1
 2674 0028 40F25621 		movw	r1, #598
 2675 002c 3F48     		ldr	r0, .L197
 2676 002e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2677              	.L184:
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     CY_ASSERT_L1(CY_SCB_SPI_IS_BUFFER_VALID(txBuffer, rxBuffer, size));
 2678              		.loc 3 599 0 is_stmt 1
 2679 0032 3B68     		ldr	r3, [r7]
 2680 0034 002B     		cmp	r3, #0
 2681 0036 0AD0     		beq	.L185
 2682              		.loc 3 599 0 is_stmt 0 discriminator 2
 2683 0038 BB68     		ldr	r3, [r7, #8]
 2684 003a 002B     		cmp	r3, #0
 2685 003c 04D1     		bne	.L186
 2686              		.loc 3 599 0 discriminator 3
 2687 003e 7B68     		ldr	r3, [r7, #4]
 2688 0040 002B     		cmp	r3, #0
 2689 0042 01D1     		bne	.L186
 2690              		.loc 3 599 0 discriminator 5
 2691 0044 0123     		movs	r3, #1
 2692 0046 00E0     		b	.L187
 2693              	.L186:
 2694              		.loc 3 599 0 discriminator 6
 2695 0048 0023     		movs	r3, #0
 2696              	.L187:
 2697              		.loc 3 599 0 discriminator 8
 2698 004a 002B     		cmp	r3, #0
 2699 004c 04D0     		beq	.L188
 2700              	.L185:
 2701              		.loc 3 599 0 discriminator 9
 2702 004e 40F25721 		movw	r1, #599
 2703 0052 3648     		ldr	r0, .L197
 2704 0054 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2705              	.L188:
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     cy_en_scb_spi_status_t retStatus = CY_SCB_SPI_TRANSFER_BUSY;
 2706              		.loc 3 601 0 is_stmt 1
 2707 0058 364B     		ldr	r3, .L197+8
 2708 005a 7B61     		str	r3, [r7, #20]
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Check whether there are no active transfer requests */
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL == (CY_SCB_SPI_TRANSFER_ACTIVE & context->status))
 2709              		.loc 3 604 0
 2710 005c 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 118


 2711 005e 1B68     		ldr	r3, [r3]
 2712 0060 03F00103 		and	r3, r3, #1
 2713 0064 002B     		cmp	r3, #0
 2714 0066 5BD1     		bne	.L189
 2715              	.LBB2:
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         uint32_t fifoSize = Cy_SCB_GetFifoSize(base);
 2716              		.loc 3 606 0
 2717 0068 F868     		ldr	r0, [r7, #12]
 2718 006a FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 2719 006e 3861     		str	r0, [r7, #16]
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Set up the context */
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status    = CY_SCB_SPI_TRANSFER_ACTIVE;
 2720              		.loc 3 609 0
 2721 0070 3B6A     		ldr	r3, [r7, #32]
 2722 0072 0122     		movs	r2, #1
 2723 0074 1A60     		str	r2, [r3]
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBuf     = txBuffer;
 2724              		.loc 3 611 0
 2725 0076 3B6A     		ldr	r3, [r7, #32]
 2726 0078 BA68     		ldr	r2, [r7, #8]
 2727 007a 1A61     		str	r2, [r3, #16]
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBufSize = size;
 2728              		.loc 3 612 0
 2729 007c 3B6A     		ldr	r3, [r7, #32]
 2730 007e 3A68     		ldr	r2, [r7]
 2731 0080 5A61     		str	r2, [r3, #20]
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBufIdx =  0UL;
 2732              		.loc 3 613 0
 2733 0082 3B6A     		ldr	r3, [r7, #32]
 2734 0084 0022     		movs	r2, #0
 2735 0086 9A61     		str	r2, [r3, #24]
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBuf     = rxBuffer;
 2736              		.loc 3 615 0
 2737 0088 3B6A     		ldr	r3, [r7, #32]
 2738 008a 7A68     		ldr	r2, [r7, #4]
 2739 008c 5A60     		str	r2, [r3, #4]
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBufSize = size;
 2740              		.loc 3 616 0
 2741 008e 3B6A     		ldr	r3, [r7, #32]
 2742 0090 3A68     		ldr	r2, [r7]
 2743 0092 9A60     		str	r2, [r3, #8]
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBufIdx  = 0UL;
 2744              		.loc 3 617 0
 2745 0094 3B6A     		ldr	r3, [r7, #32]
 2746 0096 0022     		movs	r2, #0
 2747 0098 DA60     		str	r2, [r3, #12]
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Set the TX interrupt when half of FIFO was transmitted */
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetTxFifoLevel(base, fifoSize / 2UL);
 2748              		.loc 3 620 0
 2749 009a 3B69     		ldr	r3, [r7, #16]
 2750 009c 5B08     		lsrs	r3, r3, #1
 2751 009e 1946     		mov	r1, r3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 119


 2752 00a0 F868     		ldr	r0, [r7, #12]
 2753 00a2 FFF7FEFF 		bl	Cy_SCB_SetTxFifoLevel
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         if (_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base)))
 2754              		.loc 3 622 0
 2755 00a6 FB68     		ldr	r3, [r7, #12]
 2756 00a8 1B6A     		ldr	r3, [r3, #32]
 2757 00aa 002B     		cmp	r3, #0
 2758 00ac 1ADA     		bge	.L190
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Trigger an RX interrupt:
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * - If the transfer size is equal to or less than FIFO, trigger at the end of the trans
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * - If the transfer size is greater than FIFO, trigger 1 byte earlier than the TX inter
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetRxFifoLevel(base, (size > fifoSize) ? ((fifoSize / 2UL) - 2UL) : (size - 1UL)
 2759              		.loc 3 628 0
 2760 00ae 3A68     		ldr	r2, [r7]
 2761 00b0 3B69     		ldr	r3, [r7, #16]
 2762 00b2 9A42     		cmp	r2, r3
 2763 00b4 03D9     		bls	.L191
 2764              		.loc 3 628 0 is_stmt 0 discriminator 1
 2765 00b6 3B69     		ldr	r3, [r7, #16]
 2766 00b8 5B08     		lsrs	r3, r3, #1
 2767 00ba 023B     		subs	r3, r3, #2
 2768 00bc 01E0     		b	.L192
 2769              	.L191:
 2770              		.loc 3 628 0 discriminator 2
 2771 00be 3B68     		ldr	r3, [r7]
 2772 00c0 013B     		subs	r3, r3, #1
 2773              	.L192:
 2774              		.loc 3 628 0 discriminator 4
 2775 00c2 1946     		mov	r1, r3
 2776 00c4 F868     		ldr	r0, [r7, #12]
 2777 00c6 FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetMasterInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2778              		.loc 3 630 0 is_stmt 1 discriminator 4
 2779 00ca 0021     		movs	r1, #0
 2780 00cc F868     		ldr	r0, [r7, #12]
 2781 00ce FFF7FEFF 		bl	Cy_SCB_SetMasterInterruptMask
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Enable interrupt sources to perform a transfer */
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_LEVEL);
 2782              		.loc 3 633 0 discriminator 4
 2783 00d2 0121     		movs	r1, #1
 2784 00d4 F868     		ldr	r0, [r7, #12]
 2785 00d6 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetTxInterruptMask(base, CY_SCB_TX_INTR_LEVEL);
 2786              		.loc 3 634 0 discriminator 4
 2787 00da 0121     		movs	r1, #1
 2788 00dc F868     		ldr	r0, [r7, #12]
 2789 00de FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 2790 00e2 1BE0     		b	.L193
 2791              	.L190:
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         else
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 120


 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Trigger an RX interrupt:
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * - If the transfer size is equal to or less than half of FIFO, trigger ??at the end of
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             * - If the transfer size is greater than half of FIFO, trigger 1 byte earlier than a TX
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             */
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetRxFifoLevel(base, (size > (fifoSize / 2UL)) ? ((fifoSize / 2UL) - 2UL) : (siz
 2792              		.loc 3 642 0
 2793 00e4 3B69     		ldr	r3, [r7, #16]
 2794 00e6 5A08     		lsrs	r2, r3, #1
 2795 00e8 3B68     		ldr	r3, [r7]
 2796 00ea 9A42     		cmp	r2, r3
 2797 00ec 03D2     		bcs	.L194
 2798              		.loc 3 642 0 is_stmt 0 discriminator 1
 2799 00ee 3B69     		ldr	r3, [r7, #16]
 2800 00f0 5B08     		lsrs	r3, r3, #1
 2801 00f2 023B     		subs	r3, r3, #2
 2802 00f4 01E0     		b	.L195
 2803              	.L194:
 2804              		.loc 3 642 0 discriminator 2
 2805 00f6 3B68     		ldr	r3, [r7]
 2806 00f8 013B     		subs	r3, r3, #1
 2807              	.L195:
 2808              		.loc 3 642 0 discriminator 4
 2809 00fa 1946     		mov	r1, r3
 2810 00fc F868     		ldr	r0, [r7, #12]
 2811 00fe FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetSlaveInterruptMask(base, CY_SCB_SLAVE_INTR_SPI_BUS_ERROR);
 2812              		.loc 3 644 0 is_stmt 1 discriminator 4
 2813 0102 4FF40061 		mov	r1, #2048
 2814 0106 F868     		ldr	r0, [r7, #12]
 2815 0108 FFF7FEFF 		bl	Cy_SCB_SetSlaveInterruptMask
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             /* Enable interrupt sources to perform a transfer */
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_LEVEL | CY_SCB_RX_INTR_OVERFLOW);
 2816              		.loc 3 647 0 discriminator 4
 2817 010c 2121     		movs	r1, #33
 2818 010e F868     		ldr	r0, [r7, #12]
 2819 0110 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetTxInterruptMask(base, CY_SCB_TX_INTR_LEVEL | CY_SCB_TX_INTR_UNDERFLOW);
 2820              		.loc 3 648 0 discriminator 4
 2821 0114 4121     		movs	r1, #65
 2822 0116 F868     		ldr	r0, [r7, #12]
 2823 0118 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 2824              	.L193:
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         retStatus = CY_SCB_SPI_SUCCESS;
 2825              		.loc 3 651 0
 2826 011c 0023     		movs	r3, #0
 2827 011e 7B61     		str	r3, [r7, #20]
 2828              	.L189:
 2829              	.LBE2:
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return (retStatus);
 2830              		.loc 3 654 0
 2831 0120 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 121


 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2832              		.loc 3 655 0
 2833 0122 1846     		mov	r0, r3
 2834 0124 1837     		adds	r7, r7, #24
 2835              		.cfi_def_cfa_offset 8
 2836 0126 BD46     		mov	sp, r7
 2837              		.cfi_def_cfa_register 13
 2838              		@ sp needed
 2839 0128 80BD     		pop	{r7, pc}
 2840              	.L198:
 2841 012a 00BF     		.align	2
 2842              	.L197:
 2843 012c 44000000 		.word	.LC1
 2844 0130 EFCDAB00 		.word	11259375
 2845 0134 0240AA00 		.word	11157506
 2846              		.cfi_endproc
 2847              	.LFE245:
 2848              		.size	Cy_SCB_SPI_Transfer, .-Cy_SCB_SPI_Transfer
 2849              		.section	.text.Cy_SCB_SPI_AbortTransfer,"ax",%progbits
 2850              		.align	2
 2851              		.global	Cy_SCB_SPI_AbortTransfer
 2852              		.thumb
 2853              		.thumb_func
 2854              		.type	Cy_SCB_SPI_AbortTransfer, %function
 2855              	Cy_SCB_SPI_AbortTransfer:
 2856              	.LFB246:
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_AbortTransfer
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Aborts the current SPI transfer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * It disables the TX and RX interrupt sources, clears the TX
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * and RX FIFOs and the status.
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * If slave aborts transfer and the master is still transferring data, 
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * that data will be placed in the RX FIFO, and the TX underflow will be set. 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * To drop data received into the RX FIFO, RX FIFO must be cleared when
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * the transfer is complete. Otherwise, received data will be kept and
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * copied to the buffer when \ref Cy_SCB_SPI_Transfer is called.
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \sideeffect
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The transmit FIFO clear operation also clears the shift register, so that
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * the shifter can be cleared in the middle of a data element transfer,
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * corrupting it. The data element corruption means that all bits that have
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * not been transmitted are transmitted as "ones" on the bus.
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 122


 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** void Cy_SCB_SPI_AbortTransfer(CySCB_Type *base, cy_stc_scb_spi_context_t *context)
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2857              		.loc 3 690 0
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 8
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 80B5     		push	{r7, lr}
 2862              		.cfi_def_cfa_offset 8
 2863              		.cfi_offset 7, -8
 2864              		.cfi_offset 14, -4
 2865 0002 82B0     		sub	sp, sp, #8
 2866              		.cfi_def_cfa_offset 16
 2867 0004 00AF     		add	r7, sp, #0
 2868              		.cfi_def_cfa_register 7
 2869 0006 7860     		str	r0, [r7, #4]
 2870 0008 3960     		str	r1, [r7]
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Disable interrupt sources */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     Cy_SCB_SetSlaveInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2871              		.loc 3 692 0
 2872 000a 0021     		movs	r1, #0
 2873 000c 7868     		ldr	r0, [r7, #4]
 2874 000e FFF7FEFF 		bl	Cy_SCB_SetSlaveInterruptMask
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base)))
 2875              		.loc 3 694 0
 2876 0012 7B68     		ldr	r3, [r7, #4]
 2877 0014 1B6A     		ldr	r3, [r3, #32]
 2878 0016 002B     		cmp	r3, #0
 2879 0018 08DA     		bge	.L200
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2880              		.loc 3 696 0
 2881 001a 0021     		movs	r1, #0
 2882 001c 7868     		ldr	r0, [r7, #4]
 2883 001e FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetTxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2884              		.loc 3 697 0
 2885 0022 0021     		movs	r1, #0
 2886 0024 7868     		ldr	r0, [r7, #4]
 2887 0026 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 2888 002a 07E0     		b	.L201
 2889              	.L200:
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     else
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_OVERFLOW);
 2890              		.loc 3 701 0
 2891 002c 2021     		movs	r1, #32
 2892 002e 7868     		ldr	r0, [r7, #4]
 2893 0030 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetTxInterruptMask(base, CY_SCB_TX_INTR_UNDERFLOW);
 2894              		.loc 3 702 0
 2895 0034 4021     		movs	r1, #64
 2896 0036 7868     		ldr	r0, [r7, #4]
 2897 0038 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 123


 2898              	.L201:
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Clear FIFOs */
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     Cy_SCB_SPI_ClearTxFifo(base);
 2899              		.loc 3 706 0
 2900 003c 7868     		ldr	r0, [r7, #4]
 2901 003e FFF7FEFF 		bl	Cy_SCB_SPI_ClearTxFifo
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     Cy_SCB_SPI_ClearRxFifo(base);
 2902              		.loc 3 707 0
 2903 0042 7868     		ldr	r0, [r7, #4]
 2904 0044 FFF7FEFF 		bl	Cy_SCB_SPI_ClearRxFifo
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Clear the status to allow a new transfer */
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     context->status = 0UL;
 2905              		.loc 3 710 0
 2906 0048 3B68     		ldr	r3, [r7]
 2907 004a 0022     		movs	r2, #0
 2908 004c 1A60     		str	r2, [r3]
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2909              		.loc 3 711 0
 2910 004e 00BF     		nop
 2911 0050 0837     		adds	r7, r7, #8
 2912              		.cfi_def_cfa_offset 8
 2913 0052 BD46     		mov	sp, r7
 2914              		.cfi_def_cfa_register 13
 2915              		@ sp needed
 2916 0054 80BD     		pop	{r7, pc}
 2917              		.cfi_endproc
 2918              	.LFE246:
 2919              		.size	Cy_SCB_SPI_AbortTransfer, .-Cy_SCB_SPI_AbortTransfer
 2920 0056 00BF     		.section	.text.Cy_SCB_SPI_GetNumTransfered,"ax",%progbits
 2921              		.align	2
 2922              		.global	Cy_SCB_SPI_GetNumTransfered
 2923              		.thumb
 2924              		.thumb_func
 2925              		.type	Cy_SCB_SPI_GetNumTransfered, %function
 2926              	Cy_SCB_SPI_GetNumTransfered:
 2927              	.LFB247:
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_GetNumTransfered
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Returns the number of data elements transferred since the last call to \ref
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Cy_SCB_SPI_Transfer.
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 124


 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The number of data elements transferred.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** uint32_t Cy_SCB_SPI_GetNumTransfered(CySCB_Type const *base, cy_stc_scb_spi_context_t const *contex
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2928              		.loc 3 735 0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 8
 2931              		@ frame_needed = 1, uses_anonymous_args = 0
 2932              		@ link register save eliminated.
 2933 0000 80B4     		push	{r7}
 2934              		.cfi_def_cfa_offset 4
 2935              		.cfi_offset 7, -4
 2936 0002 83B0     		sub	sp, sp, #12
 2937              		.cfi_def_cfa_offset 16
 2938 0004 00AF     		add	r7, sp, #0
 2939              		.cfi_def_cfa_register 7
 2940 0006 7860     		str	r0, [r7, #4]
 2941 0008 3960     		str	r1, [r7]
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Suppress a compiler warning about unused variables */
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     (void) base;
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return (context->rxBufIdx);
 2942              		.loc 3 739 0
 2943 000a 3B68     		ldr	r3, [r7]
 2944 000c DB68     		ldr	r3, [r3, #12]
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2945              		.loc 3 740 0
 2946 000e 1846     		mov	r0, r3
 2947 0010 0C37     		adds	r7, r7, #12
 2948              		.cfi_def_cfa_offset 4
 2949 0012 BD46     		mov	sp, r7
 2950              		.cfi_def_cfa_register 13
 2951              		@ sp needed
 2952 0014 5DF8047B 		ldr	r7, [sp], #4
 2953              		.cfi_restore 7
 2954              		.cfi_def_cfa_offset 0
 2955 0018 7047     		bx	lr
 2956              		.cfi_endproc
 2957              	.LFE247:
 2958              		.size	Cy_SCB_SPI_GetNumTransfered, .-Cy_SCB_SPI_GetNumTransfered
 2959 001a 00BF     		.section	.text.Cy_SCB_SPI_GetTransferStatus,"ax",%progbits
 2960              		.align	2
 2961              		.global	Cy_SCB_SPI_GetTransferStatus
 2962              		.thumb
 2963              		.thumb_func
 2964              		.type	Cy_SCB_SPI_GetTransferStatus, %function
 2965              	Cy_SCB_SPI_GetTransferStatus:
 2966              	.LFB248:
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_GetTransferStatus
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Returns the status of the transfer operation started by
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 125


 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref Cy_SCB_SPI_Transfer.
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This status is a bit mask and the value returned may have a multiple-bit set.
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \return
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref group_scb_spi_macros_xfer_status.
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \note
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The status is cleared by calling \ref Cy_SCB_SPI_Transfer or
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \ref Cy_SCB_SPI_AbortTransfer.
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** uint32_t Cy_SCB_SPI_GetTransferStatus(CySCB_Type const *base, cy_stc_scb_spi_context_t const *conte
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 2967              		.loc 3 769 0
 2968              		.cfi_startproc
 2969              		@ args = 0, pretend = 0, frame = 8
 2970              		@ frame_needed = 1, uses_anonymous_args = 0
 2971              		@ link register save eliminated.
 2972 0000 80B4     		push	{r7}
 2973              		.cfi_def_cfa_offset 4
 2974              		.cfi_offset 7, -4
 2975 0002 83B0     		sub	sp, sp, #12
 2976              		.cfi_def_cfa_offset 16
 2977 0004 00AF     		add	r7, sp, #0
 2978              		.cfi_def_cfa_register 7
 2979 0006 7860     		str	r0, [r7, #4]
 2980 0008 3960     		str	r1, [r7]
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Suppress a compiler warning about unused variables */
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     (void) base;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     return (context->status);
 2981              		.loc 3 773 0
 2982 000a 3B68     		ldr	r3, [r7]
 2983 000c 1B68     		ldr	r3, [r3]
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 2984              		.loc 3 774 0
 2985 000e 1846     		mov	r0, r3
 2986 0010 0C37     		adds	r7, r7, #12
 2987              		.cfi_def_cfa_offset 4
 2988 0012 BD46     		mov	sp, r7
 2989              		.cfi_def_cfa_register 13
 2990              		@ sp needed
 2991 0014 5DF8047B 		ldr	r7, [sp], #4
 2992              		.cfi_restore 7
 2993              		.cfi_def_cfa_offset 0
 2994 0018 7047     		bx	lr
 2995              		.cfi_endproc
 2996              	.LFE248:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 126


 2997              		.size	Cy_SCB_SPI_GetTransferStatus, .-Cy_SCB_SPI_GetTransferStatus
 2998 001a 00BF     		.section	.text.Cy_SCB_SPI_Interrupt,"ax",%progbits
 2999              		.align	2
 3000              		.global	Cy_SCB_SPI_Interrupt
 3001              		.thumb
 3002              		.thumb_func
 3003              		.type	Cy_SCB_SPI_Interrupt, %function
 3004              	Cy_SCB_SPI_Interrupt:
 3005              	.LFB249:
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: Cy_SCB_SPI_Interrupt
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This is the interrupt function for the SCB configured in the SPI mode.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * This function must be called inside the  user-defined interrupt service
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * routine for \ref Cy_SCB_SPI_Transfer to work.
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** void Cy_SCB_SPI_Interrupt(CySCB_Type *base, cy_stc_scb_spi_context_t *context)
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 3006              		.loc 3 796 0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 16
 3009              		@ frame_needed = 1, uses_anonymous_args = 0
 3010 0000 80B5     		push	{r7, lr}
 3011              		.cfi_def_cfa_offset 8
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 84B0     		sub	sp, sp, #16
 3015              		.cfi_def_cfa_offset 24
 3016 0004 00AF     		add	r7, sp, #0
 3017              		.cfi_def_cfa_register 7
 3018 0006 7860     		str	r0, [r7, #4]
 3019 0008 3960     		str	r1, [r7]
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****      bool locXferErr = false;
 3020              		.loc 3 797 0
 3021 000a 0023     		movs	r3, #0
 3022 000c FB73     		strb	r3, [r7, #15]
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Wake up on the slave select condition */
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_SPI_INTR_WAKEUP & Cy_SCB_GetSpiInterruptStatusMasked(base)))
 3023              		.loc 3 800 0
 3024 000e 7868     		ldr	r0, [r7, #4]
 3025 0010 FFF7FEFF 		bl	Cy_SCB_GetSpiInterruptStatusMasked
 3026 0014 0346     		mov	r3, r0
 3027 0016 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 127


 3028 001a 002B     		cmp	r3, #0
 3029 001c 03D0     		beq	.L207
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearSpiInterrupt(base, CY_SCB_SPI_INTR_WAKEUP);
 3030              		.loc 3 802 0
 3031 001e 0121     		movs	r1, #1
 3032 0020 7868     		ldr	r0, [r7, #4]
 3033 0022 FFF7FEFF 		bl	Cy_SCB_ClearSpiInterrupt
 3034              	.L207:
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* The slave error condition */
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_SLAVE_INTR_SPI_BUS_ERROR & Cy_SCB_GetSlaveInterruptStatusMasked(base)))
 3035              		.loc 3 806 0
 3036 0026 7868     		ldr	r0, [r7, #4]
 3037 0028 FFF7FEFF 		bl	Cy_SCB_GetSlaveInterruptStatusMasked
 3038 002c 0346     		mov	r3, r0
 3039 002e 03F40063 		and	r3, r3, #2048
 3040 0032 002B     		cmp	r3, #0
 3041 0034 0CD0     		beq	.L208
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         locXferErr       = true;
 3042              		.loc 3 808 0
 3043 0036 0123     		movs	r3, #1
 3044 0038 FB73     		strb	r3, [r7, #15]
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status |= CY_SCB_SPI_SLAVE_TRANSFER_ERR;
 3045              		.loc 3 809 0
 3046 003a 3B68     		ldr	r3, [r7]
 3047 003c 1B68     		ldr	r3, [r3]
 3048 003e 43F40062 		orr	r2, r3, #2048
 3049 0042 3B68     		ldr	r3, [r7]
 3050 0044 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearSlaveInterrupt(base, CY_SCB_SLAVE_INTR_SPI_BUS_ERROR);
 3051              		.loc 3 811 0
 3052 0046 4FF40061 		mov	r1, #2048
 3053 004a 7868     		ldr	r0, [r7, #4]
 3054 004c FFF7FEFF 		bl	Cy_SCB_ClearSlaveInterrupt
 3055              	.L208:
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* The RX overflow error condition */
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_RX_INTR_OVERFLOW & Cy_SCB_GetRxInterruptStatusMasked(base)))
 3056              		.loc 3 815 0
 3057 0050 7868     		ldr	r0, [r7, #4]
 3058 0052 FFF7FEFF 		bl	Cy_SCB_GetRxInterruptStatusMasked
 3059 0056 0346     		mov	r3, r0
 3060 0058 03F02003 		and	r3, r3, #32
 3061 005c 002B     		cmp	r3, #0
 3062 005e 0BD0     		beq	.L209
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         locXferErr       = true;
 3063              		.loc 3 817 0
 3064 0060 0123     		movs	r3, #1
 3065 0062 FB73     		strb	r3, [r7, #15]
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status |= CY_SCB_SPI_TRANSFER_OVERFLOW;
 3066              		.loc 3 818 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 128


 3067 0064 3B68     		ldr	r3, [r7]
 3068 0066 1B68     		ldr	r3, [r3]
 3069 0068 43F02002 		orr	r2, r3, #32
 3070 006c 3B68     		ldr	r3, [r7]
 3071 006e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearRxInterrupt(base, CY_SCB_RX_INTR_OVERFLOW);
 3072              		.loc 3 820 0
 3073 0070 2021     		movs	r1, #32
 3074 0072 7868     		ldr	r0, [r7, #4]
 3075 0074 FFF7FEFF 		bl	Cy_SCB_ClearRxInterrupt
 3076              	.L209:
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* The TX underflow error condition or slave complete data transfer */
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_TX_INTR_UNDERFLOW & Cy_SCB_GetTxInterruptStatusMasked(base)))
 3077              		.loc 3 824 0
 3078 0078 7868     		ldr	r0, [r7, #4]
 3079 007a FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatusMasked
 3080 007e 0346     		mov	r3, r0
 3081 0080 03F04003 		and	r3, r3, #64
 3082 0084 002B     		cmp	r3, #0
 3083 0086 0BD0     		beq	.L210
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         locXferErr       = true;
 3084              		.loc 3 826 0
 3085 0088 0123     		movs	r3, #1
 3086 008a FB73     		strb	r3, [r7, #15]
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status |= CY_SCB_SPI_TRANSFER_UNDERFLOW;
 3087              		.loc 3 827 0
 3088 008c 3B68     		ldr	r3, [r7]
 3089 008e 1B68     		ldr	r3, [r3]
 3090 0090 43F04002 		orr	r2, r3, #64
 3091 0094 3B68     		ldr	r3, [r7]
 3092 0096 1A60     		str	r2, [r3]
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_UNDERFLOW);
 3093              		.loc 3 829 0
 3094 0098 4021     		movs	r1, #64
 3095 009a 7868     		ldr	r0, [r7, #4]
 3096 009c FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
 3097              	.L210:
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Report an error, use a callback */
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (locXferErr)
 3098              		.loc 3 833 0
 3099 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3100 00a2 002B     		cmp	r3, #0
 3101 00a4 07D0     		beq	.L211
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         if (NULL != context->cbEvents)
 3102              		.loc 3 835 0
 3103 00a6 3B68     		ldr	r3, [r7]
 3104 00a8 DB69     		ldr	r3, [r3, #28]
 3105 00aa 002B     		cmp	r3, #0
 3106 00ac 03D0     		beq	.L211
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 129


 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             context->cbEvents(CY_SCB_SPI_TRANSFER_ERR_EVENT);
 3107              		.loc 3 837 0
 3108 00ae 3B68     		ldr	r3, [r7]
 3109 00b0 DB69     		ldr	r3, [r3, #28]
 3110 00b2 0420     		movs	r0, #4
 3111 00b4 9847     		blx	r3
 3112              	.L211:
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* RX direction */
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_RX_INTR_LEVEL & Cy_SCB_GetRxInterruptStatusMasked(base)))
 3113              		.loc 3 842 0
 3114 00b6 7868     		ldr	r0, [r7, #4]
 3115 00b8 FFF7FEFF 		bl	Cy_SCB_GetRxInterruptStatusMasked
 3116 00bc 0346     		mov	r3, r0
 3117 00be 03F00103 		and	r3, r3, #1
 3118 00c2 002B     		cmp	r3, #0
 3119 00c4 07D0     		beq	.L212
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         HandleReceive(base, context);
 3120              		.loc 3 844 0
 3121 00c6 3968     		ldr	r1, [r7]
 3122 00c8 7868     		ldr	r0, [r7, #4]
 3123 00ca FFF7FEFF 		bl	HandleReceive
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearRxInterrupt(base, CY_SCB_RX_INTR_LEVEL);
 3124              		.loc 3 846 0
 3125 00ce 0121     		movs	r1, #1
 3126 00d0 7868     		ldr	r0, [r7, #4]
 3127 00d2 FFF7FEFF 		bl	Cy_SCB_ClearRxInterrupt
 3128              	.L212:
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* TX direction */
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL != (CY_SCB_TX_INTR_LEVEL & Cy_SCB_GetTxInterruptStatusMasked(base)))
 3129              		.loc 3 850 0
 3130 00d6 7868     		ldr	r0, [r7, #4]
 3131 00d8 FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatusMasked
 3132 00dc 0346     		mov	r3, r0
 3133 00de 03F00103 		and	r3, r3, #1
 3134 00e2 002B     		cmp	r3, #0
 3135 00e4 07D0     		beq	.L213
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         HandleTransmit(base, context);
 3136              		.loc 3 852 0
 3137 00e6 3968     		ldr	r1, [r7]
 3138 00e8 7868     		ldr	r0, [r7, #4]
 3139 00ea FFF7FEFF 		bl	HandleTransmit
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_LEVEL);
 3140              		.loc 3 854 0
 3141 00ee 0121     		movs	r1, #1
 3142 00f0 7868     		ldr	r0, [r7, #4]
 3143 00f2 FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
 3144              	.L213:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 130


 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* The transfer is complete: all data is loaded in the TX FIFO
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     * and all data is read from the RX FIFO
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     */
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if ((0UL != (context->status & CY_SCB_SPI_TRANSFER_ACTIVE)) &&
 3145              		.loc 3 860 0
 3146 00f6 3B68     		ldr	r3, [r7]
 3147 00f8 1B68     		ldr	r3, [r3]
 3148 00fa 03F00103 		and	r3, r3, #1
 3149 00fe 002B     		cmp	r3, #0
 3150 0100 15D0     		beq	.L215
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         (0UL == context->rxBufSize) && (0UL == context->txBufSize))
 3151              		.loc 3 861 0 discriminator 1
 3152 0102 3B68     		ldr	r3, [r7]
 3153 0104 9B68     		ldr	r3, [r3, #8]
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         (0UL == context->rxBufSize) && (0UL == context->txBufSize))
 3154              		.loc 3 860 0 discriminator 1
 3155 0106 002B     		cmp	r3, #0
 3156 0108 11D1     		bne	.L215
 3157              		.loc 3 861 0
 3158 010a 3B68     		ldr	r3, [r7]
 3159 010c 5B69     		ldr	r3, [r3, #20]
 3160 010e 002B     		cmp	r3, #0
 3161 0110 0DD1     		bne	.L215
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* The transfer is complete */
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status &= (uint32_t) ~CY_SCB_SPI_TRANSFER_ACTIVE;
 3162              		.loc 3 864 0
 3163 0112 3B68     		ldr	r3, [r7]
 3164 0114 1B68     		ldr	r3, [r3]
 3165 0116 23F00102 		bic	r2, r3, #1
 3166 011a 3B68     		ldr	r3, [r7]
 3167 011c 1A60     		str	r2, [r3]
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         if (NULL != context->cbEvents)
 3168              		.loc 3 866 0
 3169 011e 3B68     		ldr	r3, [r7]
 3170 0120 DB69     		ldr	r3, [r3, #28]
 3171 0122 002B     		cmp	r3, #0
 3172 0124 03D0     		beq	.L215
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             context->cbEvents(CY_SCB_SPI_TRANSFER_CMPLT_EVENT);
 3173              		.loc 3 868 0
 3174 0126 3B68     		ldr	r3, [r7]
 3175 0128 DB69     		ldr	r3, [r3, #28]
 3176 012a 0220     		movs	r0, #2
 3177 012c 9847     		blx	r3
 3178              	.L215:
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 3179              		.loc 3 871 0
 3180 012e 00BF     		nop
 3181 0130 1037     		adds	r7, r7, #16
 3182              		.cfi_def_cfa_offset 8
 3183 0132 BD46     		mov	sp, r7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 131


 3184              		.cfi_def_cfa_register 13
 3185              		@ sp needed
 3186 0134 80BD     		pop	{r7, pc}
 3187              		.cfi_endproc
 3188              	.LFE249:
 3189              		.size	Cy_SCB_SPI_Interrupt, .-Cy_SCB_SPI_Interrupt
 3190 0136 00BF     		.section	.text.HandleReceive,"ax",%progbits
 3191              		.align	2
 3192              		.thumb
 3193              		.thumb_func
 3194              		.type	HandleReceive, %function
 3195              	HandleReceive:
 3196              	.LFB250:
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: HandleReceive
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Reads data from RX FIFO into the buffer provided by \ref Cy_SCB_SPI_Transfer.
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void HandleReceive(CySCB_Type *base, cy_stc_scb_spi_context_t *context)
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 3197              		.loc 3 891 0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 24
 3200              		@ frame_needed = 1, uses_anonymous_args = 0
 3201 0000 80B5     		push	{r7, lr}
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 7, -8
 3204              		.cfi_offset 14, -4
 3205 0002 86B0     		sub	sp, sp, #24
 3206              		.cfi_def_cfa_offset 32
 3207 0004 00AF     		add	r7, sp, #0
 3208              		.cfi_def_cfa_register 7
 3209 0006 7860     		str	r0, [r7, #4]
 3210 0008 3960     		str	r1, [r7]
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Get data in RX FIFO */
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     uint32_t numToCopy = Cy_SCB_GetNumInRxFifo(base);
 3211              		.loc 3 893 0
 3212 000a 7868     		ldr	r0, [r7, #4]
 3213 000c FFF7FEFF 		bl	Cy_SCB_GetNumInRxFifo
 3214 0010 7861     		str	r0, [r7, #20]
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Adjust the number to read */
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (numToCopy > context->rxBufSize)
 3215              		.loc 3 896 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 132


 3216 0012 3B68     		ldr	r3, [r7]
 3217 0014 9A68     		ldr	r2, [r3, #8]
 3218 0016 7B69     		ldr	r3, [r7, #20]
 3219 0018 9A42     		cmp	r2, r3
 3220 001a 02D2     		bcs	.L217
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         numToCopy = context->rxBufSize;
 3221              		.loc 3 898 0
 3222 001c 3B68     		ldr	r3, [r7]
 3223 001e 9B68     		ldr	r3, [r3, #8]
 3224 0020 7B61     		str	r3, [r7, #20]
 3225              	.L217:
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Move the buffer */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     context->rxBufIdx  += numToCopy;
 3226              		.loc 3 902 0
 3227 0022 3B68     		ldr	r3, [r7]
 3228 0024 DA68     		ldr	r2, [r3, #12]
 3229 0026 7B69     		ldr	r3, [r7, #20]
 3230 0028 1A44     		add	r2, r2, r3
 3231 002a 3B68     		ldr	r3, [r7]
 3232 002c DA60     		str	r2, [r3, #12]
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     context->rxBufSize -= numToCopy;
 3233              		.loc 3 903 0
 3234 002e 3B68     		ldr	r3, [r7]
 3235 0030 9A68     		ldr	r2, [r3, #8]
 3236 0032 7B69     		ldr	r3, [r7, #20]
 3237 0034 D21A     		subs	r2, r2, r3
 3238 0036 3B68     		ldr	r3, [r7]
 3239 0038 9A60     		str	r2, [r3, #8]
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Read data from RX FIFO */
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (NULL != context->rxBuf)
 3240              		.loc 3 906 0
 3241 003a 3B68     		ldr	r3, [r7]
 3242 003c 5B68     		ldr	r3, [r3, #4]
 3243 003e 002B     		cmp	r3, #0
 3244 0040 1AD0     		beq	.L218
 3245              	.LBB3:
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         uint8_t *buf = (uint8_t *) context->rxBuf;
 3246              		.loc 3 908 0
 3247 0042 3B68     		ldr	r3, [r7]
 3248 0044 5B68     		ldr	r3, [r3, #4]
 3249 0046 3B61     		str	r3, [r7, #16]
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_ReadArrayNoCheck(base, context->rxBuf, numToCopy);
 3250              		.loc 3 910 0
 3251 0048 3B68     		ldr	r3, [r7]
 3252 004a 5B68     		ldr	r3, [r3, #4]
 3253 004c 7A69     		ldr	r2, [r7, #20]
 3254 004e 1946     		mov	r1, r3
 3255 0050 7868     		ldr	r0, [r7, #4]
 3256 0052 FFF7FEFF 		bl	Cy_SCB_ReadArrayNoCheck
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         buf = &buf[(Cy_SCB_IsRxDataWidthByte(base) ? (numToCopy) : (2UL * numToCopy))];
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 133


 3257              		.loc 3 912 0
 3258 0056 7868     		ldr	r0, [r7, #4]
 3259 0058 FFF7FEFF 		bl	Cy_SCB_IsRxDataWidthByte
 3260 005c 0346     		mov	r3, r0
 3261 005e 002B     		cmp	r3, #0
 3262 0060 01D0     		beq	.L219
 3263              		.loc 3 912 0 is_stmt 0 discriminator 1
 3264 0062 7B69     		ldr	r3, [r7, #20]
 3265 0064 01E0     		b	.L220
 3266              	.L219:
 3267              		.loc 3 912 0 discriminator 2
 3268 0066 7B69     		ldr	r3, [r7, #20]
 3269 0068 5B00     		lsls	r3, r3, #1
 3270              	.L220:
 3271              		.loc 3 912 0 discriminator 4
 3272 006a 3A69     		ldr	r2, [r7, #16]
 3273 006c 1344     		add	r3, r3, r2
 3274 006e 3B61     		str	r3, [r7, #16]
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->rxBuf = (void *) buf;
 3275              		.loc 3 913 0 is_stmt 1 discriminator 4
 3276 0070 3B68     		ldr	r3, [r7]
 3277 0072 3A69     		ldr	r2, [r7, #16]
 3278 0074 5A60     		str	r2, [r3, #4]
 3279              	.LBE3:
 3280 0076 03E0     		b	.L221
 3281              	.L218:
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     else
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Discard read data. */
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         DiscardArrayNoCheck(base, numToCopy);
 3282              		.loc 3 918 0
 3283 0078 7969     		ldr	r1, [r7, #20]
 3284 007a 7868     		ldr	r0, [r7, #4]
 3285 007c FFF7FEFF 		bl	DiscardArrayNoCheck
 3286              	.L221:
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL == context->rxBufSize)
 3287              		.loc 3 921 0
 3288 0080 3B68     		ldr	r3, [r7]
 3289 0082 9B68     		ldr	r3, [r3, #8]
 3290 0084 002B     		cmp	r3, #0
 3291 0086 0AD1     		bne	.L222
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Disable the RX level interrupt */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetRxInterruptMask(base, (Cy_SCB_GetRxInterruptMask(base) & (uint32_t) ~CY_SCB_RX_IN
 3292              		.loc 3 924 0
 3293 0088 7868     		ldr	r0, [r7, #4]
 3294 008a FFF7FEFF 		bl	Cy_SCB_GetRxInterruptMask
 3295 008e 0346     		mov	r3, r0
 3296 0090 23F00103 		bic	r3, r3, #1
 3297 0094 1946     		mov	r1, r3
 3298 0096 7868     		ldr	r0, [r7, #4]
 3299 0098 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     else
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 134


 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         uint32_t level = (_FLD2BOOL(SCB_SPI_CTRL_MASTER_MODE, SCB_SPI_CTRL(base))) ?
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                     Cy_SCB_GetFifoSize(base) : (Cy_SCB_GetFifoSize(base) / 2UL);
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         if (context->rxBufSize < level)
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             Cy_SCB_SetRxFifoLevel(base, (context->rxBufSize - 1UL));
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 3300              		.loc 3 936 0
 3301 009c 1AE0     		b	.L226
 3302              	.L222:
 3303              	.LBB4:
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                     Cy_SCB_GetFifoSize(base) : (Cy_SCB_GetFifoSize(base) / 2UL);
 3304              		.loc 3 928 0
 3305 009e 7B68     		ldr	r3, [r7, #4]
 3306 00a0 1B6A     		ldr	r3, [r3, #32]
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 3307              		.loc 3 929 0
 3308 00a2 002B     		cmp	r3, #0
 3309 00a4 04DA     		bge	.L224
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 3310              		.loc 3 929 0 is_stmt 0 discriminator 1
 3311 00a6 7868     		ldr	r0, [r7, #4]
 3312 00a8 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3313 00ac 0346     		mov	r3, r0
 3314 00ae 04E0     		b	.L225
 3315              	.L224:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 3316              		.loc 3 929 0 discriminator 2
 3317 00b0 7868     		ldr	r0, [r7, #4]
 3318 00b2 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3319 00b6 0346     		mov	r3, r0
 3320 00b8 5B08     		lsrs	r3, r3, #1
 3321              	.L225:
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****                                     Cy_SCB_GetFifoSize(base) : (Cy_SCB_GetFifoSize(base) / 2UL);
 3322              		.loc 3 928 0 is_stmt 1
 3323 00ba FB60     		str	r3, [r7, #12]
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 3324              		.loc 3 931 0
 3325 00bc 3B68     		ldr	r3, [r7]
 3326 00be 9A68     		ldr	r2, [r3, #8]
 3327 00c0 FB68     		ldr	r3, [r7, #12]
 3328 00c2 9A42     		cmp	r2, r3
 3329 00c4 06D2     		bcs	.L226
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 3330              		.loc 3 933 0
 3331 00c6 3B68     		ldr	r3, [r7]
 3332 00c8 9B68     		ldr	r3, [r3, #8]
 3333 00ca 013B     		subs	r3, r3, #1
 3334 00cc 1946     		mov	r1, r3
 3335 00ce 7868     		ldr	r0, [r7, #4]
 3336 00d0 FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 3337              	.L226:
 3338              	.LBE4:
 3339              		.loc 3 936 0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 135


 3340 00d4 00BF     		nop
 3341 00d6 1837     		adds	r7, r7, #24
 3342              		.cfi_def_cfa_offset 8
 3343 00d8 BD46     		mov	sp, r7
 3344              		.cfi_def_cfa_register 13
 3345              		@ sp needed
 3346 00da 80BD     		pop	{r7, pc}
 3347              		.cfi_endproc
 3348              	.LFE250:
 3349              		.size	HandleReceive, .-HandleReceive
 3350              		.section	.text.HandleTransmit,"ax",%progbits
 3351              		.align	2
 3352              		.thumb
 3353              		.thumb_func
 3354              		.type	HandleTransmit, %function
 3355              	HandleTransmit:
 3356              	.LFB251:
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: HandleTransmit
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Loads TX FIFO with data provided by \ref Cy_SCB_SPI_Transfer.
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param context
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the context structure \ref cy_stc_scb_spi_context_t allocated
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * by the user. The structure is used during the SPI operation for internal
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * configuration and data retention. The user must not modify anything
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * in this structure.
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void HandleTransmit(CySCB_Type *base, cy_stc_scb_spi_context_t *context)
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 3357              		.loc 3 956 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 24
 3360              		@ frame_needed = 1, uses_anonymous_args = 0
 3361 0000 80B5     		push	{r7, lr}
 3362              		.cfi_def_cfa_offset 8
 3363              		.cfi_offset 7, -8
 3364              		.cfi_offset 14, -4
 3365 0002 86B0     		sub	sp, sp, #24
 3366              		.cfi_def_cfa_offset 32
 3367 0004 00AF     		add	r7, sp, #0
 3368              		.cfi_def_cfa_register 7
 3369 0006 7860     		str	r0, [r7, #4]
 3370 0008 3960     		str	r1, [r7]
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     uint32_t numToCopy;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     uint32_t fifoSize = Cy_SCB_GetFifoSize(base);
 3371              		.loc 3 958 0
 3372 000a 7868     		ldr	r0, [r7, #4]
 3373 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3374 0010 3861     		str	r0, [r7, #16]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 136


 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     numToCopy = fifoSize - Cy_SCB_GetNumInTxFifo(base);
 3375              		.loc 3 960 0
 3376 0012 7868     		ldr	r0, [r7, #4]
 3377 0014 FFF7FEFF 		bl	Cy_SCB_GetNumInTxFifo
 3378 0018 0246     		mov	r2, r0
 3379 001a 3B69     		ldr	r3, [r7, #16]
 3380 001c 9B1A     		subs	r3, r3, r2
 3381 001e 7B61     		str	r3, [r7, #20]
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Adjust the number to load */
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (numToCopy > context->txBufSize)
 3382              		.loc 3 963 0
 3383 0020 3B68     		ldr	r3, [r7]
 3384 0022 5A69     		ldr	r2, [r3, #20]
 3385 0024 7B69     		ldr	r3, [r7, #20]
 3386 0026 9A42     		cmp	r2, r3
 3387 0028 02D2     		bcs	.L228
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         numToCopy = context->txBufSize;
 3388              		.loc 3 965 0
 3389 002a 3B68     		ldr	r3, [r7]
 3390 002c 5B69     		ldr	r3, [r3, #20]
 3391 002e 7B61     		str	r3, [r7, #20]
 3392              	.L228:
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Move the buffer */
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     context->txBufIdx  += numToCopy;
 3393              		.loc 3 969 0
 3394 0030 3B68     		ldr	r3, [r7]
 3395 0032 9A69     		ldr	r2, [r3, #24]
 3396 0034 7B69     		ldr	r3, [r7, #20]
 3397 0036 1A44     		add	r2, r2, r3
 3398 0038 3B68     		ldr	r3, [r7]
 3399 003a 9A61     		str	r2, [r3, #24]
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     context->txBufSize -= numToCopy;
 3400              		.loc 3 970 0
 3401 003c 3B68     		ldr	r3, [r7]
 3402 003e 5A69     		ldr	r2, [r3, #20]
 3403 0040 7B69     		ldr	r3, [r7, #20]
 3404 0042 D21A     		subs	r2, r2, r3
 3405 0044 3B68     		ldr	r3, [r7]
 3406 0046 5A61     		str	r2, [r3, #20]
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     /* Load TX FIFO with data */
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (NULL != context->txBuf)
 3407              		.loc 3 973 0
 3408 0048 3B68     		ldr	r3, [r7]
 3409 004a 1B69     		ldr	r3, [r3, #16]
 3410 004c 002B     		cmp	r3, #0
 3411 004e 1AD0     		beq	.L229
 3412              	.LBB5:
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         uint8_t *buf = (uint8_t *) context->txBuf;
 3413              		.loc 3 975 0
 3414 0050 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 137


 3415 0052 1B69     		ldr	r3, [r3, #16]
 3416 0054 FB60     		str	r3, [r7, #12]
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_WriteArrayNoCheck(base, context->txBuf, numToCopy);
 3417              		.loc 3 977 0
 3418 0056 3B68     		ldr	r3, [r7]
 3419 0058 1B69     		ldr	r3, [r3, #16]
 3420 005a 7A69     		ldr	r2, [r7, #20]
 3421 005c 1946     		mov	r1, r3
 3422 005e 7868     		ldr	r0, [r7, #4]
 3423 0060 FFF7FEFF 		bl	Cy_SCB_WriteArrayNoCheck
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         buf = &buf[(Cy_SCB_IsTxDataWidthByte(base) ? (numToCopy) : (2UL * numToCopy))];
 3424              		.loc 3 979 0
 3425 0064 7868     		ldr	r0, [r7, #4]
 3426 0066 FFF7FEFF 		bl	Cy_SCB_IsTxDataWidthByte
 3427 006a 0346     		mov	r3, r0
 3428 006c 002B     		cmp	r3, #0
 3429 006e 01D0     		beq	.L230
 3430              		.loc 3 979 0 is_stmt 0 discriminator 1
 3431 0070 7B69     		ldr	r3, [r7, #20]
 3432 0072 01E0     		b	.L231
 3433              	.L230:
 3434              		.loc 3 979 0 discriminator 2
 3435 0074 7B69     		ldr	r3, [r7, #20]
 3436 0076 5B00     		lsls	r3, r3, #1
 3437              	.L231:
 3438              		.loc 3 979 0 discriminator 4
 3439 0078 FA68     		ldr	r2, [r7, #12]
 3440 007a 1344     		add	r3, r3, r2
 3441 007c FB60     		str	r3, [r7, #12]
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->txBuf = (void *) buf;
 3442              		.loc 3 980 0 is_stmt 1 discriminator 4
 3443 007e 3B68     		ldr	r3, [r7]
 3444 0080 FA68     		ldr	r2, [r7, #12]
 3445 0082 1A61     		str	r2, [r3, #16]
 3446              	.LBE5:
 3447 0084 05E0     		b	.L232
 3448              	.L229:
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     else
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_WriteDefaultArrayNoCheck(base, CY_SCB_SPI_DEFAULT_TX, numToCopy);
 3449              		.loc 3 984 0
 3450 0086 7A69     		ldr	r2, [r7, #20]
 3451 0088 4FF6FF71 		movw	r1, #65535
 3452 008c 7868     		ldr	r0, [r7, #4]
 3453 008e FFF7FEFF 		bl	Cy_SCB_WriteDefaultArrayNoCheck
 3454              	.L232:
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     if (0UL == context->txBufSize)
 3455              		.loc 3 987 0
 3456 0092 3B68     		ldr	r3, [r7]
 3457 0094 5B69     		ldr	r3, [r3, #20]
 3458 0096 002B     		cmp	r3, #0
 3459 0098 17D1     		bne	.L234
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 138


 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Data is transferred into TX FIFO */
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         context->status |= CY_SCB_SPI_TRANSFER_IN_FIFO;
 3460              		.loc 3 990 0
 3461 009a 3B68     		ldr	r3, [r7]
 3462 009c 1B68     		ldr	r3, [r3]
 3463 009e 43F00202 		orr	r2, r3, #2
 3464 00a2 3B68     		ldr	r3, [r7]
 3465 00a4 1A60     		str	r2, [r3]
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         /* Disable the TX level interrupt */
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         Cy_SCB_SetTxInterruptMask(base, (Cy_SCB_GetTxInterruptMask(base) & (uint32_t) ~CY_SCB_TX_IN
 3466              		.loc 3 993 0
 3467 00a6 7868     		ldr	r0, [r7, #4]
 3468 00a8 FFF7FEFF 		bl	Cy_SCB_GetTxInterruptMask
 3469 00ac 0346     		mov	r3, r0
 3470 00ae 23F00103 		bic	r3, r3, #1
 3471 00b2 1946     		mov	r1, r3
 3472 00b4 7868     		ldr	r0, [r7, #4]
 3473 00b6 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         if (NULL != context->cbEvents)
 3474              		.loc 3 995 0
 3475 00ba 3B68     		ldr	r3, [r7]
 3476 00bc DB69     		ldr	r3, [r3, #28]
 3477 00be 002B     		cmp	r3, #0
 3478 00c0 03D0     		beq	.L234
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****             context->cbEvents(CY_SCB_SPI_TRANSFER_IN_FIFO_EVENT);
 3479              		.loc 3 997 0
 3480 00c2 3B68     		ldr	r3, [r7]
 3481 00c4 DB69     		ldr	r3, [r3, #28]
 3482 00c6 0120     		movs	r0, #1
 3483 00c8 9847     		blx	r3
 3484              	.L234:
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         }
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 3485              		.loc 3 1000 0
 3486 00ca 00BF     		nop
 3487 00cc 1837     		adds	r7, r7, #24
 3488              		.cfi_def_cfa_offset 8
 3489 00ce BD46     		mov	sp, r7
 3490              		.cfi_def_cfa_register 13
 3491              		@ sp needed
 3492 00d0 80BD     		pop	{r7, pc}
 3493              		.cfi_endproc
 3494              	.LFE251:
 3495              		.size	HandleTransmit, .-HandleTransmit
 3496 00d2 00BF     		.section	.text.DiscardArrayNoCheck,"ax",%progbits
 3497              		.align	2
 3498              		.thumb
 3499              		.thumb_func
 3500              		.type	DiscardArrayNoCheck, %function
 3501              	DiscardArrayNoCheck:
 3502              	.LFB252:
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 139


1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** /*******************************************************************************
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Function Name: DiscardArrayNoCheck
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** ****************************************************************************//**
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * Reads the number of data elements from the SPI RX FIFO. The read data is
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * discarded. Before calling this function, make sure that RX FIFO has
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * enough data elements to read.
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param base
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The pointer to the SPI SCB instance.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * \param size
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** * The number of data elements to read.
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** *******************************************************************************/
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** static void DiscardArrayNoCheck(CySCB_Type const *base, uint32_t size)
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** {
 3503              		.loc 3 1019 0
 3504              		.cfi_startproc
 3505              		@ args = 0, pretend = 0, frame = 8
 3506              		@ frame_needed = 1, uses_anonymous_args = 0
 3507 0000 80B5     		push	{r7, lr}
 3508              		.cfi_def_cfa_offset 8
 3509              		.cfi_offset 7, -8
 3510              		.cfi_offset 14, -4
 3511 0002 82B0     		sub	sp, sp, #8
 3512              		.cfi_def_cfa_offset 16
 3513 0004 00AF     		add	r7, sp, #0
 3514              		.cfi_def_cfa_register 7
 3515 0006 7860     		str	r0, [r7, #4]
 3516 0008 3960     		str	r1, [r7]
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     while (size > 0UL)
 3517              		.loc 3 1020 0
 3518 000a 05E0     		b	.L236
 3519              	.L237:
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     {
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         (void) Cy_SCB_SPI_Read(base);
 3520              		.loc 3 1022 0
 3521 000c 7868     		ldr	r0, [r7, #4]
 3522 000e FFF7FEFF 		bl	Cy_SCB_SPI_Read
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****         --size;
 3523              		.loc 3 1023 0
 3524 0012 3B68     		ldr	r3, [r7]
 3525 0014 013B     		subs	r3, r3, #1
 3526 0016 3B60     		str	r3, [r7]
 3527              	.L236:
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     while (size > 0UL)
 3528              		.loc 3 1020 0
 3529 0018 3B68     		ldr	r3, [r7]
 3530 001a 002B     		cmp	r3, #0
 3531 001c F6D1     		bne	.L237
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c ****     }
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_spi.c **** }
 3532              		.loc 3 1025 0
 3533 001e 00BF     		nop
 3534 0020 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 140


 3535              		.cfi_def_cfa_offset 8
 3536 0022 BD46     		mov	sp, r7
 3537              		.cfi_def_cfa_register 13
 3538              		@ sp needed
 3539 0024 80BD     		pop	{r7, pc}
 3540              		.cfi_endproc
 3541              	.LFE252:
 3542              		.size	DiscardArrayNoCheck, .-DiscardArrayNoCheck
 3543 0026 00BF     		.text
 3544              	.Letext0:
 3545              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3546              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 3547              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 3548              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_scb.h"
 3549              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 3550              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 3551              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 3552              		.file 11 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 3553              		.section	.debug_info,"",%progbits
 3554              	.Ldebug_info0:
 3555 0000 D4170000 		.4byte	0x17d4
 3556 0004 0400     		.2byte	0x4
 3557 0006 00000000 		.4byte	.Ldebug_abbrev0
 3558 000a 04       		.byte	0x4
 3559 000b 01       		.uleb128 0x1
 3560 000c 72130000 		.4byte	.LASF313
 3561 0010 0C       		.byte	0xc
 3562 0011 4C010000 		.4byte	.LASF314
 3563 0015 91040000 		.4byte	.LASF315
 3564 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3565 001d 00000000 		.4byte	0
 3566 0021 00000000 		.4byte	.Ldebug_line0
 3567 0025 02       		.uleb128 0x2
 3568 0026 01       		.byte	0x1
 3569 0027 06       		.byte	0x6
 3570 0028 32120000 		.4byte	.LASF0
 3571 002c 03       		.uleb128 0x3
 3572 002d A90E0000 		.4byte	.LASF2
 3573 0031 04       		.byte	0x4
 3574 0032 1D       		.byte	0x1d
 3575 0033 37000000 		.4byte	0x37
 3576 0037 02       		.uleb128 0x2
 3577 0038 01       		.byte	0x1
 3578 0039 08       		.byte	0x8
 3579 003a 67100000 		.4byte	.LASF1
 3580 003e 03       		.uleb128 0x3
 3581 003f 9F0A0000 		.4byte	.LASF3
 3582 0043 04       		.byte	0x4
 3583 0044 29       		.byte	0x29
 3584 0045 49000000 		.4byte	0x49
 3585 0049 02       		.uleb128 0x2
 3586 004a 02       		.byte	0x2
 3587 004b 05       		.byte	0x5
 3588 004c EA090000 		.4byte	.LASF4
 3589 0050 03       		.uleb128 0x3
 3590 0051 96060000 		.4byte	.LASF5
 3591 0055 04       		.byte	0x4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 141


 3592 0056 2B       		.byte	0x2b
 3593 0057 5B000000 		.4byte	0x5b
 3594 005b 02       		.uleb128 0x2
 3595 005c 02       		.byte	0x2
 3596 005d 07       		.byte	0x7
 3597 005e 090C0000 		.4byte	.LASF6
 3598 0062 03       		.uleb128 0x3
 3599 0063 8B020000 		.4byte	.LASF7
 3600 0067 04       		.byte	0x4
 3601 0068 3F       		.byte	0x3f
 3602 0069 6D000000 		.4byte	0x6d
 3603 006d 02       		.uleb128 0x2
 3604 006e 04       		.byte	0x4
 3605 006f 05       		.byte	0x5
 3606 0070 9D0D0000 		.4byte	.LASF8
 3607 0074 03       		.uleb128 0x3
 3608 0075 A0100000 		.4byte	.LASF9
 3609 0079 04       		.byte	0x4
 3610 007a 41       		.byte	0x41
 3611 007b 7F000000 		.4byte	0x7f
 3612 007f 02       		.uleb128 0x2
 3613 0080 04       		.byte	0x4
 3614 0081 07       		.byte	0x7
 3615 0082 820F0000 		.4byte	.LASF10
 3616 0086 02       		.uleb128 0x2
 3617 0087 08       		.byte	0x8
 3618 0088 05       		.byte	0x5
 3619 0089 490A0000 		.4byte	.LASF11
 3620 008d 02       		.uleb128 0x2
 3621 008e 08       		.byte	0x8
 3622 008f 07       		.byte	0x7
 3623 0090 2F060000 		.4byte	.LASF12
 3624 0094 04       		.uleb128 0x4
 3625 0095 04       		.byte	0x4
 3626 0096 05       		.byte	0x5
 3627 0097 696E7400 		.ascii	"int\000"
 3628 009b 02       		.uleb128 0x2
 3629 009c 04       		.byte	0x4
 3630 009d 07       		.byte	0x7
 3631 009e 28020000 		.4byte	.LASF13
 3632 00a2 03       		.uleb128 0x3
 3633 00a3 AC090000 		.4byte	.LASF14
 3634 00a7 05       		.byte	0x5
 3635 00a8 18       		.byte	0x18
 3636 00a9 2C000000 		.4byte	0x2c
 3637 00ad 03       		.uleb128 0x3
 3638 00ae 02060000 		.4byte	.LASF15
 3639 00b2 05       		.byte	0x5
 3640 00b3 20       		.byte	0x20
 3641 00b4 3E000000 		.4byte	0x3e
 3642 00b8 03       		.uleb128 0x3
 3643 00b9 5A0C0000 		.4byte	.LASF16
 3644 00bd 05       		.byte	0x5
 3645 00be 24       		.byte	0x24
 3646 00bf 50000000 		.4byte	0x50
 3647 00c3 03       		.uleb128 0x3
 3648 00c4 C70F0000 		.4byte	.LASF17
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 142


 3649 00c8 05       		.byte	0x5
 3650 00c9 2C       		.byte	0x2c
 3651 00ca 62000000 		.4byte	0x62
 3652 00ce 03       		.uleb128 0x3
 3653 00cf 56050000 		.4byte	.LASF18
 3654 00d3 05       		.byte	0x5
 3655 00d4 30       		.byte	0x30
 3656 00d5 74000000 		.4byte	0x74
 3657 00d9 02       		.uleb128 0x2
 3658 00da 08       		.byte	0x8
 3659 00db 04       		.byte	0x4
 3660 00dc 4E0C0000 		.4byte	.LASF19
 3661 00e0 05       		.uleb128 0x5
 3662 00e1 CE000000 		.4byte	0xce
 3663 00e5 06       		.uleb128 0x6
 3664 00e6 E0000000 		.4byte	0xe0
 3665 00ea 07       		.uleb128 0x7
 3666 00eb E5000000 		.4byte	0xe5
 3667 00ef FA000000 		.4byte	0xfa
 3668 00f3 08       		.uleb128 0x8
 3669 00f4 FA000000 		.4byte	0xfa
 3670 00f8 02       		.byte	0x2
 3671 00f9 00       		.byte	0
 3672 00fa 02       		.uleb128 0x2
 3673 00fb 04       		.byte	0x4
 3674 00fc 07       		.byte	0x7
 3675 00fd E40C0000 		.4byte	.LASF20
 3676 0101 07       		.uleb128 0x7
 3677 0102 E5000000 		.4byte	0xe5
 3678 0106 11010000 		.4byte	0x111
 3679 010a 08       		.uleb128 0x8
 3680 010b FA000000 		.4byte	0xfa
 3681 010f 03       		.byte	0x3
 3682 0110 00       		.byte	0
 3683 0111 07       		.uleb128 0x7
 3684 0112 E5000000 		.4byte	0xe5
 3685 0116 21010000 		.4byte	0x121
 3686 011a 08       		.uleb128 0x8
 3687 011b FA000000 		.4byte	0xfa
 3688 011f 0C       		.byte	0xc
 3689 0120 00       		.byte	0
 3690 0121 07       		.uleb128 0x7
 3691 0122 E5000000 		.4byte	0xe5
 3692 0126 31010000 		.4byte	0x131
 3693 012a 08       		.uleb128 0x8
 3694 012b FA000000 		.4byte	0xfa
 3695 012f 0B       		.byte	0xb
 3696 0130 00       		.byte	0
 3697 0131 07       		.uleb128 0x7
 3698 0132 E5000000 		.4byte	0xe5
 3699 0136 41010000 		.4byte	0x141
 3700 013a 08       		.uleb128 0x8
 3701 013b FA000000 		.4byte	0xfa
 3702 013f 1E       		.byte	0x1e
 3703 0140 00       		.byte	0
 3704 0141 07       		.uleb128 0x7
 3705 0142 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 143


 3706 0146 51010000 		.4byte	0x151
 3707 014a 08       		.uleb128 0x8
 3708 014b FA000000 		.4byte	0xfa
 3709 014f 05       		.byte	0x5
 3710 0150 00       		.byte	0
 3711 0151 07       		.uleb128 0x7
 3712 0152 E5000000 		.4byte	0xe5
 3713 0156 61010000 		.4byte	0x161
 3714 015a 08       		.uleb128 0x8
 3715 015b FA000000 		.4byte	0xfa
 3716 015f 7F       		.byte	0x7f
 3717 0160 00       		.byte	0
 3718 0161 09       		.uleb128 0x9
 3719 0162 B8       		.byte	0xb8
 3720 0163 06       		.byte	0x6
 3721 0164 34       		.byte	0x34
 3722 0165 72050000 		.4byte	0x572
 3723 0169 0A       		.uleb128 0xa
 3724 016a EE020000 		.4byte	.LASF21
 3725 016e 06       		.byte	0x6
 3726 016f 37       		.byte	0x37
 3727 0170 CE000000 		.4byte	0xce
 3728 0174 00       		.byte	0
 3729 0175 0A       		.uleb128 0xa
 3730 0176 FF080000 		.4byte	.LASF22
 3731 017a 06       		.byte	0x6
 3732 017b 38       		.byte	0x38
 3733 017c CE000000 		.4byte	0xce
 3734 0180 04       		.byte	0x4
 3735 0181 0A       		.uleb128 0xa
 3736 0182 29010000 		.4byte	.LASF23
 3737 0186 06       		.byte	0x6
 3738 0187 39       		.byte	0x39
 3739 0188 CE000000 		.4byte	0xce
 3740 018c 08       		.byte	0x8
 3741 018d 0A       		.uleb128 0xa
 3742 018e EF000000 		.4byte	.LASF24
 3743 0192 06       		.byte	0x6
 3744 0193 3A       		.byte	0x3a
 3745 0194 CE000000 		.4byte	0xce
 3746 0198 0C       		.byte	0xc
 3747 0199 0A       		.uleb128 0xa
 3748 019a 740C0000 		.4byte	.LASF25
 3749 019e 06       		.byte	0x6
 3750 019f 3B       		.byte	0x3b
 3751 01a0 CE000000 		.4byte	0xce
 3752 01a4 10       		.byte	0x10
 3753 01a5 0A       		.uleb128 0xa
 3754 01a6 B80A0000 		.4byte	.LASF26
 3755 01aa 06       		.byte	0x6
 3756 01ab 3C       		.byte	0x3c
 3757 01ac CE000000 		.4byte	0xce
 3758 01b0 14       		.byte	0x14
 3759 01b1 0A       		.uleb128 0xa
 3760 01b2 C0070000 		.4byte	.LASF27
 3761 01b6 06       		.byte	0x6
 3762 01b7 3D       		.byte	0x3d
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 144


 3763 01b8 CE000000 		.4byte	0xce
 3764 01bc 18       		.byte	0x18
 3765 01bd 0A       		.uleb128 0xa
 3766 01be CC120000 		.4byte	.LASF28
 3767 01c2 06       		.byte	0x6
 3768 01c3 3E       		.byte	0x3e
 3769 01c4 CE000000 		.4byte	0xce
 3770 01c8 1C       		.byte	0x1c
 3771 01c9 0A       		.uleb128 0xa
 3772 01ca 570A0000 		.4byte	.LASF29
 3773 01ce 06       		.byte	0x6
 3774 01cf 3F       		.byte	0x3f
 3775 01d0 CE000000 		.4byte	0xce
 3776 01d4 20       		.byte	0x20
 3777 01d5 0A       		.uleb128 0xa
 3778 01d6 6E0A0000 		.4byte	.LASF30
 3779 01da 06       		.byte	0x6
 3780 01db 40       		.byte	0x40
 3781 01dc CE000000 		.4byte	0xce
 3782 01e0 24       		.byte	0x24
 3783 01e1 0A       		.uleb128 0xa
 3784 01e2 A60D0000 		.4byte	.LASF31
 3785 01e6 06       		.byte	0x6
 3786 01e7 43       		.byte	0x43
 3787 01e8 A2000000 		.4byte	0xa2
 3788 01ec 28       		.byte	0x28
 3789 01ed 0A       		.uleb128 0xa
 3790 01ee AC050000 		.4byte	.LASF32
 3791 01f2 06       		.byte	0x6
 3792 01f3 44       		.byte	0x44
 3793 01f4 A2000000 		.4byte	0xa2
 3794 01f8 29       		.byte	0x29
 3795 01f9 0A       		.uleb128 0xa
 3796 01fa BA0C0000 		.4byte	.LASF33
 3797 01fe 06       		.byte	0x6
 3798 01ff 45       		.byte	0x45
 3799 0200 A2000000 		.4byte	0xa2
 3800 0204 2A       		.byte	0x2a
 3801 0205 0A       		.uleb128 0xa
 3802 0206 DE0D0000 		.4byte	.LASF34
 3803 020a 06       		.byte	0x6
 3804 020b 46       		.byte	0x46
 3805 020c A2000000 		.4byte	0xa2
 3806 0210 2B       		.byte	0x2b
 3807 0211 0A       		.uleb128 0xa
 3808 0212 BE0D0000 		.4byte	.LASF35
 3809 0216 06       		.byte	0x6
 3810 0217 47       		.byte	0x47
 3811 0218 A2000000 		.4byte	0xa2
 3812 021c 2C       		.byte	0x2c
 3813 021d 0A       		.uleb128 0xa
 3814 021e 750F0000 		.4byte	.LASF36
 3815 0222 06       		.byte	0x6
 3816 0223 48       		.byte	0x48
 3817 0224 A2000000 		.4byte	0xa2
 3818 0228 2D       		.byte	0x2d
 3819 0229 0A       		.uleb128 0xa
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 145


 3820 022a 62140000 		.4byte	.LASF37
 3821 022e 06       		.byte	0x6
 3822 022f 49       		.byte	0x49
 3823 0230 A2000000 		.4byte	0xa2
 3824 0234 2E       		.byte	0x2e
 3825 0235 0A       		.uleb128 0xa
 3826 0236 B9120000 		.4byte	.LASF38
 3827 023a 06       		.byte	0x6
 3828 023b 4A       		.byte	0x4a
 3829 023c A2000000 		.4byte	0xa2
 3830 0240 2F       		.byte	0x2f
 3831 0241 0A       		.uleb128 0xa
 3832 0242 E4030000 		.4byte	.LASF39
 3833 0246 06       		.byte	0x6
 3834 0247 4B       		.byte	0x4b
 3835 0248 A2000000 		.4byte	0xa2
 3836 024c 30       		.byte	0x30
 3837 024d 0A       		.uleb128 0xa
 3838 024e 6A0B0000 		.4byte	.LASF40
 3839 0252 06       		.byte	0x6
 3840 0253 4E       		.byte	0x4e
 3841 0254 A2000000 		.4byte	0xa2
 3842 0258 31       		.byte	0x31
 3843 0259 0A       		.uleb128 0xa
 3844 025a 53120000 		.4byte	.LASF41
 3845 025e 06       		.byte	0x6
 3846 025f 4F       		.byte	0x4f
 3847 0260 A2000000 		.4byte	0xa2
 3848 0264 32       		.byte	0x32
 3849 0265 0A       		.uleb128 0xa
 3850 0266 2A0B0000 		.4byte	.LASF42
 3851 026a 06       		.byte	0x6
 3852 026b 50       		.byte	0x50
 3853 026c A2000000 		.4byte	0xa2
 3854 0270 33       		.byte	0x33
 3855 0271 0A       		.uleb128 0xa
 3856 0272 6D020000 		.4byte	.LASF43
 3857 0276 06       		.byte	0x6
 3858 0277 51       		.byte	0x51
 3859 0278 A2000000 		.4byte	0xa2
 3860 027c 34       		.byte	0x34
 3861 027d 0A       		.uleb128 0xa
 3862 027e 6F060000 		.4byte	.LASF44
 3863 0282 06       		.byte	0x6
 3864 0283 52       		.byte	0x52
 3865 0284 AD000000 		.4byte	0xad
 3866 0288 36       		.byte	0x36
 3867 0289 0A       		.uleb128 0xa
 3868 028a 69030000 		.4byte	.LASF45
 3869 028e 06       		.byte	0x6
 3870 028f 53       		.byte	0x53
 3871 0290 AD000000 		.4byte	0xad
 3872 0294 38       		.byte	0x38
 3873 0295 0A       		.uleb128 0xa
 3874 0296 FC0A0000 		.4byte	.LASF46
 3875 029a 06       		.byte	0x6
 3876 029b 54       		.byte	0x54
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 146


 3877 029c AD000000 		.4byte	0xad
 3878 02a0 3A       		.byte	0x3a
 3879 02a1 0A       		.uleb128 0xa
 3880 02a2 01130000 		.4byte	.LASF47
 3881 02a6 06       		.byte	0x6
 3882 02a7 55       		.byte	0x55
 3883 02a8 A2000000 		.4byte	0xa2
 3884 02ac 3C       		.byte	0x3c
 3885 02ad 0A       		.uleb128 0xa
 3886 02ae 25070000 		.4byte	.LASF48
 3887 02b2 06       		.byte	0x6
 3888 02b3 56       		.byte	0x56
 3889 02b4 A2000000 		.4byte	0xa2
 3890 02b8 3D       		.byte	0x3d
 3891 02b9 0A       		.uleb128 0xa
 3892 02ba AC0C0000 		.4byte	.LASF49
 3893 02be 06       		.byte	0x6
 3894 02bf 57       		.byte	0x57
 3895 02c0 A2000000 		.4byte	0xa2
 3896 02c4 3E       		.byte	0x3e
 3897 02c5 0A       		.uleb128 0xa
 3898 02c6 BB000000 		.4byte	.LASF50
 3899 02ca 06       		.byte	0x6
 3900 02cb 58       		.byte	0x58
 3901 02cc A2000000 		.4byte	0xa2
 3902 02d0 3F       		.byte	0x3f
 3903 02d1 0A       		.uleb128 0xa
 3904 02d2 40020000 		.4byte	.LASF51
 3905 02d6 06       		.byte	0x6
 3906 02d7 59       		.byte	0x59
 3907 02d8 A2000000 		.4byte	0xa2
 3908 02dc 40       		.byte	0x40
 3909 02dd 0A       		.uleb128 0xa
 3910 02de B20B0000 		.4byte	.LASF52
 3911 02e2 06       		.byte	0x6
 3912 02e3 5A       		.byte	0x5a
 3913 02e4 A2000000 		.4byte	0xa2
 3914 02e8 41       		.byte	0x41
 3915 02e9 0A       		.uleb128 0xa
 3916 02ea F4110000 		.4byte	.LASF53
 3917 02ee 06       		.byte	0x6
 3918 02ef 5B       		.byte	0x5b
 3919 02f0 A2000000 		.4byte	0xa2
 3920 02f4 42       		.byte	0x42
 3921 02f5 0A       		.uleb128 0xa
 3922 02f6 0F080000 		.4byte	.LASF54
 3923 02fa 06       		.byte	0x6
 3924 02fb 5C       		.byte	0x5c
 3925 02fc A2000000 		.4byte	0xa2
 3926 0300 43       		.byte	0x43
 3927 0301 0A       		.uleb128 0xa
 3928 0302 29090000 		.4byte	.LASF55
 3929 0306 06       		.byte	0x6
 3930 0307 5D       		.byte	0x5d
 3931 0308 A2000000 		.4byte	0xa2
 3932 030c 44       		.byte	0x44
 3933 030d 0A       		.uleb128 0xa
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 147


 3934 030e EC0D0000 		.4byte	.LASF56
 3935 0312 06       		.byte	0x6
 3936 0313 5E       		.byte	0x5e
 3937 0314 CE000000 		.4byte	0xce
 3938 0318 48       		.byte	0x48
 3939 0319 0A       		.uleb128 0xa
 3940 031a 97030000 		.4byte	.LASF57
 3941 031e 06       		.byte	0x6
 3942 031f 5F       		.byte	0x5f
 3943 0320 CE000000 		.4byte	0xce
 3944 0324 4C       		.byte	0x4c
 3945 0325 0A       		.uleb128 0xa
 3946 0326 C6110000 		.4byte	.LASF58
 3947 032a 06       		.byte	0x6
 3948 032b 60       		.byte	0x60
 3949 032c A2000000 		.4byte	0xa2
 3950 0330 50       		.byte	0x50
 3951 0331 0A       		.uleb128 0xa
 3952 0332 3C070000 		.4byte	.LASF59
 3953 0336 06       		.byte	0x6
 3954 0337 61       		.byte	0x61
 3955 0338 A2000000 		.4byte	0xa2
 3956 033c 51       		.byte	0x51
 3957 033d 0A       		.uleb128 0xa
 3958 033e 870A0000 		.4byte	.LASF60
 3959 0342 06       		.byte	0x6
 3960 0343 62       		.byte	0x62
 3961 0344 A2000000 		.4byte	0xa2
 3962 0348 52       		.byte	0x52
 3963 0349 0A       		.uleb128 0xa
 3964 034a C8050000 		.4byte	.LASF61
 3965 034e 06       		.byte	0x6
 3966 034f 63       		.byte	0x63
 3967 0350 A2000000 		.4byte	0xa2
 3968 0354 53       		.byte	0x53
 3969 0355 0A       		.uleb128 0xa
 3970 0356 C8060000 		.4byte	.LASF62
 3971 035a 06       		.byte	0x6
 3972 035b 64       		.byte	0x64
 3973 035c A2000000 		.4byte	0xa2
 3974 0360 54       		.byte	0x54
 3975 0361 0A       		.uleb128 0xa
 3976 0362 9F070000 		.4byte	.LASF63
 3977 0366 06       		.byte	0x6
 3978 0367 65       		.byte	0x65
 3979 0368 A2000000 		.4byte	0xa2
 3980 036c 55       		.byte	0x55
 3981 036d 0A       		.uleb128 0xa
 3982 036e 00000000 		.4byte	.LASF64
 3983 0372 06       		.byte	0x6
 3984 0373 66       		.byte	0x66
 3985 0374 A2000000 		.4byte	0xa2
 3986 0378 56       		.byte	0x56
 3987 0379 0A       		.uleb128 0xa
 3988 037a D5120000 		.4byte	.LASF65
 3989 037e 06       		.byte	0x6
 3990 037f 67       		.byte	0x67
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 148


 3991 0380 A2000000 		.4byte	0xa2
 3992 0384 57       		.byte	0x57
 3993 0385 0A       		.uleb128 0xa
 3994 0386 11070000 		.4byte	.LASF66
 3995 038a 06       		.byte	0x6
 3996 038b 68       		.byte	0x68
 3997 038c A2000000 		.4byte	0xa2
 3998 0390 58       		.byte	0x58
 3999 0391 0A       		.uleb128 0xa
 4000 0392 2A130000 		.4byte	.LASF67
 4001 0396 06       		.byte	0x6
 4002 0397 69       		.byte	0x69
 4003 0398 A2000000 		.4byte	0xa2
 4004 039c 59       		.byte	0x59
 4005 039d 0A       		.uleb128 0xa
 4006 039e 3E120000 		.4byte	.LASF68
 4007 03a2 06       		.byte	0x6
 4008 03a3 6E       		.byte	0x6e
 4009 03a4 B8000000 		.4byte	0xb8
 4010 03a8 5A       		.byte	0x5a
 4011 03a9 0A       		.uleb128 0xa
 4012 03aa D2010000 		.4byte	.LASF69
 4013 03ae 06       		.byte	0x6
 4014 03af 6F       		.byte	0x6f
 4015 03b0 B8000000 		.4byte	0xb8
 4016 03b4 5C       		.byte	0x5c
 4017 03b5 0A       		.uleb128 0xa
 4018 03b6 5F0A0000 		.4byte	.LASF70
 4019 03ba 06       		.byte	0x6
 4020 03bb 70       		.byte	0x70
 4021 03bc A2000000 		.4byte	0xa2
 4022 03c0 5E       		.byte	0x5e
 4023 03c1 0A       		.uleb128 0xa
 4024 03c2 6E120000 		.4byte	.LASF71
 4025 03c6 06       		.byte	0x6
 4026 03c7 71       		.byte	0x71
 4027 03c8 A2000000 		.4byte	0xa2
 4028 03cc 5F       		.byte	0x5f
 4029 03cd 0A       		.uleb128 0xa
 4030 03ce 22080000 		.4byte	.LASF72
 4031 03d2 06       		.byte	0x6
 4032 03d3 72       		.byte	0x72
 4033 03d4 A2000000 		.4byte	0xa2
 4034 03d8 60       		.byte	0x60
 4035 03d9 0A       		.uleb128 0xa
 4036 03da 88090000 		.4byte	.LASF73
 4037 03de 06       		.byte	0x6
 4038 03df 73       		.byte	0x73
 4039 03e0 CE000000 		.4byte	0xce
 4040 03e4 64       		.byte	0x64
 4041 03e5 0A       		.uleb128 0xa
 4042 03e6 6D140000 		.4byte	.LASF74
 4043 03ea 06       		.byte	0x6
 4044 03eb 76       		.byte	0x76
 4045 03ec B8000000 		.4byte	0xb8
 4046 03f0 68       		.byte	0x68
 4047 03f1 0A       		.uleb128 0xa
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 149


 4048 03f2 7D0C0000 		.4byte	.LASF75
 4049 03f6 06       		.byte	0x6
 4050 03f7 77       		.byte	0x77
 4051 03f8 B8000000 		.4byte	0xb8
 4052 03fc 6A       		.byte	0x6a
 4053 03fd 0A       		.uleb128 0xa
 4054 03fe ED0A0000 		.4byte	.LASF76
 4055 0402 06       		.byte	0x6
 4056 0403 78       		.byte	0x78
 4057 0404 B8000000 		.4byte	0xb8
 4058 0408 6C       		.byte	0x6c
 4059 0409 0A       		.uleb128 0xa
 4060 040a 74030000 		.4byte	.LASF77
 4061 040e 06       		.byte	0x6
 4062 040f 79       		.byte	0x79
 4063 0410 B8000000 		.4byte	0xb8
 4064 0414 6E       		.byte	0x6e
 4065 0415 0A       		.uleb128 0xa
 4066 0416 BB090000 		.4byte	.LASF78
 4067 041a 06       		.byte	0x6
 4068 041b 7B       		.byte	0x7b
 4069 041c A2000000 		.4byte	0xa2
 4070 0420 70       		.byte	0x70
 4071 0421 0A       		.uleb128 0xa
 4072 0422 11040000 		.4byte	.LASF79
 4073 0426 06       		.byte	0x6
 4074 0427 7C       		.byte	0x7c
 4075 0428 A2000000 		.4byte	0xa2
 4076 042c 71       		.byte	0x71
 4077 042d 0A       		.uleb128 0xa
 4078 042e 81030000 		.4byte	.LASF80
 4079 0432 06       		.byte	0x6
 4080 0433 7D       		.byte	0x7d
 4081 0434 A2000000 		.4byte	0xa2
 4082 0438 72       		.byte	0x72
 4083 0439 0A       		.uleb128 0xa
 4084 043a 4D020000 		.4byte	.LASF81
 4085 043e 06       		.byte	0x6
 4086 043f 7E       		.byte	0x7e
 4087 0440 A2000000 		.4byte	0xa2
 4088 0444 73       		.byte	0x73
 4089 0445 0A       		.uleb128 0xa
 4090 0446 1F0D0000 		.4byte	.LASF82
 4091 044a 06       		.byte	0x6
 4092 044b 80       		.byte	0x80
 4093 044c B8000000 		.4byte	0xb8
 4094 0450 74       		.byte	0x74
 4095 0451 0A       		.uleb128 0xa
 4096 0452 F60B0000 		.4byte	.LASF83
 4097 0456 06       		.byte	0x6
 4098 0457 81       		.byte	0x81
 4099 0458 B8000000 		.4byte	0xb8
 4100 045c 76       		.byte	0x76
 4101 045d 0A       		.uleb128 0xa
 4102 045e F4090000 		.4byte	.LASF84
 4103 0462 06       		.byte	0x6
 4104 0463 82       		.byte	0x82
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 150


 4105 0464 B8000000 		.4byte	0xb8
 4106 0468 78       		.byte	0x78
 4107 0469 0A       		.uleb128 0xa
 4108 046a 46060000 		.4byte	.LASF85
 4109 046e 06       		.byte	0x6
 4110 046f 83       		.byte	0x83
 4111 0470 B8000000 		.4byte	0xb8
 4112 0474 7A       		.byte	0x7a
 4113 0475 0A       		.uleb128 0xa
 4114 0476 100F0000 		.4byte	.LASF86
 4115 047a 06       		.byte	0x6
 4116 047b 86       		.byte	0x86
 4117 047c A2000000 		.4byte	0xa2
 4118 0480 7C       		.byte	0x7c
 4119 0481 0A       		.uleb128 0xa
 4120 0482 BF100000 		.4byte	.LASF87
 4121 0486 06       		.byte	0x6
 4122 0487 87       		.byte	0x87
 4123 0488 A2000000 		.4byte	0xa2
 4124 048c 7D       		.byte	0x7d
 4125 048d 0A       		.uleb128 0xa
 4126 048e 0A060000 		.4byte	.LASF88
 4127 0492 06       		.byte	0x6
 4128 0493 88       		.byte	0x88
 4129 0494 A2000000 		.4byte	0xa2
 4130 0498 7E       		.byte	0x7e
 4131 0499 0A       		.uleb128 0xa
 4132 049a 7D050000 		.4byte	.LASF89
 4133 049e 06       		.byte	0x6
 4134 049f 89       		.byte	0x89
 4135 04a0 A2000000 		.4byte	0xa2
 4136 04a4 7F       		.byte	0x7f
 4137 04a5 0A       		.uleb128 0xa
 4138 04a6 5B060000 		.4byte	.LASF90
 4139 04aa 06       		.byte	0x6
 4140 04ab 8A       		.byte	0x8a
 4141 04ac A2000000 		.4byte	0xa2
 4142 04b0 80       		.byte	0x80
 4143 04b1 0A       		.uleb128 0xa
 4144 04b2 A4000000 		.4byte	.LASF91
 4145 04b6 06       		.byte	0x6
 4146 04b7 8D       		.byte	0x8d
 4147 04b8 CE000000 		.4byte	0xce
 4148 04bc 84       		.byte	0x84
 4149 04bd 0A       		.uleb128 0xa
 4150 04be D60A0000 		.4byte	.LASF92
 4151 04c2 06       		.byte	0x6
 4152 04c3 8E       		.byte	0x8e
 4153 04c4 CE000000 		.4byte	0xce
 4154 04c8 88       		.byte	0x88
 4155 04c9 0A       		.uleb128 0xa
 4156 04ca 840B0000 		.4byte	.LASF93
 4157 04ce 06       		.byte	0x6
 4158 04cf 8F       		.byte	0x8f
 4159 04d0 CE000000 		.4byte	0xce
 4160 04d4 8C       		.byte	0x8c
 4161 04d5 0A       		.uleb128 0xa
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 151


 4162 04d6 F90F0000 		.4byte	.LASF94
 4163 04da 06       		.byte	0x6
 4164 04db 90       		.byte	0x90
 4165 04dc CE000000 		.4byte	0xce
 4166 04e0 90       		.byte	0x90
 4167 04e1 0A       		.uleb128 0xa
 4168 04e2 940E0000 		.4byte	.LASF95
 4169 04e6 06       		.byte	0x6
 4170 04e7 91       		.byte	0x91
 4171 04e8 CE000000 		.4byte	0xce
 4172 04ec 94       		.byte	0x94
 4173 04ed 0A       		.uleb128 0xa
 4174 04ee 26040000 		.4byte	.LASF96
 4175 04f2 06       		.byte	0x6
 4176 04f3 92       		.byte	0x92
 4177 04f4 CE000000 		.4byte	0xce
 4178 04f8 98       		.byte	0x98
 4179 04f9 0A       		.uleb128 0xa
 4180 04fa 560F0000 		.4byte	.LASF97
 4181 04fe 06       		.byte	0x6
 4182 04ff 93       		.byte	0x93
 4183 0500 CE000000 		.4byte	0xce
 4184 0504 9C       		.byte	0x9c
 4185 0505 0A       		.uleb128 0xa
 4186 0506 F9070000 		.4byte	.LASF98
 4187 050a 06       		.byte	0x6
 4188 050b 94       		.byte	0x94
 4189 050c CE000000 		.4byte	0xce
 4190 0510 A0       		.byte	0xa0
 4191 0511 0A       		.uleb128 0xa
 4192 0512 A5010000 		.4byte	.LASF99
 4193 0516 06       		.byte	0x6
 4194 0517 95       		.byte	0x95
 4195 0518 B8000000 		.4byte	0xb8
 4196 051c A4       		.byte	0xa4
 4197 051d 0A       		.uleb128 0xa
 4198 051e 010D0000 		.4byte	.LASF100
 4199 0522 06       		.byte	0x6
 4200 0523 96       		.byte	0x96
 4201 0524 B8000000 		.4byte	0xb8
 4202 0528 A6       		.byte	0xa6
 4203 0529 0A       		.uleb128 0xa
 4204 052a B40F0000 		.4byte	.LASF101
 4205 052e 06       		.byte	0x6
 4206 052f 97       		.byte	0x97
 4207 0530 B8000000 		.4byte	0xb8
 4208 0534 A8       		.byte	0xa8
 4209 0535 0A       		.uleb128 0xa
 4210 0536 3B0A0000 		.4byte	.LASF102
 4211 053a 06       		.byte	0x6
 4212 053b 98       		.byte	0x98
 4213 053c B8000000 		.4byte	0xb8
 4214 0540 AA       		.byte	0xaa
 4215 0541 0A       		.uleb128 0xa
 4216 0542 AA030000 		.4byte	.LASF103
 4217 0546 06       		.byte	0x6
 4218 0547 99       		.byte	0x99
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 152


 4219 0548 B8000000 		.4byte	0xb8
 4220 054c AC       		.byte	0xac
 4221 054d 0A       		.uleb128 0xa
 4222 054e C20B0000 		.4byte	.LASF104
 4223 0552 06       		.byte	0x6
 4224 0553 9A       		.byte	0x9a
 4225 0554 B8000000 		.4byte	0xb8
 4226 0558 AE       		.byte	0xae
 4227 0559 0A       		.uleb128 0xa
 4228 055a B8030000 		.4byte	.LASF105
 4229 055e 06       		.byte	0x6
 4230 055f 9D       		.byte	0x9d
 4231 0560 B8000000 		.4byte	0xb8
 4232 0564 B0       		.byte	0xb0
 4233 0565 0A       		.uleb128 0xa
 4234 0566 AB100000 		.4byte	.LASF106
 4235 056a 06       		.byte	0x6
 4236 056b 9E       		.byte	0x9e
 4237 056c CE000000 		.4byte	0xce
 4238 0570 B4       		.byte	0xb4
 4239 0571 00       		.byte	0
 4240 0572 03       		.uleb128 0x3
 4241 0573 92120000 		.4byte	.LASF107
 4242 0577 06       		.byte	0x6
 4243 0578 9F       		.byte	0x9f
 4244 0579 61010000 		.4byte	0x161
 4245 057d 07       		.uleb128 0x7
 4246 057e E5000000 		.4byte	0xe5
 4247 0582 8D050000 		.4byte	0x58d
 4248 0586 08       		.uleb128 0x8
 4249 0587 FA000000 		.4byte	0xfa
 4250 058b 0A       		.byte	0xa
 4251 058c 00       		.byte	0
 4252 058d 07       		.uleb128 0x7
 4253 058e E5000000 		.4byte	0xe5
 4254 0592 9D050000 		.4byte	0x59d
 4255 0596 08       		.uleb128 0x8
 4256 0597 FA000000 		.4byte	0xfa
 4257 059b 2E       		.byte	0x2e
 4258 059c 00       		.byte	0
 4259 059d 07       		.uleb128 0x7
 4260 059e E5000000 		.4byte	0xe5
 4261 05a2 AD050000 		.4byte	0x5ad
 4262 05a6 08       		.uleb128 0x8
 4263 05a7 FA000000 		.4byte	0xfa
 4264 05ab 2D       		.byte	0x2d
 4265 05ac 00       		.byte	0
 4266 05ad 07       		.uleb128 0x7
 4267 05ae E0000000 		.4byte	0xe0
 4268 05b2 BE050000 		.4byte	0x5be
 4269 05b6 0B       		.uleb128 0xb
 4270 05b7 FA000000 		.4byte	0xfa
 4271 05bb FF01     		.2byte	0x1ff
 4272 05bd 00       		.byte	0
 4273 05be 07       		.uleb128 0x7
 4274 05bf E5000000 		.4byte	0xe5
 4275 05c3 CE050000 		.4byte	0x5ce
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 153


 4276 05c7 08       		.uleb128 0x8
 4277 05c8 FA000000 		.4byte	0xfa
 4278 05cc 62       		.byte	0x62
 4279 05cd 00       		.byte	0
 4280 05ce 0C       		.uleb128 0xc
 4281 05cf D00F     		.2byte	0xfd0
 4282 05d1 07       		.byte	0x7
 4283 05d2 21       		.byte	0x21
 4284 05d3 38090000 		.4byte	0x938
 4285 05d7 0A       		.uleb128 0xa
 4286 05d8 87140000 		.4byte	.LASF108
 4287 05dc 07       		.byte	0x7
 4288 05dd 22       		.byte	0x22
 4289 05de E0000000 		.4byte	0xe0
 4290 05e2 00       		.byte	0
 4291 05e3 0A       		.uleb128 0xa
 4292 05e4 E6080000 		.4byte	.LASF109
 4293 05e8 07       		.byte	0x7
 4294 05e9 23       		.byte	0x23
 4295 05ea E5000000 		.4byte	0xe5
 4296 05ee 04       		.byte	0x4
 4297 05ef 0A       		.uleb128 0xa
 4298 05f0 84120000 		.4byte	.LASF110
 4299 05f4 07       		.byte	0x7
 4300 05f5 24       		.byte	0x24
 4301 05f6 E0000000 		.4byte	0xe0
 4302 05fa 08       		.byte	0x8
 4303 05fb 0A       		.uleb128 0xa
 4304 05fc F7000000 		.4byte	.LASF111
 4305 0600 07       		.byte	0x7
 4306 0601 25       		.byte	0x25
 4307 0602 E5000000 		.4byte	0xe5
 4308 0606 0C       		.byte	0xc
 4309 0607 0A       		.uleb128 0xa
 4310 0608 2F000000 		.4byte	.LASF112
 4311 060c 07       		.byte	0x7
 4312 060d 26       		.byte	0x26
 4313 060e 3D090000 		.4byte	0x93d
 4314 0612 10       		.byte	0x10
 4315 0613 0A       		.uleb128 0xa
 4316 0614 250F0000 		.4byte	.LASF113
 4317 0618 07       		.byte	0x7
 4318 0619 27       		.byte	0x27
 4319 061a E0000000 		.4byte	0xe0
 4320 061e 20       		.byte	0x20
 4321 061f 0A       		.uleb128 0xa
 4322 0620 0E100000 		.4byte	.LASF114
 4323 0624 07       		.byte	0x7
 4324 0625 28       		.byte	0x28
 4325 0626 E5000000 		.4byte	0xe5
 4326 062a 24       		.byte	0x24
 4327 062b 0A       		.uleb128 0xa
 4328 062c F8050000 		.4byte	.LASF115
 4329 0630 07       		.byte	0x7
 4330 0631 29       		.byte	0x29
 4331 0632 47090000 		.4byte	0x947
 4332 0636 28       		.byte	0x28
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 154


 4333 0637 0A       		.uleb128 0xa
 4334 0638 49120000 		.4byte	.LASF116
 4335 063c 07       		.byte	0x7
 4336 063d 2A       		.byte	0x2a
 4337 063e E0000000 		.4byte	0xe0
 4338 0642 40       		.byte	0x40
 4339 0643 0A       		.uleb128 0xa
 4340 0644 BB060000 		.4byte	.LASF117
 4341 0648 07       		.byte	0x7
 4342 0649 2B       		.byte	0x2b
 4343 064a E0000000 		.4byte	0xe0
 4344 064e 44       		.byte	0x44
 4345 064f 0A       		.uleb128 0xa
 4346 0650 F0030000 		.4byte	.LASF118
 4347 0654 07       		.byte	0x7
 4348 0655 2C       		.byte	0x2c
 4349 0656 E0000000 		.4byte	0xe0
 4350 065a 48       		.byte	0x48
 4351 065b 0A       		.uleb128 0xa
 4352 065c 680E0000 		.4byte	.LASF119
 4353 0660 07       		.byte	0x7
 4354 0661 2D       		.byte	0x2d
 4355 0662 E5000000 		.4byte	0xe5
 4356 0666 4C       		.byte	0x4c
 4357 0667 0A       		.uleb128 0xa
 4358 0668 A90A0000 		.4byte	.LASF120
 4359 066c 07       		.byte	0x7
 4360 066d 2E       		.byte	0x2e
 4361 066e E0000000 		.4byte	0xe0
 4362 0672 50       		.byte	0x50
 4363 0673 0A       		.uleb128 0xa
 4364 0674 310D0000 		.4byte	.LASF121
 4365 0678 07       		.byte	0x7
 4366 0679 2F       		.byte	0x2f
 4367 067a 51090000 		.4byte	0x951
 4368 067e 54       		.byte	0x54
 4369 067f 0A       		.uleb128 0xa
 4370 0680 6C0F0000 		.4byte	.LASF122
 4371 0684 07       		.byte	0x7
 4372 0685 30       		.byte	0x30
 4373 0686 E0000000 		.4byte	0xe0
 4374 068a 60       		.byte	0x60
 4375 068b 0A       		.uleb128 0xa
 4376 068c B30D0000 		.4byte	.LASF123
 4377 0690 07       		.byte	0x7
 4378 0691 31       		.byte	0x31
 4379 0692 E5000000 		.4byte	0xe5
 4380 0696 64       		.byte	0x64
 4381 0697 0A       		.uleb128 0xa
 4382 0698 F30E0000 		.4byte	.LASF124
 4383 069c 07       		.byte	0x7
 4384 069d 32       		.byte	0x32
 4385 069e E0000000 		.4byte	0xe0
 4386 06a2 68       		.byte	0x68
 4387 06a3 0A       		.uleb128 0xa
 4388 06a4 F70C0000 		.4byte	.LASF125
 4389 06a8 07       		.byte	0x7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 155


 4390 06a9 33       		.byte	0x33
 4391 06aa E0000000 		.4byte	0xe0
 4392 06ae 6C       		.byte	0x6c
 4393 06af 0A       		.uleb128 0xa
 4394 06b0 72040000 		.4byte	.LASF126
 4395 06b4 07       		.byte	0x7
 4396 06b5 34       		.byte	0x34
 4397 06b6 E0000000 		.4byte	0xe0
 4398 06ba 70       		.byte	0x70
 4399 06bb 0A       		.uleb128 0xa
 4400 06bc 3B0D0000 		.4byte	.LASF127
 4401 06c0 07       		.byte	0x7
 4402 06c1 35       		.byte	0x35
 4403 06c2 5B090000 		.4byte	0x95b
 4404 06c6 74       		.byte	0x74
 4405 06c7 0D       		.uleb128 0xd
 4406 06c8 B3060000 		.4byte	.LASF128
 4407 06cc 07       		.byte	0x7
 4408 06cd 36       		.byte	0x36
 4409 06ce E0000000 		.4byte	0xe0
 4410 06d2 0002     		.2byte	0x200
 4411 06d4 0D       		.uleb128 0xd
 4412 06d5 B30E0000 		.4byte	.LASF129
 4413 06d9 07       		.byte	0x7
 4414 06da 37       		.byte	0x37
 4415 06db E0000000 		.4byte	0xe0
 4416 06df 0402     		.2byte	0x204
 4417 06e1 0D       		.uleb128 0xd
 4418 06e2 FD010000 		.4byte	.LASF130
 4419 06e6 07       		.byte	0x7
 4420 06e7 38       		.byte	0x38
 4421 06e8 E5000000 		.4byte	0xe5
 4422 06ec 0802     		.2byte	0x208
 4423 06ee 0D       		.uleb128 0xd
 4424 06ef 450D0000 		.4byte	.LASF131
 4425 06f3 07       		.byte	0x7
 4426 06f4 39       		.byte	0x39
 4427 06f5 65090000 		.4byte	0x965
 4428 06f9 0C02     		.2byte	0x20c
 4429 06fb 0D       		.uleb128 0xd
 4430 06fc 4F110000 		.4byte	.LASF132
 4431 0700 07       		.byte	0x7
 4432 0701 3A       		.byte	0x3a
 4433 0702 E0000000 		.4byte	0xe0
 4434 0706 4002     		.2byte	0x240
 4435 0708 0D       		.uleb128 0xd
 4436 0709 4F0D0000 		.4byte	.LASF133
 4437 070d 07       		.byte	0x7
 4438 070e 3B       		.byte	0x3b
 4439 070f 6F090000 		.4byte	0x96f
 4440 0713 4402     		.2byte	0x244
 4441 0715 0D       		.uleb128 0xd
 4442 0716 4E0F0000 		.4byte	.LASF134
 4443 071a 07       		.byte	0x7
 4444 071b 3C       		.byte	0x3c
 4445 071c E0000000 		.4byte	0xe0
 4446 0720 0003     		.2byte	0x300
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 156


 4447 0722 0D       		.uleb128 0xd
 4448 0723 7E020000 		.4byte	.LASF135
 4449 0727 07       		.byte	0x7
 4450 0728 3D       		.byte	0x3d
 4451 0729 E0000000 		.4byte	0xe0
 4452 072d 0403     		.2byte	0x304
 4453 072f 0D       		.uleb128 0xd
 4454 0730 28110000 		.4byte	.LASF136
 4455 0734 07       		.byte	0x7
 4456 0735 3E       		.byte	0x3e
 4457 0736 E5000000 		.4byte	0xe5
 4458 073a 0803     		.2byte	0x308
 4459 073c 0D       		.uleb128 0xd
 4460 073d 590D0000 		.4byte	.LASF137
 4461 0741 07       		.byte	0x7
 4462 0742 3F       		.byte	0x3f
 4463 0743 E5000000 		.4byte	0xe5
 4464 0747 0C03     		.2byte	0x30c
 4465 0749 0D       		.uleb128 0xd
 4466 074a 81070000 		.4byte	.LASF138
 4467 074e 07       		.byte	0x7
 4468 074f 40       		.byte	0x40
 4469 0750 E0000000 		.4byte	0xe0
 4470 0754 1003     		.2byte	0x310
 4471 0756 0D       		.uleb128 0xd
 4472 0757 630D0000 		.4byte	.LASF139
 4473 075b 07       		.byte	0x7
 4474 075c 41       		.byte	0x41
 4475 075d 79090000 		.4byte	0x979
 4476 0761 1403     		.2byte	0x314
 4477 0763 0D       		.uleb128 0xd
 4478 0764 300A0000 		.4byte	.LASF140
 4479 0768 07       		.byte	0x7
 4480 0769 42       		.byte	0x42
 4481 076a E5000000 		.4byte	0xe5
 4482 076e 4003     		.2byte	0x340
 4483 0770 0D       		.uleb128 0xd
 4484 0771 2E050000 		.4byte	.LASF141
 4485 0775 07       		.byte	0x7
 4486 0776 43       		.byte	0x43
 4487 0777 E5000000 		.4byte	0xe5
 4488 077b 4403     		.2byte	0x344
 4489 077d 0D       		.uleb128 0xd
 4490 077e 6D0D0000 		.4byte	.LASF142
 4491 0782 07       		.byte	0x7
 4492 0783 44       		.byte	0x44
 4493 0784 83090000 		.4byte	0x983
 4494 0788 4803     		.2byte	0x348
 4495 078a 0D       		.uleb128 0xd
 4496 078b 5A140000 		.4byte	.LASF143
 4497 078f 07       		.byte	0x7
 4498 0790 45       		.byte	0x45
 4499 0791 88090000 		.4byte	0x988
 4500 0795 0004     		.2byte	0x400
 4501 0797 0D       		.uleb128 0xd
 4502 0798 770D0000 		.4byte	.LASF144
 4503 079c 07       		.byte	0x7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 157


 4504 079d 46       		.byte	0x46
 4505 079e 92090000 		.4byte	0x992
 4506 07a2 000C     		.2byte	0xc00
 4507 07a4 0D       		.uleb128 0xd
 4508 07a5 35020000 		.4byte	.LASF145
 4509 07a9 07       		.byte	0x7
 4510 07aa 47       		.byte	0x47
 4511 07ab E5000000 		.4byte	0xe5
 4512 07af 000E     		.2byte	0xe00
 4513 07b1 0D       		.uleb128 0xd
 4514 07b2 D0100000 		.4byte	.LASF146
 4515 07b6 07       		.byte	0x7
 4516 07b7 48       		.byte	0x48
 4517 07b8 9C090000 		.4byte	0x99c
 4518 07bc 040E     		.2byte	0xe04
 4519 07be 0D       		.uleb128 0xd
 4520 07bf C9070000 		.4byte	.LASF147
 4521 07c3 07       		.byte	0x7
 4522 07c4 49       		.byte	0x49
 4523 07c5 E0000000 		.4byte	0xe0
 4524 07c9 800E     		.2byte	0xe80
 4525 07cb 0D       		.uleb128 0xd
 4526 07cc DB100000 		.4byte	.LASF148
 4527 07d0 07       		.byte	0x7
 4528 07d1 4A       		.byte	0x4a
 4529 07d2 E5000000 		.4byte	0xe5
 4530 07d6 840E     		.2byte	0xe84
 4531 07d8 0D       		.uleb128 0xd
 4532 07d9 630C0000 		.4byte	.LASF149
 4533 07dd 07       		.byte	0x7
 4534 07de 4B       		.byte	0x4b
 4535 07df E0000000 		.4byte	0xe0
 4536 07e3 880E     		.2byte	0xe88
 4537 07e5 0D       		.uleb128 0xd
 4538 07e6 3A090000 		.4byte	.LASF150
 4539 07ea 07       		.byte	0x7
 4540 07eb 4C       		.byte	0x4c
 4541 07ec E5000000 		.4byte	0xe5
 4542 07f0 8C0E     		.2byte	0xe8c
 4543 07f2 0D       		.uleb128 0xd
 4544 07f3 E6100000 		.4byte	.LASF151
 4545 07f7 07       		.byte	0x7
 4546 07f8 4D       		.byte	0x4d
 4547 07f9 A6090000 		.4byte	0x9a6
 4548 07fd 900E     		.2byte	0xe90
 4549 07ff 0D       		.uleb128 0xd
 4550 0800 30070000 		.4byte	.LASF152
 4551 0804 07       		.byte	0x7
 4552 0805 4E       		.byte	0x4e
 4553 0806 E0000000 		.4byte	0xe0
 4554 080a C00E     		.2byte	0xec0
 4555 080c 0D       		.uleb128 0xd
 4556 080d F1100000 		.4byte	.LASF153
 4557 0811 07       		.byte	0x7
 4558 0812 4F       		.byte	0x4f
 4559 0813 E5000000 		.4byte	0xe5
 4560 0817 C40E     		.2byte	0xec4
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 158


 4561 0819 0D       		.uleb128 0xd
 4562 081a C40C0000 		.4byte	.LASF154
 4563 081e 07       		.byte	0x7
 4564 081f 50       		.byte	0x50
 4565 0820 E0000000 		.4byte	0xe0
 4566 0824 C80E     		.2byte	0xec8
 4567 0826 0D       		.uleb128 0xd
 4568 0827 FD0E0000 		.4byte	.LASF155
 4569 082b 07       		.byte	0x7
 4570 082c 51       		.byte	0x51
 4571 082d E5000000 		.4byte	0xe5
 4572 0831 CC0E     		.2byte	0xecc
 4573 0833 0D       		.uleb128 0xd
 4574 0834 FC100000 		.4byte	.LASF156
 4575 0838 07       		.byte	0x7
 4576 0839 52       		.byte	0x52
 4577 083a B0090000 		.4byte	0x9b0
 4578 083e D00E     		.2byte	0xed0
 4579 0840 0D       		.uleb128 0xd
 4580 0841 AD0F0000 		.4byte	.LASF157
 4581 0845 07       		.byte	0x7
 4582 0846 53       		.byte	0x53
 4583 0847 E0000000 		.4byte	0xe0
 4584 084b 000F     		.2byte	0xf00
 4585 084d 0D       		.uleb128 0xd
 4586 084e 72050000 		.4byte	.LASF158
 4587 0852 07       		.byte	0x7
 4588 0853 54       		.byte	0x54
 4589 0854 E0000000 		.4byte	0xe0
 4590 0858 040F     		.2byte	0xf04
 4591 085a 0D       		.uleb128 0xd
 4592 085b CF0F0000 		.4byte	.LASF159
 4593 085f 07       		.byte	0x7
 4594 0860 55       		.byte	0x55
 4595 0861 E0000000 		.4byte	0xe0
 4596 0865 080F     		.2byte	0xf08
 4597 0867 0D       		.uleb128 0xd
 4598 0868 BA050000 		.4byte	.LASF160
 4599 086c 07       		.byte	0x7
 4600 086d 56       		.byte	0x56
 4601 086e E5000000 		.4byte	0xe5
 4602 0872 0C0F     		.2byte	0xf0c
 4603 0874 0D       		.uleb128 0xd
 4604 0875 07110000 		.4byte	.LASF161
 4605 0879 07       		.byte	0x7
 4606 087a 57       		.byte	0x57
 4607 087b BA090000 		.4byte	0x9ba
 4608 087f 100F     		.2byte	0xf10
 4609 0881 0D       		.uleb128 0xd
 4610 0882 C00F0000 		.4byte	.LASF162
 4611 0886 07       		.byte	0x7
 4612 0887 58       		.byte	0x58
 4613 0888 E0000000 		.4byte	0xe0
 4614 088c 400F     		.2byte	0xf40
 4615 088e 0D       		.uleb128 0xd
 4616 088f 21030000 		.4byte	.LASF163
 4617 0893 07       		.byte	0x7
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 159


 4618 0894 59       		.byte	0x59
 4619 0895 E0000000 		.4byte	0xe0
 4620 0899 440F     		.2byte	0xf44
 4621 089b 0D       		.uleb128 0xd
 4622 089c 1D090000 		.4byte	.LASF164
 4623 08a0 07       		.byte	0x7
 4624 08a1 5A       		.byte	0x5a
 4625 08a2 E0000000 		.4byte	0xe0
 4626 08a6 480F     		.2byte	0xf48
 4627 08a8 0D       		.uleb128 0xd
 4628 08a9 EB070000 		.4byte	.LASF165
 4629 08ad 07       		.byte	0x7
 4630 08ae 5B       		.byte	0x5b
 4631 08af E5000000 		.4byte	0xe5
 4632 08b3 4C0F     		.2byte	0xf4c
 4633 08b5 0D       		.uleb128 0xd
 4634 08b6 12110000 		.4byte	.LASF166
 4635 08ba 07       		.byte	0x7
 4636 08bb 5C       		.byte	0x5c
 4637 08bc C4090000 		.4byte	0x9c4
 4638 08c0 500F     		.2byte	0xf50
 4639 08c2 0D       		.uleb128 0xd
 4640 08c3 600E0000 		.4byte	.LASF167
 4641 08c7 07       		.byte	0x7
 4642 08c8 5D       		.byte	0x5d
 4643 08c9 E0000000 		.4byte	0xe0
 4644 08cd 800F     		.2byte	0xf80
 4645 08cf 0D       		.uleb128 0xd
 4646 08d0 32030000 		.4byte	.LASF168
 4647 08d4 07       		.byte	0x7
 4648 08d5 5E       		.byte	0x5e
 4649 08d6 E0000000 		.4byte	0xe0
 4650 08da 840F     		.2byte	0xf84
 4651 08dc 0D       		.uleb128 0xd
 4652 08dd 1C010000 		.4byte	.LASF169
 4653 08e1 07       		.byte	0x7
 4654 08e2 5F       		.byte	0x5f
 4655 08e3 E0000000 		.4byte	0xe0
 4656 08e7 880F     		.2byte	0xf88
 4657 08e9 0D       		.uleb128 0xd
 4658 08ea 510E0000 		.4byte	.LASF170
 4659 08ee 07       		.byte	0x7
 4660 08ef 60       		.byte	0x60
 4661 08f0 E5000000 		.4byte	0xe5
 4662 08f4 8C0F     		.2byte	0xf8c
 4663 08f6 0D       		.uleb128 0xd
 4664 08f7 1D110000 		.4byte	.LASF171
 4665 08fb 07       		.byte	0x7
 4666 08fc 61       		.byte	0x61
 4667 08fd CE090000 		.4byte	0x9ce
 4668 0901 900F     		.2byte	0xf90
 4669 0903 0D       		.uleb128 0xd
 4670 0904 D00B0000 		.4byte	.LASF172
 4671 0908 07       		.byte	0x7
 4672 0909 62       		.byte	0x62
 4673 090a E0000000 		.4byte	0xe0
 4674 090e C00F     		.2byte	0xfc0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 160


 4675 0910 0D       		.uleb128 0xd
 4676 0911 E9120000 		.4byte	.LASF173
 4677 0915 07       		.byte	0x7
 4678 0916 63       		.byte	0x63
 4679 0917 E0000000 		.4byte	0xe0
 4680 091b C40F     		.2byte	0xfc4
 4681 091d 0D       		.uleb128 0xd
 4682 091e 61120000 		.4byte	.LASF174
 4683 0922 07       		.byte	0x7
 4684 0923 64       		.byte	0x64
 4685 0924 E0000000 		.4byte	0xe0
 4686 0928 C80F     		.2byte	0xfc8
 4687 092a 0D       		.uleb128 0xd
 4688 092b 3E030000 		.4byte	.LASF175
 4689 092f 07       		.byte	0x7
 4690 0930 65       		.byte	0x65
 4691 0931 E5000000 		.4byte	0xe5
 4692 0935 CC0F     		.2byte	0xfcc
 4693 0937 00       		.byte	0
 4694 0938 05       		.uleb128 0x5
 4695 0939 01010000 		.4byte	0x101
 4696 093d 06       		.uleb128 0x6
 4697 093e 38090000 		.4byte	0x938
 4698 0942 05       		.uleb128 0x5
 4699 0943 41010000 		.4byte	0x141
 4700 0947 06       		.uleb128 0x6
 4701 0948 42090000 		.4byte	0x942
 4702 094c 05       		.uleb128 0x5
 4703 094d EA000000 		.4byte	0xea
 4704 0951 06       		.uleb128 0x6
 4705 0952 4C090000 		.4byte	0x94c
 4706 0956 05       		.uleb128 0x5
 4707 0957 BE050000 		.4byte	0x5be
 4708 095b 06       		.uleb128 0x6
 4709 095c 56090000 		.4byte	0x956
 4710 0960 05       		.uleb128 0x5
 4711 0961 11010000 		.4byte	0x111
 4712 0965 06       		.uleb128 0x6
 4713 0966 60090000 		.4byte	0x960
 4714 096a 05       		.uleb128 0x5
 4715 096b 8D050000 		.4byte	0x58d
 4716 096f 06       		.uleb128 0x6
 4717 0970 6A090000 		.4byte	0x96a
 4718 0974 05       		.uleb128 0x5
 4719 0975 7D050000 		.4byte	0x57d
 4720 0979 06       		.uleb128 0x6
 4721 097a 74090000 		.4byte	0x974
 4722 097e 05       		.uleb128 0x5
 4723 097f 9D050000 		.4byte	0x59d
 4724 0983 06       		.uleb128 0x6
 4725 0984 7E090000 		.4byte	0x97e
 4726 0988 05       		.uleb128 0x5
 4727 0989 AD050000 		.4byte	0x5ad
 4728 098d 05       		.uleb128 0x5
 4729 098e 51010000 		.4byte	0x151
 4730 0992 06       		.uleb128 0x6
 4731 0993 8D090000 		.4byte	0x98d
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 161


 4732 0997 05       		.uleb128 0x5
 4733 0998 31010000 		.4byte	0x131
 4734 099c 06       		.uleb128 0x6
 4735 099d 97090000 		.4byte	0x997
 4736 09a1 05       		.uleb128 0x5
 4737 09a2 21010000 		.4byte	0x121
 4738 09a6 06       		.uleb128 0x6
 4739 09a7 A1090000 		.4byte	0x9a1
 4740 09ab 05       		.uleb128 0x5
 4741 09ac 21010000 		.4byte	0x121
 4742 09b0 06       		.uleb128 0x6
 4743 09b1 AB090000 		.4byte	0x9ab
 4744 09b5 05       		.uleb128 0x5
 4745 09b6 21010000 		.4byte	0x121
 4746 09ba 06       		.uleb128 0x6
 4747 09bb B5090000 		.4byte	0x9b5
 4748 09bf 05       		.uleb128 0x5
 4749 09c0 21010000 		.4byte	0x121
 4750 09c4 06       		.uleb128 0x6
 4751 09c5 BF090000 		.4byte	0x9bf
 4752 09c9 05       		.uleb128 0x5
 4753 09ca 21010000 		.4byte	0x121
 4754 09ce 06       		.uleb128 0x6
 4755 09cf C9090000 		.4byte	0x9c9
 4756 09d3 03       		.uleb128 0x3
 4757 09d4 0F090000 		.4byte	.LASF176
 4758 09d8 07       		.byte	0x7
 4759 09d9 66       		.byte	0x66
 4760 09da CE050000 		.4byte	0x5ce
 4761 09de 0E       		.uleb128 0xe
 4762 09df 3C040000 		.4byte	.LASF177
 4763 09e3 08       		.byte	0x8
 4764 09e4 4F06     		.2byte	0x64f
 4765 09e6 D3090000 		.4byte	0x9d3
 4766 09ea 0E       		.uleb128 0xe
 4767 09eb 170E0000 		.4byte	.LASF178
 4768 09ef 09       		.byte	0x9
 4769 09f0 F601     		.2byte	0x1f6
 4770 09f2 F6090000 		.4byte	0x9f6
 4771 09f6 02       		.uleb128 0x2
 4772 09f7 01       		.byte	0x1
 4773 09f8 08       		.byte	0x8
 4774 09f9 0A090000 		.4byte	.LASF179
 4775 09fd 02       		.uleb128 0x2
 4776 09fe 04       		.byte	0x4
 4777 09ff 04       		.byte	0x4
 4778 0a00 91050000 		.4byte	.LASF180
 4779 0a04 02       		.uleb128 0x2
 4780 0a05 08       		.byte	0x8
 4781 0a06 04       		.byte	0x4
 4782 0a07 C5120000 		.4byte	.LASF181
 4783 0a0b 0F       		.uleb128 0xf
 4784 0a0c 04       		.byte	0x4
 4785 0a0d 9B000000 		.4byte	0x9b
 4786 0a11 0A       		.byte	0xa
 4787 0a12 1405     		.2byte	0x514
 4788 0a14 4C0A0000 		.4byte	0xa4c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 162


 4789 0a18 10       		.uleb128 0x10
 4790 0a19 00070000 		.4byte	.LASF182
 4791 0a1d 00       		.byte	0
 4792 0a1e 11       		.uleb128 0x11
 4793 0a1f 00120000 		.4byte	.LASF183
 4794 0a23 01004200 		.4byte	0x420001
 4795 0a27 11       		.uleb128 0x11
 4796 0a28 61080000 		.4byte	.LASF184
 4797 0a2c 02004200 		.4byte	0x420002
 4798 0a30 11       		.uleb128 0x11
 4799 0a31 AC080000 		.4byte	.LASF185
 4800 0a35 03004200 		.4byte	0x420003
 4801 0a39 11       		.uleb128 0x11
 4802 0a3a ED080000 		.4byte	.LASF186
 4803 0a3e 04004200 		.4byte	0x420004
 4804 0a42 11       		.uleb128 0x11
 4805 0a43 44100000 		.4byte	.LASF187
 4806 0a47 FF004200 		.4byte	0x4200ff
 4807 0a4b 00       		.byte	0
 4808 0a4c 0E       		.uleb128 0xe
 4809 0a4d 07010000 		.4byte	.LASF188
 4810 0a51 0A       		.byte	0xa
 4811 0a52 1C05     		.2byte	0x51c
 4812 0a54 0B0A0000 		.4byte	0xa0b
 4813 0a58 0F       		.uleb128 0xf
 4814 0a59 01       		.byte	0x1
 4815 0a5a 37000000 		.4byte	0x37
 4816 0a5e 0A       		.byte	0xa
 4817 0a5f BC05     		.2byte	0x5bc
 4818 0a61 7E0A0000 		.4byte	0xa7e
 4819 0a65 10       		.uleb128 0x10
 4820 0a66 C1140000 		.4byte	.LASF189
 4821 0a6a 01       		.byte	0x1
 4822 0a6b 10       		.uleb128 0x10
 4823 0a6c 47040000 		.4byte	.LASF190
 4824 0a70 02       		.byte	0x2
 4825 0a71 10       		.uleb128 0x10
 4826 0a72 8C140000 		.4byte	.LASF191
 4827 0a76 04       		.byte	0x4
 4828 0a77 10       		.uleb128 0x10
 4829 0a78 A7140000 		.4byte	.LASF192
 4830 0a7c 08       		.byte	0x8
 4831 0a7d 00       		.byte	0
 4832 0a7e 0E       		.uleb128 0xe
 4833 0a7f 810D0000 		.4byte	.LASF193
 4834 0a83 0A       		.byte	0xa
 4835 0a84 CB05     		.2byte	0x5cb
 4836 0a86 580A0000 		.4byte	0xa58
 4837 0a8a 12       		.uleb128 0x12
 4838 0a8b 08       		.byte	0x8
 4839 0a8c 0A       		.byte	0xa
 4840 0a8d E705     		.2byte	0x5e7
 4841 0a8f AE0A0000 		.4byte	0xaae
 4842 0a93 13       		.uleb128 0x13
 4843 0a94 DA050000 		.4byte	.LASF194
 4844 0a98 0A       		.byte	0xa
 4845 0a99 E905     		.2byte	0x5e9
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 163


 4846 0a9b AE0A0000 		.4byte	0xaae
 4847 0a9f 00       		.byte	0
 4848 0aa0 13       		.uleb128 0x13
 4849 0aa1 970A0000 		.4byte	.LASF195
 4850 0aa5 0A       		.byte	0xa
 4851 0aa6 EC05     		.2byte	0x5ec
 4852 0aa8 AE0A0000 		.4byte	0xaae
 4853 0aac 04       		.byte	0x4
 4854 0aad 00       		.byte	0
 4855 0aae 14       		.uleb128 0x14
 4856 0aaf 04       		.byte	0x4
 4857 0ab0 0E       		.uleb128 0xe
 4858 0ab1 5F000000 		.4byte	.LASF196
 4859 0ab5 0A       		.byte	0xa
 4860 0ab6 EF05     		.2byte	0x5ef
 4861 0ab8 8A0A0000 		.4byte	0xa8a
 4862 0abc 15       		.uleb128 0x15
 4863 0abd 04       		.byte	0x4
 4864 0abe B00A0000 		.4byte	0xab0
 4865 0ac2 0F       		.uleb128 0xf
 4866 0ac3 04       		.byte	0x4
 4867 0ac4 9B000000 		.4byte	0x9b
 4868 0ac8 02       		.byte	0x2
 4869 0ac9 9B01     		.2byte	0x19b
 4870 0acb E80A0000 		.4byte	0xae8
 4871 0acf 10       		.uleb128 0x10
 4872 0ad0 99090000 		.4byte	.LASF197
 4873 0ad4 00       		.byte	0
 4874 0ad5 11       		.uleb128 0x11
 4875 0ad6 75100000 		.4byte	.LASF198
 4876 0ada 0140AA00 		.4byte	0xaa4001
 4877 0ade 11       		.uleb128 0x11
 4878 0adf DF050000 		.4byte	.LASF199
 4879 0ae3 0240AA00 		.4byte	0xaa4002
 4880 0ae7 00       		.byte	0
 4881 0ae8 0E       		.uleb128 0xe
 4882 0ae9 9B110000 		.4byte	.LASF200
 4883 0aed 02       		.byte	0x2
 4884 0aee A601     		.2byte	0x1a6
 4885 0af0 C20A0000 		.4byte	0xac2
 4886 0af4 0F       		.uleb128 0xf
 4887 0af5 01       		.byte	0x1
 4888 0af6 37000000 		.4byte	0x37
 4889 0afa 02       		.byte	0x2
 4890 0afb AA01     		.2byte	0x1aa
 4891 0afd 0E0B0000 		.4byte	0xb0e
 4892 0b01 10       		.uleb128 0x10
 4893 0b02 88000000 		.4byte	.LASF201
 4894 0b06 00       		.byte	0
 4895 0b07 10       		.uleb128 0x10
 4896 0b08 A1060000 		.4byte	.LASF202
 4897 0b0c 01       		.byte	0x1
 4898 0b0d 00       		.byte	0
 4899 0b0e 0E       		.uleb128 0xe
 4900 0b0f 52100000 		.4byte	.LASF203
 4901 0b13 02       		.byte	0x2
 4902 0b14 AD01     		.2byte	0x1ad
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 164


 4903 0b16 F40A0000 		.4byte	0xaf4
 4904 0b1a 0F       		.uleb128 0xf
 4905 0b1b 01       		.byte	0x1
 4906 0b1c 37000000 		.4byte	0x37
 4907 0b20 02       		.byte	0x2
 4908 0b21 B101     		.2byte	0x1b1
 4909 0b23 400B0000 		.4byte	0xb40
 4910 0b27 10       		.uleb128 0x10
 4911 0b28 FD030000 		.4byte	.LASF204
 4912 0b2c 00       		.byte	0
 4913 0b2d 10       		.uleb128 0x10
 4914 0b2e D80B0000 		.4byte	.LASF205
 4915 0b32 01       		.byte	0x1
 4916 0b33 10       		.uleb128 0x10
 4917 0b34 B2110000 		.4byte	.LASF206
 4918 0b38 02       		.byte	0x2
 4919 0b39 10       		.uleb128 0x10
 4920 0b3a CF080000 		.4byte	.LASF207
 4921 0b3e 05       		.byte	0x5
 4922 0b3f 00       		.byte	0
 4923 0b40 0E       		.uleb128 0xe
 4924 0b41 3E130000 		.4byte	.LASF208
 4925 0b45 02       		.byte	0x2
 4926 0b46 C601     		.2byte	0x1c6
 4927 0b48 1A0B0000 		.4byte	0xb1a
 4928 0b4c 0F       		.uleb128 0xf
 4929 0b4d 01       		.byte	0x1
 4930 0b4e 37000000 		.4byte	0x37
 4931 0b52 02       		.byte	0x2
 4932 0b53 CA01     		.2byte	0x1ca
 4933 0b55 720B0000 		.4byte	0xb72
 4934 0b59 10       		.uleb128 0x10
 4935 0b5a A2120000 		.4byte	.LASF209
 4936 0b5e 00       		.byte	0
 4937 0b5f 10       		.uleb128 0x10
 4938 0b60 2D100000 		.4byte	.LASF210
 4939 0b64 01       		.byte	0x1
 4940 0b65 10       		.uleb128 0x10
 4941 0b66 33080000 		.4byte	.LASF211
 4942 0b6a 02       		.byte	0x2
 4943 0b6b 10       		.uleb128 0x10
 4944 0b6c 4A080000 		.4byte	.LASF212
 4945 0b70 03       		.byte	0x3
 4946 0b71 00       		.byte	0
 4947 0b72 0E       		.uleb128 0xe
 4948 0b73 8B010000 		.4byte	.LASF213
 4949 0b77 02       		.byte	0x2
 4950 0b78 CF01     		.2byte	0x1cf
 4951 0b7a 4C0B0000 		.4byte	0xb4c
 4952 0b7e 0E       		.uleb128 0xe
 4953 0b7f 41000000 		.4byte	.LASF214
 4954 0b83 02       		.byte	0x2
 4955 0b84 F201     		.2byte	0x1f2
 4956 0b86 8A0B0000 		.4byte	0xb8a
 4957 0b8a 15       		.uleb128 0x15
 4958 0b8b 04       		.byte	0x4
 4959 0b8c 900B0000 		.4byte	0xb90
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 165


 4960 0b90 16       		.uleb128 0x16
 4961 0b91 9B0B0000 		.4byte	0xb9b
 4962 0b95 17       		.uleb128 0x17
 4963 0b96 CE000000 		.4byte	0xce
 4964 0b9a 00       		.byte	0
 4965 0b9b 18       		.uleb128 0x18
 4966 0b9c F8020000 		.4byte	.LASF235
 4967 0ba0 34       		.byte	0x34
 4968 0ba1 02       		.byte	0x2
 4969 0ba2 F601     		.2byte	0x1f6
 4970 0ba4 930C0000 		.4byte	0xc93
 4971 0ba8 13       		.uleb128 0x13
 4972 0ba9 2A120000 		.4byte	.LASF215
 4973 0bad 02       		.byte	0x2
 4974 0bae F901     		.2byte	0x1f9
 4975 0bb0 0E0B0000 		.4byte	0xb0e
 4976 0bb4 00       		.byte	0
 4977 0bb5 13       		.uleb128 0x13
 4978 0bb6 1A080000 		.4byte	.LASF216
 4979 0bba 02       		.byte	0x2
 4980 0bbb FC01     		.2byte	0x1fc
 4981 0bbd 400B0000 		.4byte	0xb40
 4982 0bc1 01       		.byte	0x1
 4983 0bc2 13       		.uleb128 0x13
 4984 0bc3 A30C0000 		.4byte	.LASF217
 4985 0bc7 02       		.byte	0x2
 4986 0bc8 0202     		.2byte	0x202
 4987 0bca 720B0000 		.4byte	0xb72
 4988 0bce 02       		.byte	0x2
 4989 0bcf 13       		.uleb128 0x13
 4990 0bd0 57130000 		.4byte	.LASF218
 4991 0bd4 02       		.byte	0x2
 4992 0bd5 0C02     		.2byte	0x20c
 4993 0bd7 CE000000 		.4byte	0xce
 4994 0bdb 04       		.byte	0x4
 4995 0bdc 13       		.uleb128 0x13
 4996 0bdd 57070000 		.4byte	.LASF219
 4997 0be1 02       		.byte	0x2
 4998 0be2 1202     		.2byte	0x212
 4999 0be4 CE000000 		.4byte	0xce
 5000 0be8 08       		.byte	0x8
 5001 0be9 13       		.uleb128 0x13
 5002 0bea F5120000 		.4byte	.LASF220
 5003 0bee 02       		.byte	0x2
 5004 0bef 1802     		.2byte	0x218
 5005 0bf1 CE000000 		.4byte	0xce
 5006 0bf5 0C       		.byte	0xc
 5007 0bf6 13       		.uleb128 0x13
 5008 0bf7 C7000000 		.4byte	.LASF221
 5009 0bfb 02       		.byte	0x2
 5010 0bfc 1E02     		.2byte	0x21e
 5011 0bfe 930C0000 		.4byte	0xc93
 5012 0c02 10       		.byte	0x10
 5013 0c03 13       		.uleb128 0x13
 5014 0c04 2D0E0000 		.4byte	.LASF222
 5015 0c08 02       		.byte	0x2
 5016 0c09 2402     		.2byte	0x224
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 166


 5017 0c0b 930C0000 		.4byte	0xc93
 5018 0c0f 11       		.byte	0x11
 5019 0c10 13       		.uleb128 0x13
 5020 0c11 4D030000 		.4byte	.LASF223
 5021 0c15 02       		.byte	0x2
 5022 0c16 2A02     		.2byte	0x22a
 5023 0c18 930C0000 		.4byte	0xc93
 5024 0c1c 12       		.byte	0x12
 5025 0c1d 13       		.uleb128 0x13
 5026 0c1e 97050000 		.4byte	.LASF224
 5027 0c22 02       		.byte	0x2
 5028 0c23 3002     		.2byte	0x230
 5029 0c25 930C0000 		.4byte	0xc93
 5030 0c29 13       		.byte	0x13
 5031 0c2a 13       		.uleb128 0x13
 5032 0c2b 940F0000 		.4byte	.LASF225
 5033 0c2f 02       		.byte	0x2
 5034 0c30 3702     		.2byte	0x237
 5035 0c32 930C0000 		.4byte	0xc93
 5036 0c36 14       		.byte	0x14
 5037 0c37 13       		.uleb128 0x13
 5038 0c38 C6030000 		.4byte	.LASF226
 5039 0c3c 02       		.byte	0x2
 5040 0c3d 3E02     		.2byte	0x23e
 5041 0c3f CE000000 		.4byte	0xce
 5042 0c43 18       		.byte	0x18
 5043 0c44 13       		.uleb128 0x13
 5044 0c45 C20A0000 		.4byte	.LASF227
 5045 0c49 02       		.byte	0x2
 5046 0c4a 4602     		.2byte	0x246
 5047 0c4c 930C0000 		.4byte	0xc93
 5048 0c50 1C       		.byte	0x1c
 5049 0c51 13       		.uleb128 0x13
 5050 0c52 5F050000 		.4byte	.LASF228
 5051 0c56 02       		.byte	0x2
 5052 0c57 4E02     		.2byte	0x24e
 5053 0c59 CE000000 		.4byte	0xce
 5054 0c5d 20       		.byte	0x20
 5055 0c5e 13       		.uleb128 0x13
 5056 0c5f 46140000 		.4byte	.LASF229
 5057 0c63 02       		.byte	0x2
 5058 0c64 5402     		.2byte	0x254
 5059 0c66 CE000000 		.4byte	0xce
 5060 0c6a 24       		.byte	0x24
 5061 0c6b 13       		.uleb128 0x13
 5062 0c6c DB0F0000 		.4byte	.LASF230
 5063 0c70 02       		.byte	0x2
 5064 0c71 5C02     		.2byte	0x25c
 5065 0c73 CE000000 		.4byte	0xce
 5066 0c77 28       		.byte	0x28
 5067 0c78 13       		.uleb128 0x13
 5068 0c79 D7110000 		.4byte	.LASF231
 5069 0c7d 02       		.byte	0x2
 5070 0c7e 6202     		.2byte	0x262
 5071 0c80 CE000000 		.4byte	0xce
 5072 0c84 2C       		.byte	0x2c
 5073 0c85 13       		.uleb128 0x13
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 167


 5074 0c86 C00E0000 		.4byte	.LASF232
 5075 0c8a 02       		.byte	0x2
 5076 0c8b 6902     		.2byte	0x269
 5077 0c8d CE000000 		.4byte	0xce
 5078 0c91 30       		.byte	0x30
 5079 0c92 00       		.byte	0
 5080 0c93 02       		.uleb128 0x2
 5081 0c94 01       		.byte	0x1
 5082 0c95 02       		.byte	0x2
 5083 0c96 63070000 		.4byte	.LASF233
 5084 0c9a 0E       		.uleb128 0xe
 5085 0c9b 37110000 		.4byte	.LASF234
 5086 0c9f 02       		.byte	0x2
 5087 0ca0 6B02     		.2byte	0x26b
 5088 0ca2 9B0B0000 		.4byte	0xb9b
 5089 0ca6 18       		.uleb128 0x18
 5090 0ca7 370F0000 		.4byte	.LASF236
 5091 0cab 24       		.byte	0x24
 5092 0cac 02       		.byte	0x2
 5093 0cad 7402     		.2byte	0x274
 5094 0caf 290D0000 		.4byte	0xd29
 5095 0cb3 13       		.uleb128 0x13
 5096 0cb4 B4090000 		.4byte	.LASF237
 5097 0cb8 02       		.byte	0x2
 5098 0cb9 7702     		.2byte	0x277
 5099 0cbb E0000000 		.4byte	0xe0
 5100 0cbf 00       		.byte	0
 5101 0cc0 13       		.uleb128 0x13
 5102 0cc1 FA060000 		.4byte	.LASF238
 5103 0cc5 02       		.byte	0x2
 5104 0cc6 7902     		.2byte	0x279
 5105 0cc8 AE0A0000 		.4byte	0xaae
 5106 0ccc 04       		.byte	0x4
 5107 0ccd 13       		.uleb128 0x13
 5108 0cce 7D140000 		.4byte	.LASF239
 5109 0cd2 02       		.byte	0x2
 5110 0cd3 7A02     		.2byte	0x27a
 5111 0cd5 CE000000 		.4byte	0xce
 5112 0cd9 08       		.byte	0x8
 5113 0cda 13       		.uleb128 0x13
 5114 0cdb 61090000 		.4byte	.LASF240
 5115 0cdf 02       		.byte	0x2
 5116 0ce0 7B02     		.2byte	0x27b
 5117 0ce2 E0000000 		.4byte	0xe0
 5118 0ce6 0C       		.byte	0xc
 5119 0ce7 13       		.uleb128 0x13
 5120 0ce8 F00B0000 		.4byte	.LASF241
 5121 0cec 02       		.byte	0x2
 5122 0ced 7D02     		.2byte	0x27d
 5123 0cef AE0A0000 		.4byte	0xaae
 5124 0cf3 10       		.byte	0x10
 5125 0cf4 13       		.uleb128 0x13
 5126 0cf5 600B0000 		.4byte	.LASF242
 5127 0cf9 02       		.byte	0x2
 5128 0cfa 7E02     		.2byte	0x27e
 5129 0cfc CE000000 		.4byte	0xce
 5130 0d00 14       		.byte	0x14
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 168


 5131 0d01 13       		.uleb128 0x13
 5132 0d02 64020000 		.4byte	.LASF243
 5133 0d06 02       		.byte	0x2
 5134 0d07 7F02     		.2byte	0x27f
 5135 0d09 E0000000 		.4byte	0xe0
 5136 0d0d 18       		.byte	0x18
 5137 0d0e 13       		.uleb128 0x13
 5138 0d0f 4E070000 		.4byte	.LASF244
 5139 0d13 02       		.byte	0x2
 5140 0d14 8502     		.2byte	0x285
 5141 0d16 7E0B0000 		.4byte	0xb7e
 5142 0d1a 1C       		.byte	0x1c
 5143 0d1b 13       		.uleb128 0x13
 5144 0d1c 80090000 		.4byte	.LASF245
 5145 0d20 02       		.byte	0x2
 5146 0d21 8802     		.2byte	0x288
 5147 0d23 CE000000 		.4byte	0xce
 5148 0d27 20       		.byte	0x20
 5149 0d28 00       		.byte	0
 5150 0d29 0E       		.uleb128 0xe
 5151 0d2a 110B0000 		.4byte	.LASF246
 5152 0d2e 02       		.byte	0x2
 5153 0d2f 8B02     		.2byte	0x28b
 5154 0d31 A60C0000 		.4byte	0xca6
 5155 0d35 19       		.uleb128 0x19
 5156 0d36 1D060000 		.4byte	.LASF248
 5157 0d3a 01       		.byte	0x1
 5158 0d3b 6A02     		.2byte	0x26a
 5159 0d3d CE000000 		.4byte	0xce
 5160 0d41 00000000 		.4byte	.LFB166
 5161 0d45 1A000000 		.4byte	.LFE166-.LFB166
 5162 0d49 01       		.uleb128 0x1
 5163 0d4a 9C       		.byte	0x9c
 5164 0d4b 5F0D0000 		.4byte	0xd5f
 5165 0d4f 1A       		.uleb128 0x1a
 5166 0d50 DA050000 		.4byte	.LASF194
 5167 0d54 01       		.byte	0x1
 5168 0d55 6A02     		.2byte	0x26a
 5169 0d57 5F0D0000 		.4byte	0xd5f
 5170 0d5b 02       		.uleb128 0x2
 5171 0d5c 91       		.byte	0x91
 5172 0d5d 74       		.sleb128 -12
 5173 0d5e 00       		.byte	0
 5174 0d5f 15       		.uleb128 0x15
 5175 0d60 04       		.byte	0x4
 5176 0d61 650D0000 		.4byte	0xd65
 5177 0d65 06       		.uleb128 0x6
 5178 0d66 DE090000 		.4byte	0x9de
 5179 0d6a 1B       		.uleb128 0x1b
 5180 0d6b 8A100000 		.4byte	.LASF250
 5181 0d6f 01       		.byte	0x1
 5182 0d70 7E02     		.2byte	0x27e
 5183 0d72 00000000 		.4byte	.LFB167
 5184 0d76 44000000 		.4byte	.LFE167-.LFB167
 5185 0d7a 01       		.uleb128 0x1
 5186 0d7b 9C       		.byte	0x9c
 5187 0d7c 9F0D0000 		.4byte	0xd9f
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 169


 5188 0d80 1A       		.uleb128 0x1a
 5189 0d81 DA050000 		.4byte	.LASF194
 5190 0d85 01       		.byte	0x1
 5191 0d86 7E02     		.2byte	0x27e
 5192 0d88 9F0D0000 		.4byte	0xd9f
 5193 0d8c 02       		.uleb128 0x2
 5194 0d8d 91       		.byte	0x91
 5195 0d8e 74       		.sleb128 -12
 5196 0d8f 1A       		.uleb128 0x1a
 5197 0d90 2C030000 		.4byte	.LASF247
 5198 0d94 01       		.byte	0x1
 5199 0d95 7E02     		.2byte	0x27e
 5200 0d97 CE000000 		.4byte	0xce
 5201 0d9b 02       		.uleb128 0x2
 5202 0d9c 91       		.byte	0x91
 5203 0d9d 70       		.sleb128 -16
 5204 0d9e 00       		.byte	0
 5205 0d9f 15       		.uleb128 0x15
 5206 0da0 04       		.byte	0x4
 5207 0da1 DE090000 		.4byte	0x9de
 5208 0da5 19       		.uleb128 0x19
 5209 0da6 40050000 		.4byte	.LASF249
 5210 0daa 01       		.byte	0x1
 5211 0dab 9302     		.2byte	0x293
 5212 0dad CE000000 		.4byte	0xce
 5213 0db1 00000000 		.4byte	.LFB168
 5214 0db5 1E000000 		.4byte	.LFE168-.LFB168
 5215 0db9 01       		.uleb128 0x1
 5216 0dba 9C       		.byte	0x9c
 5217 0dbb CF0D0000 		.4byte	0xdcf
 5218 0dbf 1A       		.uleb128 0x1a
 5219 0dc0 DA050000 		.4byte	.LASF194
 5220 0dc4 01       		.byte	0x1
 5221 0dc5 9302     		.2byte	0x293
 5222 0dc7 5F0D0000 		.4byte	0xd5f
 5223 0dcb 02       		.uleb128 0x2
 5224 0dcc 91       		.byte	0x91
 5225 0dcd 74       		.sleb128 -12
 5226 0dce 00       		.byte	0
 5227 0dcf 1C       		.uleb128 0x1c
 5228 0dd0 5A110000 		.4byte	.LASF251
 5229 0dd4 01       		.byte	0x1
 5230 0dd5 B902     		.2byte	0x2b9
 5231 0dd7 00000000 		.4byte	.LFB170
 5232 0ddb 3A000000 		.4byte	.LFE170-.LFB170
 5233 0ddf 01       		.uleb128 0x1
 5234 0de0 9C       		.byte	0x9c
 5235 0de1 F50D0000 		.4byte	0xdf5
 5236 0de5 1A       		.uleb128 0x1a
 5237 0de6 DA050000 		.4byte	.LASF194
 5238 0dea 01       		.byte	0x1
 5239 0deb B902     		.2byte	0x2b9
 5240 0ded 9F0D0000 		.4byte	0xd9f
 5241 0df1 02       		.uleb128 0x2
 5242 0df2 91       		.byte	0x91
 5243 0df3 74       		.sleb128 -12
 5244 0df4 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 170


 5245 0df5 1B       		.uleb128 0x1b
 5246 0df6 6A090000 		.4byte	.LASF252
 5247 0dfa 01       		.byte	0x1
 5248 0dfb E602     		.2byte	0x2e6
 5249 0dfd 00000000 		.4byte	.LFB172
 5250 0e01 44000000 		.4byte	.LFE172-.LFB172
 5251 0e05 01       		.uleb128 0x1
 5252 0e06 9C       		.byte	0x9c
 5253 0e07 2A0E0000 		.4byte	0xe2a
 5254 0e0b 1A       		.uleb128 0x1a
 5255 0e0c DA050000 		.4byte	.LASF194
 5256 0e10 01       		.byte	0x1
 5257 0e11 E602     		.2byte	0x2e6
 5258 0e13 9F0D0000 		.4byte	0xd9f
 5259 0e17 02       		.uleb128 0x2
 5260 0e18 91       		.byte	0x91
 5261 0e19 74       		.sleb128 -12
 5262 0e1a 1A       		.uleb128 0x1a
 5263 0e1b 2C030000 		.4byte	.LASF247
 5264 0e1f 01       		.byte	0x1
 5265 0e20 E602     		.2byte	0x2e6
 5266 0e22 CE000000 		.4byte	0xce
 5267 0e26 02       		.uleb128 0x2
 5268 0e27 91       		.byte	0x91
 5269 0e28 70       		.sleb128 -16
 5270 0e29 00       		.byte	0
 5271 0e2a 19       		.uleb128 0x19
 5272 0e2b D5070000 		.4byte	.LASF253
 5273 0e2f 01       		.byte	0x1
 5274 0e30 FB02     		.2byte	0x2fb
 5275 0e32 CE000000 		.4byte	0xce
 5276 0e36 00000000 		.4byte	.LFB173
 5277 0e3a 1E000000 		.4byte	.LFE173-.LFB173
 5278 0e3e 01       		.uleb128 0x1
 5279 0e3f 9C       		.byte	0x9c
 5280 0e40 540E0000 		.4byte	0xe54
 5281 0e44 1A       		.uleb128 0x1a
 5282 0e45 DA050000 		.4byte	.LASF194
 5283 0e49 01       		.byte	0x1
 5284 0e4a FB02     		.2byte	0x2fb
 5285 0e4c 5F0D0000 		.4byte	0xd5f
 5286 0e50 02       		.uleb128 0x2
 5287 0e51 91       		.byte	0x91
 5288 0e52 74       		.sleb128 -12
 5289 0e53 00       		.byte	0
 5290 0e54 19       		.uleb128 0x19
 5291 0e55 8F0C0000 		.4byte	.LASF254
 5292 0e59 01       		.byte	0x1
 5293 0e5a 0E03     		.2byte	0x30e
 5294 0e5c CE000000 		.4byte	0xce
 5295 0e60 00000000 		.4byte	.LFB174
 5296 0e64 20000000 		.4byte	.LFE174-.LFB174
 5297 0e68 01       		.uleb128 0x1
 5298 0e69 9C       		.byte	0x9c
 5299 0e6a 7E0E0000 		.4byte	0xe7e
 5300 0e6e 1A       		.uleb128 0x1a
 5301 0e6f DA050000 		.4byte	.LASF194
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 171


 5302 0e73 01       		.byte	0x1
 5303 0e74 0E03     		.2byte	0x30e
 5304 0e76 5F0D0000 		.4byte	0xd5f
 5305 0e7a 02       		.uleb128 0x2
 5306 0e7b 91       		.byte	0x91
 5307 0e7c 74       		.sleb128 -12
 5308 0e7d 00       		.byte	0
 5309 0e7e 1D       		.uleb128 0x1d
 5310 0e7f 4D090000 		.4byte	.LASF255
 5311 0e83 01       		.byte	0x1
 5312 0e84 2103     		.2byte	0x321
 5313 0e86 930C0000 		.4byte	0xc93
 5314 0e8a 00000000 		.4byte	.LFB175
 5315 0e8e 2C000000 		.4byte	.LFE175-.LFB175
 5316 0e92 01       		.uleb128 0x1
 5317 0e93 9C       		.byte	0x9c
 5318 0e94 A80E0000 		.4byte	0xea8
 5319 0e98 1A       		.uleb128 0x1a
 5320 0e99 DA050000 		.4byte	.LASF194
 5321 0e9d 01       		.byte	0x1
 5322 0e9e 2103     		.2byte	0x321
 5323 0ea0 5F0D0000 		.4byte	0xd5f
 5324 0ea4 02       		.uleb128 0x2
 5325 0ea5 91       		.byte	0x91
 5326 0ea6 6C       		.sleb128 -20
 5327 0ea7 00       		.byte	0
 5328 0ea8 1C       		.uleb128 0x1c
 5329 0ea9 D1030000 		.4byte	.LASF256
 5330 0ead 01       		.byte	0x1
 5331 0eae 3603     		.2byte	0x336
 5332 0eb0 00000000 		.4byte	.LFB176
 5333 0eb4 3A000000 		.4byte	.LFE176-.LFB176
 5334 0eb8 01       		.uleb128 0x1
 5335 0eb9 9C       		.byte	0x9c
 5336 0eba CE0E0000 		.4byte	0xece
 5337 0ebe 1A       		.uleb128 0x1a
 5338 0ebf DA050000 		.4byte	.LASF194
 5339 0ec3 01       		.byte	0x1
 5340 0ec4 3603     		.2byte	0x336
 5341 0ec6 9F0D0000 		.4byte	0xd9f
 5342 0eca 02       		.uleb128 0x2
 5343 0ecb 91       		.byte	0x91
 5344 0ecc 74       		.sleb128 -12
 5345 0ecd 00       		.byte	0
 5346 0ece 1B       		.uleb128 0x1b
 5347 0ecf D90E0000 		.4byte	.LASF257
 5348 0ed3 01       		.byte	0x1
 5349 0ed4 9803     		.2byte	0x398
 5350 0ed6 00000000 		.4byte	.LFB180
 5351 0eda 38000000 		.4byte	.LFE180-.LFB180
 5352 0ede 01       		.uleb128 0x1
 5353 0edf 9C       		.byte	0x9c
 5354 0ee0 030F0000 		.4byte	0xf03
 5355 0ee4 1A       		.uleb128 0x1a
 5356 0ee5 DA050000 		.4byte	.LASF194
 5357 0ee9 01       		.byte	0x1
 5358 0eea 9803     		.2byte	0x398
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 172


 5359 0eec 9F0D0000 		.4byte	0xd9f
 5360 0ef0 02       		.uleb128 0x2
 5361 0ef1 91       		.byte	0x91
 5362 0ef2 74       		.sleb128 -12
 5363 0ef3 1A       		.uleb128 0x1a
 5364 0ef4 38140000 		.4byte	.LASF258
 5365 0ef8 01       		.byte	0x1
 5366 0ef9 9803     		.2byte	0x398
 5367 0efb CE000000 		.4byte	0xce
 5368 0eff 02       		.uleb128 0x2
 5369 0f00 91       		.byte	0x91
 5370 0f01 70       		.sleb128 -16
 5371 0f02 00       		.byte	0
 5372 0f03 19       		.uleb128 0x19
 5373 0f04 7C060000 		.4byte	.LASF259
 5374 0f08 01       		.byte	0x1
 5375 0f09 AF03     		.2byte	0x3af
 5376 0f0b CE000000 		.4byte	0xce
 5377 0f0f 00000000 		.4byte	.LFB181
 5378 0f13 1A000000 		.4byte	.LFE181-.LFB181
 5379 0f17 01       		.uleb128 0x1
 5380 0f18 9C       		.byte	0x9c
 5381 0f19 2D0F0000 		.4byte	0xf2d
 5382 0f1d 1A       		.uleb128 0x1a
 5383 0f1e DA050000 		.4byte	.LASF194
 5384 0f22 01       		.byte	0x1
 5385 0f23 AF03     		.2byte	0x3af
 5386 0f25 5F0D0000 		.4byte	0xd5f
 5387 0f29 02       		.uleb128 0x2
 5388 0f2a 91       		.byte	0x91
 5389 0f2b 74       		.sleb128 -12
 5390 0f2c 00       		.byte	0
 5391 0f2d 19       		.uleb128 0x19
 5392 0f2e D8060000 		.4byte	.LASF260
 5393 0f32 01       		.byte	0x1
 5394 0f33 C703     		.2byte	0x3c7
 5395 0f35 CE000000 		.4byte	0xce
 5396 0f39 00000000 		.4byte	.LFB182
 5397 0f3d 1A000000 		.4byte	.LFE182-.LFB182
 5398 0f41 01       		.uleb128 0x1
 5399 0f42 9C       		.byte	0x9c
 5400 0f43 570F0000 		.4byte	0xf57
 5401 0f47 1A       		.uleb128 0x1a
 5402 0f48 DA050000 		.4byte	.LASF194
 5403 0f4c 01       		.byte	0x1
 5404 0f4d C703     		.2byte	0x3c7
 5405 0f4f 5F0D0000 		.4byte	0xd5f
 5406 0f53 02       		.uleb128 0x2
 5407 0f54 91       		.byte	0x91
 5408 0f55 74       		.sleb128 -12
 5409 0f56 00       		.byte	0
 5410 0f57 1B       		.uleb128 0x1b
 5411 0f58 1C0C0000 		.4byte	.LASF261
 5412 0f5c 01       		.byte	0x1
 5413 0f5d E303     		.2byte	0x3e3
 5414 0f5f 00000000 		.4byte	.LFB183
 5415 0f63 3C000000 		.4byte	.LFE183-.LFB183
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 173


 5416 0f67 01       		.uleb128 0x1
 5417 0f68 9C       		.byte	0x9c
 5418 0f69 8C0F0000 		.4byte	0xf8c
 5419 0f6d 1A       		.uleb128 0x1a
 5420 0f6e DA050000 		.4byte	.LASF194
 5421 0f72 01       		.byte	0x1
 5422 0f73 E303     		.2byte	0x3e3
 5423 0f75 9F0D0000 		.4byte	0xd9f
 5424 0f79 02       		.uleb128 0x2
 5425 0f7a 91       		.byte	0x91
 5426 0f7b 74       		.sleb128 -12
 5427 0f7c 1A       		.uleb128 0x1a
 5428 0f7d 38140000 		.4byte	.LASF258
 5429 0f81 01       		.byte	0x1
 5430 0f82 E303     		.2byte	0x3e3
 5431 0f84 CE000000 		.4byte	0xce
 5432 0f88 02       		.uleb128 0x2
 5433 0f89 91       		.byte	0x91
 5434 0f8a 70       		.sleb128 -16
 5435 0f8b 00       		.byte	0
 5436 0f8c 1B       		.uleb128 0x1b
 5437 0f8d 340C0000 		.4byte	.LASF262
 5438 0f91 01       		.byte	0x1
 5439 0f92 2804     		.2byte	0x428
 5440 0f94 00000000 		.4byte	.LFB186
 5441 0f98 38000000 		.4byte	.LFE186-.LFB186
 5442 0f9c 01       		.uleb128 0x1
 5443 0f9d 9C       		.byte	0x9c
 5444 0f9e C10F0000 		.4byte	0xfc1
 5445 0fa2 1A       		.uleb128 0x1a
 5446 0fa3 DA050000 		.4byte	.LASF194
 5447 0fa7 01       		.byte	0x1
 5448 0fa8 2804     		.2byte	0x428
 5449 0faa 9F0D0000 		.4byte	0xd9f
 5450 0fae 02       		.uleb128 0x2
 5451 0faf 91       		.byte	0x91
 5452 0fb0 74       		.sleb128 -12
 5453 0fb1 1A       		.uleb128 0x1a
 5454 0fb2 38140000 		.4byte	.LASF258
 5455 0fb6 01       		.byte	0x1
 5456 0fb7 2804     		.2byte	0x428
 5457 0fb9 CE000000 		.4byte	0xce
 5458 0fbd 02       		.uleb128 0x2
 5459 0fbe 91       		.byte	0x91
 5460 0fbf 70       		.sleb128 -16
 5461 0fc0 00       		.byte	0
 5462 0fc1 19       		.uleb128 0x19
 5463 0fc2 32010000 		.4byte	.LASF263
 5464 0fc6 01       		.byte	0x1
 5465 0fc7 3F04     		.2byte	0x43f
 5466 0fc9 CE000000 		.4byte	0xce
 5467 0fcd 00000000 		.4byte	.LFB187
 5468 0fd1 1A000000 		.4byte	.LFE187-.LFB187
 5469 0fd5 01       		.uleb128 0x1
 5470 0fd6 9C       		.byte	0x9c
 5471 0fd7 EB0F0000 		.4byte	0xfeb
 5472 0fdb 1A       		.uleb128 0x1a
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 174


 5473 0fdc DA050000 		.4byte	.LASF194
 5474 0fe0 01       		.byte	0x1
 5475 0fe1 3F04     		.2byte	0x43f
 5476 0fe3 5F0D0000 		.4byte	0xd5f
 5477 0fe7 02       		.uleb128 0x2
 5478 0fe8 91       		.byte	0x91
 5479 0fe9 74       		.sleb128 -12
 5480 0fea 00       		.byte	0
 5481 0feb 19       		.uleb128 0x19
 5482 0fec DB010000 		.4byte	.LASF264
 5483 0ff0 01       		.byte	0x1
 5484 0ff1 5704     		.2byte	0x457
 5485 0ff3 CE000000 		.4byte	0xce
 5486 0ff7 00000000 		.4byte	.LFB188
 5487 0ffb 1A000000 		.4byte	.LFE188-.LFB188
 5488 0fff 01       		.uleb128 0x1
 5489 1000 9C       		.byte	0x9c
 5490 1001 15100000 		.4byte	0x1015
 5491 1005 1A       		.uleb128 0x1a
 5492 1006 DA050000 		.4byte	.LASF194
 5493 100a 01       		.byte	0x1
 5494 100b 5704     		.2byte	0x457
 5495 100d 5F0D0000 		.4byte	0xd5f
 5496 1011 02       		.uleb128 0x2
 5497 1012 91       		.byte	0x91
 5498 1013 74       		.sleb128 -12
 5499 1014 00       		.byte	0
 5500 1015 1B       		.uleb128 0x1b
 5501 1016 69070000 		.4byte	.LASF265
 5502 101a 01       		.byte	0x1
 5503 101b 7504     		.2byte	0x475
 5504 101d 00000000 		.4byte	.LFB189
 5505 1021 3C000000 		.4byte	.LFE189-.LFB189
 5506 1025 01       		.uleb128 0x1
 5507 1026 9C       		.byte	0x9c
 5508 1027 4A100000 		.4byte	0x104a
 5509 102b 1A       		.uleb128 0x1a
 5510 102c DA050000 		.4byte	.LASF194
 5511 1030 01       		.byte	0x1
 5512 1031 7504     		.2byte	0x475
 5513 1033 9F0D0000 		.4byte	0xd9f
 5514 1037 02       		.uleb128 0x2
 5515 1038 91       		.byte	0x91
 5516 1039 74       		.sleb128 -12
 5517 103a 1A       		.uleb128 0x1a
 5518 103b 38140000 		.4byte	.LASF258
 5519 103f 01       		.byte	0x1
 5520 1040 7504     		.2byte	0x475
 5521 1042 CE000000 		.4byte	0xce
 5522 1046 02       		.uleb128 0x2
 5523 1047 91       		.byte	0x91
 5524 1048 70       		.sleb128 -16
 5525 1049 00       		.byte	0
 5526 104a 1B       		.uleb128 0x1b
 5527 104b 6D110000 		.4byte	.LASF266
 5528 104f 01       		.byte	0x1
 5529 1050 BA04     		.2byte	0x4ba
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 175


 5530 1052 00000000 		.4byte	.LFB192
 5531 1056 38000000 		.4byte	.LFE192-.LFB192
 5532 105a 01       		.uleb128 0x1
 5533 105b 9C       		.byte	0x9c
 5534 105c 7F100000 		.4byte	0x107f
 5535 1060 1A       		.uleb128 0x1a
 5536 1061 DA050000 		.4byte	.LASF194
 5537 1065 01       		.byte	0x1
 5538 1066 BA04     		.2byte	0x4ba
 5539 1068 9F0D0000 		.4byte	0xd9f
 5540 106c 02       		.uleb128 0x2
 5541 106d 91       		.byte	0x91
 5542 106e 74       		.sleb128 -12
 5543 106f 1A       		.uleb128 0x1a
 5544 1070 38140000 		.4byte	.LASF258
 5545 1074 01       		.byte	0x1
 5546 1075 BA04     		.2byte	0x4ba
 5547 1077 CE000000 		.4byte	0xce
 5548 107b 02       		.uleb128 0x2
 5549 107c 91       		.byte	0x91
 5550 107d 70       		.sleb128 -16
 5551 107e 00       		.byte	0
 5552 107f 1B       		.uleb128 0x1b
 5553 1080 8F080000 		.4byte	.LASF267
 5554 1084 01       		.byte	0x1
 5555 1085 4405     		.2byte	0x544
 5556 1087 00000000 		.4byte	.LFB198
 5557 108b 38000000 		.4byte	.LFE198-.LFB198
 5558 108f 01       		.uleb128 0x1
 5559 1090 9C       		.byte	0x9c
 5560 1091 B4100000 		.4byte	0x10b4
 5561 1095 1A       		.uleb128 0x1a
 5562 1096 DA050000 		.4byte	.LASF194
 5563 109a 01       		.byte	0x1
 5564 109b 4405     		.2byte	0x544
 5565 109d 9F0D0000 		.4byte	0xd9f
 5566 10a1 02       		.uleb128 0x2
 5567 10a2 91       		.byte	0x91
 5568 10a3 74       		.sleb128 -12
 5569 10a4 1A       		.uleb128 0x1a
 5570 10a5 38140000 		.4byte	.LASF258
 5571 10a9 01       		.byte	0x1
 5572 10aa 4405     		.2byte	0x544
 5573 10ac CE000000 		.4byte	0xce
 5574 10b0 02       		.uleb128 0x2
 5575 10b1 91       		.byte	0x91
 5576 10b2 70       		.sleb128 -16
 5577 10b3 00       		.byte	0
 5578 10b4 19       		.uleb128 0x19
 5579 10b5 360B0000 		.4byte	.LASF268
 5580 10b9 01       		.byte	0x1
 5581 10ba 7505     		.2byte	0x575
 5582 10bc CE000000 		.4byte	0xce
 5583 10c0 00000000 		.4byte	.LFB200
 5584 10c4 1A000000 		.4byte	.LFE200-.LFB200
 5585 10c8 01       		.uleb128 0x1
 5586 10c9 9C       		.byte	0x9c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 176


 5587 10ca DE100000 		.4byte	0x10de
 5588 10ce 1A       		.uleb128 0x1a
 5589 10cf DA050000 		.4byte	.LASF194
 5590 10d3 01       		.byte	0x1
 5591 10d4 7505     		.2byte	0x575
 5592 10d6 5F0D0000 		.4byte	0xd5f
 5593 10da 02       		.uleb128 0x2
 5594 10db 91       		.byte	0x91
 5595 10dc 74       		.sleb128 -12
 5596 10dd 00       		.byte	0
 5597 10de 1B       		.uleb128 0x1b
 5598 10df CF090000 		.4byte	.LASF269
 5599 10e3 01       		.byte	0x1
 5600 10e4 8905     		.2byte	0x589
 5601 10e6 00000000 		.4byte	.LFB201
 5602 10ea 3C000000 		.4byte	.LFE201-.LFB201
 5603 10ee 01       		.uleb128 0x1
 5604 10ef 9C       		.byte	0x9c
 5605 10f0 13110000 		.4byte	0x1113
 5606 10f4 1A       		.uleb128 0x1a
 5607 10f5 DA050000 		.4byte	.LASF194
 5608 10f9 01       		.byte	0x1
 5609 10fa 8905     		.2byte	0x589
 5610 10fc 9F0D0000 		.4byte	0xd9f
 5611 1100 02       		.uleb128 0x2
 5612 1101 91       		.byte	0x91
 5613 1102 74       		.sleb128 -12
 5614 1103 1A       		.uleb128 0x1a
 5615 1104 38140000 		.4byte	.LASF258
 5616 1108 01       		.byte	0x1
 5617 1109 8905     		.2byte	0x589
 5618 110b CE000000 		.4byte	0xce
 5619 110f 02       		.uleb128 0x2
 5620 1110 91       		.byte	0x91
 5621 1111 70       		.sleb128 -16
 5622 1112 00       		.byte	0
 5623 1113 1B       		.uleb128 0x1b
 5624 1114 14000000 		.4byte	.LASF270
 5625 1118 01       		.byte	0x1
 5626 1119 3F06     		.2byte	0x63f
 5627 111b 00000000 		.4byte	.LFB209
 5628 111f 34000000 		.4byte	.LFE209-.LFB209
 5629 1123 01       		.uleb128 0x1
 5630 1124 9C       		.byte	0x9c
 5631 1125 48110000 		.4byte	0x1148
 5632 1129 1A       		.uleb128 0x1a
 5633 112a DA050000 		.4byte	.LASF194
 5634 112e 01       		.byte	0x1
 5635 112f 3F06     		.2byte	0x63f
 5636 1131 9F0D0000 		.4byte	0xd9f
 5637 1135 02       		.uleb128 0x2
 5638 1136 91       		.byte	0x91
 5639 1137 74       		.sleb128 -12
 5640 1138 1A       		.uleb128 0x1a
 5641 1139 38140000 		.4byte	.LASF258
 5642 113d 01       		.byte	0x1
 5643 113e 3F06     		.2byte	0x63f
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 177


 5644 1140 CE000000 		.4byte	0xce
 5645 1144 02       		.uleb128 0x2
 5646 1145 91       		.byte	0x91
 5647 1146 70       		.sleb128 -16
 5648 1147 00       		.byte	0
 5649 1148 19       		.uleb128 0x19
 5650 1149 CB020000 		.4byte	.LASF271
 5651 114d 01       		.byte	0x1
 5652 114e 6E06     		.2byte	0x66e
 5653 1150 CE000000 		.4byte	0xce
 5654 1154 00000000 		.4byte	.LFB211
 5655 1158 1A000000 		.4byte	.LFE211-.LFB211
 5656 115c 01       		.uleb128 0x1
 5657 115d 9C       		.byte	0x9c
 5658 115e 72110000 		.4byte	0x1172
 5659 1162 1A       		.uleb128 0x1a
 5660 1163 DA050000 		.4byte	.LASF194
 5661 1167 01       		.byte	0x1
 5662 1168 6E06     		.2byte	0x66e
 5663 116a 5F0D0000 		.4byte	0xd5f
 5664 116e 02       		.uleb128 0x2
 5665 116f 91       		.byte	0x91
 5666 1170 74       		.sleb128 -12
 5667 1171 00       		.byte	0
 5668 1172 1B       		.uleb128 0x1b
 5669 1173 95020000 		.4byte	.LASF272
 5670 1177 01       		.byte	0x1
 5671 1178 8206     		.2byte	0x682
 5672 117a 00000000 		.4byte	.LFB212
 5673 117e 38000000 		.4byte	.LFE212-.LFB212
 5674 1182 01       		.uleb128 0x1
 5675 1183 9C       		.byte	0x9c
 5676 1184 A7110000 		.4byte	0x11a7
 5677 1188 1A       		.uleb128 0x1a
 5678 1189 DA050000 		.4byte	.LASF194
 5679 118d 01       		.byte	0x1
 5680 118e 8206     		.2byte	0x682
 5681 1190 9F0D0000 		.4byte	0xd9f
 5682 1194 02       		.uleb128 0x2
 5683 1195 91       		.byte	0x91
 5684 1196 74       		.sleb128 -12
 5685 1197 1A       		.uleb128 0x1a
 5686 1198 38140000 		.4byte	.LASF258
 5687 119c 01       		.byte	0x1
 5688 119d 8206     		.2byte	0x682
 5689 119f CE000000 		.4byte	0xce
 5690 11a3 02       		.uleb128 0x2
 5691 11a4 91       		.byte	0x91
 5692 11a5 70       		.sleb128 -16
 5693 11a6 00       		.byte	0
 5694 11a7 19       		.uleb128 0x19
 5695 11a8 0E030000 		.4byte	.LASF273
 5696 11ac 01       		.byte	0x1
 5697 11ad 9806     		.2byte	0x698
 5698 11af CE000000 		.4byte	0xce
 5699 11b3 00000000 		.4byte	.LFB213
 5700 11b7 26000000 		.4byte	.LFE213-.LFB213
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 178


 5701 11bb 01       		.uleb128 0x1
 5702 11bc 9C       		.byte	0x9c
 5703 11bd D1110000 		.4byte	0x11d1
 5704 11c1 1A       		.uleb128 0x1a
 5705 11c2 DA050000 		.4byte	.LASF194
 5706 11c6 01       		.byte	0x1
 5707 11c7 9806     		.2byte	0x698
 5708 11c9 5F0D0000 		.4byte	0xd5f
 5709 11cd 02       		.uleb128 0x2
 5710 11ce 91       		.byte	0x91
 5711 11cf 74       		.sleb128 -12
 5712 11d0 00       		.byte	0
 5713 11d1 19       		.uleb128 0x19
 5714 11d2 FE0D0000 		.4byte	.LASF274
 5715 11d6 01       		.byte	0x1
 5716 11d7 AC06     		.2byte	0x6ac
 5717 11d9 930C0000 		.4byte	0xc93
 5718 11dd 00000000 		.4byte	.LFB214
 5719 11e1 28000000 		.4byte	.LFE214-.LFB214
 5720 11e5 01       		.uleb128 0x1
 5721 11e6 9C       		.byte	0x9c
 5722 11e7 FB110000 		.4byte	0x11fb
 5723 11eb 1A       		.uleb128 0x1a
 5724 11ec DA050000 		.4byte	.LASF194
 5725 11f0 01       		.byte	0x1
 5726 11f1 AC06     		.2byte	0x6ac
 5727 11f3 5F0D0000 		.4byte	0xd5f
 5728 11f7 02       		.uleb128 0x2
 5729 11f8 91       		.byte	0x91
 5730 11f9 74       		.sleb128 -12
 5731 11fa 00       		.byte	0
 5732 11fb 19       		.uleb128 0x19
 5733 11fc 990B0000 		.4byte	.LASF275
 5734 1200 01       		.byte	0x1
 5735 1201 BF06     		.2byte	0x6bf
 5736 1203 930C0000 		.4byte	0xc93
 5737 1207 00000000 		.4byte	.LFB215
 5738 120b 28000000 		.4byte	.LFE215-.LFB215
 5739 120f 01       		.uleb128 0x1
 5740 1210 9C       		.byte	0x9c
 5741 1211 25120000 		.4byte	0x1225
 5742 1215 1A       		.uleb128 0x1a
 5743 1216 DA050000 		.4byte	.LASF194
 5744 121a 01       		.byte	0x1
 5745 121b BF06     		.2byte	0x6bf
 5746 121d 5F0D0000 		.4byte	0xd5f
 5747 1221 02       		.uleb128 0x2
 5748 1222 91       		.byte	0x91
 5749 1223 74       		.sleb128 -12
 5750 1224 00       		.byte	0
 5751 1225 1C       		.uleb128 0x1c
 5752 1226 3F0E0000 		.4byte	.LASF276
 5753 122a 02       		.byte	0x2
 5754 122b C003     		.2byte	0x3c0
 5755 122d 00000000 		.4byte	.LFB218
 5756 1231 20000000 		.4byte	.LFE218-.LFB218
 5757 1235 01       		.uleb128 0x1
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 179


 5758 1236 9C       		.byte	0x9c
 5759 1237 4B120000 		.4byte	0x124b
 5760 123b 1A       		.uleb128 0x1a
 5761 123c DA050000 		.4byte	.LASF194
 5762 1240 02       		.byte	0x2
 5763 1241 C003     		.2byte	0x3c0
 5764 1243 9F0D0000 		.4byte	0xd9f
 5765 1247 02       		.uleb128 0x2
 5766 1248 91       		.byte	0x91
 5767 1249 74       		.sleb128 -12
 5768 124a 00       		.byte	0
 5769 124b 19       		.uleb128 0x19
 5770 124c 090A0000 		.4byte	.LASF277
 5771 1250 02       		.byte	0x2
 5772 1251 E303     		.2byte	0x3e3
 5773 1253 930C0000 		.4byte	0xc93
 5774 1257 00000000 		.4byte	.LFB219
 5775 125b 26000000 		.4byte	.LFE219-.LFB219
 5776 125f 01       		.uleb128 0x1
 5777 1260 9C       		.byte	0x9c
 5778 1261 75120000 		.4byte	0x1275
 5779 1265 1A       		.uleb128 0x1a
 5780 1266 DA050000 		.4byte	.LASF194
 5781 126a 02       		.byte	0x2
 5782 126b E303     		.2byte	0x3e3
 5783 126d 5F0D0000 		.4byte	0xd5f
 5784 1271 02       		.uleb128 0x2
 5785 1272 91       		.byte	0x91
 5786 1273 74       		.sleb128 -12
 5787 1274 00       		.byte	0
 5788 1275 1D       		.uleb128 0x1d
 5789 1276 10130000 		.4byte	.LASF278
 5790 127a 02       		.byte	0x2
 5791 127b 7204     		.2byte	0x472
 5792 127d CE000000 		.4byte	0xce
 5793 1281 00000000 		.4byte	.LFB224
 5794 1285 18000000 		.4byte	.LFE224-.LFB224
 5795 1289 01       		.uleb128 0x1
 5796 128a 9C       		.byte	0x9c
 5797 128b 9F120000 		.4byte	0x129f
 5798 128f 1A       		.uleb128 0x1a
 5799 1290 DA050000 		.4byte	.LASF194
 5800 1294 02       		.byte	0x2
 5801 1295 7204     		.2byte	0x472
 5802 1297 5F0D0000 		.4byte	0xd5f
 5803 129b 02       		.uleb128 0x2
 5804 129c 91       		.byte	0x91
 5805 129d 74       		.sleb128 -12
 5806 129e 00       		.byte	0
 5807 129f 1B       		.uleb128 0x1b
 5808 12a0 13120000 		.4byte	.LASF279
 5809 12a4 02       		.byte	0x2
 5810 12a5 8504     		.2byte	0x485
 5811 12a7 00000000 		.4byte	.LFB225
 5812 12ab 16000000 		.4byte	.LFE225-.LFB225
 5813 12af 01       		.uleb128 0x1
 5814 12b0 9C       		.byte	0x9c
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 180


 5815 12b1 C5120000 		.4byte	0x12c5
 5816 12b5 1A       		.uleb128 0x1a
 5817 12b6 DA050000 		.4byte	.LASF194
 5818 12ba 02       		.byte	0x2
 5819 12bb 8504     		.2byte	0x485
 5820 12bd 9F0D0000 		.4byte	0xd9f
 5821 12c1 02       		.uleb128 0x2
 5822 12c2 91       		.byte	0x91
 5823 12c3 74       		.sleb128 -12
 5824 12c4 00       		.byte	0
 5825 12c5 1D       		.uleb128 0x1d
 5826 12c6 BA010000 		.4byte	.LASF280
 5827 12ca 02       		.byte	0x2
 5828 12cb DF04     		.2byte	0x4df
 5829 12cd 930C0000 		.4byte	0xc93
 5830 12d1 00000000 		.4byte	.LFB229
 5831 12d5 18000000 		.4byte	.LFE229-.LFB229
 5832 12d9 01       		.uleb128 0x1
 5833 12da 9C       		.byte	0x9c
 5834 12db EF120000 		.4byte	0x12ef
 5835 12df 1A       		.uleb128 0x1a
 5836 12e0 DA050000 		.4byte	.LASF194
 5837 12e4 02       		.byte	0x2
 5838 12e5 DF04     		.2byte	0x4df
 5839 12e7 5F0D0000 		.4byte	0xd5f
 5840 12eb 02       		.uleb128 0x2
 5841 12ec 91       		.byte	0x91
 5842 12ed 74       		.sleb128 -12
 5843 12ee 00       		.byte	0
 5844 12ef 1B       		.uleb128 0x1b
 5845 12f0 7A040000 		.4byte	.LASF281
 5846 12f4 02       		.byte	0x2
 5847 12f5 F504     		.2byte	0x4f5
 5848 12f7 00000000 		.4byte	.LFB230
 5849 12fb 16000000 		.4byte	.LFE230-.LFB230
 5850 12ff 01       		.uleb128 0x1
 5851 1300 9C       		.byte	0x9c
 5852 1301 15130000 		.4byte	0x1315
 5853 1305 1A       		.uleb128 0x1a
 5854 1306 DA050000 		.4byte	.LASF194
 5855 130a 02       		.byte	0x2
 5856 130b F504     		.2byte	0x4f5
 5857 130d 9F0D0000 		.4byte	0xd9f
 5858 1311 02       		.uleb128 0x2
 5859 1312 91       		.byte	0x91
 5860 1313 74       		.sleb128 -12
 5861 1314 00       		.byte	0
 5862 1315 1D       		.uleb128 0x1d
 5863 1316 62130000 		.4byte	.LASF282
 5864 131a 02       		.byte	0x2
 5865 131b 4F05     		.2byte	0x54f
 5866 131d CE000000 		.4byte	0xce
 5867 1321 00000000 		.4byte	.LFB233
 5868 1325 18000000 		.4byte	.LFE233-.LFB233
 5869 1329 01       		.uleb128 0x1
 5870 132a 9C       		.byte	0x9c
 5871 132b 3F130000 		.4byte	0x133f
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 181


 5872 132f 1A       		.uleb128 0x1a
 5873 1330 DA050000 		.4byte	.LASF194
 5874 1334 02       		.byte	0x2
 5875 1335 4F05     		.2byte	0x54f
 5876 1337 5F0D0000 		.4byte	0xd5f
 5877 133b 02       		.uleb128 0x2
 5878 133c 91       		.byte	0x91
 5879 133d 74       		.sleb128 -12
 5880 133e 00       		.byte	0
 5881 133f 19       		.uleb128 0x19
 5882 1340 5B040000 		.4byte	.LASF283
 5883 1344 02       		.byte	0x2
 5884 1345 2406     		.2byte	0x624
 5885 1347 CE000000 		.4byte	0xce
 5886 134b 00000000 		.4byte	.LFB239
 5887 134f 4E000000 		.4byte	.LFE239-.LFB239
 5888 1353 01       		.uleb128 0x1
 5889 1354 9C       		.byte	0x9c
 5890 1355 78130000 		.4byte	0x1378
 5891 1359 1A       		.uleb128 0x1a
 5892 135a 1A080000 		.4byte	.LASF216
 5893 135e 02       		.byte	0x2
 5894 135f 2406     		.2byte	0x624
 5895 1361 400B0000 		.4byte	0xb40
 5896 1365 02       		.uleb128 0x2
 5897 1366 91       		.byte	0x91
 5898 1367 77       		.sleb128 -9
 5899 1368 1A       		.uleb128 0x1a
 5900 1369 A30C0000 		.4byte	.LASF217
 5901 136d 02       		.byte	0x2
 5902 136e 2406     		.2byte	0x624
 5903 1370 720B0000 		.4byte	0xb72
 5904 1374 02       		.uleb128 0x2
 5905 1375 91       		.byte	0x91
 5906 1376 76       		.sleb128 -10
 5907 1377 00       		.byte	0
 5908 1378 1E       		.uleb128 0x1e
 5909 1379 8B110000 		.4byte	.LASF289
 5910 137d 03       		.byte	0x3
 5911 137e 37       		.byte	0x37
 5912 137f E80A0000 		.4byte	0xae8
 5913 1383 00000000 		.4byte	.LFB240
 5914 1387 3C030000 		.4byte	.LFE240-.LFB240
 5915 138b 01       		.uleb128 0x1
 5916 138c 9C       		.byte	0x9c
 5917 138d D8130000 		.4byte	0x13d8
 5918 1391 1F       		.uleb128 0x1f
 5919 1392 DA050000 		.4byte	.LASF194
 5920 1396 03       		.byte	0x3
 5921 1397 37       		.byte	0x37
 5922 1398 9F0D0000 		.4byte	0xd9f
 5923 139c 02       		.uleb128 0x2
 5924 139d 91       		.byte	0x91
 5925 139e 64       		.sleb128 -28
 5926 139f 1F       		.uleb128 0x1f
 5927 13a0 DD0C0000 		.4byte	.LASF284
 5928 13a4 03       		.byte	0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 182


 5929 13a5 37       		.byte	0x37
 5930 13a6 D8130000 		.4byte	0x13d8
 5931 13aa 02       		.uleb128 0x2
 5932 13ab 91       		.byte	0x91
 5933 13ac 60       		.sleb128 -32
 5934 13ad 1F       		.uleb128 0x1f
 5935 13ae 970A0000 		.4byte	.LASF195
 5936 13b2 03       		.byte	0x3
 5937 13b3 37       		.byte	0x37
 5938 13b4 E3130000 		.4byte	0x13e3
 5939 13b8 02       		.uleb128 0x2
 5940 13b9 91       		.byte	0x91
 5941 13ba 5C       		.sleb128 -36
 5942 13bb 20       		.uleb128 0x20
 5943 13bc C3080000 		.4byte	.LASF285
 5944 13c0 03       		.byte	0x3
 5945 13c1 4D       		.byte	0x4d
 5946 13c2 CE000000 		.4byte	0xce
 5947 13c6 02       		.uleb128 0x2
 5948 13c7 91       		.byte	0x91
 5949 13c8 6C       		.sleb128 -20
 5950 13c9 20       		.uleb128 0x20
 5951 13ca 160D0000 		.4byte	.LASF286
 5952 13ce 03       		.byte	0x3
 5953 13cf 4F       		.byte	0x4f
 5954 13d0 930C0000 		.4byte	0xc93
 5955 13d4 02       		.uleb128 0x2
 5956 13d5 91       		.byte	0x91
 5957 13d6 6B       		.sleb128 -21
 5958 13d7 00       		.byte	0
 5959 13d8 15       		.uleb128 0x15
 5960 13d9 04       		.byte	0x4
 5961 13da DE130000 		.4byte	0x13de
 5962 13de 06       		.uleb128 0x6
 5963 13df 9A0C0000 		.4byte	0xc9a
 5964 13e3 15       		.uleb128 0x15
 5965 13e4 04       		.byte	0x4
 5966 13e5 290D0000 		.4byte	0xd29
 5967 13e9 21       		.uleb128 0x21
 5968 13ea 1E0A0000 		.4byte	.LASF287
 5969 13ee 03       		.byte	0x3
 5970 13ef 9B       		.byte	0x9b
 5971 13f0 00000000 		.4byte	.LFB241
 5972 13f4 7C000000 		.4byte	.LFE241-.LFB241
 5973 13f8 01       		.uleb128 0x1
 5974 13f9 9C       		.byte	0x9c
 5975 13fa 0D140000 		.4byte	0x140d
 5976 13fe 1F       		.uleb128 0x1f
 5977 13ff DA050000 		.4byte	.LASF194
 5978 1403 03       		.byte	0x3
 5979 1404 9B       		.byte	0x9b
 5980 1405 9F0D0000 		.4byte	0xd9f
 5981 1409 02       		.uleb128 0x2
 5982 140a 91       		.byte	0x91
 5983 140b 74       		.sleb128 -12
 5984 140c 00       		.byte	0
 5985 140d 22       		.uleb128 0x22
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 183


 5986 140e 25140000 		.4byte	.LASF288
 5987 1412 03       		.byte	0x3
 5988 1413 D0       		.byte	0xd0
 5989 1414 00000000 		.4byte	.LFB242
 5990 1418 4E000000 		.4byte	.LFE242-.LFB242
 5991 141c 01       		.uleb128 0x1
 5992 141d 9C       		.byte	0x9c
 5993 141e 3F140000 		.4byte	0x143f
 5994 1422 1F       		.uleb128 0x1f
 5995 1423 DA050000 		.4byte	.LASF194
 5996 1427 03       		.byte	0x3
 5997 1428 D0       		.byte	0xd0
 5998 1429 9F0D0000 		.4byte	0xd9f
 5999 142d 02       		.uleb128 0x2
 6000 142e 91       		.byte	0x91
 6001 142f 74       		.sleb128 -12
 6002 1430 1F       		.uleb128 0x1f
 6003 1431 970A0000 		.4byte	.LASF195
 6004 1435 03       		.byte	0x3
 6005 1436 D0       		.byte	0xd0
 6006 1437 E3130000 		.4byte	0x13e3
 6007 143b 02       		.uleb128 0x2
 6008 143c 91       		.byte	0x91
 6009 143d 70       		.sleb128 -16
 6010 143e 00       		.byte	0
 6011 143f 23       		.uleb128 0x23
 6012 1440 AE020000 		.4byte	.LASF290
 6013 1444 03       		.byte	0x3
 6014 1445 1F01     		.2byte	0x11f
 6015 1447 4C0A0000 		.4byte	0xa4c
 6016 144b 00000000 		.4byte	.LFB243
 6017 144f 44010000 		.4byte	.LFE243-.LFB243
 6018 1453 01       		.uleb128 0x1
 6019 1454 9C       		.byte	0x9c
 6020 1455 A5140000 		.4byte	0x14a5
 6021 1459 1A       		.uleb128 0x1a
 6022 145a 1E0E0000 		.4byte	.LASF291
 6023 145e 03       		.byte	0x3
 6024 145f 1F01     		.2byte	0x11f
 6025 1461 BC0A0000 		.4byte	0xabc
 6026 1465 02       		.uleb128 0x2
 6027 1466 91       		.byte	0x91
 6028 1467 64       		.sleb128 -28
 6029 1468 1A       		.uleb128 0x1a
 6030 1469 A5030000 		.4byte	.LASF292
 6031 146d 03       		.byte	0x3
 6032 146e 1F01     		.2byte	0x11f
 6033 1470 7E0A0000 		.4byte	0xa7e
 6034 1474 02       		.uleb128 0x2
 6035 1475 91       		.byte	0x91
 6036 1476 63       		.sleb128 -29
 6037 1477 24       		.uleb128 0x24
 6038 1478 D50C0000 		.4byte	.LASF293
 6039 147c 03       		.byte	0x3
 6040 147d 2101     		.2byte	0x121
 6041 147f 9F0D0000 		.4byte	0xd9f
 6042 1483 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 184


 6043 1484 91       		.byte	0x91
 6044 1485 70       		.sleb128 -16
 6045 1486 24       		.uleb128 0x24
 6046 1487 EE0F0000 		.4byte	.LASF294
 6047 148b 03       		.byte	0x3
 6048 148c 2201     		.2byte	0x122
 6049 148e E3130000 		.4byte	0x13e3
 6050 1492 02       		.uleb128 0x2
 6051 1493 91       		.byte	0x91
 6052 1494 6C       		.sleb128 -20
 6053 1495 24       		.uleb128 0x24
 6054 1496 ED0C0000 		.4byte	.LASF295
 6055 149a 03       		.byte	0x3
 6056 149b 2401     		.2byte	0x124
 6057 149d 4C0A0000 		.4byte	0xa4c
 6058 14a1 02       		.uleb128 0x2
 6059 14a2 91       		.byte	0x91
 6060 14a3 74       		.sleb128 -12
 6061 14a4 00       		.byte	0
 6062 14a5 23       		.uleb128 0x23
 6063 14a6 72080000 		.4byte	.LASF296
 6064 14aa 03       		.byte	0x3
 6065 14ab CB01     		.2byte	0x1cb
 6066 14ad 4C0A0000 		.4byte	0xa4c
 6067 14b1 00000000 		.4byte	.LFB244
 6068 14b5 BC000000 		.4byte	.LFE244-.LFB244
 6069 14b9 01       		.uleb128 0x1
 6070 14ba 9C       		.byte	0x9c
 6071 14bb 0B150000 		.4byte	0x150b
 6072 14bf 1A       		.uleb128 0x1a
 6073 14c0 1E0E0000 		.4byte	.LASF291
 6074 14c4 03       		.byte	0x3
 6075 14c5 CB01     		.2byte	0x1cb
 6076 14c7 BC0A0000 		.4byte	0xabc
 6077 14cb 02       		.uleb128 0x2
 6078 14cc 91       		.byte	0x91
 6079 14cd 64       		.sleb128 -28
 6080 14ce 1A       		.uleb128 0x1a
 6081 14cf A5030000 		.4byte	.LASF292
 6082 14d3 03       		.byte	0x3
 6083 14d4 CB01     		.2byte	0x1cb
 6084 14d6 7E0A0000 		.4byte	0xa7e
 6085 14da 02       		.uleb128 0x2
 6086 14db 91       		.byte	0x91
 6087 14dc 63       		.sleb128 -29
 6088 14dd 24       		.uleb128 0x24
 6089 14de D50C0000 		.4byte	.LASF293
 6090 14e2 03       		.byte	0x3
 6091 14e3 CD01     		.2byte	0x1cd
 6092 14e5 9F0D0000 		.4byte	0xd9f
 6093 14e9 02       		.uleb128 0x2
 6094 14ea 91       		.byte	0x91
 6095 14eb 70       		.sleb128 -16
 6096 14ec 24       		.uleb128 0x24
 6097 14ed EE0F0000 		.4byte	.LASF294
 6098 14f1 03       		.byte	0x3
 6099 14f2 CE01     		.2byte	0x1ce
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 185


 6100 14f4 E3130000 		.4byte	0x13e3
 6101 14f8 02       		.uleb128 0x2
 6102 14f9 91       		.byte	0x91
 6103 14fa 6C       		.sleb128 -20
 6104 14fb 24       		.uleb128 0x24
 6105 14fc ED0C0000 		.4byte	.LASF295
 6106 1500 03       		.byte	0x3
 6107 1501 D001     		.2byte	0x1d0
 6108 1503 4C0A0000 		.4byte	0xa4c
 6109 1507 02       		.uleb128 0x2
 6110 1508 91       		.byte	0x91
 6111 1509 74       		.sleb128 -12
 6112 150a 00       		.byte	0
 6113 150b 23       		.uleb128 0x23
 6114 150c 19100000 		.4byte	.LASF297
 6115 1510 03       		.byte	0x3
 6116 1511 5202     		.2byte	0x252
 6117 1513 E80A0000 		.4byte	0xae8
 6118 1517 00000000 		.4byte	.LFB245
 6119 151b 38010000 		.4byte	.LFE245-.LFB245
 6120 151f 01       		.uleb128 0x1
 6121 1520 9C       		.byte	0x9c
 6122 1521 99150000 		.4byte	0x1599
 6123 1525 1A       		.uleb128 0x1a
 6124 1526 DA050000 		.4byte	.LASF194
 6125 152a 03       		.byte	0x3
 6126 152b 5202     		.2byte	0x252
 6127 152d 9F0D0000 		.4byte	0xd9f
 6128 1531 02       		.uleb128 0x2
 6129 1532 91       		.byte	0x91
 6130 1533 6C       		.sleb128 -20
 6131 1534 1A       		.uleb128 0x1a
 6132 1535 EB110000 		.4byte	.LASF298
 6133 1539 03       		.byte	0x3
 6134 153a 5202     		.2byte	0x252
 6135 153c AE0A0000 		.4byte	0xaae
 6136 1540 02       		.uleb128 0x2
 6137 1541 91       		.byte	0x91
 6138 1542 68       		.sleb128 -24
 6139 1543 1A       		.uleb128 0x1a
 6140 1544 38000000 		.4byte	.LASF299
 6141 1548 03       		.byte	0x3
 6142 1549 5202     		.2byte	0x252
 6143 154b AE0A0000 		.4byte	0xaae
 6144 154f 02       		.uleb128 0x2
 6145 1550 91       		.byte	0x91
 6146 1551 64       		.sleb128 -28
 6147 1552 1A       		.uleb128 0x1a
 6148 1553 5B0B0000 		.4byte	.LASF300
 6149 1557 03       		.byte	0x3
 6150 1558 5202     		.2byte	0x252
 6151 155a CE000000 		.4byte	0xce
 6152 155e 02       		.uleb128 0x2
 6153 155f 91       		.byte	0x91
 6154 1560 60       		.sleb128 -32
 6155 1561 1A       		.uleb128 0x1a
 6156 1562 970A0000 		.4byte	.LASF195
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 186


 6157 1566 03       		.byte	0x3
 6158 1567 5302     		.2byte	0x253
 6159 1569 E3130000 		.4byte	0x13e3
 6160 156d 02       		.uleb128 0x2
 6161 156e 91       		.byte	0x91
 6162 156f 00       		.sleb128 0
 6163 1570 24       		.uleb128 0x24
 6164 1571 ED0C0000 		.4byte	.LASF295
 6165 1575 03       		.byte	0x3
 6166 1576 5902     		.2byte	0x259
 6167 1578 E80A0000 		.4byte	0xae8
 6168 157c 02       		.uleb128 0x2
 6169 157d 91       		.byte	0x91
 6170 157e 74       		.sleb128 -12
 6171 157f 25       		.uleb128 0x25
 6172 1580 68000000 		.4byte	.LBB2
 6173 1584 B8000000 		.4byte	.LBE2-.LBB2
 6174 1588 24       		.uleb128 0x24
 6175 1589 2E0F0000 		.4byte	.LASF301
 6176 158d 03       		.byte	0x3
 6177 158e 5E02     		.2byte	0x25e
 6178 1590 CE000000 		.4byte	0xce
 6179 1594 02       		.uleb128 0x2
 6180 1595 91       		.byte	0x91
 6181 1596 70       		.sleb128 -16
 6182 1597 00       		.byte	0
 6183 1598 00       		.byte	0
 6184 1599 26       		.uleb128 0x26
 6185 159a D6000000 		.4byte	.LASF302
 6186 159e 03       		.byte	0x3
 6187 159f B102     		.2byte	0x2b1
 6188 15a1 00000000 		.4byte	.LFB246
 6189 15a5 56000000 		.4byte	.LFE246-.LFB246
 6190 15a9 01       		.uleb128 0x1
 6191 15aa 9C       		.byte	0x9c
 6192 15ab CE150000 		.4byte	0x15ce
 6193 15af 1A       		.uleb128 0x1a
 6194 15b0 DA050000 		.4byte	.LASF194
 6195 15b4 03       		.byte	0x3
 6196 15b5 B102     		.2byte	0x2b1
 6197 15b7 9F0D0000 		.4byte	0xd9f
 6198 15bb 02       		.uleb128 0x2
 6199 15bc 91       		.byte	0x91
 6200 15bd 74       		.sleb128 -12
 6201 15be 1A       		.uleb128 0x1a
 6202 15bf 970A0000 		.4byte	.LASF195
 6203 15c3 03       		.byte	0x3
 6204 15c4 B102     		.2byte	0x2b1
 6205 15c6 E3130000 		.4byte	0x13e3
 6206 15ca 02       		.uleb128 0x2
 6207 15cb 91       		.byte	0x91
 6208 15cc 70       		.sleb128 -16
 6209 15cd 00       		.byte	0
 6210 15ce 27       		.uleb128 0x27
 6211 15cf 0C020000 		.4byte	.LASF303
 6212 15d3 03       		.byte	0x3
 6213 15d4 DE02     		.2byte	0x2de
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 187


 6214 15d6 CE000000 		.4byte	0xce
 6215 15da 00000000 		.4byte	.LFB247
 6216 15de 1A000000 		.4byte	.LFE247-.LFB247
 6217 15e2 01       		.uleb128 0x1
 6218 15e3 9C       		.byte	0x9c
 6219 15e4 07160000 		.4byte	0x1607
 6220 15e8 1A       		.uleb128 0x1a
 6221 15e9 DA050000 		.4byte	.LASF194
 6222 15ed 03       		.byte	0x3
 6223 15ee DE02     		.2byte	0x2de
 6224 15f0 5F0D0000 		.4byte	0xd5f
 6225 15f4 02       		.uleb128 0x2
 6226 15f5 91       		.byte	0x91
 6227 15f6 74       		.sleb128 -12
 6228 15f7 1A       		.uleb128 0x1a
 6229 15f8 970A0000 		.4byte	.LASF195
 6230 15fc 03       		.byte	0x3
 6231 15fd DE02     		.2byte	0x2de
 6232 15ff 07160000 		.4byte	0x1607
 6233 1603 02       		.uleb128 0x2
 6234 1604 91       		.byte	0x91
 6235 1605 70       		.sleb128 -16
 6236 1606 00       		.byte	0
 6237 1607 15       		.uleb128 0x15
 6238 1608 04       		.byte	0x4
 6239 1609 0D160000 		.4byte	0x160d
 6240 160d 06       		.uleb128 0x6
 6241 160e 290D0000 		.4byte	0xd29
 6242 1612 27       		.uleb128 0x27
 6243 1613 770E0000 		.4byte	.LASF304
 6244 1617 03       		.byte	0x3
 6245 1618 0003     		.2byte	0x300
 6246 161a CE000000 		.4byte	0xce
 6247 161e 00000000 		.4byte	.LFB248
 6248 1622 1A000000 		.4byte	.LFE248-.LFB248
 6249 1626 01       		.uleb128 0x1
 6250 1627 9C       		.byte	0x9c
 6251 1628 4B160000 		.4byte	0x164b
 6252 162c 1A       		.uleb128 0x1a
 6253 162d DA050000 		.4byte	.LASF194
 6254 1631 03       		.byte	0x3
 6255 1632 0003     		.2byte	0x300
 6256 1634 5F0D0000 		.4byte	0xd5f
 6257 1638 02       		.uleb128 0x2
 6258 1639 91       		.byte	0x91
 6259 163a 74       		.sleb128 -12
 6260 163b 1A       		.uleb128 0x1a
 6261 163c 970A0000 		.4byte	.LASF195
 6262 1640 03       		.byte	0x3
 6263 1641 0003     		.2byte	0x300
 6264 1643 07160000 		.4byte	0x1607
 6265 1647 02       		.uleb128 0x2
 6266 1648 91       		.byte	0x91
 6267 1649 70       		.sleb128 -16
 6268 164a 00       		.byte	0
 6269 164b 26       		.uleb128 0x26
 6270 164c 8A070000 		.4byte	.LASF305
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 188


 6271 1650 03       		.byte	0x3
 6272 1651 1B03     		.2byte	0x31b
 6273 1653 00000000 		.4byte	.LFB249
 6274 1657 36010000 		.4byte	.LFE249-.LFB249
 6275 165b 01       		.uleb128 0x1
 6276 165c 9C       		.byte	0x9c
 6277 165d 8F160000 		.4byte	0x168f
 6278 1661 1A       		.uleb128 0x1a
 6279 1662 DA050000 		.4byte	.LASF194
 6280 1666 03       		.byte	0x3
 6281 1667 1B03     		.2byte	0x31b
 6282 1669 9F0D0000 		.4byte	0xd9f
 6283 166d 02       		.uleb128 0x2
 6284 166e 91       		.byte	0x91
 6285 166f 6C       		.sleb128 -20
 6286 1670 1A       		.uleb128 0x1a
 6287 1671 970A0000 		.4byte	.LASF195
 6288 1675 03       		.byte	0x3
 6289 1676 1B03     		.2byte	0x31b
 6290 1678 E3130000 		.4byte	0x13e3
 6291 167c 02       		.uleb128 0x2
 6292 167d 91       		.byte	0x91
 6293 167e 68       		.sleb128 -24
 6294 167f 24       		.uleb128 0x24
 6295 1680 99000000 		.4byte	.LASF306
 6296 1684 03       		.byte	0x3
 6297 1685 1D03     		.2byte	0x31d
 6298 1687 930C0000 		.4byte	0xc93
 6299 168b 02       		.uleb128 0x2
 6300 168c 91       		.byte	0x91
 6301 168d 77       		.sleb128 -9
 6302 168e 00       		.byte	0
 6303 168f 1B       		.uleb128 0x1b
 6304 1690 790A0000 		.4byte	.LASF307
 6305 1694 03       		.byte	0x3
 6306 1695 7A03     		.2byte	0x37a
 6307 1697 00000000 		.4byte	.LFB250
 6308 169b DC000000 		.4byte	.LFE250-.LFB250
 6309 169f 01       		.uleb128 0x1
 6310 16a0 9C       		.byte	0x9c
 6311 16a1 09170000 		.4byte	0x1709
 6312 16a5 1A       		.uleb128 0x1a
 6313 16a6 DA050000 		.4byte	.LASF194
 6314 16aa 03       		.byte	0x3
 6315 16ab 7A03     		.2byte	0x37a
 6316 16ad 9F0D0000 		.4byte	0xd9f
 6317 16b1 02       		.uleb128 0x2
 6318 16b2 91       		.byte	0x91
 6319 16b3 64       		.sleb128 -28
 6320 16b4 1A       		.uleb128 0x1a
 6321 16b5 970A0000 		.4byte	.LASF195
 6322 16b9 03       		.byte	0x3
 6323 16ba 7A03     		.2byte	0x37a
 6324 16bc E3130000 		.4byte	0x13e3
 6325 16c0 02       		.uleb128 0x2
 6326 16c1 91       		.byte	0x91
 6327 16c2 60       		.sleb128 -32
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 189


 6328 16c3 24       		.uleb128 0x24
 6329 16c4 5F030000 		.4byte	.LASF308
 6330 16c8 03       		.byte	0x3
 6331 16c9 7D03     		.2byte	0x37d
 6332 16cb CE000000 		.4byte	0xce
 6333 16cf 02       		.uleb128 0x2
 6334 16d0 91       		.byte	0x91
 6335 16d1 74       		.sleb128 -12
 6336 16d2 28       		.uleb128 0x28
 6337 16d3 42000000 		.4byte	.LBB3
 6338 16d7 34000000 		.4byte	.LBE3-.LBB3
 6339 16db EF160000 		.4byte	0x16ef
 6340 16df 29       		.uleb128 0x29
 6341 16e0 62756600 		.ascii	"buf\000"
 6342 16e4 03       		.byte	0x3
 6343 16e5 8C03     		.2byte	0x38c
 6344 16e7 09170000 		.4byte	0x1709
 6345 16eb 02       		.uleb128 0x2
 6346 16ec 91       		.byte	0x91
 6347 16ed 70       		.sleb128 -16
 6348 16ee 00       		.byte	0
 6349 16ef 25       		.uleb128 0x25
 6350 16f0 9E000000 		.4byte	.LBB4
 6351 16f4 36000000 		.4byte	.LBE4-.LBB4
 6352 16f8 24       		.uleb128 0x24
 6353 16f9 2C030000 		.4byte	.LASF247
 6354 16fd 03       		.byte	0x3
 6355 16fe A003     		.2byte	0x3a0
 6356 1700 CE000000 		.4byte	0xce
 6357 1704 02       		.uleb128 0x2
 6358 1705 91       		.byte	0x91
 6359 1706 6C       		.sleb128 -20
 6360 1707 00       		.byte	0
 6361 1708 00       		.byte	0
 6362 1709 15       		.uleb128 0x15
 6363 170a 04       		.byte	0x4
 6364 170b A2000000 		.4byte	0xa2
 6365 170f 1B       		.uleb128 0x1b
 6366 1710 750B0000 		.4byte	.LASF309
 6367 1714 03       		.byte	0x3
 6368 1715 BB03     		.2byte	0x3bb
 6369 1717 00000000 		.4byte	.LFB251
 6370 171b D2000000 		.4byte	.LFE251-.LFB251
 6371 171f 01       		.uleb128 0x1
 6372 1720 9C       		.byte	0x9c
 6373 1721 7B170000 		.4byte	0x177b
 6374 1725 1A       		.uleb128 0x1a
 6375 1726 DA050000 		.4byte	.LASF194
 6376 172a 03       		.byte	0x3
 6377 172b BB03     		.2byte	0x3bb
 6378 172d 9F0D0000 		.4byte	0xd9f
 6379 1731 02       		.uleb128 0x2
 6380 1732 91       		.byte	0x91
 6381 1733 64       		.sleb128 -28
 6382 1734 1A       		.uleb128 0x1a
 6383 1735 970A0000 		.4byte	.LASF195
 6384 1739 03       		.byte	0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 190


 6385 173a BB03     		.2byte	0x3bb
 6386 173c E3130000 		.4byte	0x13e3
 6387 1740 02       		.uleb128 0x2
 6388 1741 91       		.byte	0x91
 6389 1742 60       		.sleb128 -32
 6390 1743 24       		.uleb128 0x24
 6391 1744 5F030000 		.4byte	.LASF308
 6392 1748 03       		.byte	0x3
 6393 1749 BD03     		.2byte	0x3bd
 6394 174b CE000000 		.4byte	0xce
 6395 174f 02       		.uleb128 0x2
 6396 1750 91       		.byte	0x91
 6397 1751 74       		.sleb128 -12
 6398 1752 24       		.uleb128 0x24
 6399 1753 2E0F0000 		.4byte	.LASF301
 6400 1757 03       		.byte	0x3
 6401 1758 BE03     		.2byte	0x3be
 6402 175a CE000000 		.4byte	0xce
 6403 175e 02       		.uleb128 0x2
 6404 175f 91       		.byte	0x91
 6405 1760 70       		.sleb128 -16
 6406 1761 25       		.uleb128 0x25
 6407 1762 50000000 		.4byte	.LBB5
 6408 1766 34000000 		.4byte	.LBE5-.LBB5
 6409 176a 29       		.uleb128 0x29
 6410 176b 62756600 		.ascii	"buf\000"
 6411 176f 03       		.byte	0x3
 6412 1770 CF03     		.2byte	0x3cf
 6413 1772 09170000 		.4byte	0x1709
 6414 1776 02       		.uleb128 0x2
 6415 1777 91       		.byte	0x91
 6416 1778 6C       		.sleb128 -20
 6417 1779 00       		.byte	0
 6418 177a 00       		.byte	0
 6419 177b 1B       		.uleb128 0x1b
 6420 177c CA0D0000 		.4byte	.LASF310
 6421 1780 03       		.byte	0x3
 6422 1781 FA03     		.2byte	0x3fa
 6423 1783 00000000 		.4byte	.LFB252
 6424 1787 26000000 		.4byte	.LFE252-.LFB252
 6425 178b 01       		.uleb128 0x1
 6426 178c 9C       		.byte	0x9c
 6427 178d B0170000 		.4byte	0x17b0
 6428 1791 1A       		.uleb128 0x1a
 6429 1792 DA050000 		.4byte	.LASF194
 6430 1796 03       		.byte	0x3
 6431 1797 FA03     		.2byte	0x3fa
 6432 1799 5F0D0000 		.4byte	0xd5f
 6433 179d 02       		.uleb128 0x2
 6434 179e 91       		.byte	0x91
 6435 179f 74       		.sleb128 -12
 6436 17a0 1A       		.uleb128 0x1a
 6437 17a1 5B0B0000 		.4byte	.LASF300
 6438 17a5 03       		.byte	0x3
 6439 17a6 FA03     		.2byte	0x3fa
 6440 17a8 CE000000 		.4byte	0xce
 6441 17ac 02       		.uleb128 0x2
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 191


 6442 17ad 91       		.byte	0x91
 6443 17ae 70       		.sleb128 -16
 6444 17af 00       		.byte	0
 6445 17b0 2A       		.uleb128 0x2a
 6446 17b1 7E000000 		.4byte	.LASF311
 6447 17b5 06       		.byte	0x6
 6448 17b6 A7       		.byte	0xa7
 6449 17b7 BB170000 		.4byte	0x17bb
 6450 17bb 15       		.uleb128 0x15
 6451 17bc 04       		.byte	0x4
 6452 17bd C1170000 		.4byte	0x17c1
 6453 17c1 06       		.uleb128 0x6
 6454 17c2 72050000 		.4byte	0x572
 6455 17c6 2B       		.uleb128 0x2b
 6456 17c7 B3070000 		.4byte	.LASF312
 6457 17cb 0B       		.byte	0xb
 6458 17cc F907     		.2byte	0x7f9
 6459 17ce D2170000 		.4byte	0x17d2
 6460 17d2 05       		.uleb128 0x5
 6461 17d3 C3000000 		.4byte	0xc3
 6462 17d7 00       		.byte	0
 6463              		.section	.debug_abbrev,"",%progbits
 6464              	.Ldebug_abbrev0:
 6465 0000 01       		.uleb128 0x1
 6466 0001 11       		.uleb128 0x11
 6467 0002 01       		.byte	0x1
 6468 0003 25       		.uleb128 0x25
 6469 0004 0E       		.uleb128 0xe
 6470 0005 13       		.uleb128 0x13
 6471 0006 0B       		.uleb128 0xb
 6472 0007 03       		.uleb128 0x3
 6473 0008 0E       		.uleb128 0xe
 6474 0009 1B       		.uleb128 0x1b
 6475 000a 0E       		.uleb128 0xe
 6476 000b 55       		.uleb128 0x55
 6477 000c 17       		.uleb128 0x17
 6478 000d 11       		.uleb128 0x11
 6479 000e 01       		.uleb128 0x1
 6480 000f 10       		.uleb128 0x10
 6481 0010 17       		.uleb128 0x17
 6482 0011 00       		.byte	0
 6483 0012 00       		.byte	0
 6484 0013 02       		.uleb128 0x2
 6485 0014 24       		.uleb128 0x24
 6486 0015 00       		.byte	0
 6487 0016 0B       		.uleb128 0xb
 6488 0017 0B       		.uleb128 0xb
 6489 0018 3E       		.uleb128 0x3e
 6490 0019 0B       		.uleb128 0xb
 6491 001a 03       		.uleb128 0x3
 6492 001b 0E       		.uleb128 0xe
 6493 001c 00       		.byte	0
 6494 001d 00       		.byte	0
 6495 001e 03       		.uleb128 0x3
 6496 001f 16       		.uleb128 0x16
 6497 0020 00       		.byte	0
 6498 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 192


 6499 0022 0E       		.uleb128 0xe
 6500 0023 3A       		.uleb128 0x3a
 6501 0024 0B       		.uleb128 0xb
 6502 0025 3B       		.uleb128 0x3b
 6503 0026 0B       		.uleb128 0xb
 6504 0027 49       		.uleb128 0x49
 6505 0028 13       		.uleb128 0x13
 6506 0029 00       		.byte	0
 6507 002a 00       		.byte	0
 6508 002b 04       		.uleb128 0x4
 6509 002c 24       		.uleb128 0x24
 6510 002d 00       		.byte	0
 6511 002e 0B       		.uleb128 0xb
 6512 002f 0B       		.uleb128 0xb
 6513 0030 3E       		.uleb128 0x3e
 6514 0031 0B       		.uleb128 0xb
 6515 0032 03       		.uleb128 0x3
 6516 0033 08       		.uleb128 0x8
 6517 0034 00       		.byte	0
 6518 0035 00       		.byte	0
 6519 0036 05       		.uleb128 0x5
 6520 0037 35       		.uleb128 0x35
 6521 0038 00       		.byte	0
 6522 0039 49       		.uleb128 0x49
 6523 003a 13       		.uleb128 0x13
 6524 003b 00       		.byte	0
 6525 003c 00       		.byte	0
 6526 003d 06       		.uleb128 0x6
 6527 003e 26       		.uleb128 0x26
 6528 003f 00       		.byte	0
 6529 0040 49       		.uleb128 0x49
 6530 0041 13       		.uleb128 0x13
 6531 0042 00       		.byte	0
 6532 0043 00       		.byte	0
 6533 0044 07       		.uleb128 0x7
 6534 0045 01       		.uleb128 0x1
 6535 0046 01       		.byte	0x1
 6536 0047 49       		.uleb128 0x49
 6537 0048 13       		.uleb128 0x13
 6538 0049 01       		.uleb128 0x1
 6539 004a 13       		.uleb128 0x13
 6540 004b 00       		.byte	0
 6541 004c 00       		.byte	0
 6542 004d 08       		.uleb128 0x8
 6543 004e 21       		.uleb128 0x21
 6544 004f 00       		.byte	0
 6545 0050 49       		.uleb128 0x49
 6546 0051 13       		.uleb128 0x13
 6547 0052 2F       		.uleb128 0x2f
 6548 0053 0B       		.uleb128 0xb
 6549 0054 00       		.byte	0
 6550 0055 00       		.byte	0
 6551 0056 09       		.uleb128 0x9
 6552 0057 13       		.uleb128 0x13
 6553 0058 01       		.byte	0x1
 6554 0059 0B       		.uleb128 0xb
 6555 005a 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 193


 6556 005b 3A       		.uleb128 0x3a
 6557 005c 0B       		.uleb128 0xb
 6558 005d 3B       		.uleb128 0x3b
 6559 005e 0B       		.uleb128 0xb
 6560 005f 01       		.uleb128 0x1
 6561 0060 13       		.uleb128 0x13
 6562 0061 00       		.byte	0
 6563 0062 00       		.byte	0
 6564 0063 0A       		.uleb128 0xa
 6565 0064 0D       		.uleb128 0xd
 6566 0065 00       		.byte	0
 6567 0066 03       		.uleb128 0x3
 6568 0067 0E       		.uleb128 0xe
 6569 0068 3A       		.uleb128 0x3a
 6570 0069 0B       		.uleb128 0xb
 6571 006a 3B       		.uleb128 0x3b
 6572 006b 0B       		.uleb128 0xb
 6573 006c 49       		.uleb128 0x49
 6574 006d 13       		.uleb128 0x13
 6575 006e 38       		.uleb128 0x38
 6576 006f 0B       		.uleb128 0xb
 6577 0070 00       		.byte	0
 6578 0071 00       		.byte	0
 6579 0072 0B       		.uleb128 0xb
 6580 0073 21       		.uleb128 0x21
 6581 0074 00       		.byte	0
 6582 0075 49       		.uleb128 0x49
 6583 0076 13       		.uleb128 0x13
 6584 0077 2F       		.uleb128 0x2f
 6585 0078 05       		.uleb128 0x5
 6586 0079 00       		.byte	0
 6587 007a 00       		.byte	0
 6588 007b 0C       		.uleb128 0xc
 6589 007c 13       		.uleb128 0x13
 6590 007d 01       		.byte	0x1
 6591 007e 0B       		.uleb128 0xb
 6592 007f 05       		.uleb128 0x5
 6593 0080 3A       		.uleb128 0x3a
 6594 0081 0B       		.uleb128 0xb
 6595 0082 3B       		.uleb128 0x3b
 6596 0083 0B       		.uleb128 0xb
 6597 0084 01       		.uleb128 0x1
 6598 0085 13       		.uleb128 0x13
 6599 0086 00       		.byte	0
 6600 0087 00       		.byte	0
 6601 0088 0D       		.uleb128 0xd
 6602 0089 0D       		.uleb128 0xd
 6603 008a 00       		.byte	0
 6604 008b 03       		.uleb128 0x3
 6605 008c 0E       		.uleb128 0xe
 6606 008d 3A       		.uleb128 0x3a
 6607 008e 0B       		.uleb128 0xb
 6608 008f 3B       		.uleb128 0x3b
 6609 0090 0B       		.uleb128 0xb
 6610 0091 49       		.uleb128 0x49
 6611 0092 13       		.uleb128 0x13
 6612 0093 38       		.uleb128 0x38
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 194


 6613 0094 05       		.uleb128 0x5
 6614 0095 00       		.byte	0
 6615 0096 00       		.byte	0
 6616 0097 0E       		.uleb128 0xe
 6617 0098 16       		.uleb128 0x16
 6618 0099 00       		.byte	0
 6619 009a 03       		.uleb128 0x3
 6620 009b 0E       		.uleb128 0xe
 6621 009c 3A       		.uleb128 0x3a
 6622 009d 0B       		.uleb128 0xb
 6623 009e 3B       		.uleb128 0x3b
 6624 009f 05       		.uleb128 0x5
 6625 00a0 49       		.uleb128 0x49
 6626 00a1 13       		.uleb128 0x13
 6627 00a2 00       		.byte	0
 6628 00a3 00       		.byte	0
 6629 00a4 0F       		.uleb128 0xf
 6630 00a5 04       		.uleb128 0x4
 6631 00a6 01       		.byte	0x1
 6632 00a7 0B       		.uleb128 0xb
 6633 00a8 0B       		.uleb128 0xb
 6634 00a9 49       		.uleb128 0x49
 6635 00aa 13       		.uleb128 0x13
 6636 00ab 3A       		.uleb128 0x3a
 6637 00ac 0B       		.uleb128 0xb
 6638 00ad 3B       		.uleb128 0x3b
 6639 00ae 05       		.uleb128 0x5
 6640 00af 01       		.uleb128 0x1
 6641 00b0 13       		.uleb128 0x13
 6642 00b1 00       		.byte	0
 6643 00b2 00       		.byte	0
 6644 00b3 10       		.uleb128 0x10
 6645 00b4 28       		.uleb128 0x28
 6646 00b5 00       		.byte	0
 6647 00b6 03       		.uleb128 0x3
 6648 00b7 0E       		.uleb128 0xe
 6649 00b8 1C       		.uleb128 0x1c
 6650 00b9 0B       		.uleb128 0xb
 6651 00ba 00       		.byte	0
 6652 00bb 00       		.byte	0
 6653 00bc 11       		.uleb128 0x11
 6654 00bd 28       		.uleb128 0x28
 6655 00be 00       		.byte	0
 6656 00bf 03       		.uleb128 0x3
 6657 00c0 0E       		.uleb128 0xe
 6658 00c1 1C       		.uleb128 0x1c
 6659 00c2 06       		.uleb128 0x6
 6660 00c3 00       		.byte	0
 6661 00c4 00       		.byte	0
 6662 00c5 12       		.uleb128 0x12
 6663 00c6 13       		.uleb128 0x13
 6664 00c7 01       		.byte	0x1
 6665 00c8 0B       		.uleb128 0xb
 6666 00c9 0B       		.uleb128 0xb
 6667 00ca 3A       		.uleb128 0x3a
 6668 00cb 0B       		.uleb128 0xb
 6669 00cc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 195


 6670 00cd 05       		.uleb128 0x5
 6671 00ce 01       		.uleb128 0x1
 6672 00cf 13       		.uleb128 0x13
 6673 00d0 00       		.byte	0
 6674 00d1 00       		.byte	0
 6675 00d2 13       		.uleb128 0x13
 6676 00d3 0D       		.uleb128 0xd
 6677 00d4 00       		.byte	0
 6678 00d5 03       		.uleb128 0x3
 6679 00d6 0E       		.uleb128 0xe
 6680 00d7 3A       		.uleb128 0x3a
 6681 00d8 0B       		.uleb128 0xb
 6682 00d9 3B       		.uleb128 0x3b
 6683 00da 05       		.uleb128 0x5
 6684 00db 49       		.uleb128 0x49
 6685 00dc 13       		.uleb128 0x13
 6686 00dd 38       		.uleb128 0x38
 6687 00de 0B       		.uleb128 0xb
 6688 00df 00       		.byte	0
 6689 00e0 00       		.byte	0
 6690 00e1 14       		.uleb128 0x14
 6691 00e2 0F       		.uleb128 0xf
 6692 00e3 00       		.byte	0
 6693 00e4 0B       		.uleb128 0xb
 6694 00e5 0B       		.uleb128 0xb
 6695 00e6 00       		.byte	0
 6696 00e7 00       		.byte	0
 6697 00e8 15       		.uleb128 0x15
 6698 00e9 0F       		.uleb128 0xf
 6699 00ea 00       		.byte	0
 6700 00eb 0B       		.uleb128 0xb
 6701 00ec 0B       		.uleb128 0xb
 6702 00ed 49       		.uleb128 0x49
 6703 00ee 13       		.uleb128 0x13
 6704 00ef 00       		.byte	0
 6705 00f0 00       		.byte	0
 6706 00f1 16       		.uleb128 0x16
 6707 00f2 15       		.uleb128 0x15
 6708 00f3 01       		.byte	0x1
 6709 00f4 27       		.uleb128 0x27
 6710 00f5 19       		.uleb128 0x19
 6711 00f6 01       		.uleb128 0x1
 6712 00f7 13       		.uleb128 0x13
 6713 00f8 00       		.byte	0
 6714 00f9 00       		.byte	0
 6715 00fa 17       		.uleb128 0x17
 6716 00fb 05       		.uleb128 0x5
 6717 00fc 00       		.byte	0
 6718 00fd 49       		.uleb128 0x49
 6719 00fe 13       		.uleb128 0x13
 6720 00ff 00       		.byte	0
 6721 0100 00       		.byte	0
 6722 0101 18       		.uleb128 0x18
 6723 0102 13       		.uleb128 0x13
 6724 0103 01       		.byte	0x1
 6725 0104 03       		.uleb128 0x3
 6726 0105 0E       		.uleb128 0xe
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 196


 6727 0106 0B       		.uleb128 0xb
 6728 0107 0B       		.uleb128 0xb
 6729 0108 3A       		.uleb128 0x3a
 6730 0109 0B       		.uleb128 0xb
 6731 010a 3B       		.uleb128 0x3b
 6732 010b 05       		.uleb128 0x5
 6733 010c 01       		.uleb128 0x1
 6734 010d 13       		.uleb128 0x13
 6735 010e 00       		.byte	0
 6736 010f 00       		.byte	0
 6737 0110 19       		.uleb128 0x19
 6738 0111 2E       		.uleb128 0x2e
 6739 0112 01       		.byte	0x1
 6740 0113 03       		.uleb128 0x3
 6741 0114 0E       		.uleb128 0xe
 6742 0115 3A       		.uleb128 0x3a
 6743 0116 0B       		.uleb128 0xb
 6744 0117 3B       		.uleb128 0x3b
 6745 0118 05       		.uleb128 0x5
 6746 0119 27       		.uleb128 0x27
 6747 011a 19       		.uleb128 0x19
 6748 011b 49       		.uleb128 0x49
 6749 011c 13       		.uleb128 0x13
 6750 011d 11       		.uleb128 0x11
 6751 011e 01       		.uleb128 0x1
 6752 011f 12       		.uleb128 0x12
 6753 0120 06       		.uleb128 0x6
 6754 0121 40       		.uleb128 0x40
 6755 0122 18       		.uleb128 0x18
 6756 0123 9742     		.uleb128 0x2117
 6757 0125 19       		.uleb128 0x19
 6758 0126 01       		.uleb128 0x1
 6759 0127 13       		.uleb128 0x13
 6760 0128 00       		.byte	0
 6761 0129 00       		.byte	0
 6762 012a 1A       		.uleb128 0x1a
 6763 012b 05       		.uleb128 0x5
 6764 012c 00       		.byte	0
 6765 012d 03       		.uleb128 0x3
 6766 012e 0E       		.uleb128 0xe
 6767 012f 3A       		.uleb128 0x3a
 6768 0130 0B       		.uleb128 0xb
 6769 0131 3B       		.uleb128 0x3b
 6770 0132 05       		.uleb128 0x5
 6771 0133 49       		.uleb128 0x49
 6772 0134 13       		.uleb128 0x13
 6773 0135 02       		.uleb128 0x2
 6774 0136 18       		.uleb128 0x18
 6775 0137 00       		.byte	0
 6776 0138 00       		.byte	0
 6777 0139 1B       		.uleb128 0x1b
 6778 013a 2E       		.uleb128 0x2e
 6779 013b 01       		.byte	0x1
 6780 013c 03       		.uleb128 0x3
 6781 013d 0E       		.uleb128 0xe
 6782 013e 3A       		.uleb128 0x3a
 6783 013f 0B       		.uleb128 0xb
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 197


 6784 0140 3B       		.uleb128 0x3b
 6785 0141 05       		.uleb128 0x5
 6786 0142 27       		.uleb128 0x27
 6787 0143 19       		.uleb128 0x19
 6788 0144 11       		.uleb128 0x11
 6789 0145 01       		.uleb128 0x1
 6790 0146 12       		.uleb128 0x12
 6791 0147 06       		.uleb128 0x6
 6792 0148 40       		.uleb128 0x40
 6793 0149 18       		.uleb128 0x18
 6794 014a 9642     		.uleb128 0x2116
 6795 014c 19       		.uleb128 0x19
 6796 014d 01       		.uleb128 0x1
 6797 014e 13       		.uleb128 0x13
 6798 014f 00       		.byte	0
 6799 0150 00       		.byte	0
 6800 0151 1C       		.uleb128 0x1c
 6801 0152 2E       		.uleb128 0x2e
 6802 0153 01       		.byte	0x1
 6803 0154 03       		.uleb128 0x3
 6804 0155 0E       		.uleb128 0xe
 6805 0156 3A       		.uleb128 0x3a
 6806 0157 0B       		.uleb128 0xb
 6807 0158 3B       		.uleb128 0x3b
 6808 0159 05       		.uleb128 0x5
 6809 015a 27       		.uleb128 0x27
 6810 015b 19       		.uleb128 0x19
 6811 015c 11       		.uleb128 0x11
 6812 015d 01       		.uleb128 0x1
 6813 015e 12       		.uleb128 0x12
 6814 015f 06       		.uleb128 0x6
 6815 0160 40       		.uleb128 0x40
 6816 0161 18       		.uleb128 0x18
 6817 0162 9742     		.uleb128 0x2117
 6818 0164 19       		.uleb128 0x19
 6819 0165 01       		.uleb128 0x1
 6820 0166 13       		.uleb128 0x13
 6821 0167 00       		.byte	0
 6822 0168 00       		.byte	0
 6823 0169 1D       		.uleb128 0x1d
 6824 016a 2E       		.uleb128 0x2e
 6825 016b 01       		.byte	0x1
 6826 016c 03       		.uleb128 0x3
 6827 016d 0E       		.uleb128 0xe
 6828 016e 3A       		.uleb128 0x3a
 6829 016f 0B       		.uleb128 0xb
 6830 0170 3B       		.uleb128 0x3b
 6831 0171 05       		.uleb128 0x5
 6832 0172 27       		.uleb128 0x27
 6833 0173 19       		.uleb128 0x19
 6834 0174 49       		.uleb128 0x49
 6835 0175 13       		.uleb128 0x13
 6836 0176 11       		.uleb128 0x11
 6837 0177 01       		.uleb128 0x1
 6838 0178 12       		.uleb128 0x12
 6839 0179 06       		.uleb128 0x6
 6840 017a 40       		.uleb128 0x40
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 198


 6841 017b 18       		.uleb128 0x18
 6842 017c 9642     		.uleb128 0x2116
 6843 017e 19       		.uleb128 0x19
 6844 017f 01       		.uleb128 0x1
 6845 0180 13       		.uleb128 0x13
 6846 0181 00       		.byte	0
 6847 0182 00       		.byte	0
 6848 0183 1E       		.uleb128 0x1e
 6849 0184 2E       		.uleb128 0x2e
 6850 0185 01       		.byte	0x1
 6851 0186 3F       		.uleb128 0x3f
 6852 0187 19       		.uleb128 0x19
 6853 0188 03       		.uleb128 0x3
 6854 0189 0E       		.uleb128 0xe
 6855 018a 3A       		.uleb128 0x3a
 6856 018b 0B       		.uleb128 0xb
 6857 018c 3B       		.uleb128 0x3b
 6858 018d 0B       		.uleb128 0xb
 6859 018e 27       		.uleb128 0x27
 6860 018f 19       		.uleb128 0x19
 6861 0190 49       		.uleb128 0x49
 6862 0191 13       		.uleb128 0x13
 6863 0192 11       		.uleb128 0x11
 6864 0193 01       		.uleb128 0x1
 6865 0194 12       		.uleb128 0x12
 6866 0195 06       		.uleb128 0x6
 6867 0196 40       		.uleb128 0x40
 6868 0197 18       		.uleb128 0x18
 6869 0198 9642     		.uleb128 0x2116
 6870 019a 19       		.uleb128 0x19
 6871 019b 01       		.uleb128 0x1
 6872 019c 13       		.uleb128 0x13
 6873 019d 00       		.byte	0
 6874 019e 00       		.byte	0
 6875 019f 1F       		.uleb128 0x1f
 6876 01a0 05       		.uleb128 0x5
 6877 01a1 00       		.byte	0
 6878 01a2 03       		.uleb128 0x3
 6879 01a3 0E       		.uleb128 0xe
 6880 01a4 3A       		.uleb128 0x3a
 6881 01a5 0B       		.uleb128 0xb
 6882 01a6 3B       		.uleb128 0x3b
 6883 01a7 0B       		.uleb128 0xb
 6884 01a8 49       		.uleb128 0x49
 6885 01a9 13       		.uleb128 0x13
 6886 01aa 02       		.uleb128 0x2
 6887 01ab 18       		.uleb128 0x18
 6888 01ac 00       		.byte	0
 6889 01ad 00       		.byte	0
 6890 01ae 20       		.uleb128 0x20
 6891 01af 34       		.uleb128 0x34
 6892 01b0 00       		.byte	0
 6893 01b1 03       		.uleb128 0x3
 6894 01b2 0E       		.uleb128 0xe
 6895 01b3 3A       		.uleb128 0x3a
 6896 01b4 0B       		.uleb128 0xb
 6897 01b5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 199


 6898 01b6 0B       		.uleb128 0xb
 6899 01b7 49       		.uleb128 0x49
 6900 01b8 13       		.uleb128 0x13
 6901 01b9 02       		.uleb128 0x2
 6902 01ba 18       		.uleb128 0x18
 6903 01bb 00       		.byte	0
 6904 01bc 00       		.byte	0
 6905 01bd 21       		.uleb128 0x21
 6906 01be 2E       		.uleb128 0x2e
 6907 01bf 01       		.byte	0x1
 6908 01c0 3F       		.uleb128 0x3f
 6909 01c1 19       		.uleb128 0x19
 6910 01c2 03       		.uleb128 0x3
 6911 01c3 0E       		.uleb128 0xe
 6912 01c4 3A       		.uleb128 0x3a
 6913 01c5 0B       		.uleb128 0xb
 6914 01c6 3B       		.uleb128 0x3b
 6915 01c7 0B       		.uleb128 0xb
 6916 01c8 27       		.uleb128 0x27
 6917 01c9 19       		.uleb128 0x19
 6918 01ca 11       		.uleb128 0x11
 6919 01cb 01       		.uleb128 0x1
 6920 01cc 12       		.uleb128 0x12
 6921 01cd 06       		.uleb128 0x6
 6922 01ce 40       		.uleb128 0x40
 6923 01cf 18       		.uleb128 0x18
 6924 01d0 9742     		.uleb128 0x2117
 6925 01d2 19       		.uleb128 0x19
 6926 01d3 01       		.uleb128 0x1
 6927 01d4 13       		.uleb128 0x13
 6928 01d5 00       		.byte	0
 6929 01d6 00       		.byte	0
 6930 01d7 22       		.uleb128 0x22
 6931 01d8 2E       		.uleb128 0x2e
 6932 01d9 01       		.byte	0x1
 6933 01da 3F       		.uleb128 0x3f
 6934 01db 19       		.uleb128 0x19
 6935 01dc 03       		.uleb128 0x3
 6936 01dd 0E       		.uleb128 0xe
 6937 01de 3A       		.uleb128 0x3a
 6938 01df 0B       		.uleb128 0xb
 6939 01e0 3B       		.uleb128 0x3b
 6940 01e1 0B       		.uleb128 0xb
 6941 01e2 27       		.uleb128 0x27
 6942 01e3 19       		.uleb128 0x19
 6943 01e4 11       		.uleb128 0x11
 6944 01e5 01       		.uleb128 0x1
 6945 01e6 12       		.uleb128 0x12
 6946 01e7 06       		.uleb128 0x6
 6947 01e8 40       		.uleb128 0x40
 6948 01e9 18       		.uleb128 0x18
 6949 01ea 9642     		.uleb128 0x2116
 6950 01ec 19       		.uleb128 0x19
 6951 01ed 01       		.uleb128 0x1
 6952 01ee 13       		.uleb128 0x13
 6953 01ef 00       		.byte	0
 6954 01f0 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 200


 6955 01f1 23       		.uleb128 0x23
 6956 01f2 2E       		.uleb128 0x2e
 6957 01f3 01       		.byte	0x1
 6958 01f4 3F       		.uleb128 0x3f
 6959 01f5 19       		.uleb128 0x19
 6960 01f6 03       		.uleb128 0x3
 6961 01f7 0E       		.uleb128 0xe
 6962 01f8 3A       		.uleb128 0x3a
 6963 01f9 0B       		.uleb128 0xb
 6964 01fa 3B       		.uleb128 0x3b
 6965 01fb 05       		.uleb128 0x5
 6966 01fc 27       		.uleb128 0x27
 6967 01fd 19       		.uleb128 0x19
 6968 01fe 49       		.uleb128 0x49
 6969 01ff 13       		.uleb128 0x13
 6970 0200 11       		.uleb128 0x11
 6971 0201 01       		.uleb128 0x1
 6972 0202 12       		.uleb128 0x12
 6973 0203 06       		.uleb128 0x6
 6974 0204 40       		.uleb128 0x40
 6975 0205 18       		.uleb128 0x18
 6976 0206 9642     		.uleb128 0x2116
 6977 0208 19       		.uleb128 0x19
 6978 0209 01       		.uleb128 0x1
 6979 020a 13       		.uleb128 0x13
 6980 020b 00       		.byte	0
 6981 020c 00       		.byte	0
 6982 020d 24       		.uleb128 0x24
 6983 020e 34       		.uleb128 0x34
 6984 020f 00       		.byte	0
 6985 0210 03       		.uleb128 0x3
 6986 0211 0E       		.uleb128 0xe
 6987 0212 3A       		.uleb128 0x3a
 6988 0213 0B       		.uleb128 0xb
 6989 0214 3B       		.uleb128 0x3b
 6990 0215 05       		.uleb128 0x5
 6991 0216 49       		.uleb128 0x49
 6992 0217 13       		.uleb128 0x13
 6993 0218 02       		.uleb128 0x2
 6994 0219 18       		.uleb128 0x18
 6995 021a 00       		.byte	0
 6996 021b 00       		.byte	0
 6997 021c 25       		.uleb128 0x25
 6998 021d 0B       		.uleb128 0xb
 6999 021e 01       		.byte	0x1
 7000 021f 11       		.uleb128 0x11
 7001 0220 01       		.uleb128 0x1
 7002 0221 12       		.uleb128 0x12
 7003 0222 06       		.uleb128 0x6
 7004 0223 00       		.byte	0
 7005 0224 00       		.byte	0
 7006 0225 26       		.uleb128 0x26
 7007 0226 2E       		.uleb128 0x2e
 7008 0227 01       		.byte	0x1
 7009 0228 3F       		.uleb128 0x3f
 7010 0229 19       		.uleb128 0x19
 7011 022a 03       		.uleb128 0x3
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 201


 7012 022b 0E       		.uleb128 0xe
 7013 022c 3A       		.uleb128 0x3a
 7014 022d 0B       		.uleb128 0xb
 7015 022e 3B       		.uleb128 0x3b
 7016 022f 05       		.uleb128 0x5
 7017 0230 27       		.uleb128 0x27
 7018 0231 19       		.uleb128 0x19
 7019 0232 11       		.uleb128 0x11
 7020 0233 01       		.uleb128 0x1
 7021 0234 12       		.uleb128 0x12
 7022 0235 06       		.uleb128 0x6
 7023 0236 40       		.uleb128 0x40
 7024 0237 18       		.uleb128 0x18
 7025 0238 9642     		.uleb128 0x2116
 7026 023a 19       		.uleb128 0x19
 7027 023b 01       		.uleb128 0x1
 7028 023c 13       		.uleb128 0x13
 7029 023d 00       		.byte	0
 7030 023e 00       		.byte	0
 7031 023f 27       		.uleb128 0x27
 7032 0240 2E       		.uleb128 0x2e
 7033 0241 01       		.byte	0x1
 7034 0242 3F       		.uleb128 0x3f
 7035 0243 19       		.uleb128 0x19
 7036 0244 03       		.uleb128 0x3
 7037 0245 0E       		.uleb128 0xe
 7038 0246 3A       		.uleb128 0x3a
 7039 0247 0B       		.uleb128 0xb
 7040 0248 3B       		.uleb128 0x3b
 7041 0249 05       		.uleb128 0x5
 7042 024a 27       		.uleb128 0x27
 7043 024b 19       		.uleb128 0x19
 7044 024c 49       		.uleb128 0x49
 7045 024d 13       		.uleb128 0x13
 7046 024e 11       		.uleb128 0x11
 7047 024f 01       		.uleb128 0x1
 7048 0250 12       		.uleb128 0x12
 7049 0251 06       		.uleb128 0x6
 7050 0252 40       		.uleb128 0x40
 7051 0253 18       		.uleb128 0x18
 7052 0254 9742     		.uleb128 0x2117
 7053 0256 19       		.uleb128 0x19
 7054 0257 01       		.uleb128 0x1
 7055 0258 13       		.uleb128 0x13
 7056 0259 00       		.byte	0
 7057 025a 00       		.byte	0
 7058 025b 28       		.uleb128 0x28
 7059 025c 0B       		.uleb128 0xb
 7060 025d 01       		.byte	0x1
 7061 025e 11       		.uleb128 0x11
 7062 025f 01       		.uleb128 0x1
 7063 0260 12       		.uleb128 0x12
 7064 0261 06       		.uleb128 0x6
 7065 0262 01       		.uleb128 0x1
 7066 0263 13       		.uleb128 0x13
 7067 0264 00       		.byte	0
 7068 0265 00       		.byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 202


 7069 0266 29       		.uleb128 0x29
 7070 0267 34       		.uleb128 0x34
 7071 0268 00       		.byte	0
 7072 0269 03       		.uleb128 0x3
 7073 026a 08       		.uleb128 0x8
 7074 026b 3A       		.uleb128 0x3a
 7075 026c 0B       		.uleb128 0xb
 7076 026d 3B       		.uleb128 0x3b
 7077 026e 05       		.uleb128 0x5
 7078 026f 49       		.uleb128 0x49
 7079 0270 13       		.uleb128 0x13
 7080 0271 02       		.uleb128 0x2
 7081 0272 18       		.uleb128 0x18
 7082 0273 00       		.byte	0
 7083 0274 00       		.byte	0
 7084 0275 2A       		.uleb128 0x2a
 7085 0276 34       		.uleb128 0x34
 7086 0277 00       		.byte	0
 7087 0278 03       		.uleb128 0x3
 7088 0279 0E       		.uleb128 0xe
 7089 027a 3A       		.uleb128 0x3a
 7090 027b 0B       		.uleb128 0xb
 7091 027c 3B       		.uleb128 0x3b
 7092 027d 0B       		.uleb128 0xb
 7093 027e 49       		.uleb128 0x49
 7094 027f 13       		.uleb128 0x13
 7095 0280 3F       		.uleb128 0x3f
 7096 0281 19       		.uleb128 0x19
 7097 0282 3C       		.uleb128 0x3c
 7098 0283 19       		.uleb128 0x19
 7099 0284 00       		.byte	0
 7100 0285 00       		.byte	0
 7101 0286 2B       		.uleb128 0x2b
 7102 0287 34       		.uleb128 0x34
 7103 0288 00       		.byte	0
 7104 0289 03       		.uleb128 0x3
 7105 028a 0E       		.uleb128 0xe
 7106 028b 3A       		.uleb128 0x3a
 7107 028c 0B       		.uleb128 0xb
 7108 028d 3B       		.uleb128 0x3b
 7109 028e 05       		.uleb128 0x5
 7110 028f 49       		.uleb128 0x49
 7111 0290 13       		.uleb128 0x13
 7112 0291 3F       		.uleb128 0x3f
 7113 0292 19       		.uleb128 0x19
 7114 0293 3C       		.uleb128 0x3c
 7115 0294 19       		.uleb128 0x19
 7116 0295 00       		.byte	0
 7117 0296 00       		.byte	0
 7118 0297 00       		.byte	0
 7119              		.section	.debug_aranges,"",%progbits
 7120 0000 94010000 		.4byte	0x194
 7121 0004 0200     		.2byte	0x2
 7122 0006 00000000 		.4byte	.Ldebug_info0
 7123 000a 04       		.byte	0x4
 7124 000b 00       		.byte	0
 7125 000c 0000     		.2byte	0
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 203


 7126 000e 0000     		.2byte	0
 7127 0010 00000000 		.4byte	.LFB166
 7128 0014 1A000000 		.4byte	.LFE166-.LFB166
 7129 0018 00000000 		.4byte	.LFB167
 7130 001c 44000000 		.4byte	.LFE167-.LFB167
 7131 0020 00000000 		.4byte	.LFB168
 7132 0024 1E000000 		.4byte	.LFE168-.LFB168
 7133 0028 00000000 		.4byte	.LFB170
 7134 002c 3A000000 		.4byte	.LFE170-.LFB170
 7135 0030 00000000 		.4byte	.LFB172
 7136 0034 44000000 		.4byte	.LFE172-.LFB172
 7137 0038 00000000 		.4byte	.LFB173
 7138 003c 1E000000 		.4byte	.LFE173-.LFB173
 7139 0040 00000000 		.4byte	.LFB174
 7140 0044 20000000 		.4byte	.LFE174-.LFB174
 7141 0048 00000000 		.4byte	.LFB175
 7142 004c 2C000000 		.4byte	.LFE175-.LFB175
 7143 0050 00000000 		.4byte	.LFB176
 7144 0054 3A000000 		.4byte	.LFE176-.LFB176
 7145 0058 00000000 		.4byte	.LFB180
 7146 005c 38000000 		.4byte	.LFE180-.LFB180
 7147 0060 00000000 		.4byte	.LFB181
 7148 0064 1A000000 		.4byte	.LFE181-.LFB181
 7149 0068 00000000 		.4byte	.LFB182
 7150 006c 1A000000 		.4byte	.LFE182-.LFB182
 7151 0070 00000000 		.4byte	.LFB183
 7152 0074 3C000000 		.4byte	.LFE183-.LFB183
 7153 0078 00000000 		.4byte	.LFB186
 7154 007c 38000000 		.4byte	.LFE186-.LFB186
 7155 0080 00000000 		.4byte	.LFB187
 7156 0084 1A000000 		.4byte	.LFE187-.LFB187
 7157 0088 00000000 		.4byte	.LFB188
 7158 008c 1A000000 		.4byte	.LFE188-.LFB188
 7159 0090 00000000 		.4byte	.LFB189
 7160 0094 3C000000 		.4byte	.LFE189-.LFB189
 7161 0098 00000000 		.4byte	.LFB192
 7162 009c 38000000 		.4byte	.LFE192-.LFB192
 7163 00a0 00000000 		.4byte	.LFB198
 7164 00a4 38000000 		.4byte	.LFE198-.LFB198
 7165 00a8 00000000 		.4byte	.LFB200
 7166 00ac 1A000000 		.4byte	.LFE200-.LFB200
 7167 00b0 00000000 		.4byte	.LFB201
 7168 00b4 3C000000 		.4byte	.LFE201-.LFB201
 7169 00b8 00000000 		.4byte	.LFB209
 7170 00bc 34000000 		.4byte	.LFE209-.LFB209
 7171 00c0 00000000 		.4byte	.LFB211
 7172 00c4 1A000000 		.4byte	.LFE211-.LFB211
 7173 00c8 00000000 		.4byte	.LFB212
 7174 00cc 38000000 		.4byte	.LFE212-.LFB212
 7175 00d0 00000000 		.4byte	.LFB213
 7176 00d4 26000000 		.4byte	.LFE213-.LFB213
 7177 00d8 00000000 		.4byte	.LFB214
 7178 00dc 28000000 		.4byte	.LFE214-.LFB214
 7179 00e0 00000000 		.4byte	.LFB215
 7180 00e4 28000000 		.4byte	.LFE215-.LFB215
 7181 00e8 00000000 		.4byte	.LFB218
 7182 00ec 20000000 		.4byte	.LFE218-.LFB218
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 204


 7183 00f0 00000000 		.4byte	.LFB219
 7184 00f4 26000000 		.4byte	.LFE219-.LFB219
 7185 00f8 00000000 		.4byte	.LFB224
 7186 00fc 18000000 		.4byte	.LFE224-.LFB224
 7187 0100 00000000 		.4byte	.LFB225
 7188 0104 16000000 		.4byte	.LFE225-.LFB225
 7189 0108 00000000 		.4byte	.LFB229
 7190 010c 18000000 		.4byte	.LFE229-.LFB229
 7191 0110 00000000 		.4byte	.LFB230
 7192 0114 16000000 		.4byte	.LFE230-.LFB230
 7193 0118 00000000 		.4byte	.LFB233
 7194 011c 18000000 		.4byte	.LFE233-.LFB233
 7195 0120 00000000 		.4byte	.LFB239
 7196 0124 4E000000 		.4byte	.LFE239-.LFB239
 7197 0128 00000000 		.4byte	.LFB240
 7198 012c 3C030000 		.4byte	.LFE240-.LFB240
 7199 0130 00000000 		.4byte	.LFB241
 7200 0134 7C000000 		.4byte	.LFE241-.LFB241
 7201 0138 00000000 		.4byte	.LFB242
 7202 013c 4E000000 		.4byte	.LFE242-.LFB242
 7203 0140 00000000 		.4byte	.LFB243
 7204 0144 44010000 		.4byte	.LFE243-.LFB243
 7205 0148 00000000 		.4byte	.LFB244
 7206 014c BC000000 		.4byte	.LFE244-.LFB244
 7207 0150 00000000 		.4byte	.LFB245
 7208 0154 38010000 		.4byte	.LFE245-.LFB245
 7209 0158 00000000 		.4byte	.LFB246
 7210 015c 56000000 		.4byte	.LFE246-.LFB246
 7211 0160 00000000 		.4byte	.LFB247
 7212 0164 1A000000 		.4byte	.LFE247-.LFB247
 7213 0168 00000000 		.4byte	.LFB248
 7214 016c 1A000000 		.4byte	.LFE248-.LFB248
 7215 0170 00000000 		.4byte	.LFB249
 7216 0174 36010000 		.4byte	.LFE249-.LFB249
 7217 0178 00000000 		.4byte	.LFB250
 7218 017c DC000000 		.4byte	.LFE250-.LFB250
 7219 0180 00000000 		.4byte	.LFB251
 7220 0184 D2000000 		.4byte	.LFE251-.LFB251
 7221 0188 00000000 		.4byte	.LFB252
 7222 018c 26000000 		.4byte	.LFE252-.LFB252
 7223 0190 00000000 		.4byte	0
 7224 0194 00000000 		.4byte	0
 7225              		.section	.debug_ranges,"",%progbits
 7226              	.Ldebug_ranges0:
 7227 0000 00000000 		.4byte	.LFB166
 7228 0004 1A000000 		.4byte	.LFE166
 7229 0008 00000000 		.4byte	.LFB167
 7230 000c 44000000 		.4byte	.LFE167
 7231 0010 00000000 		.4byte	.LFB168
 7232 0014 1E000000 		.4byte	.LFE168
 7233 0018 00000000 		.4byte	.LFB170
 7234 001c 3A000000 		.4byte	.LFE170
 7235 0020 00000000 		.4byte	.LFB172
 7236 0024 44000000 		.4byte	.LFE172
 7237 0028 00000000 		.4byte	.LFB173
 7238 002c 1E000000 		.4byte	.LFE173
 7239 0030 00000000 		.4byte	.LFB174
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 205


 7240 0034 20000000 		.4byte	.LFE174
 7241 0038 00000000 		.4byte	.LFB175
 7242 003c 2C000000 		.4byte	.LFE175
 7243 0040 00000000 		.4byte	.LFB176
 7244 0044 3A000000 		.4byte	.LFE176
 7245 0048 00000000 		.4byte	.LFB180
 7246 004c 38000000 		.4byte	.LFE180
 7247 0050 00000000 		.4byte	.LFB181
 7248 0054 1A000000 		.4byte	.LFE181
 7249 0058 00000000 		.4byte	.LFB182
 7250 005c 1A000000 		.4byte	.LFE182
 7251 0060 00000000 		.4byte	.LFB183
 7252 0064 3C000000 		.4byte	.LFE183
 7253 0068 00000000 		.4byte	.LFB186
 7254 006c 38000000 		.4byte	.LFE186
 7255 0070 00000000 		.4byte	.LFB187
 7256 0074 1A000000 		.4byte	.LFE187
 7257 0078 00000000 		.4byte	.LFB188
 7258 007c 1A000000 		.4byte	.LFE188
 7259 0080 00000000 		.4byte	.LFB189
 7260 0084 3C000000 		.4byte	.LFE189
 7261 0088 00000000 		.4byte	.LFB192
 7262 008c 38000000 		.4byte	.LFE192
 7263 0090 00000000 		.4byte	.LFB198
 7264 0094 38000000 		.4byte	.LFE198
 7265 0098 00000000 		.4byte	.LFB200
 7266 009c 1A000000 		.4byte	.LFE200
 7267 00a0 00000000 		.4byte	.LFB201
 7268 00a4 3C000000 		.4byte	.LFE201
 7269 00a8 00000000 		.4byte	.LFB209
 7270 00ac 34000000 		.4byte	.LFE209
 7271 00b0 00000000 		.4byte	.LFB211
 7272 00b4 1A000000 		.4byte	.LFE211
 7273 00b8 00000000 		.4byte	.LFB212
 7274 00bc 38000000 		.4byte	.LFE212
 7275 00c0 00000000 		.4byte	.LFB213
 7276 00c4 26000000 		.4byte	.LFE213
 7277 00c8 00000000 		.4byte	.LFB214
 7278 00cc 28000000 		.4byte	.LFE214
 7279 00d0 00000000 		.4byte	.LFB215
 7280 00d4 28000000 		.4byte	.LFE215
 7281 00d8 00000000 		.4byte	.LFB218
 7282 00dc 20000000 		.4byte	.LFE218
 7283 00e0 00000000 		.4byte	.LFB219
 7284 00e4 26000000 		.4byte	.LFE219
 7285 00e8 00000000 		.4byte	.LFB224
 7286 00ec 18000000 		.4byte	.LFE224
 7287 00f0 00000000 		.4byte	.LFB225
 7288 00f4 16000000 		.4byte	.LFE225
 7289 00f8 00000000 		.4byte	.LFB229
 7290 00fc 18000000 		.4byte	.LFE229
 7291 0100 00000000 		.4byte	.LFB230
 7292 0104 16000000 		.4byte	.LFE230
 7293 0108 00000000 		.4byte	.LFB233
 7294 010c 18000000 		.4byte	.LFE233
 7295 0110 00000000 		.4byte	.LFB239
 7296 0114 4E000000 		.4byte	.LFE239
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 206


 7297 0118 00000000 		.4byte	.LFB240
 7298 011c 3C030000 		.4byte	.LFE240
 7299 0120 00000000 		.4byte	.LFB241
 7300 0124 7C000000 		.4byte	.LFE241
 7301 0128 00000000 		.4byte	.LFB242
 7302 012c 4E000000 		.4byte	.LFE242
 7303 0130 00000000 		.4byte	.LFB243
 7304 0134 44010000 		.4byte	.LFE243
 7305 0138 00000000 		.4byte	.LFB244
 7306 013c BC000000 		.4byte	.LFE244
 7307 0140 00000000 		.4byte	.LFB245
 7308 0144 38010000 		.4byte	.LFE245
 7309 0148 00000000 		.4byte	.LFB246
 7310 014c 56000000 		.4byte	.LFE246
 7311 0150 00000000 		.4byte	.LFB247
 7312 0154 1A000000 		.4byte	.LFE247
 7313 0158 00000000 		.4byte	.LFB248
 7314 015c 1A000000 		.4byte	.LFE248
 7315 0160 00000000 		.4byte	.LFB249
 7316 0164 36010000 		.4byte	.LFE249
 7317 0168 00000000 		.4byte	.LFB250
 7318 016c DC000000 		.4byte	.LFE250
 7319 0170 00000000 		.4byte	.LFB251
 7320 0174 D2000000 		.4byte	.LFE251
 7321 0178 00000000 		.4byte	.LFB252
 7322 017c 26000000 		.4byte	.LFE252
 7323 0180 00000000 		.4byte	0
 7324 0184 00000000 		.4byte	0
 7325              		.section	.debug_line,"",%progbits
 7326              	.Ldebug_line0:
 7327 0000 E4090000 		.section	.debug_str,"MS",%progbits,1
 7327      0200FE02 
 7327      00000201 
 7327      FB0E0D00 
 7327      01010101 
 7328              	.LASF64:
 7329 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 7329      6843746C 
 7329      4D61696E 
 7329      57733146 
 7329      72657100 
 7330              	.LASF270:
 7331 0014 43795F53 		.ascii	"Cy_SCB_SetSpiInterruptMask\000"
 7331      43425F53 
 7331      65745370 
 7331      69496E74 
 7331      65727275 
 7332              	.LASF112:
 7333 002f 52455345 		.ascii	"RESERVED\000"
 7333      52564544 
 7333      00
 7334              	.LASF299:
 7335 0038 72784275 		.ascii	"rxBuffer\000"
 7335      66666572 
 7335      00
 7336              	.LASF214:
 7337 0041 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 207


 7337      625F7363 
 7337      625F7370 
 7337      695F6861 
 7337      6E646C65 
 7338              	.LASF196:
 7339 005f 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 7339      74635F73 
 7339      7973706D 
 7339      5F63616C 
 7339      6C626163 
 7340              	.LASF311:
 7341 007e 63795F64 		.ascii	"cy_device\000"
 7341      65766963 
 7341      6500
 7342              	.LASF201:
 7343 0088 43595F53 		.ascii	"CY_SCB_SPI_SLAVE\000"
 7343      43425F53 
 7343      50495F53 
 7343      4C415645 
 7343      00
 7344              	.LASF306:
 7345 0099 6C6F6358 		.ascii	"locXferErr\000"
 7345      66657245 
 7345      727200
 7346              	.LASF91:
 7347 00a4 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 7347      73436D30 
 7347      436C6F63 
 7347      6B43746C 
 7347      4F666673 
 7348              	.LASF50:
 7349 00bb 70657269 		.ascii	"periClockNr\000"
 7349      436C6F63 
 7349      6B4E7200 
 7350              	.LASF221:
 7351 00c7 656E6162 		.ascii	"enableMsbFirst\000"
 7351      6C654D73 
 7351      62466972 
 7351      737400
 7352              	.LASF302:
 7353 00d6 43795F53 		.ascii	"Cy_SCB_SPI_AbortTransfer\000"
 7353      43425F53 
 7353      50495F41 
 7353      626F7274 
 7353      5472616E 
 7354              	.LASF24:
 7355 00ef 75646242 		.ascii	"udbBase\000"
 7355      61736500 
 7356              	.LASF111:
 7357 00f7 434D445F 		.ascii	"CMD_RESP_STATUS\000"
 7357      52455350 
 7357      5F535441 
 7357      54555300 
 7358              	.LASF188:
 7359 0107 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 7359      6E5F7379 
 7359      73706D5F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 208


 7359      73746174 
 7359      75735F74 
 7360              	.LASF169:
 7361 011c 494E5452 		.ascii	"INTR_TX_MASK\000"
 7361      5F54585F 
 7361      4D41534B 
 7361      00
 7362              	.LASF23:
 7363 0129 70657269 		.ascii	"periBase\000"
 7363      42617365 
 7363      00
 7364              	.LASF263:
 7365 0132 43795F53 		.ascii	"Cy_SCB_GetTxInterruptMask\000"
 7365      43425F47 
 7365      65745478 
 7365      496E7465 
 7365      72727570 
 7366              	.LASF314:
 7367 014c 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 7367      72617465 
 7367      645F536F 
 7367      75726365 
 7367      5C50536F 
 7368 017a 7363625C 		.ascii	"scb\\cy_scb_spi.c\000"
 7368      63795F73 
 7368      63625F73 
 7368      70692E63 
 7368      00
 7369              	.LASF213:
 7370 018b 63795F65 		.ascii	"cy_en_scb_spi_sclk_mode_t\000"
 7370      6E5F7363 
 7370      625F7370 
 7370      695F7363 
 7370      6C6B5F6D 
 7371              	.LASF99:
 7372 01a5 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 7372      73436D30 
 7372      4E6D6943 
 7372      746C4F66 
 7372      66736574 
 7373              	.LASF280:
 7374 01ba 43795F53 		.ascii	"Cy_SCB_SPI_IsTxComplete\000"
 7374      43425F53 
 7374      50495F49 
 7374      73547843 
 7374      6F6D706C 
 7375              	.LASF69:
 7376 01d2 64774368 		.ascii	"dwChSize\000"
 7376      53697A65 
 7376      00
 7377              	.LASF264:
 7378 01db 43795F53 		.ascii	"Cy_SCB_GetTxInterruptStatusMasked\000"
 7378      43425F47 
 7378      65745478 
 7378      496E7465 
 7378      72727570 
 7379              	.LASF130:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 209


 7380 01fd 54585F46 		.ascii	"TX_FIFO_STATUS\000"
 7380      49464F5F 
 7380      53544154 
 7380      555300
 7381              	.LASF303:
 7382 020c 43795F53 		.ascii	"Cy_SCB_SPI_GetNumTransfered\000"
 7382      43425F53 
 7382      50495F47 
 7382      65744E75 
 7382      6D547261 
 7383              	.LASF13:
 7384 0228 756E7369 		.ascii	"unsigned int\000"
 7384      676E6564 
 7384      20696E74 
 7384      00
 7385              	.LASF145:
 7386 0235 494E5452 		.ascii	"INTR_CAUSE\000"
 7386      5F434155 
 7386      534500
 7387              	.LASF51:
 7388 0240 736D6966 		.ascii	"smifDeviceNr\000"
 7388      44657669 
 7388      63654E72 
 7388      00
 7389              	.LASF81:
 7390 024d 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 7390      44697643 
 7390      6D645061 
 7390      54797065 
 7390      53656C50 
 7391              	.LASF243:
 7392 0264 74784275 		.ascii	"txBufIdx\000"
 7392      66496478 
 7392      00
 7393              	.LASF43:
 7394 026d 63707573 		.ascii	"cpussFlashPaSize\000"
 7394      73466C61 
 7394      73685061 
 7394      53697A65 
 7394      00
 7395              	.LASF135:
 7396 027e 52585F46 		.ascii	"RX_FIFO_CTRL\000"
 7396      49464F5F 
 7396      4354524C 
 7396      00
 7397              	.LASF7:
 7398 028b 5F5F696E 		.ascii	"__int32_t\000"
 7398      7433325F 
 7398      7400
 7399              	.LASF272:
 7400 0295 43795F53 		.ascii	"Cy_SCB_ClearSpiInterrupt\000"
 7400      43425F43 
 7400      6C656172 
 7400      53706949 
 7400      6E746572 
 7401              	.LASF290:
 7402 02ae 43795F53 		.ascii	"Cy_SCB_SPI_DeepSleepCallback\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 210


 7402      43425F53 
 7402      50495F44 
 7402      65657053 
 7402      6C656570 
 7403              	.LASF271:
 7404 02cb 43795F53 		.ascii	"Cy_SCB_GetSpiInterruptStatusMasked\000"
 7404      43425F47 
 7404      65745370 
 7404      69496E74 
 7404      65727275 
 7405              	.LASF21:
 7406 02ee 63707573 		.ascii	"cpussBase\000"
 7406      73426173 
 7406      6500
 7407              	.LASF235:
 7408 02f8 63795F73 		.ascii	"cy_stc_scb_spi_config\000"
 7408      74635F73 
 7408      63625F73 
 7408      70695F63 
 7408      6F6E6669 
 7409              	.LASF273:
 7410 030e 43795F53 		.ascii	"Cy_SCB_GetFifoSize\000"
 7410      43425F47 
 7410      65744669 
 7410      666F5369 
 7410      7A6500
 7411              	.LASF163:
 7412 0321 494E5452 		.ascii	"INTR_S_SET\000"
 7412      5F535F53 
 7412      455400
 7413              	.LASF247:
 7414 032c 6C657665 		.ascii	"level\000"
 7414      6C00
 7415              	.LASF168:
 7416 0332 494E5452 		.ascii	"INTR_TX_SET\000"
 7416      5F54585F 
 7416      53455400 
 7417              	.LASF175:
 7418 033e 494E5452 		.ascii	"INTR_RX_MASKED\000"
 7418      5F52585F 
 7418      4D41534B 
 7418      454400
 7419              	.LASF223:
 7420 034d 656E6162 		.ascii	"enableInputFilter\000"
 7420      6C65496E 
 7420      70757446 
 7420      696C7465 
 7420      7200
 7421              	.LASF308:
 7422 035f 6E756D54 		.ascii	"numToCopy\000"
 7422      6F436F70 
 7422      7900
 7423              	.LASF45:
 7424 0369 63707573 		.ascii	"cpussFmIrq\000"
 7424      73466D49 
 7424      727100
 7425              	.LASF77:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 211


 7426 0374 70657269 		.ascii	"periTrGrSize\000"
 7426      54724772 
 7426      53697A65 
 7426      00
 7427              	.LASF80:
 7428 0381 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 7428      44697643 
 7428      6D645061 
 7428      44697653 
 7428      656C506F 
 7429              	.LASF57:
 7430 0397 63727970 		.ascii	"cryptoMemSize\000"
 7430      746F4D65 
 7430      6D53697A 
 7430      6500
 7431              	.LASF292:
 7432 03a5 6D6F6465 		.ascii	"mode\000"
 7432      00
 7433              	.LASF103:
 7434 03aa 63707573 		.ascii	"cpussRam1Ctl0\000"
 7434      7352616D 
 7434      3143746C 
 7434      3000
 7435              	.LASF105:
 7436 03b8 69706353 		.ascii	"ipcStructSize\000"
 7436      74727563 
 7436      7453697A 
 7436      6500
 7437              	.LASF226:
 7438 03c6 7373506F 		.ascii	"ssPolarity\000"
 7438      6C617269 
 7438      747900
 7439              	.LASF256:
 7440 03d1 43795F53 		.ascii	"Cy_SCB_ClearTxFifo\000"
 7440      43425F43 
 7440      6C656172 
 7440      54784669 
 7440      666F00
 7441              	.LASF39:
 7442 03e4 70726F74 		.ascii	"protVersion\000"
 7442      56657273 
 7442      696F6E00 
 7443              	.LASF118:
 7444 03f0 55415254 		.ascii	"UART_RX_CTRL\000"
 7444      5F52585F 
 7444      4354524C 
 7444      00
 7445              	.LASF204:
 7446 03fd 43595F53 		.ascii	"CY_SCB_SPI_MOTOROLA\000"
 7446      43425F53 
 7446      50495F4D 
 7446      4F544F52 
 7446      4F4C4100 
 7447              	.LASF79:
 7448 0411 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 7448      44697643 
 7448      6D645479 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 212


 7448      70655365 
 7448      6C506F73 
 7449              	.LASF96:
 7450 0426 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 7450      73547269 
 7450      6D52616D 
 7450      43746C4F 
 7450      66667365 
 7451              	.LASF177:
 7452 043c 43795343 		.ascii	"CySCB_Type\000"
 7452      425F5479 
 7452      706500
 7453              	.LASF190:
 7454 0447 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 7454      5953504D 
 7454      5F434845 
 7454      434B5F46 
 7454      41494C00 
 7455              	.LASF283:
 7456 045b 43595F53 		.ascii	"CY_SCB_SPI_GetSclkMode\000"
 7456      43425F53 
 7456      50495F47 
 7456      65745363 
 7456      6C6B4D6F 
 7457              	.LASF126:
 7458 0472 4932435F 		.ascii	"I2C_CFG\000"
 7458      43464700 
 7459              	.LASF281:
 7460 047a 43795F53 		.ascii	"Cy_SCB_SPI_ClearTxFifo\000"
 7460      43425F53 
 7460      50495F43 
 7460      6C656172 
 7460      54784669 
 7461              	.LASF315:
 7462 0491 433A5C55 		.ascii	"C:\\Users\\tmj32\\Documents\\TCNJ\\Senior_Project\\"
 7462      73657273 
 7462      5C746D6A 
 7462      33325C44 
 7462      6F63756D 
 7463 04be 4F736369 		.ascii	"Oscilloscope_Senior_Project\\tcom_engineering\\embe"
 7463      6C6C6F73 
 7463      636F7065 
 7463      5F53656E 
 7463      696F725F 
 7464 04ef 645F7377 		.ascii	"d_sw\\tcom_app\\tcom_app_psoc6_lvgl6\\tcom_displ_te"
 7464      5C74636F 
 7464      6D5F6170 
 7464      705C7463 
 7464      6F6D5F61 
 7465 051f 73745F70 		.ascii	"st_psoc6.cydsn\000"
 7465      736F6336 
 7465      2E637964 
 7465      736E00
 7466              	.LASF141:
 7467 052e 52585F46 		.ascii	"RX_FIFO_RD_SILENT\000"
 7467      49464F5F 
 7467      52445F53 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 213


 7467      494C454E 
 7467      5400
 7468              	.LASF249:
 7469 0540 43795F53 		.ascii	"Cy_SCB_GetNumInRxFifo\000"
 7469      43425F47 
 7469      65744E75 
 7469      6D496E52 
 7469      78466966 
 7470              	.LASF18:
 7471 0556 75696E74 		.ascii	"uint32_t\000"
 7471      33325F74 
 7471      00
 7472              	.LASF228:
 7473 055f 72784669 		.ascii	"rxFifoTriggerLevel\000"
 7473      666F5472 
 7473      69676765 
 7473      724C6576 
 7473      656C00
 7474              	.LASF158:
 7475 0572 494E5452 		.ascii	"INTR_M_SET\000"
 7475      5F4D5F53 
 7475      455400
 7476              	.LASF89:
 7477 057d 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 7477      50727443 
 7477      66674F75 
 7477      744F6666 
 7477      73657400 
 7478              	.LASF180:
 7479 0591 666C6F61 		.ascii	"float\000"
 7479      7400
 7480              	.LASF224:
 7481 0597 656E6162 		.ascii	"enableMisoLateSample\000"
 7481      6C654D69 
 7481      736F4C61 
 7481      74655361 
 7481      6D706C65 
 7482              	.LASF32:
 7483 05ac 63727970 		.ascii	"cryptoVersion\000"
 7483      746F5665 
 7483      7273696F 
 7483      6E00
 7484              	.LASF160:
 7485 05ba 494E5452 		.ascii	"INTR_M_MASKED\000"
 7485      5F4D5F4D 
 7485      41534B45 
 7485      4400
 7486              	.LASF61:
 7487 05c8 666C6173 		.ascii	"flashProgramDelay\000"
 7487      6850726F 
 7487      6772616D 
 7487      44656C61 
 7487      7900
 7488              	.LASF194:
 7489 05da 62617365 		.ascii	"base\000"
 7489      00
 7490              	.LASF199:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 214


 7491 05df 43595F53 		.ascii	"CY_SCB_SPI_TRANSFER_BUSY\000"
 7491      43425F53 
 7491      50495F54 
 7491      52414E53 
 7491      4645525F 
 7492              	.LASF115:
 7493 05f8 52455345 		.ascii	"RESERVED1\000"
 7493      52564544 
 7493      3100
 7494              	.LASF15:
 7495 0602 696E7431 		.ascii	"int16_t\000"
 7495      365F7400 
 7496              	.LASF88:
 7497 060a 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 7497      50727443 
 7497      6667496E 
 7497      4F666673 
 7497      657400
 7498              	.LASF248:
 7499 061d 43795F53 		.ascii	"Cy_SCB_ReadRxFifo\000"
 7499      43425F52 
 7499      65616452 
 7499      78466966 
 7499      6F00
 7500              	.LASF12:
 7501 062f 6C6F6E67 		.ascii	"long long unsigned int\000"
 7501      206C6F6E 
 7501      6720756E 
 7501      7369676E 
 7501      65642069 
 7502              	.LASF85:
 7503 0646 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 7503      44697632 
 7503      345F3543 
 7503      746C4F66 
 7503      66736574 
 7504              	.LASF90:
 7505 065b 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 7505      50727443 
 7505      66675369 
 7505      6F4F6666 
 7505      73657400 
 7506              	.LASF44:
 7507 066f 63707573 		.ascii	"cpussIpc0Irq\000"
 7507      73497063 
 7507      30497271 
 7507      00
 7508              	.LASF259:
 7509 067c 43795F53 		.ascii	"Cy_SCB_GetRxInterruptMask\000"
 7509      43425F47 
 7509      65745278 
 7509      496E7465 
 7509      72727570 
 7510              	.LASF5:
 7511 0696 5F5F7569 		.ascii	"__uint16_t\000"
 7511      6E743136 
 7511      5F7400
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 215


 7512              	.LASF202:
 7513 06a1 43595F53 		.ascii	"CY_SCB_SPI_MASTER\000"
 7513      43425F53 
 7513      50495F4D 
 7513      41535445 
 7513      5200
 7514              	.LASF128:
 7515 06b3 54585F43 		.ascii	"TX_CTRL\000"
 7515      54524C00 
 7516              	.LASF117:
 7517 06bb 55415254 		.ascii	"UART_TX_CTRL\000"
 7517      5F54585F 
 7517      4354524C 
 7517      00
 7518              	.LASF62:
 7519 06c8 666C6173 		.ascii	"flashEraseDelay\000"
 7519      68457261 
 7519      73654465 
 7519      6C617900 
 7520              	.LASF260:
 7521 06d8 43795F53 		.ascii	"Cy_SCB_GetRxInterruptStatusMasked\000"
 7521      43425F47 
 7521      65745278 
 7521      496E7465 
 7521      72727570 
 7522              	.LASF238:
 7523 06fa 72784275 		.ascii	"rxBuf\000"
 7523      6600
 7524              	.LASF182:
 7525 0700 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 7525      5953504D 
 7525      5F535543 
 7525      43455353 
 7525      00
 7526              	.LASF66:
 7527 0711 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 7527      6843746C 
 7527      4D61696E 
 7527      57733346 
 7527      72657100 
 7528              	.LASF48:
 7529 0725 73727373 		.ascii	"srssNumPll\000"
 7529      4E756D50 
 7529      6C6C00
 7530              	.LASF152:
 7531 0730 494E5452 		.ascii	"INTR_SPI_EC\000"
 7531      5F535049 
 7531      5F454300 
 7532              	.LASF59:
 7533 073c 666C6173 		.ascii	"flashPipeRequired\000"
 7533      68506970 
 7533      65526571 
 7533      75697265 
 7533      6400
 7534              	.LASF244:
 7535 074e 63624576 		.ascii	"cbEvents\000"
 7535      656E7473 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 216


 7535      00
 7536              	.LASF219:
 7537 0757 72784461 		.ascii	"rxDataWidth\000"
 7537      74615769 
 7537      64746800 
 7538              	.LASF233:
 7539 0763 5F426F6F 		.ascii	"_Bool\000"
 7539      6C00
 7540              	.LASF265:
 7541 0769 43795F53 		.ascii	"Cy_SCB_ClearTxInterrupt\000"
 7541      43425F43 
 7541      6C656172 
 7541      5478496E 
 7541      74657272 
 7542              	.LASF138:
 7543 0781 52585F4D 		.ascii	"RX_MATCH\000"
 7543      41544348 
 7543      00
 7544              	.LASF305:
 7545 078a 43795F53 		.ascii	"Cy_SCB_SPI_Interrupt\000"
 7545      43425F53 
 7545      50495F49 
 7545      6E746572 
 7545      72757074 
 7546              	.LASF63:
 7547 079f 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 7547      6843746C 
 7547      4D61696E 
 7547      57733046 
 7547      72657100 
 7548              	.LASF312:
 7549 07b3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7549      52784275 
 7549      66666572 
 7549      00
 7550              	.LASF27:
 7551 07c0 6770696F 		.ascii	"gpioBase\000"
 7551      42617365 
 7551      00
 7552              	.LASF147:
 7553 07c9 494E5452 		.ascii	"INTR_I2C_EC\000"
 7553      5F493243 
 7553      5F454300 
 7554              	.LASF253:
 7555 07d5 43795F53 		.ascii	"Cy_SCB_GetNumInTxFifo\000"
 7555      43425F47 
 7555      65744E75 
 7555      6D496E54 
 7555      78466966 
 7556              	.LASF165:
 7557 07eb 494E5452 		.ascii	"INTR_S_MASKED\000"
 7557      5F535F4D 
 7557      41534B45 
 7557      4400
 7558              	.LASF98:
 7559 07f9 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 7559      73537973 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 217


 7559      5469636B 
 7559      43746C4F 
 7559      66667365 
 7560              	.LASF54:
 7561 080f 75646250 		.ascii	"udbPresent\000"
 7561      72657365 
 7561      6E7400
 7562              	.LASF216:
 7563 081a 7375624D 		.ascii	"subMode\000"
 7563      6F646500 
 7564              	.LASF72:
 7565 0822 64775374 		.ascii	"dwStatusChIdxPos\000"
 7565      61747573 
 7565      43684964 
 7565      78506F73 
 7565      00
 7566              	.LASF211:
 7567 0833 43595F53 		.ascii	"CY_SCB_SPI_CPHA1_CPOL0\000"
 7567      43425F53 
 7567      50495F43 
 7567      50484131 
 7567      5F43504F 
 7568              	.LASF212:
 7569 084a 43595F53 		.ascii	"CY_SCB_SPI_CPHA1_CPOL1\000"
 7569      43425F53 
 7569      50495F43 
 7569      50484131 
 7569      5F43504F 
 7570              	.LASF184:
 7571 0861 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 7571      5953504D 
 7571      5F54494D 
 7571      454F5554 
 7571      00
 7572              	.LASF296:
 7573 0872 43795F53 		.ascii	"Cy_SCB_SPI_HibernateCallback\000"
 7573      43425F53 
 7573      50495F48 
 7573      69626572 
 7573      6E617465 
 7574              	.LASF267:
 7575 088f 43795F53 		.ascii	"Cy_SCB_SetSlaveInterruptMask\000"
 7575      43425F53 
 7575      6574536C 
 7575      61766549 
 7575      6E746572 
 7576              	.LASF185:
 7577 08ac 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 7577      5953504D 
 7577      5F494E56 
 7577      414C4944 
 7577      5F535441 
 7578              	.LASF285:
 7579 08c3 6C6F6353 		.ascii	"locSclkMode\000"
 7579      636C6B4D 
 7579      6F646500 
 7580              	.LASF207:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 218


 7581 08cf 43595F53 		.ascii	"CY_SCB_SPI_TI_PRECEDES\000"
 7581      43425F53 
 7581      50495F54 
 7581      495F5052 
 7581      45434544 
 7582              	.LASF109:
 7583 08e6 53544154 		.ascii	"STATUS\000"
 7583      555300
 7584              	.LASF186:
 7585 08ed 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 7585      5953504D 
 7585      5F43414E 
 7585      43454C45 
 7585      4400
 7586              	.LASF22:
 7587 08ff 666C6173 		.ascii	"flashcBase\000"
 7587      68634261 
 7587      736500
 7588              	.LASF179:
 7589 090a 63686172 		.ascii	"char\000"
 7589      00
 7590              	.LASF176:
 7591 090f 43795343 		.ascii	"CySCB_V1_Type\000"
 7591      425F5631 
 7591      5F547970 
 7591      6500
 7592              	.LASF164:
 7593 091d 494E5452 		.ascii	"INTR_S_MASK\000"
 7593      5F535F4D 
 7593      41534B00 
 7594              	.LASF55:
 7595 0929 73797350 		.ascii	"sysPmSimoPresent\000"
 7595      6D53696D 
 7595      6F507265 
 7595      73656E74 
 7595      00
 7596              	.LASF150:
 7597 093a 494E5452 		.ascii	"INTR_I2C_EC_MASKED\000"
 7597      5F493243 
 7597      5F45435F 
 7597      4D41534B 
 7597      454400
 7598              	.LASF255:
 7599 094d 43795F53 		.ascii	"Cy_SCB_IsTxComplete\000"
 7599      43425F49 
 7599      73547843 
 7599      6F6D706C 
 7599      65746500 
 7600              	.LASF240:
 7601 0961 72784275 		.ascii	"rxBufIdx\000"
 7601      66496478 
 7601      00
 7602              	.LASF252:
 7603 096a 43795F53 		.ascii	"Cy_SCB_SetTxFifoLevel\000"
 7603      43425F53 
 7603      65745478 
 7603      4669666F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 219


 7603      4C657665 
 7604              	.LASF245:
 7605 0980 696E6974 		.ascii	"initKey\000"
 7605      4B657900 
 7606              	.LASF73:
 7607 0988 64775374 		.ascii	"dwStatusChIdxMsk\000"
 7607      61747573 
 7607      43684964 
 7607      784D736B 
 7607      00
 7608              	.LASF197:
 7609 0999 43595F53 		.ascii	"CY_SCB_SPI_SUCCESS\000"
 7609      43425F53 
 7609      50495F53 
 7609      55434345 
 7609      535300
 7610              	.LASF14:
 7611 09ac 75696E74 		.ascii	"uint8_t\000"
 7611      385F7400 
 7612              	.LASF237:
 7613 09b4 73746174 		.ascii	"status\000"
 7613      757300
 7614              	.LASF78:
 7615 09bb 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 7615      44697643 
 7615      6D644469 
 7615      7653656C 
 7615      4D736B00 
 7616              	.LASF269:
 7617 09cf 43795F53 		.ascii	"Cy_SCB_ClearSlaveInterrupt\000"
 7617      43425F43 
 7617      6C656172 
 7617      536C6176 
 7617      65496E74 
 7618              	.LASF4:
 7619 09ea 73686F72 		.ascii	"short int\000"
 7619      7420696E 
 7619      7400
 7620              	.LASF84:
 7621 09f4 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 7621      44697631 
 7621      365F3543 
 7621      746C4F66 
 7621      66736574 
 7622              	.LASF277:
 7623 0a09 43795F53 		.ascii	"Cy_SCB_SPI_IsBusBusy\000"
 7623      43425F53 
 7623      50495F49 
 7623      73427573 
 7623      42757379 
 7624              	.LASF287:
 7625 0a1e 43795F53 		.ascii	"Cy_SCB_SPI_DeInit\000"
 7625      43425F53 
 7625      50495F44 
 7625      65496E69 
 7625      7400
 7626              	.LASF140:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 220


 7627 0a30 52585F46 		.ascii	"RX_FIFO_RD\000"
 7627      49464F5F 
 7627      524400
 7628              	.LASF102:
 7629 0a3b 63707573 		.ascii	"cpussRam0Ctl0\000"
 7629      7352616D 
 7629      3043746C 
 7629      3000
 7630              	.LASF11:
 7631 0a49 6C6F6E67 		.ascii	"long long int\000"
 7631      206C6F6E 
 7631      6720696E 
 7631      7400
 7632              	.LASF29:
 7633 0a57 69706342 		.ascii	"ipcBase\000"
 7633      61736500 
 7634              	.LASF70:
 7635 0a5f 64774368 		.ascii	"dwChCtlPrioPos\000"
 7635      43746C50 
 7635      72696F50 
 7635      6F7300
 7636              	.LASF30:
 7637 0a6e 63727970 		.ascii	"cryptoBase\000"
 7637      746F4261 
 7637      736500
 7638              	.LASF307:
 7639 0a79 48616E64 		.ascii	"HandleReceive\000"
 7639      6C655265 
 7639      63656976 
 7639      6500
 7640              	.LASF60:
 7641 0a87 666C6173 		.ascii	"flashWriteDelay\000"
 7641      68577269 
 7641      74654465 
 7641      6C617900 
 7642              	.LASF195:
 7643 0a97 636F6E74 		.ascii	"context\000"
 7643      65787400 
 7644              	.LASF3:
 7645 0a9f 5F5F696E 		.ascii	"__int16_t\000"
 7645      7431365F 
 7645      7400
 7646              	.LASF120:
 7647 0aa9 55415254 		.ascii	"UART_FLOW_CTRL\000"
 7647      5F464C4F 
 7647      575F4354 
 7647      524C00
 7648              	.LASF26:
 7649 0ab8 6873696F 		.ascii	"hsiomBase\000"
 7649      6D426173 
 7649      6500
 7650              	.LASF227:
 7651 0ac2 656E6162 		.ascii	"enableWakeFromSleep\000"
 7651      6C655761 
 7651      6B654672 
 7651      6F6D536C 
 7651      65657000 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 221


 7652              	.LASF92:
 7653 0ad6 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 7653      73436D34 
 7653      436C6F63 
 7653      6B43746C 
 7653      4F666673 
 7654              	.LASF76:
 7655 0aed 70657269 		.ascii	"periTrGrOffset\000"
 7655      54724772 
 7655      4F666673 
 7655      657400
 7656              	.LASF46:
 7657 0afc 63707573 		.ascii	"cpussNotConnectedIrq\000"
 7657      734E6F74 
 7657      436F6E6E 
 7657      65637465 
 7657      64497271 
 7658              	.LASF246:
 7659 0b11 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 7659      74635F73 
 7659      63625F73 
 7659      70695F63 
 7659      6F6E7465 
 7660              	.LASF42:
 7661 0b2a 63707573 		.ascii	"cpussDwChNr\000"
 7661      73447743 
 7661      684E7200 
 7662              	.LASF268:
 7663 0b36 43795F53 		.ascii	"Cy_SCB_GetSlaveInterruptStatusMasked\000"
 7663      43425F47 
 7663      6574536C 
 7663      61766549 
 7663      6E746572 
 7664              	.LASF300:
 7665 0b5b 73697A65 		.ascii	"size\000"
 7665      00
 7666              	.LASF242:
 7667 0b60 74784275 		.ascii	"txBufSize\000"
 7667      6653697A 
 7667      6500
 7668              	.LASF40:
 7669 0b6a 63707573 		.ascii	"cpussIpcNr\000"
 7669      73497063 
 7669      4E7200
 7670              	.LASF309:
 7671 0b75 48616E64 		.ascii	"HandleTransmit\000"
 7671      6C655472 
 7671      616E736D 
 7671      697400
 7672              	.LASF93:
 7673 0b84 63707573 		.ascii	"cpussCm4StatusOffset\000"
 7673      73436D34 
 7673      53746174 
 7673      75734F66 
 7673      66736574 
 7674              	.LASF275:
 7675 0b99 43795F53 		.ascii	"Cy_SCB_IsTxDataWidthByte\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 222


 7675      43425F49 
 7675      73547844 
 7675      61746157 
 7675      69647468 
 7676              	.LASF52:
 7677 0bb2 70617373 		.ascii	"passSarChannels\000"
 7677      53617243 
 7677      68616E6E 
 7677      656C7300 
 7678              	.LASF104:
 7679 0bc2 63707573 		.ascii	"cpussRam2Ctl0\000"
 7679      7352616D 
 7679      3243746C 
 7679      3000
 7680              	.LASF172:
 7681 0bd0 494E5452 		.ascii	"INTR_RX\000"
 7681      5F525800 
 7682              	.LASF205:
 7683 0bd8 43595F53 		.ascii	"CY_SCB_SPI_TI_COINCIDES\000"
 7683      43425F53 
 7683      50495F54 
 7683      495F434F 
 7683      494E4349 
 7684              	.LASF241:
 7685 0bf0 74784275 		.ascii	"txBuf\000"
 7685      6600
 7686              	.LASF83:
 7687 0bf6 70657269 		.ascii	"periDiv16CtlOffset\000"
 7687      44697631 
 7687      3643746C 
 7687      4F666673 
 7687      657400
 7688              	.LASF6:
 7689 0c09 73686F72 		.ascii	"short unsigned int\000"
 7689      7420756E 
 7689      7369676E 
 7689      65642069 
 7689      6E7400
 7690              	.LASF261:
 7691 0c1c 43795F53 		.ascii	"Cy_SCB_ClearRxInterrupt\000"
 7691      43425F43 
 7691      6C656172 
 7691      5278496E 
 7691      74657272 
 7692              	.LASF262:
 7693 0c34 43795F53 		.ascii	"Cy_SCB_SetTxInterruptMask\000"
 7693      43425F53 
 7693      65745478 
 7693      496E7465 
 7693      72727570 
 7694              	.LASF19:
 7695 0c4e 6C6F6E67 		.ascii	"long double\000"
 7695      20646F75 
 7695      626C6500 
 7696              	.LASF16:
 7697 0c5a 75696E74 		.ascii	"uint16_t\000"
 7697      31365F74 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 223


 7697      00
 7698              	.LASF149:
 7699 0c63 494E5452 		.ascii	"INTR_I2C_EC_MASK\000"
 7699      5F493243 
 7699      5F45435F 
 7699      4D41534B 
 7699      00
 7700              	.LASF25:
 7701 0c74 70726F74 		.ascii	"protBase\000"
 7701      42617365 
 7701      00
 7702              	.LASF75:
 7703 0c7d 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 7703      5472436D 
 7703      64477253 
 7703      656C4D73 
 7703      6B00
 7704              	.LASF254:
 7705 0c8f 43795F53 		.ascii	"Cy_SCB_GetTxSrValid\000"
 7705      43425F47 
 7705      65745478 
 7705      53725661 
 7705      6C696400 
 7706              	.LASF217:
 7707 0ca3 73636C6B 		.ascii	"sclkMode\000"
 7707      4D6F6465 
 7707      00
 7708              	.LASF49:
 7709 0cac 73727373 		.ascii	"srssNumHfroot\000"
 7709      4E756D48 
 7709      66726F6F 
 7709      7400
 7710              	.LASF33:
 7711 0cba 64775665 		.ascii	"dwVersion\000"
 7711      7273696F 
 7711      6E00
 7712              	.LASF154:
 7713 0cc4 494E5452 		.ascii	"INTR_SPI_EC_MASK\000"
 7713      5F535049 
 7713      5F45435F 
 7713      4D41534B 
 7713      00
 7714              	.LASF293:
 7715 0cd5 6C6F6342 		.ascii	"locBase\000"
 7715      61736500 
 7716              	.LASF284:
 7717 0cdd 636F6E66 		.ascii	"config\000"
 7717      696700
 7718              	.LASF20:
 7719 0ce4 73697A65 		.ascii	"sizetype\000"
 7719      74797065 
 7719      00
 7720              	.LASF295:
 7721 0ced 72657453 		.ascii	"retStatus\000"
 7721      74617475 
 7721      7300
 7722              	.LASF125:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 224


 7723 0cf7 4932435F 		.ascii	"I2C_S_CMD\000"
 7723      535F434D 
 7723      4400
 7724              	.LASF100:
 7725 0d01 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 7725      73436D34 
 7725      4E6D6943 
 7725      746C4F66 
 7725      66736574 
 7726              	.LASF286:
 7727 0d16 62797465 		.ascii	"byteMode\000"
 7727      4D6F6465 
 7727      00
 7728              	.LASF82:
 7729 0d1f 70657269 		.ascii	"periDiv8CtlOffset\000"
 7729      44697638 
 7729      43746C4F 
 7729      66667365 
 7729      7400
 7730              	.LASF121:
 7731 0d31 52455345 		.ascii	"RESERVED2\000"
 7731      52564544 
 7731      3200
 7732              	.LASF127:
 7733 0d3b 52455345 		.ascii	"RESERVED3\000"
 7733      52564544 
 7733      3300
 7734              	.LASF131:
 7735 0d45 52455345 		.ascii	"RESERVED4\000"
 7735      52564544 
 7735      3400
 7736              	.LASF133:
 7737 0d4f 52455345 		.ascii	"RESERVED5\000"
 7737      52564544 
 7737      3500
 7738              	.LASF137:
 7739 0d59 52455345 		.ascii	"RESERVED6\000"
 7739      52564544 
 7739      3600
 7740              	.LASF139:
 7741 0d63 52455345 		.ascii	"RESERVED7\000"
 7741      52564544 
 7741      3700
 7742              	.LASF142:
 7743 0d6d 52455345 		.ascii	"RESERVED8\000"
 7743      52564544 
 7743      3800
 7744              	.LASF144:
 7745 0d77 52455345 		.ascii	"RESERVED9\000"
 7745      52564544 
 7745      3900
 7746              	.LASF193:
 7747 0d81 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 7747      6E5F7379 
 7747      73706D5F 
 7747      63616C6C 
 7747      6261636B 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 225


 7748              	.LASF8:
 7749 0d9d 6C6F6E67 		.ascii	"long int\000"
 7749      20696E74 
 7749      00
 7750              	.LASF31:
 7751 0da6 63707573 		.ascii	"cpussVersion\000"
 7751      73566572 
 7751      73696F6E 
 7751      00
 7752              	.LASF123:
 7753 0db3 4932435F 		.ascii	"I2C_STATUS\000"
 7753      53544154 
 7753      555300
 7754              	.LASF35:
 7755 0dbe 6770696F 		.ascii	"gpioVersion\000"
 7755      56657273 
 7755      696F6E00 
 7756              	.LASF310:
 7757 0dca 44697363 		.ascii	"DiscardArrayNoCheck\000"
 7757      61726441 
 7757      72726179 
 7757      4E6F4368 
 7757      65636B00 
 7758              	.LASF34:
 7759 0dde 666C6173 		.ascii	"flashcVersion\000"
 7759      68635665 
 7759      7273696F 
 7759      6E00
 7760              	.LASF56:
 7761 0dec 70726F74 		.ascii	"protBusMasterMask\000"
 7761      4275734D 
 7761      61737465 
 7761      724D6173 
 7761      6B00
 7762              	.LASF274:
 7763 0dfe 43795F53 		.ascii	"Cy_SCB_IsRxDataWidthByte\000"
 7763      43425F49 
 7763      73527844 
 7763      61746157 
 7763      69647468 
 7764              	.LASF178:
 7765 0e17 63686172 		.ascii	"char_t\000"
 7765      5F7400
 7766              	.LASF291:
 7767 0e1e 63616C6C 		.ascii	"callbackParams\000"
 7767      6261636B 
 7767      50617261 
 7767      6D7300
 7768              	.LASF222:
 7769 0e2d 656E6162 		.ascii	"enableFreeRunSclk\000"
 7769      6C654672 
 7769      65655275 
 7769      6E53636C 
 7769      6B00
 7770              	.LASF276:
 7771 0e3f 43795F53 		.ascii	"Cy_SCB_SPI_Enable\000"
 7771      43425F53 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 226


 7771      50495F45 
 7771      6E61626C 
 7771      6500
 7772              	.LASF170:
 7773 0e51 494E5452 		.ascii	"INTR_TX_MASKED\000"
 7773      5F54585F 
 7773      4D41534B 
 7773      454400
 7774              	.LASF167:
 7775 0e60 494E5452 		.ascii	"INTR_TX\000"
 7775      5F545800 
 7776              	.LASF119:
 7777 0e68 55415254 		.ascii	"UART_RX_STATUS\000"
 7777      5F52585F 
 7777      53544154 
 7777      555300
 7778              	.LASF304:
 7779 0e77 43795F53 		.ascii	"Cy_SCB_SPI_GetTransferStatus\000"
 7779      43425F53 
 7779      50495F47 
 7779      65745472 
 7779      616E7366 
 7780              	.LASF95:
 7781 0e94 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 7781      73436D34 
 7781      50777243 
 7781      746C4F66 
 7781      66736574 
 7782              	.LASF2:
 7783 0ea9 5F5F7569 		.ascii	"__uint8_t\000"
 7783      6E74385F 
 7783      7400
 7784              	.LASF129:
 7785 0eb3 54585F46 		.ascii	"TX_FIFO_CTRL\000"
 7785      49464F5F 
 7785      4354524C 
 7785      00
 7786              	.LASF232:
 7787 0ec0 6D617374 		.ascii	"masterSlaveIntEnableMask\000"
 7787      6572536C 
 7787      61766549 
 7787      6E74456E 
 7787      61626C65 
 7788              	.LASF257:
 7789 0ed9 43795F53 		.ascii	"Cy_SCB_SetRxInterruptMask\000"
 7789      43425F53 
 7789      65745278 
 7789      496E7465 
 7789      72727570 
 7790              	.LASF124:
 7791 0ef3 4932435F 		.ascii	"I2C_M_CMD\000"
 7791      4D5F434D 
 7791      4400
 7792              	.LASF155:
 7793 0efd 494E5452 		.ascii	"INTR_SPI_EC_MASKED\000"
 7793      5F535049 
 7793      5F45435F 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 227


 7793      4D41534B 
 7793      454400
 7794              	.LASF86:
 7795 0f10 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 7795      50727449 
 7795      6E747243 
 7795      66674F66 
 7795      66736574 
 7796              	.LASF113:
 7797 0f25 5350495F 		.ascii	"SPI_CTRL\000"
 7797      4354524C 
 7797      00
 7798              	.LASF301:
 7799 0f2e 6669666F 		.ascii	"fifoSize\000"
 7799      53697A65 
 7799      00
 7800              	.LASF236:
 7801 0f37 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 7801      74635F73 
 7801      63625F73 
 7801      70695F63 
 7801      6F6E7465 
 7802              	.LASF134:
 7803 0f4e 52585F43 		.ascii	"RX_CTRL\000"
 7803      54524C00 
 7804              	.LASF97:
 7805 0f56 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 7805      73547269 
 7805      6D526F6D 
 7805      43746C4F 
 7805      66667365 
 7806              	.LASF122:
 7807 0f6c 4932435F 		.ascii	"I2C_CTRL\000"
 7807      4354524C 
 7807      00
 7808              	.LASF36:
 7809 0f75 6873696F 		.ascii	"hsiomVersion\000"
 7809      6D566572 
 7809      73696F6E 
 7809      00
 7810              	.LASF10:
 7811 0f82 6C6F6E67 		.ascii	"long unsigned int\000"
 7811      20756E73 
 7811      69676E65 
 7811      6420696E 
 7811      7400
 7812              	.LASF225:
 7813 0f94 656E6162 		.ascii	"enableTransferSeperation\000"
 7813      6C655472 
 7813      616E7366 
 7813      65725365 
 7813      70657261 
 7814              	.LASF157:
 7815 0fad 494E5452 		.ascii	"INTR_M\000"
 7815      5F4D00
 7816              	.LASF101:
 7817 0fb4 63707573 		.ascii	"cpussRomCtl\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 228


 7817      73526F6D 
 7817      43746C00 
 7818              	.LASF162:
 7819 0fc0 494E5452 		.ascii	"INTR_S\000"
 7819      5F5300
 7820              	.LASF17:
 7821 0fc7 696E7433 		.ascii	"int32_t\000"
 7821      325F7400 
 7822              	.LASF159:
 7823 0fcf 494E5452 		.ascii	"INTR_M_MASK\000"
 7823      5F4D5F4D 
 7823      41534B00 
 7824              	.LASF230:
 7825 0fdb 74784669 		.ascii	"txFifoTriggerLevel\000"
 7825      666F5472 
 7825      69676765 
 7825      724C6576 
 7825      656C00
 7826              	.LASF294:
 7827 0fee 6C6F6343 		.ascii	"locContext\000"
 7827      6F6E7465 
 7827      787400
 7828              	.LASF94:
 7829 0ff9 63707573 		.ascii	"cpussCm0StatusOffset\000"
 7829      73436D30 
 7829      53746174 
 7829      75734F66 
 7829      66736574 
 7830              	.LASF114:
 7831 100e 5350495F 		.ascii	"SPI_STATUS\000"
 7831      53544154 
 7831      555300
 7832              	.LASF297:
 7833 1019 43795F53 		.ascii	"Cy_SCB_SPI_Transfer\000"
 7833      43425F53 
 7833      50495F54 
 7833      72616E73 
 7833      66657200 
 7834              	.LASF210:
 7835 102d 43595F53 		.ascii	"CY_SCB_SPI_CPHA0_CPOL1\000"
 7835      43425F53 
 7835      50495F43 
 7835      50484130 
 7835      5F43504F 
 7836              	.LASF187:
 7837 1044 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 7837      5953504D 
 7837      5F464149 
 7837      4C00
 7838              	.LASF203:
 7839 1052 63795F65 		.ascii	"cy_en_scb_spi_mode_t\000"
 7839      6E5F7363 
 7839      625F7370 
 7839      695F6D6F 
 7839      64655F74 
 7840              	.LASF1:
 7841 1067 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 229


 7841      676E6564 
 7841      20636861 
 7841      7200
 7842              	.LASF198:
 7843 1075 43595F53 		.ascii	"CY_SCB_SPI_BAD_PARAM\000"
 7843      43425F53 
 7843      50495F42 
 7843      41445F50 
 7843      4152414D 
 7844              	.LASF250:
 7845 108a 43795F53 		.ascii	"Cy_SCB_SetRxFifoLevel\000"
 7845      43425F53 
 7845      65745278 
 7845      4669666F 
 7845      4C657665 
 7846              	.LASF9:
 7847 10a0 5F5F7569 		.ascii	"__uint32_t\000"
 7847      6E743332 
 7847      5F7400
 7848              	.LASF106:
 7849 10ab 6970634C 		.ascii	"ipcLockStatusOffset\000"
 7849      6F636B53 
 7849      74617475 
 7849      734F6666 
 7849      73657400 
 7850              	.LASF87:
 7851 10bf 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 7851      50727443 
 7851      66674F66 
 7851      66736574 
 7851      00
 7852              	.LASF146:
 7853 10d0 52455345 		.ascii	"RESERVED10\000"
 7853      52564544 
 7853      313000
 7854              	.LASF148:
 7855 10db 52455345 		.ascii	"RESERVED11\000"
 7855      52564544 
 7855      313100
 7856              	.LASF151:
 7857 10e6 52455345 		.ascii	"RESERVED12\000"
 7857      52564544 
 7857      313200
 7858              	.LASF153:
 7859 10f1 52455345 		.ascii	"RESERVED13\000"
 7859      52564544 
 7859      313300
 7860              	.LASF156:
 7861 10fc 52455345 		.ascii	"RESERVED14\000"
 7861      52564544 
 7861      313400
 7862              	.LASF161:
 7863 1107 52455345 		.ascii	"RESERVED15\000"
 7863      52564544 
 7863      313500
 7864              	.LASF166:
 7865 1112 52455345 		.ascii	"RESERVED16\000"
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 230


 7865      52564544 
 7865      313600
 7866              	.LASF171:
 7867 111d 52455345 		.ascii	"RESERVED17\000"
 7867      52564544 
 7867      313700
 7868              	.LASF136:
 7869 1128 52585F46 		.ascii	"RX_FIFO_STATUS\000"
 7869      49464F5F 
 7869      53544154 
 7869      555300
 7870              	.LASF234:
 7871 1137 63795F73 		.ascii	"cy_stc_scb_spi_config_t\000"
 7871      74635F73 
 7871      63625F73 
 7871      70695F63 
 7871      6F6E6669 
 7872              	.LASF132:
 7873 114f 54585F46 		.ascii	"TX_FIFO_WR\000"
 7873      49464F5F 
 7873      575200
 7874              	.LASF251:
 7875 115a 43795F53 		.ascii	"Cy_SCB_ClearRxFifo\000"
 7875      43425F43 
 7875      6C656172 
 7875      52784669 
 7875      666F00
 7876              	.LASF266:
 7877 116d 43795F53 		.ascii	"Cy_SCB_SetMasterInterruptMask\000"
 7877      43425F53 
 7877      65744D61 
 7877      73746572 
 7877      496E7465 
 7878              	.LASF289:
 7879 118b 43795F53 		.ascii	"Cy_SCB_SPI_Init\000"
 7879      43425F53 
 7879      50495F49 
 7879      6E697400 
 7880              	.LASF200:
 7881 119b 63795F65 		.ascii	"cy_en_scb_spi_status_t\000"
 7881      6E5F7363 
 7881      625F7370 
 7881      695F7374 
 7881      61747573 
 7882              	.LASF206:
 7883 11b2 43595F53 		.ascii	"CY_SCB_SPI_NATIONAL\000"
 7883      43425F53 
 7883      50495F4E 
 7883      4154494F 
 7883      4E414C00 
 7884              	.LASF58:
 7885 11c6 666C6173 		.ascii	"flashRwwRequired\000"
 7885      68527777 
 7885      52657175 
 7885      69726564 
 7885      00
 7886              	.LASF231:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 231


 7887 11d7 74784669 		.ascii	"txFifoIntEnableMask\000"
 7887      666F496E 
 7887      74456E61 
 7887      626C654D 
 7887      61736B00 
 7888              	.LASF298:
 7889 11eb 74784275 		.ascii	"txBuffer\000"
 7889      66666572 
 7889      00
 7890              	.LASF53:
 7891 11f4 65704D6F 		.ascii	"epMonitorNr\000"
 7891      6E69746F 
 7891      724E7200 
 7892              	.LASF183:
 7893 1200 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 7893      5953504D 
 7893      5F424144 
 7893      5F504152 
 7893      414D00
 7894              	.LASF279:
 7895 1213 43795F53 		.ascii	"Cy_SCB_SPI_ClearRxFifo\000"
 7895      43425F53 
 7895      50495F43 
 7895      6C656172 
 7895      52784669 
 7896              	.LASF215:
 7897 122a 7370694D 		.ascii	"spiMode\000"
 7897      6F646500 
 7898              	.LASF0:
 7899 1232 7369676E 		.ascii	"signed char\000"
 7899      65642063 
 7899      68617200 
 7900              	.LASF68:
 7901 123e 64774368 		.ascii	"dwChOffset\000"
 7901      4F666673 
 7901      657400
 7902              	.LASF116:
 7903 1249 55415254 		.ascii	"UART_CTRL\000"
 7903      5F435452 
 7903      4C00
 7904              	.LASF41:
 7905 1253 63707573 		.ascii	"cpussIpcIrqNr\000"
 7905      73497063 
 7905      4972714E 
 7905      7200
 7906              	.LASF174:
 7907 1261 494E5452 		.ascii	"INTR_RX_MASK\000"
 7907      5F52585F 
 7907      4D41534B 
 7907      00
 7908              	.LASF71:
 7909 126e 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 7909      43746C50 
 7909      7265656D 
 7909      70746162 
 7909      6C65506F 
 7910              	.LASF110:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 232


 7911 1284 434D445F 		.ascii	"CMD_RESP_CTRL\000"
 7911      52455350 
 7911      5F435452 
 7911      4C00
 7912              	.LASF107:
 7913 1292 63795F73 		.ascii	"cy_stc_device_t\000"
 7913      74635F64 
 7913      65766963 
 7913      655F7400 
 7914              	.LASF209:
 7915 12a2 43595F53 		.ascii	"CY_SCB_SPI_CPHA0_CPOL0\000"
 7915      43425F53 
 7915      50495F43 
 7915      50484130 
 7915      5F43504F 
 7916              	.LASF38:
 7917 12b9 70657269 		.ascii	"periVersion\000"
 7917      56657273 
 7917      696F6E00 
 7918              	.LASF181:
 7919 12c5 646F7562 		.ascii	"double\000"
 7919      6C6500
 7920              	.LASF28:
 7921 12cc 70617373 		.ascii	"passBase\000"
 7921      42617365 
 7921      00
 7922              	.LASF65:
 7923 12d5 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 7923      6843746C 
 7923      4D61696E 
 7923      57733246 
 7923      72657100 
 7924              	.LASF173:
 7925 12e9 494E5452 		.ascii	"INTR_RX_SET\000"
 7925      5F52585F 
 7925      53455400 
 7926              	.LASF220:
 7927 12f5 74784461 		.ascii	"txDataWidth\000"
 7927      74615769 
 7927      64746800 
 7928              	.LASF47:
 7929 1301 73727373 		.ascii	"srssNumClkpath\000"
 7929      4E756D43 
 7929      6C6B7061 
 7929      746800
 7930              	.LASF278:
 7931 1310 43795F53 		.ascii	"Cy_SCB_SPI_GetNumInRxFifo\000"
 7931      43425F53 
 7931      50495F47 
 7931      65744E75 
 7931      6D496E52 
 7932              	.LASF67:
 7933 132a 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 7933      6843746C 
 7933      4D61696E 
 7933      57733446 
 7933      72657100 
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 233


 7934              	.LASF208:
 7935 133e 63795F65 		.ascii	"cy_en_scb_spi_sub_mode_t\000"
 7935      6E5F7363 
 7935      625F7370 
 7935      695F7375 
 7935      625F6D6F 
 7936              	.LASF218:
 7937 1357 6F766572 		.ascii	"oversample\000"
 7937      73616D70 
 7937      6C6500
 7938              	.LASF282:
 7939 1362 43795F53 		.ascii	"Cy_SCB_SPI_Read\000"
 7939      43425F53 
 7939      50495F52 
 7939      65616400 
 7940              	.LASF313:
 7941 1372 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7941      43313120 
 7941      352E342E 
 7941      31203230 
 7941      31363036 
 7942 13a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 7942      20726576 
 7942      6973696F 
 7942      6E203233 
 7942      37373135 
 7943 13d8 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 7943      70202D6D 
 7943      6670753D 
 7943      66707634 
 7943      2D73702D 
 7944 140b 65637469 		.ascii	"ections -ffat-lto-objects\000"
 7944      6F6E7320 
 7944      2D666661 
 7944      742D6C74 
 7944      6F2D6F62 
 7945              	.LASF288:
 7946 1425 43795F53 		.ascii	"Cy_SCB_SPI_Disable\000"
 7946      43425F53 
 7946      50495F44 
 7946      69736162 
 7946      6C6500
 7947              	.LASF258:
 7948 1438 696E7465 		.ascii	"interruptMask\000"
 7948      72727570 
 7948      744D6173 
 7948      6B00
 7949              	.LASF229:
 7950 1446 72784669 		.ascii	"rxFifoIntEnableMask\000"
 7950      666F496E 
 7950      74456E61 
 7950      626C654D 
 7950      61736B00 
 7951              	.LASF143:
 7952 145a 455A5F44 		.ascii	"EZ_DATA\000"
 7952      41544100 
 7953              	.LASF37:
ARM GAS  C:\Users\tmj32\AppData\Local\Temp\ccjdVTAu.s 			page 234


 7954 1462 69706356 		.ascii	"ipcVersion\000"
 7954      65727369 
 7954      6F6E00
 7955              	.LASF74:
 7956 146d 70657269 		.ascii	"periTrCmdOffset\000"
 7956      5472436D 
 7956      644F6666 
 7956      73657400 
 7957              	.LASF239:
 7958 147d 72784275 		.ascii	"rxBufSize\000"
 7958      6653697A 
 7958      6500
 7959              	.LASF108:
 7960 1487 4354524C 		.ascii	"CTRL\000"
 7960      00
 7961              	.LASF191:
 7962 148c 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 7962      5953504D 
 7962      5F424546 
 7962      4F52455F 
 7962      5452414E 
 7963              	.LASF192:
 7964 14a7 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 7964      5953504D 
 7964      5F414654 
 7964      45525F54 
 7964      52414E53 
 7965              	.LASF189:
 7966 14c1 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 7966      5953504D 
 7966      5F434845 
 7966      434B5F52 
 7966      45414459 
 7967              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
