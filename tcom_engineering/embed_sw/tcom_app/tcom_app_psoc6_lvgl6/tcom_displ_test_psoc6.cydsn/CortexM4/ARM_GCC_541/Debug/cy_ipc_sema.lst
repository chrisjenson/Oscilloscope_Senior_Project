ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_ipc_sema.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
  23      72617465 
  23      645F536F 
  23      75726365 
  23      5C50536F 
  24 002e 6970635C 		.ascii	"ipc\\cy_ipc_drv.h\000"
  24      63795F69 
  24      70635F64 
  24      72762E68 
  24      00
  25              		.section	.text.Cy_IPC_Drv_GetIpcBaseAddress,"ax",%progbits
  26              		.align	2
  27              		.thumb
  28              		.thumb_func
  29              		.type	Cy_IPC_Drv_GetIpcBaseAddress, %function
  30              	Cy_IPC_Drv_GetIpcBaseAddress:
  31              	.LFB132:
  32              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_drv.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \file cy_ipc_drv.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Provides an API declaration of the IPC driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifndef CY_IPC_DRV_H
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_H
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 2


  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The inter-processor communication (IPC) driver provides a safe and reliable
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * method to transfer data between CPUs. Hardware locking ensures that only one
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * device can acquire and transfer data at a time so no data is lost or
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * overwritten by asynchronous processes or CPUs.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Include either cy_ipc_pipe.h or cy_ipc_sema.h. Alternatively include cy_pdl.h 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are three parts to the API:
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Driver-level (DRV) API - used internally by Semaphore and Pipe levels
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Pipe-level (PIPE) API - establishes a communication channel between
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       processors
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     - Semaphore-level (SEMA) API - enables users to set and clear flags to
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       synchronize operations.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Firmware does not need to use the DRV API. It can implement IPC functionality
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * entirely with the PIPE and SEMA APIs.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_background Background
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC is implemented in hardware as a collection of individual communication
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channels, each with a set of 32-bit registers. The IPC design implements a set
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of interrupts that enable each processor to notify the other that data is
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * available, or has been processed. There is also a locking mechanism that
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * allows only one CPU to gain access at a time.
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Driver-level API manages each channel's registers to implement IPC
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. For information on the IPC registers, see the IPC chapter of
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the Technical Reference Manual (TRM).
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * At the hardware level, communication is a five-step process.
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sending processor acquires a channel
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  It puts data into the channel
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The sender generates a notify event (interrupt)
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor identifies the sender and retrieves the data
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     -#  The receiving processor generates a release event (interrupt)
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_driver.png
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * These transactions are handled transparently by the DRV-level API. Use the
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * PIPE and SEMA layers of the API to implement communication in your application.
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The data transferred is limited to a single 32-bit value. As implemented by
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the PIPE API, that value is a pointer to a data structure of arbitrary size
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and complexity.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_overview Overview
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The Pipe is the key element in the PDL design. A pipe is typically a
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * full-duplex communication channel between CPU cores. A pipe allows a single
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * conduit to transfer messages or data to and from multiple processes or CPUs.
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe has two endpoints, one on each core. Each endpoint contains a dedicated
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channel and an interrupt. IPC channels 0-7 and IPC interrupts 0-7 are
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 3


  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * reserved for system use.
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The pipe also contains the number of clients it supports, and for each client
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a callback function. So the pipe can service a number of clients, each with a
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * separate callback function, on either endpoint. The number of clients a pipe
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * supports is the sum of each endpoint's clients.
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This design enables any number of processes on the sending core to put
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * arbitrary data into a single pipe. The first element of that data is the
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID of the client that should handle the data.
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An interrupt notifies the receiving core that data is available. The receiving
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * core parses the data to identify the client, and then dispatches the event to
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the appropriate client via the client callback function. An interrupt notifies
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the sending core that the receiver is finished. In this way a single pipe can
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * manage arbitrary data transfers between cores with data flowing in either
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * direction.
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \image html ipc_ints.png
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The application can use semaphores to control access to shared resources, as
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * required by the application's logic.
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The PDL provides specific files that set up default IPC functionality.
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * They are system_psoc6.h, system_psoc6_cm0plus.c and system_psoc6_cm4.c. You 
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can modify these files based on the requirements of your design. 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If you use PSoC Creator as a development environment, it will not overwrite 
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * your changes when you generate the application or build your code.
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_pipe_layer PIPE layer
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe is a communication channel between two endpoints. PSoC 6 devices support
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * 16 IPC channels, and 16 IPC interrupts, each numbered 0-15. IPC Channels 0-7
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and IPC interrupts 0-7 are reserved for system use. Channels 8-15 and
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupts 8-15 are available for application use.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A full duplex pipe uses two IPC channels, one per endpoint. Each endpoint
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * specifies all the information required to process a message (either sent or
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * received). Each endpoint is configured to use an IPC channel, and an IPC
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * interrupt. Common practice is to use the interrupt with the same number as
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel. However, IPC Interrupts are not directly associated with the
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC channels, so any channel can use any interrupt.  Any IPC channel can
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * trigger 0, 1 or all the IPC interrupts at once, depending on the Notify or
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release masks used.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * It is also possible to set up a one-directional pipe, using a single IPC
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel. In this design one processor is always the sender, and the other is
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * always the receiver. However, there are still two endpoints.
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A pipe supports an arbitrary number of clients with an array of callback
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functions, one per client. The client ID is the index number into the array
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * for the client. After a pipe is configured and initialized, the application
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * calls Cy_IPC_Pipe_RegisterCallback() once per client to register each client's
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function. Multiple clients can use the same callback function. The
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * endpoints in a pipe share the callback array.
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Use Cy_IPC_Pipe_SendMessage() to send data. You specify both the "to" and
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 4


 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * "from" endpoints, and a callback function to be used when the data transfer is
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * complete. The data is a 32-bit void pointer. The data pointed to is arbitrary,
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and can be an array, a structure, or a location in memory. The only limitation
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * is that the first element of the data must be a 32-bit unsigned word containing
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a client ID number. The ID number is the index into the callback array.
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * When a message is sent, the receiving endpoint's interrupt handler is called.
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The ISR can perform any task required by the design. However, as part of its
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function it calls \ref Cy_IPC_Pipe_ExecCallback. This function retrieves the
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * client ID from the data and calls the associated callback function.
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The user-supplied callback function handles the data in whatever way is
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * appropriate based on the application logic.
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * After the callback function is returned by the receiver, it invokes the release
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * callback function defined by the sender of the message.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_sema_layer SEMA Layer
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * A semaphore is a flag the application uses to control access to a shared
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * resource. The SEMA-level API uses an IPC channel to implement
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * semaphores. Startup code sets up a default semaphore system. The
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * default system creates an array of 128 semaphores (four 32-bit values).
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Semaphores 0-15 are reserved for system use. See
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Configuration Considerations - SEMA.
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Functions are available to initialize the semaphore system, to set or
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * clear a semaphore, or to get the semaphore's current status. Application
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * logic uses SEMA functions to relate a particular semaphore to a particular
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource, and set, clear, or check the flag when accessing the
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * shared resource.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_cypipe Configuration Considerations - CYPIPE
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * There are none. The startup files set up the required CYPIPE for system
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * use. Do not modify the CYPIPE. It uses IPC channels 5 and 6 to implement full
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * duplex communication between cores. See System Interrupt (SysInt) for background.
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To create your own pipe (<b>USRPIPE</b>) you should edit startup files
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * and take 4 steps:
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a pipe callbacks processing interrupt handler
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>Cy_SysIpcPipeIsrCm0</b> or <b>Cy_SysIpcPipeIsrCm4</b>)
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define a callbacks array (similar to <b>systemIpcPipeSysCbArray</b>)
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Define your pipe configuration with a cy_stc_ipc_pipe_config_t type structure
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      (similar to <b>systemIpcPipeConfigCm0</b> and <b>systemIpcPipeConfigCm4</b>)
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   -# Call Cy_IPC_Pipe_Init() from each core to initialize your pipe (similar
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *      to call in the <b>SystemInit</b>)
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_configuration_sema Configuration Considerations - SEMA
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup code calls Cy_IPC_Sema_Init() with default values to set up semaphore 
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * functionality. By default the semaphore system uses IPC channel 4, and 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * creates 128 semaphores. Do <b>not</b> change the IPC channel. 
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * You can change the number of semaphores.
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * To change the number of semaphores, modify this line of code in system_psoc6.h.
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \code
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 5


 189:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * #define CY_IPC_SEMA_COUNT               (uint32_t)(128u)
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \endcode
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Startup also declares array ipcSemaArray to hold the semaphore
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * flags based on the size defined for this symbol. Use increments of 32. You
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * must have at least 32 semaphores. Semaphores 0-15 are reserved for
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * system use. Your application can use semaphores greater than 15.
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_more_information More Information
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * If the default startup file is not used, or SystemInit() is not called in your 
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * project, call the following three functions prior to executing any flash or 
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * EmEEPROM write or erase operation:
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Sema_Init()
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Config()
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_IPC_Pipe_Init()
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *  -# Cy_Flash_Init()
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * See the technical reference manual(TRM) for more information on the IPC.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_MISRA MISRA-C Compliance
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>MISRA Rule</th>
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Class (Required/Advisory)</th>
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th>Rule Description</th>
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <th style="width: 50%;">Description of Deviation(s)</th>
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>10.3</td>
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>R</td>
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The value of a complex expression of integer type shall be cast
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         only to a type of the same signedness that is no wider than the underlying
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         type of the expression.</td>
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from integer to enumeration value is used to calculate
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         the interrupt vector source from the integer number of the IPC interrupt
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         structure, so there is no way to avoid this cast.</td>
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>11.4</td>
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A</td>
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>A cast should not be performed between a pointer to the void to a
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         pointer to the object type.</td>
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>The cast from the void to pointer and vice versa is used to transmit
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         data via the \ref group_ipc channel by exchanging the pointer. We
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         exchange only one pointer, so there is no way to avoid this cast.</td>
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \section group_ipc_changelog Changelog
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * <table class="doxtable">
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td rowspan="3">1.30</td>
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 6


 246:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Driver library directory-structure simplification.</td>
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Moved the Cy_IPC_SystemSemaInit(), Cy_IPC_SystemPipeInit() functions implementation from 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Changed IPC driver configuration method from compile time to run time.</td>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added register access layer. Use register access macros instead
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         of direct register access using dereferenced pointers.</td>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Makes register access device-independent, so that the PDL does 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         not need to be recompiled for each supported part number.</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.20</td>
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added \ref Cy_IPC_Pipe_ExecuteCallback function.
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Updated documentation about user pipe initialization.
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Interface improvement, documentation update</td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10.1</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Updated description of the \ref Cy_IPC_Pipe_Init,
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         \ref Cy_IPC_Pipe_EndpointInit, \ref Cy_IPC_Sema_Set functions.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *         Added / updated code snippets.
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Documentation update and clarification</td>
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.10</td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Added support for more IPC structures</td>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>New device support</td>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr>
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>1.0</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td>Initial version</td>
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *     <td></td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * </table>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_drv IPC driver layer (IPC_DRV)
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The functions of this layer are used in the higher IPC levels
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   (Semaphores and Pipes).
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Users are not expected to call any of these IPC functions directly (cy_ipc_drv.h). 
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Instead include either of cy_ipc_sema.h or cy_ipc_pipe.h. 
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Alternatively include cy_pdl.h to get access to all functions and declarations in the PDL.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_macros Macros
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Macro definitions are used in the driver
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_functions Functions
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Functions are used in the driver
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_data_structures Data Structures
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Data structures are used in the driver
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \defgroup group_ipc_enums Enumerated Types
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 7


 303:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *       Enumerations are used in the driver
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \}
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_sema IPC semaphores layer (IPC_SEMA)
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \defgroup group_ipc_pipe IPC pipes layer (IPC_PIPE)
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Include files                                                              */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /******************************************************************************/
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device.h"
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_device_headers.h"
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include "cy_syslib.h"
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #include <stddef.h>
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_macros
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver major version */
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MAJOR       1
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Driver minor version */
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_DRV_VERSION_MINOR       30
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Defines a value to indicate that no notification events are needed */
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_NO_NOTIFICATION         (uint32_t)(0x00000000ul)
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* Error Code constants */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID CY_PDL_DRV_ID(0x22u)  /**< Software PDL driver ID for IPC */
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function status codes */
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_INFO    (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_INFO )
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function warning return values */
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_WARNING (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_WARNING)
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Return prefix for IPC driver function error return values */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_ID_ERROR   (uint32_t)( CY_IPC_ID | CY_PDL_STATUS_ERROR)
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** Converts the IPC interrupt channel number to interrupt vector */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #define CY_IPC_INTR_NUM_TO_VECT(x)         ((int32_t) cy_device->cpussIpc0Irq + (x))
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_macros */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /* end of definition in device.h */
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #if (CY_CPU_CORTEX_M0P)
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM0
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #else
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     #define CY_IPC_CHAN_SYSCALL         CY_IPC_CHAN_SYSCALL_CM4
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif  /* (CY_CPU_CORTEX_M0P) */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 8


 360:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_enums
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a list of ENUMs used for function return status.
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** typedef enum
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was successfully executed */
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_SUCCESS      = (0x00u),
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     /** Function was not executed due to an error.
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         Typical conditions for the error explained
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****         in the function description */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_IPC_DRV_ERROR        = ( CY_IPC_ID_ERROR + 1ul),
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** } cy_en_ipcdrv_status_t;
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_enums */
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #ifdef __cplusplus
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** extern "C" {
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** #endif
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \cond INTERNAL */
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue);
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base);
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask);
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask);
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \endcond */
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /**
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \addtogroup group_ipc_functions
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type*       Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex);
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type*  Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex);
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type * base, uint32_t notifyEventIntr
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base);
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_LockRelease (IPC_STRUCT_Type * base, uint32_t releaseEventIntr)
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool     Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base);
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base);
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_SendMsgWord (IPC_STRUCT_Type * base, uint32_t notifyEventIntr, 
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** cy_en_ipcdrv_status_t    Cy_IPC_Drv_ReadMsgWord (IPC_STRUCT_Type const * base, uint32_t * message);
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_SendMsgPtr (IPC_STRUCT_Type* base, uint32_t notify
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void ** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 9


 417:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type * base,
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask (IPC_INTR_STRUCT_Type const * base);
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base);
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus (IPC_INTR_STRUCT_Type const * base);
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_SetInterrupt (IPC_INTR_STRUCT_Type * base,
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_ClearInterrupt (IPC_INTR_STRUCT_Type * base,
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                                       uint32_t ipcReleaseMask, uint32_t ipcAcquireM
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIpcBaseAddress
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC channel index as a parameter and returns the base
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address the IPC registers corresponding to the IPC channel.
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIndex does not exceed the
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIndex
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC structure. This is converted to the base address of
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC channel registers.
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC registers.
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgWord
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_STRUCT_Type* Cy_IPC_Drv_GetIpcBaseAddress (uint32_t ipcIndex)
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
  33              		.loc 1 450 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_CHANNELS > ipcIndex);
  46              		.loc 1 451 0
  47 0008 0E4B     		ldr	r3, .L4
  48 000a 1B68     		ldr	r3, [r3]
  49 000c 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
  50 0010 1A46     		mov	r2, r3
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 9A42     		cmp	r2, r3
  53 0016 04D8     		bhi	.L2
  54              		.loc 1 451 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 10


  55 0018 40F2C311 		movw	r1, #451
  56 001c 0A48     		ldr	r0, .L4+4
  57 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  58              	.L2:
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_STRUCT_Type*) CY_IPC_STRUCT_PTR(ipcIndex));
  59              		.loc 1 452 0 is_stmt 1
  60 0022 084B     		ldr	r3, .L4
  61 0024 1B68     		ldr	r3, [r3]
  62 0026 1A6A     		ldr	r2, [r3, #32]
  63 0028 064B     		ldr	r3, .L4
  64 002a 1B68     		ldr	r3, [r3]
  65 002c B3F8B030 		ldrh	r3, [r3, #176]
  66 0030 1946     		mov	r1, r3
  67 0032 7B68     		ldr	r3, [r7, #4]
  68 0034 03FB01F3 		mul	r3, r3, r1
  69 0038 1344     		add	r3, r3, r2
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
  70              		.loc 1 453 0
  71 003a 1846     		mov	r0, r3
  72 003c 0837     		adds	r7, r7, #8
  73              		.cfi_def_cfa_offset 8
  74 003e BD46     		mov	sp, r7
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 0040 80BD     		pop	{r7, pc}
  78              	.L5:
  79 0042 00BF     		.align	2
  80              	.L4:
  81 0044 00000000 		.word	cy_device
  82 0048 00000000 		.word	.LC0
  83              		.cfi_endproc
  84              	.LFE132:
  85              		.size	Cy_IPC_Drv_GetIpcBaseAddress, .-Cy_IPC_Drv_GetIpcBaseAddress
  86              		.section	.text.Cy_IPC_Drv_ReadDataValue,"ax",%progbits
  87              		.align	2
  88              		.thumb
  89              		.thumb_func
  90              		.type	Cy_IPC_Drv_ReadDataValue, %function
  91              	Cy_IPC_Drv_ReadDataValue:
  92              	.LFB143:
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetIntrBaseAddr
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function takes an IPC interrupt structure index and returns the base
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * address of the IPC interrupt registers corresponding to the IPC Interrupt.
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note The user is responsible for ensuring that ipcIntrIndex does not exceed the
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * limits.
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcIntrIndex
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Represents the number of IPC interrupt structure. This is converted to the
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * base address of the IPC interrupt registers.
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 11


 471:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Returns a pointer to the base of the IPC interrupt registers.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE IPC_INTR_STRUCT_Type* Cy_IPC_Drv_GetIntrBaseAddr (uint32_t ipcIntrIndex)
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(CY_IPC_INTERRUPTS > ipcIntrIndex);
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( (IPC_INTR_STRUCT_Type*) &(((IPC_Type *)cy_device->ipcBase)->INTR_STRUCT[ipcIntrIndex])
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterruptMask
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt mask for an IPC Interrupt.
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The mask sets release or acquire notification events for all IPC channels.
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterruptMask (IPC_INTR_STRUCT_Type* base,
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                                               uint32_t ipcReleaseMask, uint32_t ipcAcquireMask)
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_MASK(base) = _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_NOTIFY,  ipcAcquireMa
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_MASK_RELEASE, ipcReleaseMask);
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptMask
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the interrupt mask.
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 12


 528:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptMask(IPC_INTR_STRUCT_Type const * base)
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASK(base);
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatusMasked
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the active unmasked interrupt. This function
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * can be used in the interrupt service routine to find which source triggered
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * the interrupt.
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatusMasked (IPC_INTR_STRUCT_Type const * base)
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR_MASKED(base);
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetInterruptStatus
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read the pending interrupts. Note that this read is
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * an unmasked read of the interrupt status. Interrupt sources read as active by
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * this function would generate interrupts only if they were not masked.
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 13


 585:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   The return value is encoded as follows
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <table>
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><th>Interrupt sources   <th>Value
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_RELEASE   <td>Xth bit set
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   <tr><td>Ipc_PORTX_NOTIFY    <td>X+16th bit set
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   </table>
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatus
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetInterruptStatus(IPC_INTR_STRUCT_Type const * base)
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_INTR_STRUCT_INTR(base);
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SetInterrupt
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to set the interrupt source. This function can be used
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * to activate interrupts through software.
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \note That interrupt sources set using this interrupt would generate interrupts
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * only if they are not masked.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SetInterrupt
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_SetInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask, 
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR_SET(base) =  _VAL2FLD( IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask ) 
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                       _VAL2FLD( IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask );
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ClearInterrupt
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 14


 642:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to clear the interrupt source. Use this function to clear
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * a pending interrupt source in the interrupt status.
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This is a handle to the IPC interrupt. This handle can be calculated from the
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * IPC interrupt number using \ref Cy_IPC_Drv_GetIntrBaseAddr.
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcReleaseMask
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * release event.
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param ipcAcquireMask
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * An encoded list of all IPC channels that can trigger the interrupt on a
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * notify event.
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetInterruptStatusMasked
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ClearInterrupt(IPC_INTR_STRUCT_Type* base, uint32_t ipcReleaseMask
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcAcquireMask  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (ipcReleaseMask & ~(uint32_t)(IPC_STRUCT_RELEASE_INTR_RELEASE_Msk)));
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_INTR_STRUCT_INTR(base) =  _VAL2FLD(IPC_INTR_STRUCT_INTR_NOTIFY,  ipcAcquireMask) |
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****                   _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, ipcReleaseMask);
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     (void)REG_IPC_INTR_STRUCT_INTR(base);  /* Read the register to flush the cache */
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc_functions */
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /** \} group_ipc */
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_AcquireNotify
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a acquire notification event by IPC interrupt structure.
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt structures that are triggered
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * by a notification. Bit number correspond to number of the IPC interrupt
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * structure.
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_AcquireNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 15


 699:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_STRUCT_NOTIFY_INTR_NOTIFY_Msk)));
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_NOTIFY(base) = _VAL2FLD(IPC_STRUCT_NOTIFY_INTR_NOTIFY, notifyEventIntr);
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReleaseNotify
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function generates a release notification event by IPC interrupt structure.
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered by a notification.
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgWord
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void  Cy_IPC_Drv_ReleaseNotify (IPC_STRUCT_Type* base, uint32_t notifyEventIntr)
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(0ul == (notifyEventIntr  & ~(uint32_t)(IPC_INTR_STRUCT_INTR_RELEASE_Msk)));
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_RELEASE(base) = _VAL2FLD(IPC_INTR_STRUCT_INTR_RELEASE, notifyEventIntr);
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_WriteDataValue
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function writes a value to the DATA register of the IPC channel.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param dataValue
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value to be written.
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE void     Cy_IPC_Drv_WriteDataValue (IPC_STRUCT_Type* base, uint32_t dataValue)
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     REG_IPC_STRUCT_DATA(base) = dataValue;
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 16


 756:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadDataValue
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function reads a value from the DATA register of the IPC channel.
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from DATA register.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ReadDataValue (IPC_STRUCT_Type const * base)
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
  93              		.loc 1 775 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0000 80B4     		push	{r7}
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 7, -4
 101 0002 83B0     		sub	sp, sp, #12
 102              		.cfi_def_cfa_offset 16
 103 0004 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 105 0006 7860     		str	r0, [r7, #4]
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_DATA(base);
 106              		.loc 1 776 0
 107 0008 7B68     		ldr	r3, [r7, #4]
 108 000a DB68     		ldr	r3, [r3, #12]
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 109              		.loc 1 777 0
 110 000c 1846     		mov	r0, r3
 111 000e 0C37     		adds	r7, r7, #12
 112              		.cfi_def_cfa_offset 4
 113 0010 BD46     		mov	sp, r7
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0012 5DF8047B 		ldr	r7, [sp], #4
 117              		.cfi_restore 7
 118              		.cfi_def_cfa_offset 0
 119 0016 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE143:
 122              		.size	Cy_IPC_Drv_ReadDataValue, .-Cy_IPC_Drv_ReadDataValue
 123              		.section	.text.Cy_IPC_Drv_SendMsgPtr,"ax",%progbits
 124              		.align	2
 125              		.thumb
 126              		.thumb_func
 127              		.type	Cy_IPC_Drv_SendMsgPtr, %function
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 17


 128              	Cy_IPC_Drv_SendMsgPtr:
 129              	.LFB148:
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_IsLockAcquired
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to test the status of an IPC channel. The function
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * tells the reader if the IPC channel was in the locked or released state.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   Status for the function:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   true:  The IPC channel is in the Locked state.
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   false: The IPC channel is in the Released state.
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE bool Cy_IPC_Drv_IsLockAcquired (IPC_STRUCT_Type const * base)
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0u != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_LOCK_STATUS(base)) );
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_GetLockStatus
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function is used to get the status of an IPC channel.
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Value from LOCK_STATUS register.
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_GetLockStatus
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_GetLockStatus (IPC_STRUCT_Type const * base)
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return REG_IPC_STRUCT_LOCK_STATUS(base);
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 18


 833:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractAcquireMask
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts an Acquire mask part from full interrupt mask value.
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Acquire mask value.
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractAcquireMask (uint32_t intMask)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_NOTIFY, intMask);
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ExtractReleaseMask
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function extracts a Release mask part from full interrupt mask value.
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is internal and should not be called directly by user
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * software.
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param intMask
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Interrupt mask value to be processed.
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Release mask value.
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE uint32_t Cy_IPC_Drv_ExtractReleaseMask (uint32_t intMask)
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return _FLD2VAL(IPC_INTR_STRUCT_INTR_MASK_RELEASE, intMask);
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_SendMsgPtr
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to send a message pointer through an IPC channel.
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message structure may hold a generic pointer that may contain the address
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of any user data type or structure. This parameter could be a pointer to a 32-bit
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * integer, an array, or even a data structure defined in the user code. This
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * function acts as a transfer engine for sending the pointer. Any memory
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * management of the pointer allocation and deallocation is up to the application
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * code.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The function also has an associated notification field that will let the
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * message notify one or multiple interrupts.
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 19


 890:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param notifyEventIntr
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Bit encoded list of IPC interrupt lines that are triggered during the release
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * action.
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The message pointer that is being sent over the IPC channel.
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation:
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The send operation was successful.
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC channel is unavailable because
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                               it is already locked.
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_SendMsgPtr
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t  Cy_IPC_Drv_SendMsgPtr(IPC_STRUCT_Type* base, uint32_t notify
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 130              		.loc 1 914 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 16
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 84B0     		sub	sp, sp, #16
 139              		.cfi_def_cfa_offset 24
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 142 0006 F860     		str	r0, [r7, #12]
 143 0008 B960     		str	r1, [r7, #8]
 144 000a 7A60     		str	r2, [r7, #4]
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
 145              		.loc 1 915 0
 146 000c 7B68     		ldr	r3, [r7, #4]
 147 000e 002B     		cmp	r3, #0
 148 0010 04D1     		bne	.L9
 149              		.loc 1 915 0 is_stmt 0 discriminator 1
 150 0012 40F29331 		movw	r1, #915
 151 0016 0748     		ldr	r0, .L11
 152 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 153              	.L9:
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_SendMsgWord(base, notifyEventIntr, (uint32_t)msgPtr);
 154              		.loc 1 916 0 is_stmt 1
 155 001c 7B68     		ldr	r3, [r7, #4]
 156 001e 1A46     		mov	r2, r3
 157 0020 B968     		ldr	r1, [r7, #8]
 158 0022 F868     		ldr	r0, [r7, #12]
 159 0024 FFF7FEFF 		bl	Cy_IPC_Drv_SendMsgWord
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 20


 160 0028 0346     		mov	r3, r0
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 161              		.loc 1 917 0
 162 002a 1846     		mov	r0, r3
 163 002c 1037     		adds	r7, r7, #16
 164              		.cfi_def_cfa_offset 8
 165 002e BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0030 80BD     		pop	{r7, pc}
 169              	.L12:
 170 0032 00BF     		.align	2
 171              	.L11:
 172 0034 00000000 		.word	.LC0
 173              		.cfi_endproc
 174              	.LFE148:
 175              		.size	Cy_IPC_Drv_SendMsgPtr, .-Cy_IPC_Drv_SendMsgPtr
 176              		.section	.text.Cy_IPC_Drv_LockAcquire,"ax",%progbits
 177              		.align	2
 178              		.thumb
 179              		.thumb_func
 180              		.type	Cy_IPC_Drv_LockAcquire, %function
 181              	Cy_IPC_Drv_LockAcquire:
 182              	.LFB150:
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_ReadMsgPtr
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to read a 32-bit pointer message through an IPC channel.
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress.
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param msgPtr
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Pointer variable to hold the data pointer that is being read from the IPC
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * channel.
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return Status of the operation
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The function executed successfully and the IPC
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       was acquired.
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The function encountered an error because the IPC
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       channel was already in a released state meaning the data
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       in it is invalid.
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_ReadMsgPtr
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE  cy_en_ipcdrv_status_t  Cy_IPC_Drv_ReadMsgPtr (IPC_STRUCT_Type const * base, void *
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     CY_ASSERT_L1(NULL != msgPtr);
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 21


 951:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return Cy_IPC_Drv_ReadMsgWord(base, (uint32_t *)msgPtr);
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** 
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** /*******************************************************************************
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Function Name: Cy_IPC_Drv_LockAcquire
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** ****************************************************************************//**
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This function is used to acquire the IPC channel.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \param base
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * This parameter is a handle that represents the base address of the registers
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * of the IPC channel.
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * The parameter is generally returned from a call to the \ref
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * Cy_IPC_Drv_GetIpcBaseAddress
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \return   Status of the operation
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_SUCCESS: The IPC was successfully acquired
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *   \retval CY_IPC_DRV_ERROR:   The IPC was not acquired because it was already acquired
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *                       by another master
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \funcusage
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Drv_LockAcquire
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** *******************************************************************************/
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** __STATIC_INLINE cy_en_ipcdrv_status_t Cy_IPC_Drv_LockAcquire (IPC_STRUCT_Type const * base)
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** {
 183              		.loc 1 977 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 7, -4
 191 0002 83B0     		sub	sp, sp, #12
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h ****     return ( 0ul != _FLD2VAL(IPC_STRUCT_ACQUIRE_SUCCESS, REG_IPC_STRUCT_ACQUIRE(base))) ? CY_IPC_DR
 196              		.loc 1 978 0
 197 0008 7B68     		ldr	r3, [r7, #4]
 198 000a 1B68     		ldr	r3, [r3]
 199 000c 03F00043 		and	r3, r3, #-2147483648
 200 0010 002B     		cmp	r3, #0
 201 0012 01DA     		bge	.L14
 202              		.loc 1 978 0 is_stmt 0 discriminator 1
 203 0014 0023     		movs	r3, #0
 204 0016 00E0     		b	.L16
 205              	.L14:
 206              		.loc 1 978 0 discriminator 2
 207 0018 034B     		ldr	r3, .L17
 208              	.L16:
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_drv.h **** }
 209              		.loc 1 979 0 is_stmt 1 discriminator 5
 210 001a 1846     		mov	r0, r3
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 22


 211 001c 0C37     		adds	r7, r7, #12
 212              		.cfi_def_cfa_offset 4
 213 001e BD46     		mov	sp, r7
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0020 5DF8047B 		ldr	r7, [sp], #4
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 0024 7047     		bx	lr
 220              	.L18:
 221 0026 00BF     		.align	2
 222              	.L17:
 223 0028 01008A00 		.word	9043969
 224              		.cfi_endproc
 225              	.LFE150:
 226              		.size	Cy_IPC_Drv_LockAcquire, .-Cy_IPC_Drv_LockAcquire
 227              		.bss
 228              		.align	2
 229              	cy_semaIpcStruct:
 230 0000 00000000 		.space	4
 231              		.section	.text.Cy_IPC_Sema_Init,"ax",%progbits
 232              		.align	2
 233              		.global	Cy_IPC_Sema_Init
 234              		.thumb
 235              		.thumb_func
 236              		.type	Cy_IPC_Sema_Init, %function
 237              	Cy_IPC_Sema_Init:
 238              	.LFB151:
 239              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_sema.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \file cy_ipc_sema.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \version 1.30
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  Description:
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *   IPC Semaphore Driver - This source file contains the source code for the
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *   semaphore level APIs for the IPC interface.
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ********************************************************************************
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** #include "cy_ipc_drv.h"
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** #include "cy_ipc_sema.h"
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** #include "cy_syslib.h"
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** #include <string.h> /* The memset() definition */
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /* Defines a mask to Check if semaphore count is a multiple of 32 */
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** #define CY_IPC_SEMA_PER_WORD_MASK    (CY_IPC_SEMA_PER_WORD - 1ul)
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /* Pointer to IPC structure used for semaphores */
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** static IPC_STRUCT_Type* cy_semaIpcStruct;
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 23


  29:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_Init
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This function initializes the semaphores subsystem. The user must create an
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * array of unsigned 32-bit words to hold the semaphore bits. The number
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * of semaphores will be the size of the array * 32. The total semaphores count
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * will always be a multiple of 32.
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \note In a multi-CPU system this init function should be called with all
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * initialized parameters on one CPU only to provide a pointer to SRAM that can
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * be shared between all the CPUs in the system that will use semaphores.
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * On other CPUs user must specify the IPC semaphores channel and pass 0 / NULL
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * to count and memPtr parameters correspondingly.
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param ipcChannel
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * The IPC channel number used for semaphores
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param count
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  The maximum number of semaphores to be supported (multiple of 32).
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param memPtr
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  This points to the array of (count/32) words that contain the semaphore data.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return Status of the operation
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_SUCCESS: Successfully initialized
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_BAD_PARAM:     Memory pointer is NULL and count is not zero,
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *                             or count not multiple of 32
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_ERROR_LOCKED:  Could not acquire semaphores IPC channel
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \funcusage
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Sema_Init
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** cy_en_ipcsema_status_t Cy_IPC_Sema_Init(uint32_t ipcChannel,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                                         uint32_t count, uint32_t memPtr[])
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 240              		.loc 2 64 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 24
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 86B0     		sub	sp, sp, #24
 249              		.cfi_def_cfa_offset 32
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 F860     		str	r0, [r7, #12]
 253 0008 B960     		str	r1, [r7, #8]
 254 000a 7A60     		str	r2, [r7, #4]
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Structure containing semaphores control data */
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     static cy_stc_ipc_sema_t       cy_semaData;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_en_ipcsema_status_t retStatus = CY_IPC_SEMA_BAD_PARAM;
 255              		.loc 2 68 0
 256 000c 144B     		ldr	r3, .L24
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 24


 257 000e 7B61     		str	r3, [r7, #20]
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     if( (NULL == memPtr) && (0u == count))
 258              		.loc 2 70 0
 259 0010 7B68     		ldr	r3, [r7, #4]
 260 0012 002B     		cmp	r3, #0
 261 0014 0BD1     		bne	.L20
 262              		.loc 2 70 0 is_stmt 0 discriminator 1
 263 0016 BB68     		ldr	r3, [r7, #8]
 264 0018 002B     		cmp	r3, #0
 265 001a 08D1     		bne	.L20
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         cy_semaIpcStruct = Cy_IPC_Drv_GetIpcBaseAddress(ipcChannel);
 266              		.loc 2 72 0 is_stmt 1
 267 001c F868     		ldr	r0, [r7, #12]
 268 001e FFF7FEFF 		bl	Cy_IPC_Drv_GetIpcBaseAddress
 269 0022 0246     		mov	r2, r0
 270 0024 0F4B     		ldr	r3, .L24+4
 271 0026 1A60     		str	r2, [r3]
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_SUCCESS;
 272              		.loc 2 74 0
 273 0028 0023     		movs	r3, #0
 274 002a 7B61     		str	r3, [r7, #20]
 275 002c 13E0     		b	.L21
 276              	.L20:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Check for non Null pointers and count value */
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else if ((NULL != memPtr) && (0u != count))
 277              		.loc 2 78 0
 278 002e 7B68     		ldr	r3, [r7, #4]
 279 0030 002B     		cmp	r3, #0
 280 0032 0ED0     		beq	.L22
 281              		.loc 2 78 0 is_stmt 0 discriminator 1
 282 0034 BB68     		ldr	r3, [r7, #8]
 283 0036 002B     		cmp	r3, #0
 284 0038 0BD0     		beq	.L22
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         cy_semaData.maxSema  = count;
 285              		.loc 2 80 0 is_stmt 1
 286 003a 0B4A     		ldr	r2, .L24+8
 287 003c BB68     		ldr	r3, [r7, #8]
 288 003e 1360     		str	r3, [r2]
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         cy_semaData.arrayPtr = memPtr;
 289              		.loc 2 81 0
 290 0040 094A     		ldr	r2, .L24+8
 291 0042 7B68     		ldr	r3, [r7, #4]
 292 0044 5360     		str	r3, [r2, #4]
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = Cy_IPC_Sema_InitExt(ipcChannel, &cy_semaData);
 293              		.loc 2 83 0
 294 0046 0849     		ldr	r1, .L24+8
 295 0048 F868     		ldr	r0, [r7, #12]
 296 004a FFF7FEFF 		bl	Cy_IPC_Sema_InitExt
 297 004e 7861     		str	r0, [r7, #20]
 298 0050 01E0     		b	.L21
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 25


 299              	.L22:
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_BAD_PARAM;
 300              		.loc 2 88 0
 301 0052 034B     		ldr	r3, .L24
 302 0054 7B61     		str	r3, [r7, #20]
 303              	.L21:
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return(retStatus);
 304              		.loc 2 91 0
 305 0056 7B69     		ldr	r3, [r7, #20]
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 306              		.loc 2 92 0
 307 0058 1846     		mov	r0, r3
 308 005a 1837     		adds	r7, r7, #24
 309              		.cfi_def_cfa_offset 8
 310 005c BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 005e 80BD     		pop	{r7, pc}
 314              	.L25:
 315              		.align	2
 316              	.L24:
 317 0060 03018A00 		.word	9044227
 318 0064 00000000 		.word	cy_semaIpcStruct
 319 0068 04000000 		.word	cy_semaData.10638
 320              		.cfi_endproc
 321              	.LFE151:
 322              		.size	Cy_IPC_Sema_Init, .-Cy_IPC_Sema_Init
 323              		.section	.text.Cy_IPC_Sema_InitExt,"ax",%progbits
 324              		.align	2
 325              		.global	Cy_IPC_Sema_InitExt
 326              		.thumb
 327              		.thumb_func
 328              		.type	Cy_IPC_Sema_InitExt, %function
 329              	Cy_IPC_Sema_InitExt:
 330              	.LFB152:
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_InitExt
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This function initializes the semaphores subsystem. The user must create an
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * array of unsigned 32-bit words to hold the semaphore bits. The number
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * of semaphores will be the size of the array * 32. The total semaphores count
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * will always be a multiple of 32.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \note In a multi-CPU system this init function should be called with all
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * initialized parameters on one CPU only to provide a pointer to SRAM that can
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * be shared between all the CPUs in the system that will use semaphores.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * On other CPUs user must specify the IPC semaphores channel and pass 0 / NULL
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * to count and memPtr parameters correspondingly.
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 26


 109:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param ipcChannel
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * The IPC channel number used for semaphores
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param ipcSema
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  This is configuration structure of the IPC semaphore. 
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  See \ref cy_stc_ipc_sema_t.
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return Status of the operation
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_SUCCESS: Successfully initialized
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_BAD_PARAM:     Memory pointer is NULL and count is not zero,
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *                             or count not multiple of 32
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_ERROR_LOCKED:  Could not acquire semaphores IPC channel
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * 
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** cy_en_ipcsema_status_t Cy_IPC_Sema_InitExt(uint32_t ipcChannel, cy_stc_ipc_sema_t *ipcSema)
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 331              		.loc 2 124 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 16
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335 0000 80B5     		push	{r7, lr}
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 84B0     		sub	sp, sp, #16
 340              		.cfi_def_cfa_offset 24
 341 0004 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 343 0006 7860     		str	r0, [r7, #4]
 344 0008 3960     		str	r1, [r7]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_en_ipcsema_status_t retStatus = CY_IPC_SEMA_BAD_PARAM;
 345              		.loc 2 125 0
 346 000a 284B     		ldr	r3, .L37
 347 000c FB60     		str	r3, [r7, #12]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     if (ipcChannel >= CY_IPC_CHANNELS)
 348              		.loc 2 127 0
 349 000e 284B     		ldr	r3, .L37+4
 350 0010 1B68     		ldr	r3, [r3]
 351 0012 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 352 0016 1A46     		mov	r2, r3
 353 0018 7B68     		ldr	r3, [r7, #4]
 354 001a 9A42     		cmp	r2, r3
 355 001c 02D8     		bhi	.L27
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_BAD_PARAM;
 356              		.loc 2 129 0
 357 001e 234B     		ldr	r3, .L37
 358 0020 FB60     		str	r3, [r7, #12]
 359 0022 3EE0     		b	.L28
 360              	.L27:
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if(NULL != ipcSema)
 361              		.loc 2 133 0
 362 0024 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 27


 363 0026 002B     		cmp	r3, #0
 364 0028 39D0     		beq	.L29
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             /* Check if semaphore count is a multiple of 32 */
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             if( 0ul == (ipcSema->maxSema & CY_IPC_SEMA_PER_WORD_MASK))
 365              		.loc 2 136 0
 366 002a 3B68     		ldr	r3, [r7]
 367 002c 1B68     		ldr	r3, [r3]
 368 002e 03F01F03 		and	r3, r3, #31
 369 0032 002B     		cmp	r3, #0
 370 0034 30D1     		bne	.L30
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 cy_semaIpcStruct = Cy_IPC_Drv_GetIpcBaseAddress(ipcChannel);
 371              		.loc 2 138 0
 372 0036 7868     		ldr	r0, [r7, #4]
 373 0038 FFF7FEFF 		bl	Cy_IPC_Drv_GetIpcBaseAddress
 374 003c 0246     		mov	r2, r0
 375 003e 1D4B     		ldr	r3, .L37+8
 376 0040 1A60     		str	r2, [r3]
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 /* Initialize all semaphores to released */
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 (void)memset(ipcSema->arrayPtr, 0, (ipcSema->maxSema /8u));
 377              		.loc 2 141 0
 378 0042 3B68     		ldr	r3, [r7]
 379 0044 5868     		ldr	r0, [r3, #4]
 380 0046 3B68     		ldr	r3, [r7]
 381 0048 1B68     		ldr	r3, [r3]
 382 004a DB08     		lsrs	r3, r3, #3
 383 004c 1A46     		mov	r2, r3
 384 004e 0021     		movs	r1, #0
 385 0050 FFF7FEFF 		bl	memset
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 /* Make sure semaphores start out released.  */
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 /* Ignore the return value since it is OK if it was already released. */
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 (void) Cy_IPC_Drv_LockRelease (cy_semaIpcStruct, CY_IPC_NO_NOTIFICATION);
 386              		.loc 2 145 0
 387 0054 174B     		ldr	r3, .L37+8
 388 0056 1B68     		ldr	r3, [r3]
 389 0058 0021     		movs	r1, #0
 390 005a 1846     		mov	r0, r3
 391 005c FFF7FEFF 		bl	Cy_IPC_Drv_LockRelease
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                  /* Set the IPC Data with the pointer to the array. */
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 if( CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_SendMsgPtr (cy_semaIpcStruct, CY_IPC_NO_NOTIFI
 392              		.loc 2 148 0
 393 0060 144B     		ldr	r3, .L37+8
 394 0062 1B68     		ldr	r3, [r3]
 395 0064 3A68     		ldr	r2, [r7]
 396 0066 0021     		movs	r1, #0
 397 0068 1846     		mov	r0, r3
 398 006a FFF7FEFF 		bl	Cy_IPC_Drv_SendMsgPtr
 399 006e 0346     		mov	r3, r0
 400 0070 002B     		cmp	r3, #0
 401 0072 0ED1     		bne	.L31
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 {
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     if(CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockRelease (cy_semaIpcStruct, CY_IPC_NO_NO
 402              		.loc 2 150 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 28


 403 0074 0F4B     		ldr	r3, .L37+8
 404 0076 1B68     		ldr	r3, [r3]
 405 0078 0021     		movs	r1, #0
 406 007a 1846     		mov	r0, r3
 407 007c FFF7FEFF 		bl	Cy_IPC_Drv_LockRelease
 408 0080 0346     		mov	r3, r0
 409 0082 002B     		cmp	r3, #0
 410 0084 02D1     		bne	.L32
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     {
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                         retStatus = CY_IPC_SEMA_SUCCESS;
 411              		.loc 2 152 0
 412 0086 0023     		movs	r3, #0
 413 0088 FB60     		str	r3, [r7, #12]
 414 008a 0AE0     		b	.L28
 415              	.L32:
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     }
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     else
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     {
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                         /* IPC channel not released, still semaphored */
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                         retStatus = CY_IPC_SEMA_ERROR_LOCKED;
 416              		.loc 2 157 0
 417 008c 0A4B     		ldr	r3, .L37+12
 418 008e FB60     		str	r3, [r7, #12]
 419 0090 07E0     		b	.L28
 420              	.L31:
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     }
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 }
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 else
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 {
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     /* Could not acquire semaphore channel */
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                     retStatus = CY_IPC_SEMA_ERROR_LOCKED;
 421              		.loc 2 163 0
 422 0092 094B     		ldr	r3, .L37+12
 423 0094 FB60     		str	r3, [r7, #12]
 424 0096 04E0     		b	.L28
 425              	.L30:
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 }
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             else
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 retStatus = CY_IPC_SEMA_BAD_PARAM;
 426              		.loc 2 168 0
 427 0098 044B     		ldr	r3, .L37
 428 009a FB60     		str	r3, [r7, #12]
 429 009c 01E0     		b	.L28
 430              	.L29:
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         else
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             retStatus = CY_IPC_SEMA_BAD_PARAM;
 431              		.loc 2 173 0
 432 009e 034B     		ldr	r3, .L37
 433 00a0 FB60     		str	r3, [r7, #12]
 434              	.L28:
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 29


 176:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return(retStatus);
 435              		.loc 2 177 0
 436 00a2 FB68     		ldr	r3, [r7, #12]
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 437              		.loc 2 178 0
 438 00a4 1846     		mov	r0, r3
 439 00a6 1037     		adds	r7, r7, #16
 440              		.cfi_def_cfa_offset 8
 441 00a8 BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 00aa 80BD     		pop	{r7, pc}
 445              	.L38:
 446              		.align	2
 447              	.L37:
 448 00ac 03018A00 		.word	9044227
 449 00b0 00000000 		.word	cy_device
 450 00b4 00000000 		.word	cy_semaIpcStruct
 451 00b8 01018A00 		.word	9044225
 452              		.cfi_endproc
 453              	.LFE152:
 454              		.size	Cy_IPC_Sema_InitExt, .-Cy_IPC_Sema_InitExt
 455              		.section	.text.Cy_IPC_Sema_Set,"ax",%progbits
 456              		.align	2
 457              		.global	Cy_IPC_Sema_Set
 458              		.thumb
 459              		.thumb_func
 460              		.type	Cy_IPC_Sema_Set, %function
 461              	Cy_IPC_Sema_Set:
 462              	.LFB153:
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_Set
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This function tries to acquire a semaphore. If the
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * semaphore is not available, this function returns immediately with
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * CY_IPC_SEMA_LOCKED.
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * It first acquires the IPC channel that is used for all the semaphores, sets
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * the semaphore if it is cleared, then releases the IPC channel used for the
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * semaphore.
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param semaNumber
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  The semaphore number to acquire.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param preemptable
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  When this parameter is enabled the function can be preempted by another
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  task or other forms of context switching in an RTOS environment.
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \note
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  If <b>preemptable</b> is enabled (true), the user must ensure that there are
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  no deadlocks in the system, which can be caused by an interrupt that occurs
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  after the IPC channel is locked. Unless the user is ready to handle IPC
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  channel locks correctly at the application level, set <b>preemptable</b> to
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 30


 205:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  false.
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return Status of the operation
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_SUCCESS:      The semaphore was set successfully
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_LOCKED:       The semaphore channel is busy or locked
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *                              by another process
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_NOT_ACQUIRED: Semaphore was already set
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_OUT_OF_RANGE: The semaphore number is not valid
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \funcusage
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Sema_Set
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** cy_en_ipcsema_status_t Cy_IPC_Sema_Set(uint32_t semaNumber, bool preemptable)
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 463              		.loc 2 219 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 32
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467 0000 80B5     		push	{r7, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 88B0     		sub	sp, sp, #32
 472              		.cfi_def_cfa_offset 40
 473 0004 00AF     		add	r7, sp, #0
 474              		.cfi_def_cfa_register 7
 475 0006 7860     		str	r0, [r7, #4]
 476 0008 0B46     		mov	r3, r1
 477 000a FB70     		strb	r3, [r7, #3]
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaIndex;
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaMask;
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t interruptState = 0ul;
 478              		.loc 2 222 0
 479 000c 0023     		movs	r3, #0
 480 000e FB61     		str	r3, [r7, #28]
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_stc_ipc_sema_t      *semaStruct;
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_en_ipcsema_status_t  retStatus = CY_IPC_SEMA_LOCKED;
 481              		.loc 2 225 0
 482 0010 2E4B     		ldr	r3, .L48
 483 0012 BB61     		str	r3, [r7, #24]
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Get pointer to structure */
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     semaStruct = (cy_stc_ipc_sema_t *)Cy_IPC_Drv_ReadDataValue(cy_semaIpcStruct);
 484              		.loc 2 228 0
 485 0014 2E4B     		ldr	r3, .L48+4
 486 0016 1B68     		ldr	r3, [r3]
 487 0018 1846     		mov	r0, r3
 488 001a FFF7FEFF 		bl	Cy_IPC_Drv_ReadDataValue
 489 001e 0346     		mov	r3, r0
 490 0020 7B61     		str	r3, [r7, #20]
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     if (semaNumber < semaStruct->maxSema)
 491              		.loc 2 230 0
 492 0022 7B69     		ldr	r3, [r7, #20]
 493 0024 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 31


 494 0026 7B68     		ldr	r3, [r7, #4]
 495 0028 9A42     		cmp	r2, r3
 496 002a 48D9     		bls	.L40
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaIndex = semaNumber / CY_IPC_SEMA_PER_WORD;
 497              		.loc 2 232 0
 498 002c 7B68     		ldr	r3, [r7, #4]
 499 002e 5B09     		lsrs	r3, r3, #5
 500 0030 3B61     		str	r3, [r7, #16]
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaMask = (uint32_t)(1ul << (semaNumber - (semaIndex * CY_IPC_SEMA_PER_WORD) ));
 501              		.loc 2 233 0
 502 0032 3B69     		ldr	r3, [r7, #16]
 503 0034 5B01     		lsls	r3, r3, #5
 504 0036 7A68     		ldr	r2, [r7, #4]
 505 0038 D31A     		subs	r3, r2, r3
 506 003a 0122     		movs	r2, #1
 507 003c 02FA03F3 		lsl	r3, r2, r3
 508 0040 FB60     		str	r3, [r7, #12]
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if (!preemptable)
 509              		.loc 2 235 0
 510 0042 FB78     		ldrb	r3, [r7, #3]
 511 0044 83F00103 		eor	r3, r3, #1
 512 0048 DBB2     		uxtb	r3, r3
 513 004a 002B     		cmp	r3, #0
 514 004c 02D0     		beq	.L41
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             interruptState = Cy_SysLib_EnterCriticalSection();
 515              		.loc 2 237 0
 516 004e FFF7FEFF 		bl	Cy_SysLib_EnterCriticalSection
 517 0052 F861     		str	r0, [r7, #28]
 518              	.L41:
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         /* Check to make sure the IPC channel is released
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****            If so, check if specific channel can be locked. */
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if(CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockAcquire (cy_semaIpcStruct))
 519              		.loc 2 242 0
 520 0054 1E4B     		ldr	r3, .L48+4
 521 0056 1B68     		ldr	r3, [r3]
 522 0058 1846     		mov	r0, r3
 523 005a FFF7FEFF 		bl	Cy_IPC_Drv_LockAcquire
 524 005e 0346     		mov	r3, r0
 525 0060 002B     		cmp	r3, #0
 526 0062 22D1     		bne	.L42
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             if((semaStruct->arrayPtr[semaIndex] & semaMask) == 0ul)
 527              		.loc 2 244 0
 528 0064 7B69     		ldr	r3, [r7, #20]
 529 0066 5A68     		ldr	r2, [r3, #4]
 530 0068 3B69     		ldr	r3, [r7, #16]
 531 006a 9B00     		lsls	r3, r3, #2
 532 006c 1344     		add	r3, r3, r2
 533 006e 1A68     		ldr	r2, [r3]
 534 0070 FB68     		ldr	r3, [r7, #12]
 535 0072 1340     		ands	r3, r3, r2
 536 0074 002B     		cmp	r3, #0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 32


 537 0076 10D1     		bne	.L43
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 semaStruct->arrayPtr[semaIndex] |= semaMask;
 538              		.loc 2 246 0
 539 0078 7B69     		ldr	r3, [r7, #20]
 540 007a 5A68     		ldr	r2, [r3, #4]
 541 007c 3B69     		ldr	r3, [r7, #16]
 542 007e 9B00     		lsls	r3, r3, #2
 543 0080 1344     		add	r3, r3, r2
 544 0082 7A69     		ldr	r2, [r7, #20]
 545 0084 5168     		ldr	r1, [r2, #4]
 546 0086 3A69     		ldr	r2, [r7, #16]
 547 0088 9200     		lsls	r2, r2, #2
 548 008a 0A44     		add	r2, r2, r1
 549 008c 1168     		ldr	r1, [r2]
 550 008e FA68     		ldr	r2, [r7, #12]
 551 0090 0A43     		orrs	r2, r2, r1
 552 0092 1A60     		str	r2, [r3]
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 retStatus = CY_IPC_SEMA_SUCCESS;
 553              		.loc 2 247 0
 554 0094 0023     		movs	r3, #0
 555 0096 BB61     		str	r3, [r7, #24]
 556 0098 01E0     		b	.L44
 557              	.L43:
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             else
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 retStatus = CY_IPC_SEMA_NOT_ACQUIRED;
 558              		.loc 2 251 0
 559 009a 0E4B     		ldr	r3, .L48+8
 560 009c BB61     		str	r3, [r7, #24]
 561              	.L44:
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             /* Release, but do not trigger a release event */
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             (void) Cy_IPC_Drv_LockRelease (cy_semaIpcStruct, CY_IPC_NO_NOTIFICATION);
 562              		.loc 2 255 0
 563 009e 0C4B     		ldr	r3, .L48+4
 564 00a0 1B68     		ldr	r3, [r3]
 565 00a2 0021     		movs	r1, #0
 566 00a4 1846     		mov	r0, r3
 567 00a6 FFF7FEFF 		bl	Cy_IPC_Drv_LockRelease
 568              	.L42:
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if (!preemptable)
 569              		.loc 2 258 0
 570 00aa FB78     		ldrb	r3, [r7, #3]
 571 00ac 83F00103 		eor	r3, r3, #1
 572 00b0 DBB2     		uxtb	r3, r3
 573 00b2 002B     		cmp	r3, #0
 574 00b4 05D0     		beq	.L46
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             Cy_SysLib_ExitCriticalSection(interruptState);
 575              		.loc 2 260 0
 576 00b6 F869     		ldr	r0, [r7, #28]
 577 00b8 FFF7FEFF 		bl	Cy_SysLib_ExitCriticalSection
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 33


 578 00bc 01E0     		b	.L46
 579              	.L40:
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_OUT_OF_RANGE;
 580              		.loc 2 265 0
 581 00be 064B     		ldr	r3, .L48+12
 582 00c0 BB61     		str	r3, [r7, #24]
 583              	.L46:
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return(retStatus);
 584              		.loc 2 268 0
 585 00c2 BB69     		ldr	r3, [r7, #24]
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 586              		.loc 2 269 0
 587 00c4 1846     		mov	r0, r3
 588 00c6 2037     		adds	r7, r7, #32
 589              		.cfi_def_cfa_offset 8
 590 00c8 BD46     		mov	sp, r7
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00ca 80BD     		pop	{r7, pc}
 594              	.L49:
 595              		.align	2
 596              	.L48:
 597 00cc 03018800 		.word	8913155
 598 00d0 00000000 		.word	cy_semaIpcStruct
 599 00d4 02018800 		.word	8913154
 600 00d8 04018A00 		.word	9044228
 601              		.cfi_endproc
 602              	.LFE153:
 603              		.size	Cy_IPC_Sema_Set, .-Cy_IPC_Sema_Set
 604              		.section	.text.Cy_IPC_Sema_Clear,"ax",%progbits
 605              		.align	2
 606              		.global	Cy_IPC_Sema_Clear
 607              		.thumb
 608              		.thumb_func
 609              		.type	Cy_IPC_Sema_Clear, %function
 610              	Cy_IPC_Sema_Clear:
 611              	.LFB154:
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_Clear
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This functions tries to releases a semaphore.
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * It first acquires the IPC channel that is used for all the semaphores, clears
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * the semaphore if it is set, then releases the IPC channel used for the
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * semaphores.
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param semaNumber
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  The index of the semaphore to release.
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 34


 284:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param preemptable
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  When this parameter is enabled the function can be preempted by another
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  task or other forms of context switching in an RTOS environment.
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \note
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  If <b>preemptable</b> is enabled (true), the user must ensure that there are
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  no deadlocks in the system, which can be caused by an interrupt that occurs
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  after the IPC channel is locked. Unless the user is ready to handle IPC
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  channel locks correctly at the application level, set <b>preemptable</b> to
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  false.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return Status of the operation
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_SUCCESS:         The semaphore was cleared successfully
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_NOT_ACQUIRED:    The semaphore was already cleared
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_LOCKED:          The semaphore channel was semaphored or busy
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *    \retval CY_IPC_SEMA_OUT_OF_RANGE:    The semaphore number is not valid
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \funcusage
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Sema_Clear
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** cy_en_ipcsema_status_t Cy_IPC_Sema_Clear(uint32_t semaNumber, bool preemptable)
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 612              		.loc 2 307 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 32
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 88B0     		sub	sp, sp, #32
 621              		.cfi_def_cfa_offset 40
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 7860     		str	r0, [r7, #4]
 625 0008 0B46     		mov	r3, r1
 626 000a FB70     		strb	r3, [r7, #3]
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaIndex;
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaMask;
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t interruptState = 0ul;
 627              		.loc 2 310 0
 628 000c 0023     		movs	r3, #0
 629 000e FB61     		str	r3, [r7, #28]
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_stc_ipc_sema_t      *semaStruct;
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_en_ipcsema_status_t  retStatus = CY_IPC_SEMA_LOCKED;
 630              		.loc 2 313 0
 631 0010 2F4B     		ldr	r3, .L59
 632 0012 BB61     		str	r3, [r7, #24]
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Get pointer to structure */
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     semaStruct = (cy_stc_ipc_sema_t *)Cy_IPC_Drv_ReadDataValue(cy_semaIpcStruct);
 633              		.loc 2 316 0
 634 0014 2F4B     		ldr	r3, .L59+4
 635 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 35


 636 0018 1846     		mov	r0, r3
 637 001a FFF7FEFF 		bl	Cy_IPC_Drv_ReadDataValue
 638 001e 0346     		mov	r3, r0
 639 0020 7B61     		str	r3, [r7, #20]
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     if (semaNumber < semaStruct->maxSema)
 640              		.loc 2 318 0
 641 0022 7B69     		ldr	r3, [r7, #20]
 642 0024 1A68     		ldr	r2, [r3]
 643 0026 7B68     		ldr	r3, [r7, #4]
 644 0028 9A42     		cmp	r2, r3
 645 002a 49D9     		bls	.L51
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaIndex = semaNumber / CY_IPC_SEMA_PER_WORD;
 646              		.loc 2 320 0
 647 002c 7B68     		ldr	r3, [r7, #4]
 648 002e 5B09     		lsrs	r3, r3, #5
 649 0030 3B61     		str	r3, [r7, #16]
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaMask = (uint32_t)(1ul << (semaNumber - (semaIndex * CY_IPC_SEMA_PER_WORD) ));
 650              		.loc 2 321 0
 651 0032 3B69     		ldr	r3, [r7, #16]
 652 0034 5B01     		lsls	r3, r3, #5
 653 0036 7A68     		ldr	r2, [r7, #4]
 654 0038 D31A     		subs	r3, r2, r3
 655 003a 0122     		movs	r2, #1
 656 003c 02FA03F3 		lsl	r3, r2, r3
 657 0040 FB60     		str	r3, [r7, #12]
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if (!preemptable)
 658              		.loc 2 323 0
 659 0042 FB78     		ldrb	r3, [r7, #3]
 660 0044 83F00103 		eor	r3, r3, #1
 661 0048 DBB2     		uxtb	r3, r3
 662 004a 002B     		cmp	r3, #0
 663 004c 02D0     		beq	.L52
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             interruptState = Cy_SysLib_EnterCriticalSection();
 664              		.loc 2 325 0
 665 004e FFF7FEFF 		bl	Cy_SysLib_EnterCriticalSection
 666 0052 F861     		str	r0, [r7, #28]
 667              	.L52:
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         /* Check to make sure the IPC channel is released
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****            If so, check if specific channel can be locked. */
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if(CY_IPC_DRV_SUCCESS == Cy_IPC_Drv_LockAcquire (cy_semaIpcStruct))
 668              		.loc 2 330 0
 669 0054 1F4B     		ldr	r3, .L59+4
 670 0056 1B68     		ldr	r3, [r3]
 671 0058 1846     		mov	r0, r3
 672 005a FFF7FEFF 		bl	Cy_IPC_Drv_LockAcquire
 673 005e 0346     		mov	r3, r0
 674 0060 002B     		cmp	r3, #0
 675 0062 23D1     		bne	.L53
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             if((semaStruct->arrayPtr[semaIndex] & semaMask) != 0ul)
 676              		.loc 2 332 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 36


 677 0064 7B69     		ldr	r3, [r7, #20]
 678 0066 5A68     		ldr	r2, [r3, #4]
 679 0068 3B69     		ldr	r3, [r7, #16]
 680 006a 9B00     		lsls	r3, r3, #2
 681 006c 1344     		add	r3, r3, r2
 682 006e 1A68     		ldr	r2, [r3]
 683 0070 FB68     		ldr	r3, [r7, #12]
 684 0072 1340     		ands	r3, r3, r2
 685 0074 002B     		cmp	r3, #0
 686 0076 11D0     		beq	.L54
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 semaStruct->arrayPtr[semaIndex] &= ~semaMask;
 687              		.loc 2 334 0
 688 0078 7B69     		ldr	r3, [r7, #20]
 689 007a 5A68     		ldr	r2, [r3, #4]
 690 007c 3B69     		ldr	r3, [r7, #16]
 691 007e 9B00     		lsls	r3, r3, #2
 692 0080 1344     		add	r3, r3, r2
 693 0082 7A69     		ldr	r2, [r7, #20]
 694 0084 5168     		ldr	r1, [r2, #4]
 695 0086 3A69     		ldr	r2, [r7, #16]
 696 0088 9200     		lsls	r2, r2, #2
 697 008a 0A44     		add	r2, r2, r1
 698 008c 1168     		ldr	r1, [r2]
 699 008e FA68     		ldr	r2, [r7, #12]
 700 0090 D243     		mvns	r2, r2
 701 0092 0A40     		ands	r2, r2, r1
 702 0094 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 retStatus = CY_IPC_SEMA_SUCCESS;
 703              		.loc 2 335 0
 704 0096 0023     		movs	r3, #0
 705 0098 BB61     		str	r3, [r7, #24]
 706 009a 01E0     		b	.L55
 707              	.L54:
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             else
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             {
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****                 retStatus = CY_IPC_SEMA_NOT_ACQUIRED;
 708              		.loc 2 339 0
 709 009c 0E4B     		ldr	r3, .L59+8
 710 009e BB61     		str	r3, [r7, #24]
 711              	.L55:
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             }
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             /* Release, but do not trigger a release event */
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             (void) Cy_IPC_Drv_LockRelease (cy_semaIpcStruct, CY_IPC_NO_NOTIFICATION);
 712              		.loc 2 343 0
 713 00a0 0C4B     		ldr	r3, .L59+4
 714 00a2 1B68     		ldr	r3, [r3]
 715 00a4 0021     		movs	r1, #0
 716 00a6 1846     		mov	r0, r3
 717 00a8 FFF7FEFF 		bl	Cy_IPC_Drv_LockRelease
 718              	.L53:
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if (!preemptable)
 719              		.loc 2 346 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 37


 720 00ac FB78     		ldrb	r3, [r7, #3]
 721 00ae 83F00103 		eor	r3, r3, #1
 722 00b2 DBB2     		uxtb	r3, r3
 723 00b4 002B     		cmp	r3, #0
 724 00b6 05D0     		beq	.L57
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             Cy_SysLib_ExitCriticalSection(interruptState);
 725              		.loc 2 348 0
 726 00b8 F869     		ldr	r0, [r7, #28]
 727 00ba FFF7FEFF 		bl	Cy_SysLib_ExitCriticalSection
 728 00be 01E0     		b	.L57
 729              	.L51:
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_OUT_OF_RANGE;
 730              		.loc 2 353 0
 731 00c0 064B     		ldr	r3, .L59+12
 732 00c2 BB61     		str	r3, [r7, #24]
 733              	.L57:
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return(retStatus);
 734              		.loc 2 355 0
 735 00c4 BB69     		ldr	r3, [r7, #24]
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 736              		.loc 2 356 0
 737 00c6 1846     		mov	r0, r3
 738 00c8 2037     		adds	r7, r7, #32
 739              		.cfi_def_cfa_offset 8
 740 00ca BD46     		mov	sp, r7
 741              		.cfi_def_cfa_register 13
 742              		@ sp needed
 743 00cc 80BD     		pop	{r7, pc}
 744              	.L60:
 745 00ce 00BF     		.align	2
 746              	.L59:
 747 00d0 03018800 		.word	8913155
 748 00d4 00000000 		.word	cy_semaIpcStruct
 749 00d8 02018800 		.word	8913154
 750 00dc 04018A00 		.word	9044228
 751              		.cfi_endproc
 752              	.LFE154:
 753              		.size	Cy_IPC_Sema_Clear, .-Cy_IPC_Sema_Clear
 754              		.section	.text.Cy_IPC_Sema_Status,"ax",%progbits
 755              		.align	2
 756              		.global	Cy_IPC_Sema_Status
 757              		.thumb
 758              		.thumb_func
 759              		.type	Cy_IPC_Sema_Status, %function
 760              	Cy_IPC_Sema_Status:
 761              	.LFB155:
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_Status
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 38


 362:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This function returns the status of the semaphore.
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \param semaNumber
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *  The index of the semaphore to return status.
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return Status of the operation
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *     \retval CY_IPC_SEMA_STATUS_LOCKED:    The semaphore is in the set state.
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *     \retval CY_IPC_SEMA_STATUS_UNLOCKED:  The semaphore is in the cleared state.
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *     \retval CY_IPC_SEMA_OUT_OF_RANGE:     The semaphore number is not valid
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \funcusage
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Sema_Status
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** cy_en_ipcsema_status_t Cy_IPC_Sema_Status(uint32_t semaNumber)
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 762              		.loc 2 378 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 24
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766 0000 80B5     		push	{r7, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 86B0     		sub	sp, sp, #24
 771              		.cfi_def_cfa_offset 32
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_en_ipcsema_status_t   retStatus;
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaIndex;
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     uint32_t semaMask;
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_stc_ipc_sema_t      *semaStruct;
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Get pointer to structure */
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     semaStruct = (cy_stc_ipc_sema_t *)Cy_IPC_Drv_ReadDataValue(cy_semaIpcStruct);
 775              		.loc 2 385 0
 776 0008 164B     		ldr	r3, .L67
 777 000a 1B68     		ldr	r3, [r3]
 778 000c 1846     		mov	r0, r3
 779 000e FFF7FEFF 		bl	Cy_IPC_Drv_ReadDataValue
 780 0012 0346     		mov	r3, r0
 781 0014 3B61     		str	r3, [r7, #16]
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     if (semaNumber < semaStruct->maxSema)
 782              		.loc 2 387 0
 783 0016 3B69     		ldr	r3, [r7, #16]
 784 0018 1A68     		ldr	r2, [r3]
 785 001a 7B68     		ldr	r3, [r7, #4]
 786 001c 9A42     		cmp	r2, r3
 787 001e 1AD9     		bls	.L62
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         /* Get the index into the semaphore array and calculate the mask */
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaIndex = semaNumber / CY_IPC_SEMA_PER_WORD;
 788              		.loc 2 390 0
 789 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 39


 790 0022 5B09     		lsrs	r3, r3, #5
 791 0024 FB60     		str	r3, [r7, #12]
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         semaMask = (uint32_t)(1ul << (semaNumber - (semaIndex * CY_IPC_SEMA_PER_WORD) ));
 792              		.loc 2 391 0
 793 0026 FB68     		ldr	r3, [r7, #12]
 794 0028 5B01     		lsls	r3, r3, #5
 795 002a 7A68     		ldr	r2, [r7, #4]
 796 002c D31A     		subs	r3, r2, r3
 797 002e 0122     		movs	r2, #1
 798 0030 02FA03F3 		lsl	r3, r2, r3
 799 0034 BB60     		str	r3, [r7, #8]
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         if((semaStruct->arrayPtr[semaIndex] & semaMask) != 0ul)
 800              		.loc 2 393 0
 801 0036 3B69     		ldr	r3, [r7, #16]
 802 0038 5A68     		ldr	r2, [r3, #4]
 803 003a FB68     		ldr	r3, [r7, #12]
 804 003c 9B00     		lsls	r3, r3, #2
 805 003e 1344     		add	r3, r3, r2
 806 0040 1A68     		ldr	r2, [r3]
 807 0042 BB68     		ldr	r3, [r7, #8]
 808 0044 1340     		ands	r3, r3, r2
 809 0046 002B     		cmp	r3, #0
 810 0048 02D0     		beq	.L63
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             retStatus =  CY_IPC_SEMA_STATUS_LOCKED;
 811              		.loc 2 395 0
 812 004a 074B     		ldr	r3, .L67+4
 813 004c 7B61     		str	r3, [r7, #20]
 814 004e 04E0     		b	.L65
 815              	.L63:
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         else
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         {
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****             retStatus =  CY_IPC_SEMA_STATUS_UNLOCKED;
 816              		.loc 2 399 0
 817 0050 064B     		ldr	r3, .L67+8
 818 0052 7B61     		str	r3, [r7, #20]
 819 0054 01E0     		b	.L65
 820              	.L62:
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         }
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     else
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     {
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****         retStatus = CY_IPC_SEMA_OUT_OF_RANGE;
 821              		.loc 2 404 0
 822 0056 064B     		ldr	r3, .L67+12
 823 0058 7B61     		str	r3, [r7, #20]
 824              	.L65:
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     }
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return(retStatus);
 825              		.loc 2 406 0
 826 005a 7B69     		ldr	r3, [r7, #20]
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 827              		.loc 2 407 0
 828 005c 1846     		mov	r0, r3
 829 005e 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 40


 830              		.cfi_def_cfa_offset 8
 831 0060 BD46     		mov	sp, r7
 832              		.cfi_def_cfa_register 13
 833              		@ sp needed
 834 0062 80BD     		pop	{r7, pc}
 835              	.L68:
 836              		.align	2
 837              	.L67:
 838 0064 00000000 		.word	cy_semaIpcStruct
 839 0068 01018800 		.word	8913153
 840 006c 00018800 		.word	8913152
 841 0070 04018A00 		.word	9044228
 842              		.cfi_endproc
 843              	.LFE155:
 844              		.size	Cy_IPC_Sema_Status, .-Cy_IPC_Sema_Status
 845              		.section	.text.Cy_IPC_Sema_GetMaxSems,"ax",%progbits
 846              		.align	2
 847              		.global	Cy_IPC_Sema_GetMaxSems
 848              		.thumb
 849              		.thumb_func
 850              		.type	Cy_IPC_Sema_GetMaxSems, %function
 851              	Cy_IPC_Sema_GetMaxSems:
 852              	.LFB156:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** /*******************************************************************************
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * Function Name: Cy_IPC_Sema_GetMaxSems
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** ****************************************************************************//**
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * This function returns the number of semaphores in the semaphores subsystem.
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \return
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *     Returns the semaphores quantity.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \funcusage
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** * \snippet IPC_sut_01.cydsn/main_cm4.c snippet_Cy_IPC_Sema_GetMaxSems
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** *******************************************************************************/
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** uint32_t Cy_IPC_Sema_GetMaxSems(void)
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** {
 853              		.loc 2 424 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     cy_stc_ipc_sema_t      *semaStruct;
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     /* Get pointer to structure */
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     semaStruct = (cy_stc_ipc_sema_t *)Cy_IPC_Drv_ReadDataValue(cy_semaIpcStruct);
 865              		.loc 2 428 0
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 41


 866 0006 064B     		ldr	r3, .L71
 867 0008 1B68     		ldr	r3, [r3]
 868 000a 1846     		mov	r0, r3
 869 000c FFF7FEFF 		bl	Cy_IPC_Drv_ReadDataValue
 870 0010 0346     		mov	r3, r0
 871 0012 7B60     		str	r3, [r7, #4]
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** 
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c ****     return (semaStruct->maxSema);
 872              		.loc 2 430 0
 873 0014 7B68     		ldr	r3, [r7, #4]
 874 0016 1B68     		ldr	r3, [r3]
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\ipc/cy_ipc_sema.c **** }
 875              		.loc 2 431 0
 876 0018 1846     		mov	r0, r3
 877 001a 0837     		adds	r7, r7, #8
 878              		.cfi_def_cfa_offset 8
 879 001c BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 001e 80BD     		pop	{r7, pc}
 883              	.L72:
 884              		.align	2
 885              	.L71:
 886 0020 00000000 		.word	cy_semaIpcStruct
 887              		.cfi_endproc
 888              	.LFE156:
 889              		.size	Cy_IPC_Sema_GetMaxSems, .-Cy_IPC_Sema_GetMaxSems
 890              		.bss
 891              		.align	2
 892              	cy_semaData.10638:
 893 0004 00000000 		.space	8
 893      00000000 
 894              		.text
 895              	.Letext0:
 896              		.file 3 "e:\\applications\\psoc\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-non
 897              		.file 4 "e:\\applications\\psoc\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-non
 898              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_ipc.h"
 899              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 900              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 901              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 902              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\ipc\\cy_ipc_sema.h"
 903              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 904              		.section	.debug_info,"",%progbits
 905              	.Ldebug_info0:
 906 0000 C8090000 		.4byte	0x9c8
 907 0004 0400     		.2byte	0x4
 908 0006 00000000 		.4byte	.Ldebug_abbrev0
 909 000a 04       		.byte	0x4
 910 000b 01       		.uleb128 0x1
 911 000c 1F000000 		.4byte	.LASF166
 912 0010 0C       		.byte	0xc
 913 0011 0D010000 		.4byte	.LASF167
 914 0015 8A050000 		.4byte	.LASF168
 915 0019 00000000 		.4byte	.Ldebug_ranges0+0
 916 001d 00000000 		.4byte	0
 917 0021 00000000 		.4byte	.Ldebug_line0
 918 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 42


 919 0026 01       		.byte	0x1
 920 0027 06       		.byte	0x6
 921 0028 A0020000 		.4byte	.LASF0
 922 002c 03       		.uleb128 0x3
 923 002d 90010000 		.4byte	.LASF2
 924 0031 03       		.byte	0x3
 925 0032 1D       		.byte	0x1d
 926 0033 37000000 		.4byte	0x37
 927 0037 02       		.uleb128 0x2
 928 0038 01       		.byte	0x1
 929 0039 08       		.byte	0x8
 930 003a 62080000 		.4byte	.LASF1
 931 003e 03       		.uleb128 0x3
 932 003f 26040000 		.4byte	.LASF3
 933 0043 03       		.byte	0x3
 934 0044 29       		.byte	0x29
 935 0045 49000000 		.4byte	0x49
 936 0049 02       		.uleb128 0x2
 937 004a 02       		.byte	0x2
 938 004b 05       		.byte	0x5
 939 004c 99080000 		.4byte	.LASF4
 940 0050 03       		.uleb128 0x3
 941 0051 42090000 		.4byte	.LASF5
 942 0055 03       		.byte	0x3
 943 0056 2B       		.byte	0x2b
 944 0057 5B000000 		.4byte	0x5b
 945 005b 02       		.uleb128 0x2
 946 005c 02       		.byte	0x2
 947 005d 07       		.byte	0x7
 948 005e AB030000 		.4byte	.LASF6
 949 0062 03       		.uleb128 0x3
 950 0063 60090000 		.4byte	.LASF7
 951 0067 03       		.byte	0x3
 952 0068 3F       		.byte	0x3f
 953 0069 6D000000 		.4byte	0x6d
 954 006d 02       		.uleb128 0x2
 955 006e 04       		.byte	0x4
 956 006f 05       		.byte	0x5
 957 0070 29030000 		.4byte	.LASF8
 958 0074 03       		.uleb128 0x3
 959 0075 E6030000 		.4byte	.LASF9
 960 0079 03       		.byte	0x3
 961 007a 41       		.byte	0x41
 962 007b 7F000000 		.4byte	0x7f
 963 007f 02       		.uleb128 0x2
 964 0080 04       		.byte	0x4
 965 0081 07       		.byte	0x7
 966 0082 CE040000 		.4byte	.LASF10
 967 0086 02       		.uleb128 0x2
 968 0087 08       		.byte	0x8
 969 0088 05       		.byte	0x5
 970 0089 92020000 		.4byte	.LASF11
 971 008d 02       		.uleb128 0x2
 972 008e 08       		.byte	0x8
 973 008f 07       		.byte	0x7
 974 0090 FE010000 		.4byte	.LASF12
 975 0094 04       		.uleb128 0x4
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 43


 976 0095 04       		.byte	0x4
 977 0096 05       		.byte	0x5
 978 0097 696E7400 		.ascii	"int\000"
 979 009b 02       		.uleb128 0x2
 980 009c 04       		.byte	0x4
 981 009d 07       		.byte	0x7
 982 009e 40030000 		.4byte	.LASF13
 983 00a2 03       		.uleb128 0x3
 984 00a3 2A0A0000 		.4byte	.LASF14
 985 00a7 04       		.byte	0x4
 986 00a8 18       		.byte	0x18
 987 00a9 2C000000 		.4byte	0x2c
 988 00ad 03       		.uleb128 0x3
 989 00ae 8A020000 		.4byte	.LASF15
 990 00b2 04       		.byte	0x4
 991 00b3 20       		.byte	0x20
 992 00b4 3E000000 		.4byte	0x3e
 993 00b8 03       		.uleb128 0x3
 994 00b9 98040000 		.4byte	.LASF16
 995 00bd 04       		.byte	0x4
 996 00be 24       		.byte	0x24
 997 00bf 50000000 		.4byte	0x50
 998 00c3 03       		.uleb128 0x3
 999 00c4 5A080000 		.4byte	.LASF17
 1000 00c8 04       		.byte	0x4
 1001 00c9 2C       		.byte	0x2c
 1002 00ca 62000000 		.4byte	0x62
 1003 00ce 03       		.uleb128 0x3
 1004 00cf F1080000 		.4byte	.LASF18
 1005 00d3 04       		.byte	0x4
 1006 00d4 30       		.byte	0x30
 1007 00d5 74000000 		.4byte	0x74
 1008 00d9 02       		.uleb128 0x2
 1009 00da 08       		.byte	0x8
 1010 00db 04       		.byte	0x4
 1011 00dc 0D090000 		.4byte	.LASF19
 1012 00e0 05       		.uleb128 0x5
 1013 00e1 CE000000 		.4byte	0xce
 1014 00e5 06       		.uleb128 0x6
 1015 00e6 E0000000 		.4byte	0xe0
 1016 00ea 07       		.uleb128 0x7
 1017 00eb E5000000 		.4byte	0xe5
 1018 00ef FA000000 		.4byte	0xfa
 1019 00f3 08       		.uleb128 0x8
 1020 00f4 FA000000 		.4byte	0xfa
 1021 00f8 02       		.byte	0x2
 1022 00f9 00       		.byte	0
 1023 00fa 02       		.uleb128 0x2
 1024 00fb 04       		.byte	0x4
 1025 00fc 07       		.byte	0x7
 1026 00fd 17070000 		.4byte	.LASF20
 1027 0101 09       		.uleb128 0x9
 1028 0102 20       		.byte	0x20
 1029 0103 05       		.byte	0x5
 1030 0104 23       		.byte	0x23
 1031 0105 52010000 		.4byte	0x152
 1032 0109 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 44


 1033 010a C1020000 		.4byte	.LASF21
 1034 010e 05       		.byte	0x5
 1035 010f 24       		.byte	0x24
 1036 0110 E5000000 		.4byte	0xe5
 1037 0114 00       		.byte	0
 1038 0115 0A       		.uleb128 0xa
 1039 0116 C6010000 		.4byte	.LASF22
 1040 011a 05       		.byte	0x5
 1041 011b 25       		.byte	0x25
 1042 011c E0000000 		.4byte	0xe0
 1043 0120 04       		.byte	0x4
 1044 0121 0A       		.uleb128 0xa
 1045 0122 61060000 		.4byte	.LASF23
 1046 0126 05       		.byte	0x5
 1047 0127 26       		.byte	0x26
 1048 0128 E0000000 		.4byte	0xe0
 1049 012c 08       		.byte	0x8
 1050 012d 0A       		.uleb128 0xa
 1051 012e 5E050000 		.4byte	.LASF24
 1052 0132 05       		.byte	0x5
 1053 0133 27       		.byte	0x27
 1054 0134 E0000000 		.4byte	0xe0
 1055 0138 0C       		.byte	0xc
 1056 0139 0A       		.uleb128 0xa
 1057 013a 01040000 		.4byte	.LASF25
 1058 013e 05       		.byte	0x5
 1059 013f 28       		.byte	0x28
 1060 0140 E5000000 		.4byte	0xe5
 1061 0144 10       		.byte	0x10
 1062 0145 0A       		.uleb128 0xa
 1063 0146 B6080000 		.4byte	.LASF26
 1064 014a 05       		.byte	0x5
 1065 014b 29       		.byte	0x29
 1066 014c 57010000 		.4byte	0x157
 1067 0150 14       		.byte	0x14
 1068 0151 00       		.byte	0
 1069 0152 05       		.uleb128 0x5
 1070 0153 EA000000 		.4byte	0xea
 1071 0157 06       		.uleb128 0x6
 1072 0158 52010000 		.4byte	0x152
 1073 015c 03       		.uleb128 0x3
 1074 015d A3080000 		.4byte	.LASF27
 1075 0161 05       		.byte	0x5
 1076 0162 2A       		.byte	0x2a
 1077 0163 01010000 		.4byte	0x101
 1078 0167 09       		.uleb128 0x9
 1079 0168 B8       		.byte	0xb8
 1080 0169 06       		.byte	0x6
 1081 016a 34       		.byte	0x34
 1082 016b 78050000 		.4byte	0x578
 1083 016f 0A       		.uleb128 0xa
 1084 0170 CE010000 		.4byte	.LASF28
 1085 0174 06       		.byte	0x6
 1086 0175 37       		.byte	0x37
 1087 0176 CE000000 		.4byte	0xce
 1088 017a 00       		.byte	0
 1089 017b 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 45


 1090 017c DB030000 		.4byte	.LASF29
 1091 0180 06       		.byte	0x6
 1092 0181 38       		.byte	0x38
 1093 0182 CE000000 		.4byte	0xce
 1094 0186 04       		.byte	0x4
 1095 0187 0A       		.uleb128 0xa
 1096 0188 4D030000 		.4byte	.LASF30
 1097 018c 06       		.byte	0x6
 1098 018d 39       		.byte	0x39
 1099 018e CE000000 		.4byte	0xce
 1100 0192 08       		.byte	0x8
 1101 0193 0A       		.uleb128 0xa
 1102 0194 4C080000 		.4byte	.LASF31
 1103 0198 06       		.byte	0x6
 1104 0199 3A       		.byte	0x3a
 1105 019a CE000000 		.4byte	0xce
 1106 019e 0C       		.byte	0xc
 1107 019f 0A       		.uleb128 0xa
 1108 01a0 FC090000 		.4byte	.LASF32
 1109 01a4 06       		.byte	0x6
 1110 01a5 3B       		.byte	0x3b
 1111 01a6 CE000000 		.4byte	0xce
 1112 01aa 10       		.byte	0x10
 1113 01ab 0A       		.uleb128 0xa
 1114 01ac 1F030000 		.4byte	.LASF33
 1115 01b0 06       		.byte	0x6
 1116 01b1 3C       		.byte	0x3c
 1117 01b2 CE000000 		.4byte	0xce
 1118 01b6 14       		.byte	0x14
 1119 01b7 0A       		.uleb128 0xa
 1120 01b8 0D050000 		.4byte	.LASF34
 1121 01bc 06       		.byte	0x6
 1122 01bd 3D       		.byte	0x3d
 1123 01be CE000000 		.4byte	0xce
 1124 01c2 18       		.byte	0x18
 1125 01c3 0A       		.uleb128 0xa
 1126 01c4 6C010000 		.4byte	.LASF35
 1127 01c8 06       		.byte	0x6
 1128 01c9 3E       		.byte	0x3e
 1129 01ca CE000000 		.4byte	0xce
 1130 01ce 1C       		.byte	0x1c
 1131 01cf 0A       		.uleb128 0xa
 1132 01d0 DB0A0000 		.4byte	.LASF36
 1133 01d4 06       		.byte	0x6
 1134 01d5 3F       		.byte	0x3f
 1135 01d6 CE000000 		.4byte	0xce
 1136 01da 20       		.byte	0x20
 1137 01db 0A       		.uleb128 0xa
 1138 01dc F3060000 		.4byte	.LASF37
 1139 01e0 06       		.byte	0x6
 1140 01e1 40       		.byte	0x40
 1141 01e2 CE000000 		.4byte	0xce
 1142 01e6 24       		.byte	0x24
 1143 01e7 0A       		.uleb128 0xa
 1144 01e8 89060000 		.4byte	.LASF38
 1145 01ec 06       		.byte	0x6
 1146 01ed 43       		.byte	0x43
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 46


 1147 01ee A2000000 		.4byte	0xa2
 1148 01f2 28       		.byte	0x28
 1149 01f3 0A       		.uleb128 0xa
 1150 01f4 4D010000 		.4byte	.LASF39
 1151 01f8 06       		.byte	0x6
 1152 01f9 44       		.byte	0x44
 1153 01fa A2000000 		.4byte	0xa2
 1154 01fe 29       		.byte	0x29
 1155 01ff 0A       		.uleb128 0xa
 1156 0200 D10A0000 		.4byte	.LASF40
 1157 0204 06       		.byte	0x6
 1158 0205 45       		.byte	0x45
 1159 0206 A2000000 		.4byte	0xa2
 1160 020a 2A       		.byte	0x2a
 1161 020b 0A       		.uleb128 0xa
 1162 020c 12080000 		.4byte	.LASF41
 1163 0210 06       		.byte	0x6
 1164 0211 46       		.byte	0x46
 1165 0212 A2000000 		.4byte	0xa2
 1166 0216 2B       		.byte	0x2b
 1167 0217 0A       		.uleb128 0xa
 1168 0218 14060000 		.4byte	.LASF42
 1169 021c 06       		.byte	0x6
 1170 021d 47       		.byte	0x47
 1171 021e A2000000 		.4byte	0xa2
 1172 0222 2C       		.byte	0x2c
 1173 0223 0A       		.uleb128 0xa
 1174 0224 6A090000 		.4byte	.LASF43
 1175 0228 06       		.byte	0x6
 1176 0229 48       		.byte	0x48
 1177 022a A2000000 		.4byte	0xa2
 1178 022e 2D       		.byte	0x2d
 1179 022f 0A       		.uleb128 0xa
 1180 0230 DF020000 		.4byte	.LASF44
 1181 0234 06       		.byte	0x6
 1182 0235 49       		.byte	0x49
 1183 0236 A2000000 		.4byte	0xa2
 1184 023a 2E       		.byte	0x2e
 1185 023b 0A       		.uleb128 0xa
 1186 023c 03070000 		.4byte	.LASF45
 1187 0240 06       		.byte	0x6
 1188 0241 4A       		.byte	0x4a
 1189 0242 A2000000 		.4byte	0xa2
 1190 0246 2F       		.byte	0x2f
 1191 0247 0A       		.uleb128 0xa
 1192 0248 1E090000 		.4byte	.LASF46
 1193 024c 06       		.byte	0x6
 1194 024d 4B       		.byte	0x4b
 1195 024e A2000000 		.4byte	0xa2
 1196 0252 30       		.byte	0x30
 1197 0253 0A       		.uleb128 0xa
 1198 0254 EF040000 		.4byte	.LASF47
 1199 0258 06       		.byte	0x6
 1200 0259 4E       		.byte	0x4e
 1201 025a A2000000 		.4byte	0xa2
 1202 025e 31       		.byte	0x31
 1203 025f 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 47


 1204 0260 82010000 		.4byte	.LASF48
 1205 0264 06       		.byte	0x6
 1206 0265 4F       		.byte	0x4f
 1207 0266 A2000000 		.4byte	0xa2
 1208 026a 32       		.byte	0x32
 1209 026b 0A       		.uleb128 0xa
 1210 026c 75040000 		.4byte	.LASF49
 1211 0270 06       		.byte	0x6
 1212 0271 50       		.byte	0x50
 1213 0272 A2000000 		.4byte	0xa2
 1214 0276 33       		.byte	0x33
 1215 0277 0A       		.uleb128 0xa
 1216 0278 2B070000 		.4byte	.LASF50
 1217 027c 06       		.byte	0x6
 1218 027d 51       		.byte	0x51
 1219 027e A2000000 		.4byte	0xa2
 1220 0282 34       		.byte	0x34
 1221 0283 0A       		.uleb128 0xa
 1222 0284 DE090000 		.4byte	.LASF51
 1223 0288 06       		.byte	0x6
 1224 0289 52       		.byte	0x52
 1225 028a AD000000 		.4byte	0xad
 1226 028e 36       		.byte	0x36
 1227 028f 0A       		.uleb128 0xa
 1228 0290 67030000 		.4byte	.LASF52
 1229 0294 06       		.byte	0x6
 1230 0295 53       		.byte	0x53
 1231 0296 AD000000 		.4byte	0xad
 1232 029a 38       		.byte	0x38
 1233 029b 0A       		.uleb128 0xa
 1234 029c 050A0000 		.4byte	.LASF53
 1235 02a0 06       		.byte	0x6
 1236 02a1 54       		.byte	0x54
 1237 02a2 AD000000 		.4byte	0xad
 1238 02a6 3A       		.byte	0x3a
 1239 02a7 0A       		.uleb128 0xa
 1240 02a8 C20A0000 		.4byte	.LASF54
 1241 02ac 06       		.byte	0x6
 1242 02ad 55       		.byte	0x55
 1243 02ae A2000000 		.4byte	0xa2
 1244 02b2 3C       		.byte	0x3c
 1245 02b3 0A       		.uleb128 0xa
 1246 02b4 8E030000 		.4byte	.LASF55
 1247 02b8 06       		.byte	0x6
 1248 02b9 56       		.byte	0x56
 1249 02ba A2000000 		.4byte	0xa2
 1250 02be 3D       		.byte	0x3d
 1251 02bf 0A       		.uleb128 0xa
 1252 02c0 D3080000 		.4byte	.LASF56
 1253 02c4 06       		.byte	0x6
 1254 02c5 57       		.byte	0x57
 1255 02c6 A2000000 		.4byte	0xa2
 1256 02ca 3E       		.byte	0x3e
 1257 02cb 0A       		.uleb128 0xa
 1258 02cc E7010000 		.4byte	.LASF57
 1259 02d0 06       		.byte	0x6
 1260 02d1 58       		.byte	0x58
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 48


 1261 02d2 A2000000 		.4byte	0xa2
 1262 02d6 3F       		.byte	0x3f
 1263 02d7 0A       		.uleb128 0xa
 1264 02d8 B3070000 		.4byte	.LASF58
 1265 02dc 06       		.byte	0x6
 1266 02dd 59       		.byte	0x59
 1267 02de A2000000 		.4byte	0xa2
 1268 02e2 40       		.byte	0x40
 1269 02e3 0A       		.uleb128 0xa
 1270 02e4 F1030000 		.4byte	.LASF59
 1271 02e8 06       		.byte	0x6
 1272 02e9 5A       		.byte	0x5a
 1273 02ea A2000000 		.4byte	0xa2
 1274 02ee 41       		.byte	0x41
 1275 02ef 0A       		.uleb128 0xa
 1276 02f0 68060000 		.4byte	.LASF60
 1277 02f4 06       		.byte	0x6
 1278 02f5 5B       		.byte	0x5b
 1279 02f6 A2000000 		.4byte	0xa2
 1280 02fa 42       		.byte	0x42
 1281 02fb 0A       		.uleb128 0xa
 1282 02fc 8E070000 		.4byte	.LASF61
 1283 0300 06       		.byte	0x6
 1284 0301 5C       		.byte	0x5c
 1285 0302 A2000000 		.4byte	0xa2
 1286 0306 43       		.byte	0x43
 1287 0307 0A       		.uleb128 0xa
 1288 0308 56030000 		.4byte	.LASF62
 1289 030c 06       		.byte	0x6
 1290 030d 5D       		.byte	0x5d
 1291 030e A2000000 		.4byte	0xa2
 1292 0312 44       		.byte	0x44
 1293 0313 0A       		.uleb128 0xa
 1294 0314 E1060000 		.4byte	.LASF63
 1295 0318 06       		.byte	0x6
 1296 0319 5E       		.byte	0x5e
 1297 031a CE000000 		.4byte	0xce
 1298 031e 48       		.byte	0x48
 1299 031f 0A       		.uleb128 0xa
 1300 0320 32030000 		.4byte	.LASF64
 1301 0324 06       		.byte	0x6
 1302 0325 5F       		.byte	0x5f
 1303 0326 CE000000 		.4byte	0xce
 1304 032a 4C       		.byte	0x4c
 1305 032b 0A       		.uleb128 0xa
 1306 032c 15020000 		.4byte	.LASF65
 1307 0330 06       		.byte	0x6
 1308 0331 60       		.byte	0x60
 1309 0332 A2000000 		.4byte	0xa2
 1310 0336 50       		.byte	0x50
 1311 0337 0A       		.uleb128 0xa
 1312 0338 64020000 		.4byte	.LASF66
 1313 033c 06       		.byte	0x6
 1314 033d 61       		.byte	0x61
 1315 033e A2000000 		.4byte	0xa2
 1316 0342 51       		.byte	0x51
 1317 0343 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 49


 1318 0344 1A0A0000 		.4byte	.LASF67
 1319 0348 06       		.byte	0x6
 1320 0349 62       		.byte	0x62
 1321 034a A2000000 		.4byte	0xa2
 1322 034e 52       		.byte	0x52
 1323 034f 0A       		.uleb128 0xa
 1324 0350 F90A0000 		.4byte	.LASF68
 1325 0354 06       		.byte	0x6
 1326 0355 63       		.byte	0x63
 1327 0356 A2000000 		.4byte	0xa2
 1328 035a 53       		.byte	0x53
 1329 035b 0A       		.uleb128 0xa
 1330 035c E1080000 		.4byte	.LASF69
 1331 0360 06       		.byte	0x6
 1332 0361 64       		.byte	0x64
 1333 0362 A2000000 		.4byte	0xa2
 1334 0366 54       		.byte	0x54
 1335 0367 0A       		.uleb128 0xa
 1336 0368 76020000 		.4byte	.LASF70
 1337 036c 06       		.byte	0x6
 1338 036d 65       		.byte	0x65
 1339 036e A2000000 		.4byte	0xa2
 1340 0372 55       		.byte	0x55
 1341 0373 0A       		.uleb128 0xa
 1342 0374 90090000 		.4byte	.LASF71
 1343 0378 06       		.byte	0x6
 1344 0379 66       		.byte	0x66
 1345 037a A2000000 		.4byte	0xa2
 1346 037e 56       		.byte	0x56
 1347 037f 0A       		.uleb128 0xa
 1348 0380 16050000 		.4byte	.LASF72
 1349 0384 06       		.byte	0x6
 1350 0385 67       		.byte	0x67
 1351 0386 A2000000 		.4byte	0xa2
 1352 038a 57       		.byte	0x57
 1353 038b 0A       		.uleb128 0xa
 1354 038c D2000000 		.4byte	.LASF73
 1355 0390 06       		.byte	0x6
 1356 0391 68       		.byte	0x68
 1357 0392 A2000000 		.4byte	0xa2
 1358 0396 58       		.byte	0x58
 1359 0397 0A       		.uleb128 0xa
 1360 0398 70080000 		.4byte	.LASF74
 1361 039c 06       		.byte	0x6
 1362 039d 69       		.byte	0x69
 1363 039e A2000000 		.4byte	0xa2
 1364 03a2 59       		.byte	0x59
 1365 03a3 0A       		.uleb128 0xa
 1366 03a4 20070000 		.4byte	.LASF75
 1367 03a8 06       		.byte	0x6
 1368 03a9 6E       		.byte	0x6e
 1369 03aa B8000000 		.4byte	0xb8
 1370 03ae 5A       		.byte	0x5a
 1371 03af 0A       		.uleb128 0xa
 1372 03b0 BB090000 		.4byte	.LASF76
 1373 03b4 06       		.byte	0x6
 1374 03b5 6F       		.byte	0x6f
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 50


 1375 03b6 B8000000 		.4byte	0xb8
 1376 03ba 5C       		.byte	0x5c
 1377 03bb 0A       		.uleb128 0xa
 1378 03bc D8010000 		.4byte	.LASF77
 1379 03c0 06       		.byte	0x6
 1380 03c1 70       		.byte	0x70
 1381 03c2 A2000000 		.4byte	0xa2
 1382 03c6 5E       		.byte	0x5e
 1383 03c7 0A       		.uleb128 0xa
 1384 03c8 FC070000 		.4byte	.LASF78
 1385 03cc 06       		.byte	0x6
 1386 03cd 71       		.byte	0x71
 1387 03ce A2000000 		.4byte	0xa2
 1388 03d2 5F       		.byte	0x5f
 1389 03d3 0A       		.uleb128 0xa
 1390 03d4 61070000 		.4byte	.LASF79
 1391 03d8 06       		.byte	0x6
 1392 03d9 72       		.byte	0x72
 1393 03da A2000000 		.4byte	0xa2
 1394 03de 60       		.byte	0x60
 1395 03df 0A       		.uleb128 0xa
 1396 03e0 C6070000 		.4byte	.LASF80
 1397 03e4 06       		.byte	0x6
 1398 03e5 73       		.byte	0x73
 1399 03e6 CE000000 		.4byte	0xce
 1400 03ea 64       		.byte	0x64
 1401 03eb 0A       		.uleb128 0xa
 1402 03ec 26020000 		.4byte	.LASF81
 1403 03f0 06       		.byte	0x6
 1404 03f1 76       		.byte	0x76
 1405 03f2 B8000000 		.4byte	0xb8
 1406 03f6 68       		.byte	0x68
 1407 03f7 0A       		.uleb128 0xa
 1408 03f8 A8040000 		.4byte	.LASF82
 1409 03fc 06       		.byte	0x6
 1410 03fd 77       		.byte	0x77
 1411 03fe B8000000 		.4byte	0xb8
 1412 0402 6A       		.byte	0x6a
 1413 0403 0A       		.uleb128 0xa
 1414 0404 D7070000 		.4byte	.LASF83
 1415 0408 06       		.byte	0x6
 1416 0409 78       		.byte	0x78
 1417 040a B8000000 		.4byte	0xb8
 1418 040e 6C       		.byte	0x6c
 1419 040f 0A       		.uleb128 0xa
 1420 0410 75010000 		.4byte	.LASF84
 1421 0414 06       		.byte	0x6
 1422 0415 79       		.byte	0x79
 1423 0416 B8000000 		.4byte	0xb8
 1424 041a 6E       		.byte	0x6e
 1425 041b 0A       		.uleb128 0xa
 1426 041c BF080000 		.4byte	.LASF85
 1427 0420 06       		.byte	0x6
 1428 0421 7B       		.byte	0x7b
 1429 0422 A2000000 		.4byte	0xa2
 1430 0426 70       		.byte	0x70
 1431 0427 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 51


 1432 0428 AC020000 		.4byte	.LASF86
 1433 042c 06       		.byte	0x6
 1434 042d 7C       		.byte	0x7c
 1435 042e A2000000 		.4byte	0xa2
 1436 0432 71       		.byte	0x71
 1437 0433 0A       		.uleb128 0xa
 1438 0434 E30A0000 		.4byte	.LASF87
 1439 0438 06       		.byte	0x6
 1440 0439 7D       		.byte	0x7d
 1441 043a A2000000 		.4byte	0xa2
 1442 043e 72       		.byte	0x72
 1443 043f 0A       		.uleb128 0xa
 1444 0440 3C070000 		.4byte	.LASF88
 1445 0444 06       		.byte	0x6
 1446 0445 7E       		.byte	0x7e
 1447 0446 A2000000 		.4byte	0xa2
 1448 044a 73       		.byte	0x73
 1449 044b 0A       		.uleb128 0xa
 1450 044c 99030000 		.4byte	.LASF89
 1451 0450 06       		.byte	0x6
 1452 0451 80       		.byte	0x80
 1453 0452 B8000000 		.4byte	0xb8
 1454 0456 74       		.byte	0x74
 1455 0457 0A       		.uleb128 0xa
 1456 0458 4D090000 		.4byte	.LASF90
 1457 045c 06       		.byte	0x6
 1458 045d 81       		.byte	0x81
 1459 045e B8000000 		.4byte	0xb8
 1460 0462 76       		.byte	0x76
 1461 0463 0A       		.uleb128 0xa
 1462 0464 79030000 		.4byte	.LASF91
 1463 0468 06       		.byte	0x6
 1464 0469 82       		.byte	0x82
 1465 046a B8000000 		.4byte	0xb8
 1466 046e 78       		.byte	0x78
 1467 046f 0A       		.uleb128 0xa
 1468 0470 9A010000 		.4byte	.LASF92
 1469 0474 06       		.byte	0x6
 1470 0475 83       		.byte	0x83
 1471 0476 B8000000 		.4byte	0xb8
 1472 047a 7A       		.byte	0x7a
 1473 047b 0A       		.uleb128 0xa
 1474 047c 470A0000 		.4byte	.LASF93
 1475 0480 06       		.byte	0x6
 1476 0481 86       		.byte	0x86
 1477 0482 A2000000 		.4byte	0xa2
 1478 0486 7C       		.byte	0x7c
 1479 0487 0A       		.uleb128 0xa
 1480 0488 EB090000 		.4byte	.LASF94
 1481 048c 06       		.byte	0x6
 1482 048d 87       		.byte	0x87
 1483 048e A2000000 		.4byte	0xa2
 1484 0492 7D       		.byte	0x7d
 1485 0493 0A       		.uleb128 0xa
 1486 0494 E6000000 		.4byte	.LASF95
 1487 0498 06       		.byte	0x6
 1488 0499 88       		.byte	0x88
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 52


 1489 049a A2000000 		.4byte	0xa2
 1490 049e 7E       		.byte	0x7e
 1491 049f 0A       		.uleb128 0xa
 1492 04a0 BE030000 		.4byte	.LASF96
 1493 04a4 06       		.byte	0x6
 1494 04a5 89       		.byte	0x89
 1495 04a6 A2000000 		.4byte	0xa2
 1496 04aa 7F       		.byte	0x7f
 1497 04ab 0A       		.uleb128 0xa
 1498 04ac 61040000 		.4byte	.LASF97
 1499 04b0 06       		.byte	0x6
 1500 04b1 8A       		.byte	0x8a
 1501 04b2 A2000000 		.4byte	0xa2
 1502 04b6 80       		.byte	0x80
 1503 04b7 0A       		.uleb128 0xa
 1504 04b8 96060000 		.4byte	.LASF98
 1505 04bc 06       		.byte	0x6
 1506 04bd 8D       		.byte	0x8d
 1507 04be CE000000 		.4byte	0xce
 1508 04c2 84       		.byte	0x84
 1509 04c3 0A       		.uleb128 0xa
 1510 04c4 AF010000 		.4byte	.LASF99
 1511 04c8 06       		.byte	0x6
 1512 04c9 8E       		.byte	0x8e
 1513 04ca CE000000 		.4byte	0xce
 1514 04ce 88       		.byte	0x88
 1515 04cf 0A       		.uleb128 0xa
 1516 04d0 320A0000 		.4byte	.LASF100
 1517 04d4 06       		.byte	0x6
 1518 04d5 8F       		.byte	0x8f
 1519 04d6 CE000000 		.4byte	0xce
 1520 04da 8C       		.byte	0x8c
 1521 04db 0A       		.uleb128 0xa
 1522 04dc 84080000 		.4byte	.LASF101
 1523 04e0 06       		.byte	0x6
 1524 04e1 90       		.byte	0x90
 1525 04e2 CE000000 		.4byte	0xce
 1526 04e6 90       		.byte	0x90
 1527 04e7 0A       		.uleb128 0xa
 1528 04e8 4C040000 		.4byte	.LASF102
 1529 04ec 06       		.byte	0x6
 1530 04ed 91       		.byte	0x91
 1531 04ee CE000000 		.4byte	0xce
 1532 04f2 94       		.byte	0x94
 1533 04f3 0A       		.uleb128 0xa
 1534 04f4 C9020000 		.4byte	.LASF103
 1535 04f8 06       		.byte	0x6
 1536 04f9 92       		.byte	0x92
 1537 04fa CE000000 		.4byte	0xce
 1538 04fe 98       		.byte	0x98
 1539 04ff 0A       		.uleb128 0xa
 1540 0500 8B0A0000 		.4byte	.LASF104
 1541 0504 06       		.byte	0x6
 1542 0505 93       		.byte	0x93
 1543 0506 CE000000 		.4byte	0xce
 1544 050a 9C       		.byte	0x9c
 1545 050b 0A       		.uleb128 0xa
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 53


 1546 050c 36020000 		.4byte	.LASF105
 1547 0510 06       		.byte	0x6
 1548 0511 94       		.byte	0x94
 1549 0512 CE000000 		.4byte	0xce
 1550 0516 A0       		.byte	0xa0
 1551 0517 0A       		.uleb128 0xa
 1552 0518 F1020000 		.4byte	.LASF106
 1553 051c 06       		.byte	0x6
 1554 051d 95       		.byte	0x95
 1555 051e B8000000 		.4byte	0xb8
 1556 0522 A4       		.byte	0xa4
 1557 0523 0A       		.uleb128 0xa
 1558 0524 74060000 		.4byte	.LASF107
 1559 0528 06       		.byte	0x6
 1560 0529 96       		.byte	0x96
 1561 052a B8000000 		.4byte	0xb8
 1562 052e A6       		.byte	0xa6
 1563 052f 0A       		.uleb128 0xa
 1564 0530 F0070000 		.4byte	.LASF108
 1565 0534 06       		.byte	0x6
 1566 0535 97       		.byte	0x97
 1567 0536 B8000000 		.4byte	0xb8
 1568 053a A8       		.byte	0xa8
 1569 053b 0A       		.uleb128 0xa
 1570 053c 2A090000 		.4byte	.LASF109
 1571 0540 06       		.byte	0x6
 1572 0541 98       		.byte	0x98
 1573 0542 B8000000 		.4byte	0xb8
 1574 0546 AA       		.byte	0xaa
 1575 0547 0A       		.uleb128 0xa
 1576 0548 49050000 		.4byte	.LASF110
 1577 054c 06       		.byte	0x6
 1578 054d 99       		.byte	0x99
 1579 054e B8000000 		.4byte	0xb8
 1580 0552 AC       		.byte	0xac
 1581 0553 0A       		.uleb128 0xa
 1582 0554 53070000 		.4byte	.LASF111
 1583 0558 06       		.byte	0x6
 1584 0559 9A       		.byte	0x9a
 1585 055a B8000000 		.4byte	0xb8
 1586 055e AE       		.byte	0xae
 1587 055f 0A       		.uleb128 0xa
 1588 0560 D0090000 		.4byte	.LASF112
 1589 0564 06       		.byte	0x6
 1590 0565 9D       		.byte	0x9d
 1591 0566 B8000000 		.4byte	0xb8
 1592 056a B0       		.byte	0xb0
 1593 056b 0A       		.uleb128 0xa
 1594 056c F9000000 		.4byte	.LASF113
 1595 0570 06       		.byte	0x6
 1596 0571 9E       		.byte	0x9e
 1597 0572 CE000000 		.4byte	0xce
 1598 0576 B4       		.byte	0xb4
 1599 0577 00       		.byte	0
 1600 0578 03       		.uleb128 0x3
 1601 0579 51060000 		.4byte	.LASF114
 1602 057d 06       		.byte	0x6
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 54


 1603 057e 9F       		.byte	0x9f
 1604 057f 67010000 		.4byte	0x167
 1605 0583 0B       		.uleb128 0xb
 1606 0584 B20A0000 		.4byte	.LASF115
 1607 0588 07       		.byte	0x7
 1608 0589 1D06     		.2byte	0x61d
 1609 058b 5C010000 		.4byte	0x15c
 1610 058f 0B       		.uleb128 0xb
 1611 0590 A1040000 		.4byte	.LASF116
 1612 0594 08       		.byte	0x8
 1613 0595 F601     		.2byte	0x1f6
 1614 0597 9B050000 		.4byte	0x59b
 1615 059b 02       		.uleb128 0x2
 1616 059c 01       		.byte	0x1
 1617 059d 08       		.byte	0x8
 1618 059e 19090000 		.4byte	.LASF117
 1619 05a2 02       		.uleb128 0x2
 1620 05a3 04       		.byte	0x4
 1621 05a4 04       		.byte	0x4
 1622 05a5 C0070000 		.4byte	.LASF118
 1623 05a9 02       		.uleb128 0x2
 1624 05aa 08       		.byte	0x8
 1625 05ab 04       		.byte	0x4
 1626 05ac 72030000 		.4byte	.LASF119
 1627 05b0 0C       		.uleb128 0xc
 1628 05b1 04       		.byte	0x4
 1629 05b2 9B000000 		.4byte	0x9b
 1630 05b6 01       		.byte	0x1
 1631 05b7 7201     		.2byte	0x172
 1632 05b9 CD050000 		.4byte	0x5cd
 1633 05bd 0D       		.uleb128 0xd
 1634 05be 39040000 		.4byte	.LASF120
 1635 05c2 00       		.byte	0
 1636 05c3 0E       		.uleb128 0xe
 1637 05c4 5B010000 		.4byte	.LASF121
 1638 05c8 01008A00 		.4byte	0x8a0001
 1639 05cc 00       		.byte	0
 1640 05cd 0B       		.uleb128 0xb
 1641 05ce 63050000 		.4byte	.LASF122
 1642 05d2 01       		.byte	0x1
 1643 05d3 7901     		.2byte	0x179
 1644 05d5 B0050000 		.4byte	0x5b0
 1645 05d9 0F       		.uleb128 0xf
 1646 05da 04       		.byte	0x4
 1647 05db 9B000000 		.4byte	0x9b
 1648 05df 09       		.byte	0x9
 1649 05e0 47       		.byte	0x47
 1650 05e1 34060000 		.4byte	0x634
 1651 05e5 0D       		.uleb128 0xd
 1652 05e6 BA040000 		.4byte	.LASF123
 1653 05ea 00       		.byte	0
 1654 05eb 0E       		.uleb128 0xe
 1655 05ec 0D040000 		.4byte	.LASF124
 1656 05f0 01018A00 		.4byte	0x8a0101
 1657 05f4 0E       		.uleb128 0xe
 1658 05f5 AD060000 		.4byte	.LASF125
 1659 05f9 02018A00 		.4byte	0x8a0102
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 55


 1660 05fd 0E       		.uleb128 0xe
 1661 05fe 36080000 		.4byte	.LASF126
 1662 0602 03018A00 		.4byte	0x8a0103
 1663 0606 0E       		.uleb128 0xe
 1664 0607 C8060000 		.4byte	.LASF127
 1665 060b 04018A00 		.4byte	0x8a0104
 1666 060f 0E       		.uleb128 0xe
 1667 0610 00000000 		.4byte	.LASF128
 1668 0614 02018800 		.4byte	0x880102
 1669 0618 0E       		.uleb128 0xe
 1670 0619 FA040000 		.4byte	.LASF129
 1671 061d 03018800 		.4byte	0x880103
 1672 0621 0E       		.uleb128 0xe
 1673 0622 20060000 		.4byte	.LASF130
 1674 0626 01018800 		.4byte	0x880101
 1675 062a 0E       		.uleb128 0xe
 1676 062b 72070000 		.4byte	.LASF131
 1677 062f 00018800 		.4byte	0x880100
 1678 0633 00       		.byte	0
 1679 0634 03       		.uleb128 0x3
 1680 0635 A4090000 		.4byte	.LASF132
 1681 0639 09       		.byte	0x9
 1682 063a 5C       		.byte	0x5c
 1683 063b D9050000 		.4byte	0x5d9
 1684 063f 09       		.uleb128 0x9
 1685 0640 08       		.byte	0x8
 1686 0641 09       		.byte	0x9
 1687 0642 60       		.byte	0x60
 1688 0643 60060000 		.4byte	0x660
 1689 0647 0A       		.uleb128 0xa
 1690 0648 0F070000 		.4byte	.LASF133
 1691 064c 09       		.byte	0x9
 1692 064d 63       		.byte	0x63
 1693 064e CE000000 		.4byte	0xce
 1694 0652 00       		.byte	0
 1695 0653 0A       		.uleb128 0xa
 1696 0654 30040000 		.4byte	.LASF134
 1697 0658 09       		.byte	0x9
 1698 0659 65       		.byte	0x65
 1699 065a 60060000 		.4byte	0x660
 1700 065e 04       		.byte	0x4
 1701 065f 00       		.byte	0
 1702 0660 10       		.uleb128 0x10
 1703 0661 04       		.byte	0x4
 1704 0662 CE000000 		.4byte	0xce
 1705 0666 03       		.uleb128 0x3
 1706 0667 790A0000 		.4byte	.LASF135
 1707 066b 09       		.byte	0x9
 1708 066c 66       		.byte	0x66
 1709 066d 3F060000 		.4byte	0x63f
 1710 0671 11       		.uleb128 0x11
 1711 0672 5C0A0000 		.4byte	.LASF136
 1712 0676 01       		.byte	0x1
 1713 0677 C101     		.2byte	0x1c1
 1714 0679 9B060000 		.4byte	0x69b
 1715 067d 00000000 		.4byte	.LFB132
 1716 0681 4C000000 		.4byte	.LFE132-.LFB132
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 56


 1717 0685 01       		.uleb128 0x1
 1718 0686 9C       		.byte	0x9c
 1719 0687 9B060000 		.4byte	0x69b
 1720 068b 12       		.uleb128 0x12
 1721 068c D2030000 		.4byte	.LASF138
 1722 0690 01       		.byte	0x1
 1723 0691 C101     		.2byte	0x1c1
 1724 0693 CE000000 		.4byte	0xce
 1725 0697 02       		.uleb128 0x2
 1726 0698 91       		.byte	0x91
 1727 0699 74       		.sleb128 -12
 1728 069a 00       		.byte	0
 1729 069b 10       		.uleb128 0x10
 1730 069c 04       		.byte	0x4
 1731 069d 83050000 		.4byte	0x583
 1732 06a1 13       		.uleb128 0x13
 1733 06a2 77090000 		.4byte	.LASF137
 1734 06a6 01       		.byte	0x1
 1735 06a7 0603     		.2byte	0x306
 1736 06a9 CE000000 		.4byte	0xce
 1737 06ad 00000000 		.4byte	.LFB143
 1738 06b1 18000000 		.4byte	.LFE143-.LFB143
 1739 06b5 01       		.uleb128 0x1
 1740 06b6 9C       		.byte	0x9c
 1741 06b7 CB060000 		.4byte	0x6cb
 1742 06bb 12       		.uleb128 0x12
 1743 06bc FE060000 		.4byte	.LASF139
 1744 06c0 01       		.byte	0x1
 1745 06c1 0603     		.2byte	0x306
 1746 06c3 CB060000 		.4byte	0x6cb
 1747 06c7 02       		.uleb128 0x2
 1748 06c8 91       		.byte	0x91
 1749 06c9 74       		.sleb128 -12
 1750 06ca 00       		.byte	0
 1751 06cb 10       		.uleb128 0x10
 1752 06cc 04       		.byte	0x4
 1753 06cd D1060000 		.4byte	0x6d1
 1754 06d1 06       		.uleb128 0x6
 1755 06d2 83050000 		.4byte	0x583
 1756 06d6 11       		.uleb128 0x11
 1757 06d7 20080000 		.4byte	.LASF140
 1758 06db 01       		.byte	0x1
 1759 06dc 9103     		.2byte	0x391
 1760 06de CD050000 		.4byte	0x5cd
 1761 06e2 00000000 		.4byte	.LFB148
 1762 06e6 38000000 		.4byte	.LFE148-.LFB148
 1763 06ea 01       		.uleb128 0x1
 1764 06eb 9C       		.byte	0x9c
 1765 06ec 1E070000 		.4byte	0x71e
 1766 06f0 12       		.uleb128 0x12
 1767 06f1 FE060000 		.4byte	.LASF139
 1768 06f5 01       		.byte	0x1
 1769 06f6 9103     		.2byte	0x391
 1770 06f8 9B060000 		.4byte	0x69b
 1771 06fc 02       		.uleb128 0x2
 1772 06fd 91       		.byte	0x91
 1773 06fe 74       		.sleb128 -12
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 57


 1774 06ff 12       		.uleb128 0x12
 1775 0700 06030000 		.4byte	.LASF141
 1776 0704 01       		.byte	0x1
 1777 0705 9103     		.2byte	0x391
 1778 0707 CE000000 		.4byte	0xce
 1779 070b 02       		.uleb128 0x2
 1780 070c 91       		.byte	0x91
 1781 070d 70       		.sleb128 -16
 1782 070e 12       		.uleb128 0x12
 1783 070f 57050000 		.4byte	.LASF142
 1784 0713 01       		.byte	0x1
 1785 0714 9103     		.2byte	0x391
 1786 0716 1E070000 		.4byte	0x71e
 1787 071a 02       		.uleb128 0x2
 1788 071b 91       		.byte	0x91
 1789 071c 6C       		.sleb128 -20
 1790 071d 00       		.byte	0
 1791 071e 10       		.uleb128 0x10
 1792 071f 04       		.byte	0x4
 1793 0720 24070000 		.4byte	0x724
 1794 0724 14       		.uleb128 0x14
 1795 0725 13       		.uleb128 0x13
 1796 0726 3A060000 		.4byte	.LASF143
 1797 072a 01       		.byte	0x1
 1798 072b D003     		.2byte	0x3d0
 1799 072d CD050000 		.4byte	0x5cd
 1800 0731 00000000 		.4byte	.LFB150
 1801 0735 2C000000 		.4byte	.LFE150-.LFB150
 1802 0739 01       		.uleb128 0x1
 1803 073a 9C       		.byte	0x9c
 1804 073b 4F070000 		.4byte	0x74f
 1805 073f 12       		.uleb128 0x12
 1806 0740 FE060000 		.4byte	.LASF139
 1807 0744 01       		.byte	0x1
 1808 0745 D003     		.2byte	0x3d0
 1809 0747 CB060000 		.4byte	0x6cb
 1810 074b 02       		.uleb128 0x2
 1811 074c 91       		.byte	0x91
 1812 074d 74       		.sleb128 -12
 1813 074e 00       		.byte	0
 1814 074f 15       		.uleb128 0x15
 1815 0750 79050000 		.4byte	.LASF149
 1816 0754 02       		.byte	0x2
 1817 0755 3E       		.byte	0x3e
 1818 0756 34060000 		.4byte	0x634
 1819 075a 00000000 		.4byte	.LFB151
 1820 075e 6C000000 		.4byte	.LFE151-.LFB151
 1821 0762 01       		.uleb128 0x1
 1822 0763 9C       		.byte	0x9c
 1823 0764 B2070000 		.4byte	0x7b2
 1824 0768 16       		.uleb128 0x16
 1825 0769 2A050000 		.4byte	.LASF144
 1826 076d 02       		.byte	0x2
 1827 076e 3E       		.byte	0x3e
 1828 076f CE000000 		.4byte	0xce
 1829 0773 02       		.uleb128 0x2
 1830 0774 91       		.byte	0x91
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 58


 1831 0775 6C       		.sleb128 -20
 1832 0776 16       		.uleb128 0x16
 1833 0777 19000000 		.4byte	.LASF145
 1834 077b 02       		.byte	0x2
 1835 077c 3F       		.byte	0x3f
 1836 077d CE000000 		.4byte	0xce
 1837 0781 02       		.uleb128 0x2
 1838 0782 91       		.byte	0x91
 1839 0783 68       		.sleb128 -24
 1840 0784 16       		.uleb128 0x16
 1841 0785 EA020000 		.4byte	.LASF146
 1842 0789 02       		.byte	0x2
 1843 078a 3F       		.byte	0x3f
 1844 078b 60060000 		.4byte	0x660
 1845 078f 02       		.uleb128 0x2
 1846 0790 91       		.byte	0x91
 1847 0791 64       		.sleb128 -28
 1848 0792 17       		.uleb128 0x17
 1849 0793 C4090000 		.4byte	.LASF147
 1850 0797 02       		.byte	0x2
 1851 0798 42       		.byte	0x42
 1852 0799 66060000 		.4byte	0x666
 1853 079d 05       		.uleb128 0x5
 1854 079e 03       		.byte	0x3
 1855 079f 04000000 		.4byte	cy_semaData.10638
 1856 07a3 17       		.uleb128 0x17
 1857 07a4 0B0B0000 		.4byte	.LASF148
 1858 07a8 02       		.byte	0x2
 1859 07a9 44       		.byte	0x44
 1860 07aa 34060000 		.4byte	0x634
 1861 07ae 02       		.uleb128 0x2
 1862 07af 91       		.byte	0x91
 1863 07b0 74       		.sleb128 -12
 1864 07b1 00       		.byte	0
 1865 07b2 15       		.uleb128 0x15
 1866 07b3 35050000 		.4byte	.LASF150
 1867 07b7 02       		.byte	0x2
 1868 07b8 7B       		.byte	0x7b
 1869 07b9 34060000 		.4byte	0x634
 1870 07bd 00000000 		.4byte	.LFB152
 1871 07c1 BC000000 		.4byte	.LFE152-.LFB152
 1872 07c5 01       		.uleb128 0x1
 1873 07c6 9C       		.byte	0x9c
 1874 07c7 F6070000 		.4byte	0x7f6
 1875 07cb 16       		.uleb128 0x16
 1876 07cc 2A050000 		.4byte	.LASF144
 1877 07d0 02       		.byte	0x2
 1878 07d1 7B       		.byte	0x7b
 1879 07d2 CE000000 		.4byte	0xce
 1880 07d6 02       		.uleb128 0x2
 1881 07d7 91       		.byte	0x91
 1882 07d8 6C       		.sleb128 -20
 1883 07d9 16       		.uleb128 0x16
 1884 07da AB070000 		.4byte	.LASF151
 1885 07de 02       		.byte	0x2
 1886 07df 7B       		.byte	0x7b
 1887 07e0 F6070000 		.4byte	0x7f6
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 59


 1888 07e4 02       		.uleb128 0x2
 1889 07e5 91       		.byte	0x91
 1890 07e6 68       		.sleb128 -24
 1891 07e7 17       		.uleb128 0x17
 1892 07e8 0B0B0000 		.4byte	.LASF148
 1893 07ec 02       		.byte	0x2
 1894 07ed 7D       		.byte	0x7d
 1895 07ee 34060000 		.4byte	0x634
 1896 07f2 02       		.uleb128 0x2
 1897 07f3 91       		.byte	0x91
 1898 07f4 74       		.sleb128 -12
 1899 07f5 00       		.byte	0
 1900 07f6 10       		.uleb128 0x10
 1901 07f7 04       		.byte	0x4
 1902 07f8 66060000 		.4byte	0x666
 1903 07fc 15       		.uleb128 0x15
 1904 07fd 210B0000 		.4byte	.LASF152
 1905 0801 02       		.byte	0x2
 1906 0802 DA       		.byte	0xda
 1907 0803 34060000 		.4byte	0x634
 1908 0807 00000000 		.4byte	.LFB153
 1909 080b DC000000 		.4byte	.LFE153-.LFB153
 1910 080f 01       		.uleb128 0x1
 1911 0810 9C       		.byte	0x9c
 1912 0811 78080000 		.4byte	0x878
 1913 0815 16       		.uleb128 0x16
 1914 0816 F3010000 		.4byte	.LASF153
 1915 081a 02       		.byte	0x2
 1916 081b DA       		.byte	0xda
 1917 081c CE000000 		.4byte	0xce
 1918 0820 02       		.uleb128 0x2
 1919 0821 91       		.byte	0x91
 1920 0822 5C       		.sleb128 -36
 1921 0823 16       		.uleb128 0x16
 1922 0824 150B0000 		.4byte	.LASF154
 1923 0828 02       		.byte	0x2
 1924 0829 DA       		.byte	0xda
 1925 082a 78080000 		.4byte	0x878
 1926 082e 02       		.uleb128 0x2
 1927 082f 91       		.byte	0x91
 1928 0830 5B       		.sleb128 -37
 1929 0831 17       		.uleb128 0x17
 1930 0832 38090000 		.4byte	.LASF155
 1931 0836 02       		.byte	0x2
 1932 0837 DC       		.byte	0xdc
 1933 0838 CE000000 		.4byte	0xce
 1934 083c 02       		.uleb128 0x2
 1935 083d 91       		.byte	0x91
 1936 083e 68       		.sleb128 -24
 1937 083f 17       		.uleb128 0x17
 1938 0840 16030000 		.4byte	.LASF156
 1939 0844 02       		.byte	0x2
 1940 0845 DD       		.byte	0xdd
 1941 0846 CE000000 		.4byte	0xce
 1942 084a 02       		.uleb128 0x2
 1943 084b 91       		.byte	0x91
 1944 084c 64       		.sleb128 -28
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 60


 1945 084d 17       		.uleb128 0x17
 1946 084e E0040000 		.4byte	.LASF157
 1947 0852 02       		.byte	0x2
 1948 0853 DE       		.byte	0xde
 1949 0854 CE000000 		.4byte	0xce
 1950 0858 02       		.uleb128 0x2
 1951 0859 91       		.byte	0x91
 1952 085a 74       		.sleb128 -12
 1953 085b 17       		.uleb128 0x17
 1954 085c 59020000 		.4byte	.LASF158
 1955 0860 02       		.byte	0x2
 1956 0861 E0       		.byte	0xe0
 1957 0862 F6070000 		.4byte	0x7f6
 1958 0866 02       		.uleb128 0x2
 1959 0867 91       		.byte	0x91
 1960 0868 6C       		.sleb128 -20
 1961 0869 17       		.uleb128 0x17
 1962 086a 0B0B0000 		.4byte	.LASF148
 1963 086e 02       		.byte	0x2
 1964 086f E1       		.byte	0xe1
 1965 0870 34060000 		.4byte	0x634
 1966 0874 02       		.uleb128 0x2
 1967 0875 91       		.byte	0x91
 1968 0876 70       		.sleb128 -16
 1969 0877 00       		.byte	0
 1970 0878 02       		.uleb128 0x2
 1971 0879 01       		.byte	0x1
 1972 087a 02       		.byte	0x2
 1973 087b 54080000 		.4byte	.LASF159
 1974 087f 18       		.uleb128 0x18
 1975 0880 99070000 		.4byte	.LASF160
 1976 0884 02       		.byte	0x2
 1977 0885 3201     		.2byte	0x132
 1978 0887 34060000 		.4byte	0x634
 1979 088b 00000000 		.4byte	.LFB154
 1980 088f E0000000 		.4byte	.LFE154-.LFB154
 1981 0893 01       		.uleb128 0x1
 1982 0894 9C       		.byte	0x9c
 1983 0895 03090000 		.4byte	0x903
 1984 0899 12       		.uleb128 0x12
 1985 089a F3010000 		.4byte	.LASF153
 1986 089e 02       		.byte	0x2
 1987 089f 3201     		.2byte	0x132
 1988 08a1 CE000000 		.4byte	0xce
 1989 08a5 02       		.uleb128 0x2
 1990 08a6 91       		.byte	0x91
 1991 08a7 5C       		.sleb128 -36
 1992 08a8 12       		.uleb128 0x12
 1993 08a9 150B0000 		.4byte	.LASF154
 1994 08ad 02       		.byte	0x2
 1995 08ae 3201     		.2byte	0x132
 1996 08b0 78080000 		.4byte	0x878
 1997 08b4 02       		.uleb128 0x2
 1998 08b5 91       		.byte	0x91
 1999 08b6 5B       		.sleb128 -37
 2000 08b7 19       		.uleb128 0x19
 2001 08b8 38090000 		.4byte	.LASF155
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 61


 2002 08bc 02       		.byte	0x2
 2003 08bd 3401     		.2byte	0x134
 2004 08bf CE000000 		.4byte	0xce
 2005 08c3 02       		.uleb128 0x2
 2006 08c4 91       		.byte	0x91
 2007 08c5 68       		.sleb128 -24
 2008 08c6 19       		.uleb128 0x19
 2009 08c7 16030000 		.4byte	.LASF156
 2010 08cb 02       		.byte	0x2
 2011 08cc 3501     		.2byte	0x135
 2012 08ce CE000000 		.4byte	0xce
 2013 08d2 02       		.uleb128 0x2
 2014 08d3 91       		.byte	0x91
 2015 08d4 64       		.sleb128 -28
 2016 08d5 19       		.uleb128 0x19
 2017 08d6 E0040000 		.4byte	.LASF157
 2018 08da 02       		.byte	0x2
 2019 08db 3601     		.2byte	0x136
 2020 08dd CE000000 		.4byte	0xce
 2021 08e1 02       		.uleb128 0x2
 2022 08e2 91       		.byte	0x91
 2023 08e3 74       		.sleb128 -12
 2024 08e4 19       		.uleb128 0x19
 2025 08e5 59020000 		.4byte	.LASF158
 2026 08e9 02       		.byte	0x2
 2027 08ea 3801     		.2byte	0x138
 2028 08ec F6070000 		.4byte	0x7f6
 2029 08f0 02       		.uleb128 0x2
 2030 08f1 91       		.byte	0x91
 2031 08f2 6C       		.sleb128 -20
 2032 08f3 19       		.uleb128 0x19
 2033 08f4 0B0B0000 		.4byte	.LASF148
 2034 08f8 02       		.byte	0x2
 2035 08f9 3901     		.2byte	0x139
 2036 08fb 34060000 		.4byte	0x634
 2037 08ff 02       		.uleb128 0x2
 2038 0900 91       		.byte	0x91
 2039 0901 70       		.sleb128 -16
 2040 0902 00       		.byte	0
 2041 0903 18       		.uleb128 0x18
 2042 0904 FA080000 		.4byte	.LASF161
 2043 0908 02       		.byte	0x2
 2044 0909 7901     		.2byte	0x179
 2045 090b 34060000 		.4byte	0x634
 2046 090f 00000000 		.4byte	.LFB155
 2047 0913 74000000 		.4byte	.LFE155-.LFB155
 2048 0917 01       		.uleb128 0x1
 2049 0918 9C       		.byte	0x9c
 2050 0919 69090000 		.4byte	0x969
 2051 091d 12       		.uleb128 0x12
 2052 091e F3010000 		.4byte	.LASF153
 2053 0922 02       		.byte	0x2
 2054 0923 7901     		.2byte	0x179
 2055 0925 CE000000 		.4byte	0xce
 2056 0929 02       		.uleb128 0x2
 2057 092a 91       		.byte	0x91
 2058 092b 64       		.sleb128 -28
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 62


 2059 092c 19       		.uleb128 0x19
 2060 092d 0B0B0000 		.4byte	.LASF148
 2061 0931 02       		.byte	0x2
 2062 0932 7B01     		.2byte	0x17b
 2063 0934 34060000 		.4byte	0x634
 2064 0938 02       		.uleb128 0x2
 2065 0939 91       		.byte	0x91
 2066 093a 74       		.sleb128 -12
 2067 093b 19       		.uleb128 0x19
 2068 093c 38090000 		.4byte	.LASF155
 2069 0940 02       		.byte	0x2
 2070 0941 7C01     		.2byte	0x17c
 2071 0943 CE000000 		.4byte	0xce
 2072 0947 02       		.uleb128 0x2
 2073 0948 91       		.byte	0x91
 2074 0949 6C       		.sleb128 -20
 2075 094a 19       		.uleb128 0x19
 2076 094b 16030000 		.4byte	.LASF156
 2077 094f 02       		.byte	0x2
 2078 0950 7D01     		.2byte	0x17d
 2079 0952 CE000000 		.4byte	0xce
 2080 0956 02       		.uleb128 0x2
 2081 0957 91       		.byte	0x91
 2082 0958 68       		.sleb128 -24
 2083 0959 19       		.uleb128 0x19
 2084 095a 59020000 		.4byte	.LASF158
 2085 095e 02       		.byte	0x2
 2086 095f 7E01     		.2byte	0x17e
 2087 0961 F6070000 		.4byte	0x7f6
 2088 0965 02       		.uleb128 0x2
 2089 0966 91       		.byte	0x91
 2090 0967 70       		.sleb128 -16
 2091 0968 00       		.byte	0
 2092 0969 18       		.uleb128 0x18
 2093 096a 81040000 		.4byte	.LASF162
 2094 096e 02       		.byte	0x2
 2095 096f A701     		.2byte	0x1a7
 2096 0971 CE000000 		.4byte	0xce
 2097 0975 00000000 		.4byte	.LFB156
 2098 0979 24000000 		.4byte	.LFE156-.LFB156
 2099 097d 01       		.uleb128 0x1
 2100 097e 9C       		.byte	0x9c
 2101 097f 93090000 		.4byte	0x993
 2102 0983 19       		.uleb128 0x19
 2103 0984 59020000 		.4byte	.LASF158
 2104 0988 02       		.byte	0x2
 2105 0989 A901     		.2byte	0x1a9
 2106 098b F6070000 		.4byte	0x7f6
 2107 098f 02       		.uleb128 0x2
 2108 0990 91       		.byte	0x91
 2109 0991 74       		.sleb128 -12
 2110 0992 00       		.byte	0
 2111 0993 17       		.uleb128 0x17
 2112 0994 A10A0000 		.4byte	.LASF163
 2113 0998 02       		.byte	0x2
 2114 0999 19       		.byte	0x19
 2115 099a 9B060000 		.4byte	0x69b
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 63


 2116 099e 05       		.uleb128 0x5
 2117 099f 03       		.byte	0x3
 2118 09a0 00000000 		.4byte	cy_semaIpcStruct
 2119 09a4 1A       		.uleb128 0x1a
 2120 09a5 E6070000 		.4byte	.LASF164
 2121 09a9 06       		.byte	0x6
 2122 09aa A7       		.byte	0xa7
 2123 09ab AF090000 		.4byte	0x9af
 2124 09af 10       		.uleb128 0x10
 2125 09b0 04       		.byte	0x4
 2126 09b1 B5090000 		.4byte	0x9b5
 2127 09b5 06       		.uleb128 0x6
 2128 09b6 78050000 		.4byte	0x578
 2129 09ba 1B       		.uleb128 0x1b
 2130 09bb 4C020000 		.4byte	.LASF165
 2131 09bf 0A       		.byte	0xa
 2132 09c0 F907     		.2byte	0x7f9
 2133 09c2 C6090000 		.4byte	0x9c6
 2134 09c6 05       		.uleb128 0x5
 2135 09c7 C3000000 		.4byte	0xc3
 2136 09cb 00       		.byte	0
 2137              		.section	.debug_abbrev,"",%progbits
 2138              	.Ldebug_abbrev0:
 2139 0000 01       		.uleb128 0x1
 2140 0001 11       		.uleb128 0x11
 2141 0002 01       		.byte	0x1
 2142 0003 25       		.uleb128 0x25
 2143 0004 0E       		.uleb128 0xe
 2144 0005 13       		.uleb128 0x13
 2145 0006 0B       		.uleb128 0xb
 2146 0007 03       		.uleb128 0x3
 2147 0008 0E       		.uleb128 0xe
 2148 0009 1B       		.uleb128 0x1b
 2149 000a 0E       		.uleb128 0xe
 2150 000b 55       		.uleb128 0x55
 2151 000c 17       		.uleb128 0x17
 2152 000d 11       		.uleb128 0x11
 2153 000e 01       		.uleb128 0x1
 2154 000f 10       		.uleb128 0x10
 2155 0010 17       		.uleb128 0x17
 2156 0011 00       		.byte	0
 2157 0012 00       		.byte	0
 2158 0013 02       		.uleb128 0x2
 2159 0014 24       		.uleb128 0x24
 2160 0015 00       		.byte	0
 2161 0016 0B       		.uleb128 0xb
 2162 0017 0B       		.uleb128 0xb
 2163 0018 3E       		.uleb128 0x3e
 2164 0019 0B       		.uleb128 0xb
 2165 001a 03       		.uleb128 0x3
 2166 001b 0E       		.uleb128 0xe
 2167 001c 00       		.byte	0
 2168 001d 00       		.byte	0
 2169 001e 03       		.uleb128 0x3
 2170 001f 16       		.uleb128 0x16
 2171 0020 00       		.byte	0
 2172 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 64


 2173 0022 0E       		.uleb128 0xe
 2174 0023 3A       		.uleb128 0x3a
 2175 0024 0B       		.uleb128 0xb
 2176 0025 3B       		.uleb128 0x3b
 2177 0026 0B       		.uleb128 0xb
 2178 0027 49       		.uleb128 0x49
 2179 0028 13       		.uleb128 0x13
 2180 0029 00       		.byte	0
 2181 002a 00       		.byte	0
 2182 002b 04       		.uleb128 0x4
 2183 002c 24       		.uleb128 0x24
 2184 002d 00       		.byte	0
 2185 002e 0B       		.uleb128 0xb
 2186 002f 0B       		.uleb128 0xb
 2187 0030 3E       		.uleb128 0x3e
 2188 0031 0B       		.uleb128 0xb
 2189 0032 03       		.uleb128 0x3
 2190 0033 08       		.uleb128 0x8
 2191 0034 00       		.byte	0
 2192 0035 00       		.byte	0
 2193 0036 05       		.uleb128 0x5
 2194 0037 35       		.uleb128 0x35
 2195 0038 00       		.byte	0
 2196 0039 49       		.uleb128 0x49
 2197 003a 13       		.uleb128 0x13
 2198 003b 00       		.byte	0
 2199 003c 00       		.byte	0
 2200 003d 06       		.uleb128 0x6
 2201 003e 26       		.uleb128 0x26
 2202 003f 00       		.byte	0
 2203 0040 49       		.uleb128 0x49
 2204 0041 13       		.uleb128 0x13
 2205 0042 00       		.byte	0
 2206 0043 00       		.byte	0
 2207 0044 07       		.uleb128 0x7
 2208 0045 01       		.uleb128 0x1
 2209 0046 01       		.byte	0x1
 2210 0047 49       		.uleb128 0x49
 2211 0048 13       		.uleb128 0x13
 2212 0049 01       		.uleb128 0x1
 2213 004a 13       		.uleb128 0x13
 2214 004b 00       		.byte	0
 2215 004c 00       		.byte	0
 2216 004d 08       		.uleb128 0x8
 2217 004e 21       		.uleb128 0x21
 2218 004f 00       		.byte	0
 2219 0050 49       		.uleb128 0x49
 2220 0051 13       		.uleb128 0x13
 2221 0052 2F       		.uleb128 0x2f
 2222 0053 0B       		.uleb128 0xb
 2223 0054 00       		.byte	0
 2224 0055 00       		.byte	0
 2225 0056 09       		.uleb128 0x9
 2226 0057 13       		.uleb128 0x13
 2227 0058 01       		.byte	0x1
 2228 0059 0B       		.uleb128 0xb
 2229 005a 0B       		.uleb128 0xb
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 65


 2230 005b 3A       		.uleb128 0x3a
 2231 005c 0B       		.uleb128 0xb
 2232 005d 3B       		.uleb128 0x3b
 2233 005e 0B       		.uleb128 0xb
 2234 005f 01       		.uleb128 0x1
 2235 0060 13       		.uleb128 0x13
 2236 0061 00       		.byte	0
 2237 0062 00       		.byte	0
 2238 0063 0A       		.uleb128 0xa
 2239 0064 0D       		.uleb128 0xd
 2240 0065 00       		.byte	0
 2241 0066 03       		.uleb128 0x3
 2242 0067 0E       		.uleb128 0xe
 2243 0068 3A       		.uleb128 0x3a
 2244 0069 0B       		.uleb128 0xb
 2245 006a 3B       		.uleb128 0x3b
 2246 006b 0B       		.uleb128 0xb
 2247 006c 49       		.uleb128 0x49
 2248 006d 13       		.uleb128 0x13
 2249 006e 38       		.uleb128 0x38
 2250 006f 0B       		.uleb128 0xb
 2251 0070 00       		.byte	0
 2252 0071 00       		.byte	0
 2253 0072 0B       		.uleb128 0xb
 2254 0073 16       		.uleb128 0x16
 2255 0074 00       		.byte	0
 2256 0075 03       		.uleb128 0x3
 2257 0076 0E       		.uleb128 0xe
 2258 0077 3A       		.uleb128 0x3a
 2259 0078 0B       		.uleb128 0xb
 2260 0079 3B       		.uleb128 0x3b
 2261 007a 05       		.uleb128 0x5
 2262 007b 49       		.uleb128 0x49
 2263 007c 13       		.uleb128 0x13
 2264 007d 00       		.byte	0
 2265 007e 00       		.byte	0
 2266 007f 0C       		.uleb128 0xc
 2267 0080 04       		.uleb128 0x4
 2268 0081 01       		.byte	0x1
 2269 0082 0B       		.uleb128 0xb
 2270 0083 0B       		.uleb128 0xb
 2271 0084 49       		.uleb128 0x49
 2272 0085 13       		.uleb128 0x13
 2273 0086 3A       		.uleb128 0x3a
 2274 0087 0B       		.uleb128 0xb
 2275 0088 3B       		.uleb128 0x3b
 2276 0089 05       		.uleb128 0x5
 2277 008a 01       		.uleb128 0x1
 2278 008b 13       		.uleb128 0x13
 2279 008c 00       		.byte	0
 2280 008d 00       		.byte	0
 2281 008e 0D       		.uleb128 0xd
 2282 008f 28       		.uleb128 0x28
 2283 0090 00       		.byte	0
 2284 0091 03       		.uleb128 0x3
 2285 0092 0E       		.uleb128 0xe
 2286 0093 1C       		.uleb128 0x1c
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 66


 2287 0094 0B       		.uleb128 0xb
 2288 0095 00       		.byte	0
 2289 0096 00       		.byte	0
 2290 0097 0E       		.uleb128 0xe
 2291 0098 28       		.uleb128 0x28
 2292 0099 00       		.byte	0
 2293 009a 03       		.uleb128 0x3
 2294 009b 0E       		.uleb128 0xe
 2295 009c 1C       		.uleb128 0x1c
 2296 009d 06       		.uleb128 0x6
 2297 009e 00       		.byte	0
 2298 009f 00       		.byte	0
 2299 00a0 0F       		.uleb128 0xf
 2300 00a1 04       		.uleb128 0x4
 2301 00a2 01       		.byte	0x1
 2302 00a3 0B       		.uleb128 0xb
 2303 00a4 0B       		.uleb128 0xb
 2304 00a5 49       		.uleb128 0x49
 2305 00a6 13       		.uleb128 0x13
 2306 00a7 3A       		.uleb128 0x3a
 2307 00a8 0B       		.uleb128 0xb
 2308 00a9 3B       		.uleb128 0x3b
 2309 00aa 0B       		.uleb128 0xb
 2310 00ab 01       		.uleb128 0x1
 2311 00ac 13       		.uleb128 0x13
 2312 00ad 00       		.byte	0
 2313 00ae 00       		.byte	0
 2314 00af 10       		.uleb128 0x10
 2315 00b0 0F       		.uleb128 0xf
 2316 00b1 00       		.byte	0
 2317 00b2 0B       		.uleb128 0xb
 2318 00b3 0B       		.uleb128 0xb
 2319 00b4 49       		.uleb128 0x49
 2320 00b5 13       		.uleb128 0x13
 2321 00b6 00       		.byte	0
 2322 00b7 00       		.byte	0
 2323 00b8 11       		.uleb128 0x11
 2324 00b9 2E       		.uleb128 0x2e
 2325 00ba 01       		.byte	0x1
 2326 00bb 03       		.uleb128 0x3
 2327 00bc 0E       		.uleb128 0xe
 2328 00bd 3A       		.uleb128 0x3a
 2329 00be 0B       		.uleb128 0xb
 2330 00bf 3B       		.uleb128 0x3b
 2331 00c0 05       		.uleb128 0x5
 2332 00c1 27       		.uleb128 0x27
 2333 00c2 19       		.uleb128 0x19
 2334 00c3 49       		.uleb128 0x49
 2335 00c4 13       		.uleb128 0x13
 2336 00c5 11       		.uleb128 0x11
 2337 00c6 01       		.uleb128 0x1
 2338 00c7 12       		.uleb128 0x12
 2339 00c8 06       		.uleb128 0x6
 2340 00c9 40       		.uleb128 0x40
 2341 00ca 18       		.uleb128 0x18
 2342 00cb 9642     		.uleb128 0x2116
 2343 00cd 19       		.uleb128 0x19
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 67


 2344 00ce 01       		.uleb128 0x1
 2345 00cf 13       		.uleb128 0x13
 2346 00d0 00       		.byte	0
 2347 00d1 00       		.byte	0
 2348 00d2 12       		.uleb128 0x12
 2349 00d3 05       		.uleb128 0x5
 2350 00d4 00       		.byte	0
 2351 00d5 03       		.uleb128 0x3
 2352 00d6 0E       		.uleb128 0xe
 2353 00d7 3A       		.uleb128 0x3a
 2354 00d8 0B       		.uleb128 0xb
 2355 00d9 3B       		.uleb128 0x3b
 2356 00da 05       		.uleb128 0x5
 2357 00db 49       		.uleb128 0x49
 2358 00dc 13       		.uleb128 0x13
 2359 00dd 02       		.uleb128 0x2
 2360 00de 18       		.uleb128 0x18
 2361 00df 00       		.byte	0
 2362 00e0 00       		.byte	0
 2363 00e1 13       		.uleb128 0x13
 2364 00e2 2E       		.uleb128 0x2e
 2365 00e3 01       		.byte	0x1
 2366 00e4 03       		.uleb128 0x3
 2367 00e5 0E       		.uleb128 0xe
 2368 00e6 3A       		.uleb128 0x3a
 2369 00e7 0B       		.uleb128 0xb
 2370 00e8 3B       		.uleb128 0x3b
 2371 00e9 05       		.uleb128 0x5
 2372 00ea 27       		.uleb128 0x27
 2373 00eb 19       		.uleb128 0x19
 2374 00ec 49       		.uleb128 0x49
 2375 00ed 13       		.uleb128 0x13
 2376 00ee 11       		.uleb128 0x11
 2377 00ef 01       		.uleb128 0x1
 2378 00f0 12       		.uleb128 0x12
 2379 00f1 06       		.uleb128 0x6
 2380 00f2 40       		.uleb128 0x40
 2381 00f3 18       		.uleb128 0x18
 2382 00f4 9742     		.uleb128 0x2117
 2383 00f6 19       		.uleb128 0x19
 2384 00f7 01       		.uleb128 0x1
 2385 00f8 13       		.uleb128 0x13
 2386 00f9 00       		.byte	0
 2387 00fa 00       		.byte	0
 2388 00fb 14       		.uleb128 0x14
 2389 00fc 26       		.uleb128 0x26
 2390 00fd 00       		.byte	0
 2391 00fe 00       		.byte	0
 2392 00ff 00       		.byte	0
 2393 0100 15       		.uleb128 0x15
 2394 0101 2E       		.uleb128 0x2e
 2395 0102 01       		.byte	0x1
 2396 0103 3F       		.uleb128 0x3f
 2397 0104 19       		.uleb128 0x19
 2398 0105 03       		.uleb128 0x3
 2399 0106 0E       		.uleb128 0xe
 2400 0107 3A       		.uleb128 0x3a
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 68


 2401 0108 0B       		.uleb128 0xb
 2402 0109 3B       		.uleb128 0x3b
 2403 010a 0B       		.uleb128 0xb
 2404 010b 27       		.uleb128 0x27
 2405 010c 19       		.uleb128 0x19
 2406 010d 49       		.uleb128 0x49
 2407 010e 13       		.uleb128 0x13
 2408 010f 11       		.uleb128 0x11
 2409 0110 01       		.uleb128 0x1
 2410 0111 12       		.uleb128 0x12
 2411 0112 06       		.uleb128 0x6
 2412 0113 40       		.uleb128 0x40
 2413 0114 18       		.uleb128 0x18
 2414 0115 9642     		.uleb128 0x2116
 2415 0117 19       		.uleb128 0x19
 2416 0118 01       		.uleb128 0x1
 2417 0119 13       		.uleb128 0x13
 2418 011a 00       		.byte	0
 2419 011b 00       		.byte	0
 2420 011c 16       		.uleb128 0x16
 2421 011d 05       		.uleb128 0x5
 2422 011e 00       		.byte	0
 2423 011f 03       		.uleb128 0x3
 2424 0120 0E       		.uleb128 0xe
 2425 0121 3A       		.uleb128 0x3a
 2426 0122 0B       		.uleb128 0xb
 2427 0123 3B       		.uleb128 0x3b
 2428 0124 0B       		.uleb128 0xb
 2429 0125 49       		.uleb128 0x49
 2430 0126 13       		.uleb128 0x13
 2431 0127 02       		.uleb128 0x2
 2432 0128 18       		.uleb128 0x18
 2433 0129 00       		.byte	0
 2434 012a 00       		.byte	0
 2435 012b 17       		.uleb128 0x17
 2436 012c 34       		.uleb128 0x34
 2437 012d 00       		.byte	0
 2438 012e 03       		.uleb128 0x3
 2439 012f 0E       		.uleb128 0xe
 2440 0130 3A       		.uleb128 0x3a
 2441 0131 0B       		.uleb128 0xb
 2442 0132 3B       		.uleb128 0x3b
 2443 0133 0B       		.uleb128 0xb
 2444 0134 49       		.uleb128 0x49
 2445 0135 13       		.uleb128 0x13
 2446 0136 02       		.uleb128 0x2
 2447 0137 18       		.uleb128 0x18
 2448 0138 00       		.byte	0
 2449 0139 00       		.byte	0
 2450 013a 18       		.uleb128 0x18
 2451 013b 2E       		.uleb128 0x2e
 2452 013c 01       		.byte	0x1
 2453 013d 3F       		.uleb128 0x3f
 2454 013e 19       		.uleb128 0x19
 2455 013f 03       		.uleb128 0x3
 2456 0140 0E       		.uleb128 0xe
 2457 0141 3A       		.uleb128 0x3a
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 69


 2458 0142 0B       		.uleb128 0xb
 2459 0143 3B       		.uleb128 0x3b
 2460 0144 05       		.uleb128 0x5
 2461 0145 27       		.uleb128 0x27
 2462 0146 19       		.uleb128 0x19
 2463 0147 49       		.uleb128 0x49
 2464 0148 13       		.uleb128 0x13
 2465 0149 11       		.uleb128 0x11
 2466 014a 01       		.uleb128 0x1
 2467 014b 12       		.uleb128 0x12
 2468 014c 06       		.uleb128 0x6
 2469 014d 40       		.uleb128 0x40
 2470 014e 18       		.uleb128 0x18
 2471 014f 9642     		.uleb128 0x2116
 2472 0151 19       		.uleb128 0x19
 2473 0152 01       		.uleb128 0x1
 2474 0153 13       		.uleb128 0x13
 2475 0154 00       		.byte	0
 2476 0155 00       		.byte	0
 2477 0156 19       		.uleb128 0x19
 2478 0157 34       		.uleb128 0x34
 2479 0158 00       		.byte	0
 2480 0159 03       		.uleb128 0x3
 2481 015a 0E       		.uleb128 0xe
 2482 015b 3A       		.uleb128 0x3a
 2483 015c 0B       		.uleb128 0xb
 2484 015d 3B       		.uleb128 0x3b
 2485 015e 05       		.uleb128 0x5
 2486 015f 49       		.uleb128 0x49
 2487 0160 13       		.uleb128 0x13
 2488 0161 02       		.uleb128 0x2
 2489 0162 18       		.uleb128 0x18
 2490 0163 00       		.byte	0
 2491 0164 00       		.byte	0
 2492 0165 1A       		.uleb128 0x1a
 2493 0166 34       		.uleb128 0x34
 2494 0167 00       		.byte	0
 2495 0168 03       		.uleb128 0x3
 2496 0169 0E       		.uleb128 0xe
 2497 016a 3A       		.uleb128 0x3a
 2498 016b 0B       		.uleb128 0xb
 2499 016c 3B       		.uleb128 0x3b
 2500 016d 0B       		.uleb128 0xb
 2501 016e 49       		.uleb128 0x49
 2502 016f 13       		.uleb128 0x13
 2503 0170 3F       		.uleb128 0x3f
 2504 0171 19       		.uleb128 0x19
 2505 0172 3C       		.uleb128 0x3c
 2506 0173 19       		.uleb128 0x19
 2507 0174 00       		.byte	0
 2508 0175 00       		.byte	0
 2509 0176 1B       		.uleb128 0x1b
 2510 0177 34       		.uleb128 0x34
 2511 0178 00       		.byte	0
 2512 0179 03       		.uleb128 0x3
 2513 017a 0E       		.uleb128 0xe
 2514 017b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 70


 2515 017c 0B       		.uleb128 0xb
 2516 017d 3B       		.uleb128 0x3b
 2517 017e 05       		.uleb128 0x5
 2518 017f 49       		.uleb128 0x49
 2519 0180 13       		.uleb128 0x13
 2520 0181 3F       		.uleb128 0x3f
 2521 0182 19       		.uleb128 0x19
 2522 0183 3C       		.uleb128 0x3c
 2523 0184 19       		.uleb128 0x19
 2524 0185 00       		.byte	0
 2525 0186 00       		.byte	0
 2526 0187 00       		.byte	0
 2527              		.section	.debug_aranges,"",%progbits
 2528 0000 64000000 		.4byte	0x64
 2529 0004 0200     		.2byte	0x2
 2530 0006 00000000 		.4byte	.Ldebug_info0
 2531 000a 04       		.byte	0x4
 2532 000b 00       		.byte	0
 2533 000c 0000     		.2byte	0
 2534 000e 0000     		.2byte	0
 2535 0010 00000000 		.4byte	.LFB132
 2536 0014 4C000000 		.4byte	.LFE132-.LFB132
 2537 0018 00000000 		.4byte	.LFB143
 2538 001c 18000000 		.4byte	.LFE143-.LFB143
 2539 0020 00000000 		.4byte	.LFB148
 2540 0024 38000000 		.4byte	.LFE148-.LFB148
 2541 0028 00000000 		.4byte	.LFB150
 2542 002c 2C000000 		.4byte	.LFE150-.LFB150
 2543 0030 00000000 		.4byte	.LFB151
 2544 0034 6C000000 		.4byte	.LFE151-.LFB151
 2545 0038 00000000 		.4byte	.LFB152
 2546 003c BC000000 		.4byte	.LFE152-.LFB152
 2547 0040 00000000 		.4byte	.LFB153
 2548 0044 DC000000 		.4byte	.LFE153-.LFB153
 2549 0048 00000000 		.4byte	.LFB154
 2550 004c E0000000 		.4byte	.LFE154-.LFB154
 2551 0050 00000000 		.4byte	.LFB155
 2552 0054 74000000 		.4byte	.LFE155-.LFB155
 2553 0058 00000000 		.4byte	.LFB156
 2554 005c 24000000 		.4byte	.LFE156-.LFB156
 2555 0060 00000000 		.4byte	0
 2556 0064 00000000 		.4byte	0
 2557              		.section	.debug_ranges,"",%progbits
 2558              	.Ldebug_ranges0:
 2559 0000 00000000 		.4byte	.LFB132
 2560 0004 4C000000 		.4byte	.LFE132
 2561 0008 00000000 		.4byte	.LFB143
 2562 000c 18000000 		.4byte	.LFE143
 2563 0010 00000000 		.4byte	.LFB148
 2564 0014 38000000 		.4byte	.LFE148
 2565 0018 00000000 		.4byte	.LFB150
 2566 001c 2C000000 		.4byte	.LFE150
 2567 0020 00000000 		.4byte	.LFB151
 2568 0024 6C000000 		.4byte	.LFE151
 2569 0028 00000000 		.4byte	.LFB152
 2570 002c BC000000 		.4byte	.LFE152
 2571 0030 00000000 		.4byte	.LFB153
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 71


 2572 0034 DC000000 		.4byte	.LFE153
 2573 0038 00000000 		.4byte	.LFB154
 2574 003c E0000000 		.4byte	.LFE154
 2575 0040 00000000 		.4byte	.LFB155
 2576 0044 74000000 		.4byte	.LFE155
 2577 0048 00000000 		.4byte	.LFB156
 2578 004c 24000000 		.4byte	.LFE156
 2579 0050 00000000 		.4byte	0
 2580 0054 00000000 		.4byte	0
 2581              		.section	.debug_line,"",%progbits
 2582              	.Ldebug_line0:
 2583 0000 DD030000 		.section	.debug_str,"MS",%progbits,1
 2583      0200A702 
 2583      00000201 
 2583      FB0E0D00 
 2583      01010101 
 2584              	.LASF128:
 2585 0000 43595F49 		.ascii	"CY_IPC_SEMA_NOT_ACQUIRED\000"
 2585      50435F53 
 2585      454D415F 
 2585      4E4F545F 
 2585      41435155 
 2586              	.LASF145:
 2587 0019 636F756E 		.ascii	"count\000"
 2587      7400
 2588              	.LASF166:
 2589 001f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2589      43313120 
 2589      352E342E 
 2589      31203230 
 2589      31363036 
 2590 0052 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2590      20726576 
 2590      6973696F 
 2590      6E203233 
 2590      37373135 
 2591 0085 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 2591      70202D6D 
 2591      6670753D 
 2591      66707634 
 2591      2D73702D 
 2592 00b8 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2592      6F6E7320 
 2592      2D666661 
 2592      742D6C74 
 2592      6F2D6F62 
 2593              	.LASF73:
 2594 00d2 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 2594      6843746C 
 2594      4D61696E 
 2594      57733346 
 2594      72657100 
 2595              	.LASF95:
 2596 00e6 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 2596      50727443 
 2596      6667496E 
 2596      4F666673 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 72


 2596      657400
 2597              	.LASF113:
 2598 00f9 6970634C 		.ascii	"ipcLockStatusOffset\000"
 2598      6F636B53 
 2598      74617475 
 2598      734F6666 
 2598      73657400 
 2599              	.LASF167:
 2600 010d 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 2600      72617465 
 2600      645F536F 
 2600      75726365 
 2600      5C50536F 
 2601 013b 6970635C 		.ascii	"ipc\\cy_ipc_sema.c\000"
 2601      63795F69 
 2601      70635F73 
 2601      656D612E 
 2601      6300
 2602              	.LASF39:
 2603 014d 63727970 		.ascii	"cryptoVersion\000"
 2603      746F5665 
 2603      7273696F 
 2603      6E00
 2604              	.LASF121:
 2605 015b 43595F49 		.ascii	"CY_IPC_DRV_ERROR\000"
 2605      50435F44 
 2605      52565F45 
 2605      52524F52 
 2605      00
 2606              	.LASF35:
 2607 016c 70617373 		.ascii	"passBase\000"
 2607      42617365 
 2607      00
 2608              	.LASF84:
 2609 0175 70657269 		.ascii	"periTrGrSize\000"
 2609      54724772 
 2609      53697A65 
 2609      00
 2610              	.LASF48:
 2611 0182 63707573 		.ascii	"cpussIpcIrqNr\000"
 2611      73497063 
 2611      4972714E 
 2611      7200
 2612              	.LASF2:
 2613 0190 5F5F7569 		.ascii	"__uint8_t\000"
 2613      6E74385F 
 2613      7400
 2614              	.LASF92:
 2615 019a 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 2615      44697632 
 2615      345F3543 
 2615      746C4F66 
 2615      66736574 
 2616              	.LASF99:
 2617 01af 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2617      73436D34 
 2617      436C6F63 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 73


 2617      6B43746C 
 2617      4F666673 
 2618              	.LASF22:
 2619 01c6 52454C45 		.ascii	"RELEASE\000"
 2619      41534500 
 2620              	.LASF28:
 2621 01ce 63707573 		.ascii	"cpussBase\000"
 2621      73426173 
 2621      6500
 2622              	.LASF77:
 2623 01d8 64774368 		.ascii	"dwChCtlPrioPos\000"
 2623      43746C50 
 2623      72696F50 
 2623      6F7300
 2624              	.LASF57:
 2625 01e7 70657269 		.ascii	"periClockNr\000"
 2625      436C6F63 
 2625      6B4E7200 
 2626              	.LASF153:
 2627 01f3 73656D61 		.ascii	"semaNumber\000"
 2627      4E756D62 
 2627      657200
 2628              	.LASF12:
 2629 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 2629      206C6F6E 
 2629      6720756E 
 2629      7369676E 
 2629      65642069 
 2630              	.LASF65:
 2631 0215 666C6173 		.ascii	"flashRwwRequired\000"
 2631      68527777 
 2631      52657175 
 2631      69726564 
 2631      00
 2632              	.LASF81:
 2633 0226 70657269 		.ascii	"periTrCmdOffset\000"
 2633      5472436D 
 2633      644F6666 
 2633      73657400 
 2634              	.LASF105:
 2635 0236 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2635      73537973 
 2635      5469636B 
 2635      43746C4F 
 2635      66667365 
 2636              	.LASF165:
 2637 024c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2637      52784275 
 2637      66666572 
 2637      00
 2638              	.LASF158:
 2639 0259 73656D61 		.ascii	"semaStruct\000"
 2639      53747275 
 2639      637400
 2640              	.LASF66:
 2641 0264 666C6173 		.ascii	"flashPipeRequired\000"
 2641      68506970 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 74


 2641      65526571 
 2641      75697265 
 2641      6400
 2642              	.LASF70:
 2643 0276 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2643      6843746C 
 2643      4D61696E 
 2643      57733046 
 2643      72657100 
 2644              	.LASF15:
 2645 028a 696E7431 		.ascii	"int16_t\000"
 2645      365F7400 
 2646              	.LASF11:
 2647 0292 6C6F6E67 		.ascii	"long long int\000"
 2647      206C6F6E 
 2647      6720696E 
 2647      7400
 2648              	.LASF0:
 2649 02a0 7369676E 		.ascii	"signed char\000"
 2649      65642063 
 2649      68617200 
 2650              	.LASF86:
 2651 02ac 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2651      44697643 
 2651      6D645479 
 2651      70655365 
 2651      6C506F73 
 2652              	.LASF21:
 2653 02c1 41435155 		.ascii	"ACQUIRE\000"
 2653      49524500 
 2654              	.LASF103:
 2655 02c9 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2655      73547269 
 2655      6D52616D 
 2655      43746C4F 
 2655      66667365 
 2656              	.LASF44:
 2657 02df 69706356 		.ascii	"ipcVersion\000"
 2657      65727369 
 2657      6F6E00
 2658              	.LASF146:
 2659 02ea 6D656D50 		.ascii	"memPtr\000"
 2659      747200
 2660              	.LASF106:
 2661 02f1 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2661      73436D30 
 2661      4E6D6943 
 2661      746C4F66 
 2661      66736574 
 2662              	.LASF141:
 2663 0306 6E6F7469 		.ascii	"notifyEventIntr\000"
 2663      66794576 
 2663      656E7449 
 2663      6E747200 
 2664              	.LASF156:
 2665 0316 73656D61 		.ascii	"semaMask\000"
 2665      4D61736B 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 75


 2665      00
 2666              	.LASF33:
 2667 031f 6873696F 		.ascii	"hsiomBase\000"
 2667      6D426173 
 2667      6500
 2668              	.LASF8:
 2669 0329 6C6F6E67 		.ascii	"long int\000"
 2669      20696E74 
 2669      00
 2670              	.LASF64:
 2671 0332 63727970 		.ascii	"cryptoMemSize\000"
 2671      746F4D65 
 2671      6D53697A 
 2671      6500
 2672              	.LASF13:
 2673 0340 756E7369 		.ascii	"unsigned int\000"
 2673      676E6564 
 2673      20696E74 
 2673      00
 2674              	.LASF30:
 2675 034d 70657269 		.ascii	"periBase\000"
 2675      42617365 
 2675      00
 2676              	.LASF62:
 2677 0356 73797350 		.ascii	"sysPmSimoPresent\000"
 2677      6D53696D 
 2677      6F507265 
 2677      73656E74 
 2677      00
 2678              	.LASF52:
 2679 0367 63707573 		.ascii	"cpussFmIrq\000"
 2679      73466D49 
 2679      727100
 2680              	.LASF119:
 2681 0372 646F7562 		.ascii	"double\000"
 2681      6C6500
 2682              	.LASF91:
 2683 0379 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2683      44697631 
 2683      365F3543 
 2683      746C4F66 
 2683      66736574 
 2684              	.LASF55:
 2685 038e 73727373 		.ascii	"srssNumPll\000"
 2685      4E756D50 
 2685      6C6C00
 2686              	.LASF89:
 2687 0399 70657269 		.ascii	"periDiv8CtlOffset\000"
 2687      44697638 
 2687      43746C4F 
 2687      66667365 
 2687      7400
 2688              	.LASF6:
 2689 03ab 73686F72 		.ascii	"short unsigned int\000"
 2689      7420756E 
 2689      7369676E 
 2689      65642069 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 76


 2689      6E7400
 2690              	.LASF96:
 2691 03be 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2691      50727443 
 2691      66674F75 
 2691      744F6666 
 2691      73657400 
 2692              	.LASF138:
 2693 03d2 69706349 		.ascii	"ipcIndex\000"
 2693      6E646578 
 2693      00
 2694              	.LASF29:
 2695 03db 666C6173 		.ascii	"flashcBase\000"
 2695      68634261 
 2695      736500
 2696              	.LASF9:
 2697 03e6 5F5F7569 		.ascii	"__uint32_t\000"
 2697      6E743332 
 2697      5F7400
 2698              	.LASF59:
 2699 03f1 70617373 		.ascii	"passSarChannels\000"
 2699      53617243 
 2699      68616E6E 
 2699      656C7300 
 2700              	.LASF25:
 2701 0401 4C4F434B 		.ascii	"LOCK_STATUS\000"
 2701      5F535441 
 2701      54555300 
 2702              	.LASF124:
 2703 040d 43595F49 		.ascii	"CY_IPC_SEMA_ERROR_LOCKED\000"
 2703      50435F53 
 2703      454D415F 
 2703      4552524F 
 2703      525F4C4F 
 2704              	.LASF3:
 2705 0426 5F5F696E 		.ascii	"__int16_t\000"
 2705      7431365F 
 2705      7400
 2706              	.LASF134:
 2707 0430 61727261 		.ascii	"arrayPtr\000"
 2707      79507472 
 2707      00
 2708              	.LASF120:
 2709 0439 43595F49 		.ascii	"CY_IPC_DRV_SUCCESS\000"
 2709      50435F44 
 2709      52565F53 
 2709      55434345 
 2709      535300
 2710              	.LASF102:
 2711 044c 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2711      73436D34 
 2711      50777243 
 2711      746C4F66 
 2711      66736574 
 2712              	.LASF97:
 2713 0461 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2713      50727443 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 77


 2713      66675369 
 2713      6F4F6666 
 2713      73657400 
 2714              	.LASF49:
 2715 0475 63707573 		.ascii	"cpussDwChNr\000"
 2715      73447743 
 2715      684E7200 
 2716              	.LASF162:
 2717 0481 43795F49 		.ascii	"Cy_IPC_Sema_GetMaxSems\000"
 2717      50435F53 
 2717      656D615F 
 2717      4765744D 
 2717      61785365 
 2718              	.LASF16:
 2719 0498 75696E74 		.ascii	"uint16_t\000"
 2719      31365F74 
 2719      00
 2720              	.LASF116:
 2721 04a1 63686172 		.ascii	"char_t\000"
 2721      5F7400
 2722              	.LASF82:
 2723 04a8 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2723      5472436D 
 2723      64477253 
 2723      656C4D73 
 2723      6B00
 2724              	.LASF123:
 2725 04ba 43595F49 		.ascii	"CY_IPC_SEMA_SUCCESS\000"
 2725      50435F53 
 2725      454D415F 
 2725      53554343 
 2725      45535300 
 2726              	.LASF10:
 2727 04ce 6C6F6E67 		.ascii	"long unsigned int\000"
 2727      20756E73 
 2727      69676E65 
 2727      6420696E 
 2727      7400
 2728              	.LASF157:
 2729 04e0 696E7465 		.ascii	"interruptState\000"
 2729      72727570 
 2729      74537461 
 2729      746500
 2730              	.LASF47:
 2731 04ef 63707573 		.ascii	"cpussIpcNr\000"
 2731      73497063 
 2731      4E7200
 2732              	.LASF129:
 2733 04fa 43595F49 		.ascii	"CY_IPC_SEMA_LOCKED\000"
 2733      50435F53 
 2733      454D415F 
 2733      4C4F434B 
 2733      454400
 2734              	.LASF34:
 2735 050d 6770696F 		.ascii	"gpioBase\000"
 2735      42617365 
 2735      00
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 78


 2736              	.LASF72:
 2737 0516 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2737      6843746C 
 2737      4D61696E 
 2737      57733246 
 2737      72657100 
 2738              	.LASF144:
 2739 052a 69706343 		.ascii	"ipcChannel\000"
 2739      68616E6E 
 2739      656C00
 2740              	.LASF150:
 2741 0535 43795F49 		.ascii	"Cy_IPC_Sema_InitExt\000"
 2741      50435F53 
 2741      656D615F 
 2741      496E6974 
 2741      45787400 
 2742              	.LASF110:
 2743 0549 63707573 		.ascii	"cpussRam1Ctl0\000"
 2743      7352616D 
 2743      3143746C 
 2743      3000
 2744              	.LASF142:
 2745 0557 6D736750 		.ascii	"msgPtr\000"
 2745      747200
 2746              	.LASF24:
 2747 055e 44415441 		.ascii	"DATA\000"
 2747      00
 2748              	.LASF122:
 2749 0563 63795F65 		.ascii	"cy_en_ipcdrv_status_t\000"
 2749      6E5F6970 
 2749      63647276 
 2749      5F737461 
 2749      7475735F 
 2750              	.LASF149:
 2751 0579 43795F49 		.ascii	"Cy_IPC_Sema_Init\000"
 2751      50435F53 
 2751      656D615F 
 2751      496E6974 
 2751      00
 2752              	.LASF168:
 2753 058a 453A5C41 		.ascii	"E:\\Applications\\LittlevGL\\Oscilloscope_Senior_Pr"
 2753      70706C69 
 2753      63617469 
 2753      6F6E735C 
 2753      4C697474 
 2754 05ba 6F6A6563 		.ascii	"oject\\tcom_engineering\\embed_sw\\tcom_app\\tcom_a"
 2754      745C7463 
 2754      6F6D5F65 
 2754      6E67696E 
 2754      65657269 
 2755 05e9 70705F70 		.ascii	"pp_psoc6_lvgl6\\tcom_displ_test_psoc6.cydsn\000"
 2755      736F6336 
 2755      5F6C7667 
 2755      6C365C74 
 2755      636F6D5F 
 2756              	.LASF42:
 2757 0614 6770696F 		.ascii	"gpioVersion\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 79


 2757      56657273 
 2757      696F6E00 
 2758              	.LASF130:
 2759 0620 43595F49 		.ascii	"CY_IPC_SEMA_STATUS_LOCKED\000"
 2759      50435F53 
 2759      454D415F 
 2759      53544154 
 2759      55535F4C 
 2760              	.LASF143:
 2761 063a 43795F49 		.ascii	"Cy_IPC_Drv_LockAcquire\000"
 2761      50435F44 
 2761      72765F4C 
 2761      6F636B41 
 2761      63717569 
 2762              	.LASF114:
 2763 0651 63795F73 		.ascii	"cy_stc_device_t\000"
 2763      74635F64 
 2763      65766963 
 2763      655F7400 
 2764              	.LASF23:
 2765 0661 4E4F5449 		.ascii	"NOTIFY\000"
 2765      465900
 2766              	.LASF60:
 2767 0668 65704D6F 		.ascii	"epMonitorNr\000"
 2767      6E69746F 
 2767      724E7200 
 2768              	.LASF107:
 2769 0674 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2769      73436D34 
 2769      4E6D6943 
 2769      746C4F66 
 2769      66736574 
 2770              	.LASF38:
 2771 0689 63707573 		.ascii	"cpussVersion\000"
 2771      73566572 
 2771      73696F6E 
 2771      00
 2772              	.LASF98:
 2773 0696 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2773      73436D30 
 2773      436C6F63 
 2773      6B43746C 
 2773      4F666673 
 2774              	.LASF125:
 2775 06ad 43595F49 		.ascii	"CY_IPC_SEMA_ERROR_UNLOCKED\000"
 2775      50435F53 
 2775      454D415F 
 2775      4552524F 
 2775      525F554E 
 2776              	.LASF127:
 2777 06c8 43595F49 		.ascii	"CY_IPC_SEMA_OUT_OF_RANGE\000"
 2777      50435F53 
 2777      454D415F 
 2777      4F55545F 
 2777      4F465F52 
 2778              	.LASF63:
 2779 06e1 70726F74 		.ascii	"protBusMasterMask\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 80


 2779      4275734D 
 2779      61737465 
 2779      724D6173 
 2779      6B00
 2780              	.LASF37:
 2781 06f3 63727970 		.ascii	"cryptoBase\000"
 2781      746F4261 
 2781      736500
 2782              	.LASF139:
 2783 06fe 62617365 		.ascii	"base\000"
 2783      00
 2784              	.LASF45:
 2785 0703 70657269 		.ascii	"periVersion\000"
 2785      56657273 
 2785      696F6E00 
 2786              	.LASF133:
 2787 070f 6D617853 		.ascii	"maxSema\000"
 2787      656D6100 
 2788              	.LASF20:
 2789 0717 73697A65 		.ascii	"sizetype\000"
 2789      74797065 
 2789      00
 2790              	.LASF75:
 2791 0720 64774368 		.ascii	"dwChOffset\000"
 2791      4F666673 
 2791      657400
 2792              	.LASF50:
 2793 072b 63707573 		.ascii	"cpussFlashPaSize\000"
 2793      73466C61 
 2793      73685061 
 2793      53697A65 
 2793      00
 2794              	.LASF88:
 2795 073c 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2795      44697643 
 2795      6D645061 
 2795      54797065 
 2795      53656C50 
 2796              	.LASF111:
 2797 0753 63707573 		.ascii	"cpussRam2Ctl0\000"
 2797      7352616D 
 2797      3243746C 
 2797      3000
 2798              	.LASF79:
 2799 0761 64775374 		.ascii	"dwStatusChIdxPos\000"
 2799      61747573 
 2799      43684964 
 2799      78506F73 
 2799      00
 2800              	.LASF131:
 2801 0772 43595F49 		.ascii	"CY_IPC_SEMA_STATUS_UNLOCKED\000"
 2801      50435F53 
 2801      454D415F 
 2801      53544154 
 2801      55535F55 
 2802              	.LASF61:
 2803 078e 75646250 		.ascii	"udbPresent\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 81


 2803      72657365 
 2803      6E7400
 2804              	.LASF160:
 2805 0799 43795F49 		.ascii	"Cy_IPC_Sema_Clear\000"
 2805      50435F53 
 2805      656D615F 
 2805      436C6561 
 2805      7200
 2806              	.LASF151:
 2807 07ab 69706353 		.ascii	"ipcSema\000"
 2807      656D6100 
 2808              	.LASF58:
 2809 07b3 736D6966 		.ascii	"smifDeviceNr\000"
 2809      44657669 
 2809      63654E72 
 2809      00
 2810              	.LASF118:
 2811 07c0 666C6F61 		.ascii	"float\000"
 2811      7400
 2812              	.LASF80:
 2813 07c6 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2813      61747573 
 2813      43684964 
 2813      784D736B 
 2813      00
 2814              	.LASF83:
 2815 07d7 70657269 		.ascii	"periTrGrOffset\000"
 2815      54724772 
 2815      4F666673 
 2815      657400
 2816              	.LASF164:
 2817 07e6 63795F64 		.ascii	"cy_device\000"
 2817      65766963 
 2817      6500
 2818              	.LASF108:
 2819 07f0 63707573 		.ascii	"cpussRomCtl\000"
 2819      73526F6D 
 2819      43746C00 
 2820              	.LASF78:
 2821 07fc 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2821      43746C50 
 2821      7265656D 
 2821      70746162 
 2821      6C65506F 
 2822              	.LASF41:
 2823 0812 666C6173 		.ascii	"flashcVersion\000"
 2823      68635665 
 2823      7273696F 
 2823      6E00
 2824              	.LASF140:
 2825 0820 43795F49 		.ascii	"Cy_IPC_Drv_SendMsgPtr\000"
 2825      50435F44 
 2825      72765F53 
 2825      656E644D 
 2825      73675074 
 2826              	.LASF126:
 2827 0836 43595F49 		.ascii	"CY_IPC_SEMA_BAD_PARAM\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 82


 2827      50435F53 
 2827      454D415F 
 2827      4241445F 
 2827      50415241 
 2828              	.LASF31:
 2829 084c 75646242 		.ascii	"udbBase\000"
 2829      61736500 
 2830              	.LASF159:
 2831 0854 5F426F6F 		.ascii	"_Bool\000"
 2831      6C00
 2832              	.LASF17:
 2833 085a 696E7433 		.ascii	"int32_t\000"
 2833      325F7400 
 2834              	.LASF1:
 2835 0862 756E7369 		.ascii	"unsigned char\000"
 2835      676E6564 
 2835      20636861 
 2835      7200
 2836              	.LASF74:
 2837 0870 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2837      6843746C 
 2837      4D61696E 
 2837      57733446 
 2837      72657100 
 2838              	.LASF101:
 2839 0884 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2839      73436D30 
 2839      53746174 
 2839      75734F66 
 2839      66736574 
 2840              	.LASF4:
 2841 0899 73686F72 		.ascii	"short int\000"
 2841      7420696E 
 2841      7400
 2842              	.LASF27:
 2843 08a3 4950435F 		.ascii	"IPC_STRUCT_V1_Type\000"
 2843      53545255 
 2843      43545F56 
 2843      315F5479 
 2843      706500
 2844              	.LASF26:
 2845 08b6 52455345 		.ascii	"RESERVED\000"
 2845      52564544 
 2845      00
 2846              	.LASF85:
 2847 08bf 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2847      44697643 
 2847      6D644469 
 2847      7653656C 
 2847      4D736B00 
 2848              	.LASF56:
 2849 08d3 73727373 		.ascii	"srssNumHfroot\000"
 2849      4E756D48 
 2849      66726F6F 
 2849      7400
 2850              	.LASF69:
 2851 08e1 666C6173 		.ascii	"flashEraseDelay\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 83


 2851      68457261 
 2851      73654465 
 2851      6C617900 
 2852              	.LASF18:
 2853 08f1 75696E74 		.ascii	"uint32_t\000"
 2853      33325F74 
 2853      00
 2854              	.LASF161:
 2855 08fa 43795F49 		.ascii	"Cy_IPC_Sema_Status\000"
 2855      50435F53 
 2855      656D615F 
 2855      53746174 
 2855      757300
 2856              	.LASF19:
 2857 090d 6C6F6E67 		.ascii	"long double\000"
 2857      20646F75 
 2857      626C6500 
 2858              	.LASF117:
 2859 0919 63686172 		.ascii	"char\000"
 2859      00
 2860              	.LASF46:
 2861 091e 70726F74 		.ascii	"protVersion\000"
 2861      56657273 
 2861      696F6E00 
 2862              	.LASF109:
 2863 092a 63707573 		.ascii	"cpussRam0Ctl0\000"
 2863      7352616D 
 2863      3043746C 
 2863      3000
 2864              	.LASF155:
 2865 0938 73656D61 		.ascii	"semaIndex\000"
 2865      496E6465 
 2865      7800
 2866              	.LASF5:
 2867 0942 5F5F7569 		.ascii	"__uint16_t\000"
 2867      6E743136 
 2867      5F7400
 2868              	.LASF90:
 2869 094d 70657269 		.ascii	"periDiv16CtlOffset\000"
 2869      44697631 
 2869      3643746C 
 2869      4F666673 
 2869      657400
 2870              	.LASF7:
 2871 0960 5F5F696E 		.ascii	"__int32_t\000"
 2871      7433325F 
 2871      7400
 2872              	.LASF43:
 2873 096a 6873696F 		.ascii	"hsiomVersion\000"
 2873      6D566572 
 2873      73696F6E 
 2873      00
 2874              	.LASF137:
 2875 0977 43795F49 		.ascii	"Cy_IPC_Drv_ReadDataValue\000"
 2875      50435F44 
 2875      72765F52 
 2875      65616444 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 84


 2875      61746156 
 2876              	.LASF71:
 2877 0990 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2877      6843746C 
 2877      4D61696E 
 2877      57733146 
 2877      72657100 
 2878              	.LASF132:
 2879 09a4 63795F65 		.ascii	"cy_en_ipcsema_status_t\000"
 2879      6E5F6970 
 2879      6373656D 
 2879      615F7374 
 2879      61747573 
 2880              	.LASF76:
 2881 09bb 64774368 		.ascii	"dwChSize\000"
 2881      53697A65 
 2881      00
 2882              	.LASF147:
 2883 09c4 63795F73 		.ascii	"cy_semaData\000"
 2883      656D6144 
 2883      61746100 
 2884              	.LASF112:
 2885 09d0 69706353 		.ascii	"ipcStructSize\000"
 2885      74727563 
 2885      7453697A 
 2885      6500
 2886              	.LASF51:
 2887 09de 63707573 		.ascii	"cpussIpc0Irq\000"
 2887      73497063 
 2887      30497271 
 2887      00
 2888              	.LASF94:
 2889 09eb 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2889      50727443 
 2889      66674F66 
 2889      66736574 
 2889      00
 2890              	.LASF32:
 2891 09fc 70726F74 		.ascii	"protBase\000"
 2891      42617365 
 2891      00
 2892              	.LASF53:
 2893 0a05 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2893      734E6F74 
 2893      436F6E6E 
 2893      65637465 
 2893      64497271 
 2894              	.LASF67:
 2895 0a1a 666C6173 		.ascii	"flashWriteDelay\000"
 2895      68577269 
 2895      74654465 
 2895      6C617900 
 2896              	.LASF14:
 2897 0a2a 75696E74 		.ascii	"uint8_t\000"
 2897      385F7400 
 2898              	.LASF100:
 2899 0a32 63707573 		.ascii	"cpussCm4StatusOffset\000"
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 85


 2899      73436D34 
 2899      53746174 
 2899      75734F66 
 2899      66736574 
 2900              	.LASF93:
 2901 0a47 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2901      50727449 
 2901      6E747243 
 2901      66674F66 
 2901      66736574 
 2902              	.LASF136:
 2903 0a5c 43795F49 		.ascii	"Cy_IPC_Drv_GetIpcBaseAddress\000"
 2903      50435F44 
 2903      72765F47 
 2903      65744970 
 2903      63426173 
 2904              	.LASF135:
 2905 0a79 63795F73 		.ascii	"cy_stc_ipc_sema_t\000"
 2905      74635F69 
 2905      70635F73 
 2905      656D615F 
 2905      7400
 2906              	.LASF104:
 2907 0a8b 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2907      73547269 
 2907      6D526F6D 
 2907      43746C4F 
 2907      66667365 
 2908              	.LASF163:
 2909 0aa1 63795F73 		.ascii	"cy_semaIpcStruct\000"
 2909      656D6149 
 2909      70635374 
 2909      72756374 
 2909      00
 2910              	.LASF115:
 2911 0ab2 4950435F 		.ascii	"IPC_STRUCT_Type\000"
 2911      53545255 
 2911      43545F54 
 2911      79706500 
 2912              	.LASF54:
 2913 0ac2 73727373 		.ascii	"srssNumClkpath\000"
 2913      4E756D43 
 2913      6C6B7061 
 2913      746800
 2914              	.LASF40:
 2915 0ad1 64775665 		.ascii	"dwVersion\000"
 2915      7273696F 
 2915      6E00
 2916              	.LASF36:
 2917 0adb 69706342 		.ascii	"ipcBase\000"
 2917      61736500 
 2918              	.LASF87:
 2919 0ae3 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2919      44697643 
 2919      6D645061 
 2919      44697653 
 2919      656C506F 
ARM GAS  C:\Users\chris\AppData\Local\Temp\ccJLxNNh.s 			page 86


 2920              	.LASF68:
 2921 0af9 666C6173 		.ascii	"flashProgramDelay\000"
 2921      6850726F 
 2921      6772616D 
 2921      44656C61 
 2921      7900
 2922              	.LASF148:
 2923 0b0b 72657453 		.ascii	"retStatus\000"
 2923      74617475 
 2923      7300
 2924              	.LASF154:
 2925 0b15 70726565 		.ascii	"preemptable\000"
 2925      6D707461 
 2925      626C6500 
 2926              	.LASF152:
 2927 0b21 43795F49 		.ascii	"Cy_IPC_Sema_Set\000"
 2927      50435F53 
 2927      656D615F 
 2927      53657400 
 2928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
